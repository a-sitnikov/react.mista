{"version":3,"sources":["registerServiceWorker.js","components/common/search.js","utils.js","api/index.js","api/topicslist.js","data/topicslist/actions.js","components/nav_bar.js","data/topicslist/reducer.js","api/topic.js","data/topic/actions.js","data/topic/reducer.js","api/sections.js","data/sections/actions.js","data/sections/reducer.js","data/options/actions.js","data/options/reducer.js","api/login.js","data/login/actions.js","data/login/reducer.js","data/tooltips/actions.js","data/tooltips/reducer.js","data/newtopic/actions.js","data/newtopic/reducer.js","data/newmessage/actions.js","data/newmessage/reducer.js","data/topic_preview/actions.js","data/store.js","data/topic_preview/reducer.js","components/login/logged_user.js","components/login/login_form.js","components/common/error.js","components/login/index.js","components/topics_list/sections.js","components/topics_list/header.js","components/topics_list/row/pages.js","components/topics_list/row/topic_name_cell.js","components/extensions/link_to_post.js","components/topics_list/row/preview_link.js","components/topics_list/row/index.js","components/common/pages.js","components/common/text_editor.js","components/topics_list/new_topic.js","components/extensions/code_highlight.js","components/topic/index.js","components/options/index.js","components/extensions/code1c.js","components/extensions/link_to_user.js","components/extensions/youtube_link.js","components/extensions/custom_link.js","components/topic/row/vote_item.js","components/topic/row/vote_chart.js","components/topic/row/vote.js","components/topic/row/msg_text.js","components/preview/preview_header.js","components/preview/topic_preview.js","components/topics_list/index.js","components/topic/header.js","components/topic/topic_info.js","components/topic/row/user_info.js","components/topic/row/index.js","components/topic/footer.js","components/topic/new_message.js","components/options/radio_option.js","components/options/string_option.js","components/container.js","components/nav_bar_footer.js","components/tooltips/tooltip_header.js","components/tooltips/tooltip_body.js","components/tooltips/tooltip_window.js","components/tooltips/tooltip.js","components/tooltips/tooltips_list.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Search","useState","searchEngine","setSearchEngine","text","setText","doSearch","url","open","InputGroup","size","Prepend","DropdownButton","id","title","style","marginRight","className","variant","Dropdown","Item","eventKey","onSelect","FormControl","type","placeholder","paddingRight","onKeyPress","e","key","onChange","target","value","Append","marginLeft","marginTop","marginBottom","cursor","onClick","zIndex","parseJSON","JSON","parse","replace","console","error","message","log","getMaxPage","answ","Math","min","ceil","childrenToText","children","map","displayName","props","number","domain","localStorage","getItem","urlTopicsList","urlTopicInfo","urlTopicMessages","urlLogin","urlLogout","urlCookies","urlSections","urlNewMessage","urlNewTopic","postNewMessage","params","a","topic_id","fetch","method","body","paramsToString","mode","credentials","headers","redirect","result","postNewTopic","paramsPrefix","arr","undefined","push","length","join","fetchJsonpAndGetJson","fullUrl","fetchJsonp","response","json","responseJson","utils","fetchAndGetJson","options","fetchTopicsList","requestTopicsList","createAction","receiveTopicsList","list","payload","receiveTopicsListFailed","clearTopicsList","togglePreview","getTopicsListIfNeeded","dispatch","getState","state","topicsList","isFetching","shouldGetTopicsList","page","reqestParams","topicsPerPage","items","topicsCount","topics","section","section_short_name","forum","user_id","mytopics","API","data","slice","getTopicsList","connect","useLocation","useDispatch","menuItems","name","link","hash","item","i","Nav","Link","href","Navbar","bg","expand","fixed","Brand","Toggle","aria-controls","Collapse","Form","inline","reducer","createReducer","builder","addCase","action","toString","lastUpdated","Date","getTime","ind","findIndex","Object","assign","showPreview","getTopicInfo","getTopicMessages","getMessage","n","from","to","find","val","String","getTopicMessagesCount","info","answers_count","requestTopic","receiveTopic","item0","receiveTopicFailed","clearTopicMessages","requestNewMessages","receiveNewMessages","receiveNewMessagesFailed","shouldFetch","topic","fetchTopicIfNeeded","_item0","first","_items","last","fetchTopic","fetchNewMessagesIfNeeded","fetchNewMessages","defaultTopicState","concat","convertResponse","code","shortn","fulln","fetchSections","requestSections","receiveSections","receiveSectionsFailed","getSectionsIfNeeded","sections","shouldGetSections","tree","forEach","getKey","reduce","previous","currentItem","group","readOptions","saveOptions","defaultOptionsState","voteColors","theme","autoRefreshTopicsList","autoRefreshTopicsListInterval","autoRefreshTopic","autoRefreshTopicInterval","showTooltips","tooltipDelay","showTooltipOnTopicsList","showTooltipOnPostLink","showYoutubeVideoTitle","replaceCatalogMista","fixBrokenLinks","readOption","defaultValue","readAllOptions","setItem","getCookies","getLogin","user_name","username","user_password","password","getLogout","loginStart","loginComplete","userid","hashkey","loginFailed","logoutStart","logoutComplete","checkLoginStart","shouldLogin","login","checkLogin","cookie","session","last_error","trim","entr_hash","doLogout","doLoginIfNeeded","encodeURIComponent","doLogin","defaultLoginState","logged","createTooltip","keys","coords","closeTooltip","clearTooltips","stringify","index","filter","postNewTopicStart","postNewTopicComplete","postNewTopicError","newTopicText","newTopicClear","newTopicSubject","newTopicSection","newTopicShowVoting","show","postNewTopicIfNeeded","newTopic","shouldPostNewTopic","fetchParams","message_text","topic_text","subject","target_section","target_forum","toLowerCase","rnd","round","random","voting","isVoting","votingItems","onSuccess","defaultNewTopicState","postNewMessageStart","postNewMessageComplete","newMessageText","addMessageText","topicId","closePreview","requestPreviewText","recievePreviewText","tooltips","newMessage","topicPreview","user","userId","utime","vote","store","configureStore","devTools","process","useAppDispatch","CustomToggle","React","forwardRef","ref","preventDefault","LoggedUser","onLogout","event","onMenuSelect","this","userName","float","as","bsRole","Menu","Divider","Component","LoginForm","onLogin","current","createRef","flexWrap","flex","maxLength","autoComplete","Button","margin","rel","ErrorElem","dangerouslySetInnerHTML","__html","Login","elem","useEffect","selected","sectionsElem","label","Control","currentTarget","navigate","useNavigate","queryString","search","Pages","pages","maxPage","TopicNameCell","classes","classNames","user0","is_voting","closed","down","sectionHref","sect2","sect1","substr","overflowWrap","LinkToPost","onMouseOver","persist","timer","setTimeout","showToolTip","stopPropagation","clearTimeout","onMouseOut","showTooltip","isPreview","x","pageX","y","pageY","setState","startsWith","then","pageParam","isNaN","expanded","time","td","d","getDate","getMonth","getFullYear","today","dateFormat","aria-hidden","color","display","width","textAlign","currentPage","locationParams","baseUrl","last20","parseInt","Pagination","active","TextEditor","onButtonCode1c","textArea","start","selectionStart","end","selectionEnd","oldText","len","replacement","substring","newText","formName","onVotingChange","checked","ctrlKey","parent","parentElement","tagName","toUpperCase","dispatchEvent","Event","cancelable","bubbles","showVoting","cols","rows","ButtonGroup","disabled","Check","NewTopic","onSectionChange","currentSection","onSubmit","onSubmitSuccess","refs","onSubjectChange","groupsElem","votingOptions","Text","readOnly","FormGroup","highlight","scrolledToHash","СтрокаРезультат","УстановленЦвет","ПоследнийЦвет","keywords","Set","split","Спецсиволы","мЦветФона","мЦветЧисла","мЦветСтроки","мЦветКлючевогоСлова1","ВСтроке","Токен","ПустаяСтрока","Строка","Сред","Нач","Длина","Прав","isKeyword","token","has","ДобавитьЧастьСтроки1С","Часть","Цвет","РазукраситьСтроку","СтрокаКода","ВСтрокеСкобка","ВСтрокеТильда","НачалоСтроки","ТокенДоТочки","Поз","ТекущийСимвол","charAt","Code","onShowClick","bind","hidden","textArr","buttonText","buttonShow","linesCount","preStyle","overflow","height","LinkToUser","getVideoId","fullHref","URL","searchParams","get","pathname","getVideoParams","videoId","apiKey","apiUrl","snippet","hrefName","YoutubeLink","run","CustomLink","parentText","escapedHref","regExp","RegExp","newHref","set","query","class","fixBrokenLink","VoteItem","total","colors","img","percent","textDecoration","select","src","maxWwidth","alt","VoteChart","sum","Vote","voteOption","MsgText","res","txt","processCode1C","processLinksToPosts","voteElement","voteChart","html","processedHtml","processText","componentsMap","textComponent","activeHtml","PreviewHeader","date","onFirst","onPrev","onNext","onLast","TopicPreview","fetchData","onClickFirst","onClickNext","onClickPrev","onClickLast","maxHeight","overflowY","updateTopicsList","document","position","top","letterSpacing","TopicInfo","yandexUrl","lineHeight","UserInfo","getElementById","scrollTo","offsetTop","onImageLoad","dataStr","isAuthor","isYou","isTooltip","imgElem","timeElem","userClassNames","innerWidth","onLoad","Row","author","Footer","onBookmarkClick","onRefreshClick","updateButton","bookmark","NewMessage","voting_select","clearVoting","setVotingOption","votingElem","closeTopic","clearText","htmltext","DOMParser","parseFromString","firstChild","innerText","updateTopic","nodeHash","RadioOption","values","oneLine","valuesElem","htmlFor","descr","StringOption","postfix","Options","closeForm","resetOptions","applyOptions","onTabClick","activeTab","textContent","optionsParams","max","form","tabName","tabs","tab","row","rowElem","fontWeight","Container","path","element","NavBarFooter","TooltipHeader","closeWindow","onTouchEnd","TooltipBody","onScroll","startX","onTouchStart","nativeEvent","changedTouches","clientX","endX","abs","TooltipWindow","onCloseClick","tooltip","onWheel","deltaY","axis","left","Children","toArray","header","handle","defaultClassNameDragging","onWheelCapture","Tooltip","delta","TooltipsList","setAttribute","Root","ReactDOM","render"],"mappings":"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","file":"static/js/main.70194a67.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","//@flow\r\nimport React, { Component, useState } from 'react'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n\r\nimport './search.css'\r\n\r\nconst Search = () => {\r\n\r\n  const [searchEngine, setSearchEngine] = useState('Яндекс');\r\n  const [text, setText] = useState('');\r\n\r\n  function onKeyPress(e: any) {\r\n    if (e.key === 'Enter') {\r\n      doSearch();\r\n    }\r\n  }\r\n\r\n  function doSearch() {\r\n\r\n    let url;\r\n    if (searchEngine === 'Яндекс') {\r\n      url = `https://www.yandex.ru/search/?text=${text}&site=forum.mista.ru`;\r\n\r\n    } else if (searchEngine === 'Google') {\r\n      url = `https://www.google.ru/search?q=${text}+site:forum.mista.ru`\r\n    }\r\n\r\n    window.open(url);\r\n\r\n    setText('');\r\n\r\n  }\r\n\r\n  return (\r\n    <InputGroup size=\"sm\">\r\n      <InputGroup.Prepend>\r\n        <DropdownButton id=\"search-engine\" title=\"\" size=\"sm\" style={{ marginRight: \"2px\" }} className='button' variant=\"light\">\r\n          <Dropdown.Item eventKey=\"Яндекс\" onSelect={() => setSearchEngine(\"Яндекс\")}>Яндекс</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"Google\" onSelect={() => setSearchEngine(\"Google\")}>Google</Dropdown.Item>\r\n        </DropdownButton>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        type=\"text\"\r\n        placeholder={`${searchEngine}: поиск`}\r\n        style={{ marginRight: \"4px\", paddingRight: \"27px\" }}\r\n        className='input'\r\n        onKeyPress={onKeyPress}\r\n        onChange={e => setText(e.target.value)}\r\n        value={text}\r\n      />\r\n      <InputGroup.Append style={{ marginLeft: \"-25px\", marginTop: \"auto\", marginBottom: \"auto\", cursor: \"pointer\" }} onClick={doSearch}>\r\n        <i className=\"fa fa-search input\" style={{ zIndex: 1000 }} />\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  )\r\n\r\n}\r\n\r\nexport default (Search: any);","\r\nexport function today(td) {\r\n    var d = new Date();\r\n    return td.getDate() === d.getDate() && td.getMonth() === d.getMonth() && td.getFullYear() === d.getFullYear();\r\n}\r\n\r\nexport const groupBy = (list, getKey) =>\r\n  list.reduce((previous, currentItem) => {\r\n    const group = getKey(currentItem);\r\n    if (!previous[group]) previous[group] = [];\r\n    previous[group].push(currentItem);\r\n    return previous;\r\n  }, {})\r\n\r\n\r\nexport const parseJSON = (text) => {\r\n\r\n    try {\r\n        return JSON.parse(text);    \r\n    } catch(e) {\r\n\r\n    }\r\n\r\n    try {\r\n        text = text\r\n            .replace(/\\\\</g, '<')\r\n            .replace(/\\\\>/g, '>')\r\n            .replace(/\\\\&/g, '&')\r\n            .replace(/\\\\'/g, \"'\")\r\n            .replace(/\\\\\"/g, \"\")\r\n            .replace(/ \"/g, ' \\\\\"')\r\n            .replace(/\"\"/g, '\\\\\"\"')\r\n            .replace(/\\t/g, '\\\\t')\r\n            .replace(/\"(\\.| |\\?)/g, '\\\\\"$1')\r\n\r\n        //           console.log(text);\r\n        return JSON.parse(text);\r\n\r\n        //return eval(text);\r\n    } catch (e) {\r\n        console.error(e.message);\r\n        console.log(text);\r\n\r\n        return {};\r\n    }\r\n}\r\n\r\nexport const getMaxPage = (answ) => Math.min(Math.ceil(answ / 100), 10) || 1;\r\n\r\nexport const encodeText = (text) => {\r\n    text = text\r\n        .replace(/&/g, '%26')\r\n        .replace(/\\+/g, '%2B')\r\n\r\n    return text;\r\n}\r\n\r\nexport const compare = (obj1, obj2) => {\r\n\r\n    for (let key in obj2) {\r\n        if (obj1[key] !== obj2[key])\r\n            return false\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const join = (obj, str) => {\r\n\r\n    let res = [];\r\n    for (let key in obj) {\r\n        res.push('' + key + ':' + obj[key]);\r\n    }\r\n\r\n    return res.join(str);\r\n}\r\n\r\nexport const childrenToText = (children) => {\r\n\r\n    if (!children) return children;\r\n\r\n    return children.map(value => {\r\n        if (typeof(value) === 'string') {\r\n            return value;\r\n        } else if (value.type === 'br') {\r\n            return '<br>'\r\n        } else if (value.type.displayName === 'Connect(LinkToPost)' || value.type.displayName === 'Connect(t)') {\r\n            return value.props.number;\r\n        } else {  \r\n            console.log(value);\r\n            return value;\r\n        }    \r\n    })    \r\n}\r\n\r\nexport const extractTextFromHTML = (htmltext) => {\r\n    const parser = new DOMParser();\r\n    const floatingElement = parser.parseFromString(htmltext, 'text/html');\r\n    return floatingElement.firstChild.innerText;\r\n}","//@flow\r\nimport fetchJsonp from 'fetch-jsonp'\r\nimport * as utils from 'src/utils'\r\n\r\nexport const domain: string = localStorage.getItem('domain') || 'https://forum.mista.ru';\r\n//export const domain = 'https://dev.mista.ru';\r\nexport const urlTopicsList: string = localStorage.getItem('urlTopicsList') || 'api/topic.php';\r\nexport const urlTopicInfo: string = localStorage.getItem('urlTopicInfo') || 'ajax_gettopic.php';\r\nexport const urlTopicMessages: string = localStorage.getItem('urlTopicMessages') || 'api/message.php';\r\nexport const urlLogin: string = localStorage.getItem('urlLogin') || 'users.php?action=do_enter';\r\nexport const urlLogout: string = localStorage.getItem('urlLogout') || 'users.php?action=exit';\r\nexport const urlCookies: string = localStorage.getItem('urlCookies') || 'ajax_cookie.php';\r\nexport const urlSections: string = localStorage.getItem('urlSections') || 'ajax_getsectionslist.php';\r\nexport const urlNewMessage: string = localStorage.getItem('urlNewMessage') || 'topic.php?id=:id&page=1';\r\nexport const urlNewTopic: string = localStorage.getItem('urlNewTopic') || 'index.php';\r\nexport const urlAddBookmark: string = localStorage.getItem('urlAddBookmark') || 'ajax_addbookmark.php';\r\nexport const urlSearch: string = localStorage.getItem('urlSearch') || 'ajax_find.php';\r\n\r\n// New message\r\nexport type RequestNewMessage = {\r\n  message_text: string,\r\n  action: \"new\",\r\n  topic_id: string,\r\n  rnd: number,\r\n  voting_select?: number,\r\n  as_admin?: boolean\r\n}\r\n\r\nexport const postNewMessage = async (params: RequestNewMessage): Promise<any> => {\r\n\r\n  let url = urlNewMessage.replace(':id', params.topic_id);\r\n\r\n  let result = await fetch(`${domain}/${url}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Accept': 'text/html,application/xhtml+xml,application/xml',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: 'follow'\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n\r\n// New topic\r\nexport type RequestNewTopic = {\r\n  action: \"new\",\r\n  rnd: number,\r\n  topic_text: string,\r\n  message_text: string,\r\n  target_section: string,\r\n  target_forum: string,\r\n  voting: number,\r\n  select1?: string,\r\n  select2?: string,\r\n  select3?: string,\r\n  select4?: string,\r\n  select5?: string,\r\n  select6?: string,\r\n  select7?: string,\r\n  select8?: string,\r\n  select9?: string,\r\n  select10?: string\r\n}\r\n\r\nexport const postNewTopic = async (params: RequestNewTopic): Promise<any> => {\r\n\r\n  await fetch(`${domain}/${urlNewTopic}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    }\r\n  });\r\n}\r\n\r\n\r\n//Bookmark\r\nexport type RequestBookmark = {\r\n  id: string\r\n}\r\n\r\nexport const postBookmark = async (params: RequestBookmark) => {\r\n\r\n  await fetch(`${domain}/${urlAddBookmark}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n  });\r\n}\r\n\r\nexport const postSearch = async (params: RequestSearch) => {\r\n\r\n  await fetch(`${domain}/${urlSearch}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n  });\r\n}\r\n\r\nexport const paramsToString = (paramsPrefix: string, params: ?{}): string => {\r\n\r\n  if (!params)\r\n    return '';\r\n\r\n  let arr = [];\r\n  for (let key in params) {\r\n    if (params[key] !== undefined)\r\n      arr.push(key + '=' + params[key]);\r\n  }\r\n\r\n  if (arr.length > 0)\r\n    return paramsPrefix + arr.join('&');\r\n  else\r\n    return '';\r\n}\r\n\r\nexport const fetchJsonpAndGetJson = async (url: string, params: any): Promise<any> => {\r\n\r\n  let fullUrl = `${domain}/${url}${paramsToString('?', params)}`;\r\n  const response = await fetchJsonp(fullUrl);\r\n  let responseJson = await response.json();\r\n  let json;\r\n  if (typeof (responseJson) === 'string') {\r\n\r\n    try {\r\n      json = JSON.parse(responseJson)\r\n    } catch (e) {\r\n      json = utils.parseJSON(responseJson);\r\n    }\r\n  } else {\r\n    json = responseJson;\r\n  }\r\n  return json;\r\n}\r\n\r\nexport const fetchAndGetJson = async (url: string, params: any, options: any): Promise<any> => {\r\n\r\n  let fullUrl = `${domain}/${url}${paramsToString('?', params)}`;\r\n  const response = await fetch(fullUrl, options);\r\n  let responseJson = await response.json();\r\n  let json;\r\n  if (typeof (responseJson) === 'string') {\r\n\r\n    try {\r\n      json = JSON.parse(responseJson)\r\n    } catch (e) {\r\n      json = utils.parseJSON(responseJson);\r\n    }\r\n  } else {\r\n    json = responseJson;\r\n  }\r\n  return json;\r\n}","import { fetchAndGetJson, urlTopicsList } from '.'\r\n\r\n// Topics list\r\nexport type RequestTopicsList = {\r\n  topics?: number, // число тем, которые нужно вернуть (по умолчанию - 20);\r\n  utime?: number, // время (в формате unixtime) после которого надо вернуть ветки;\r\n  callback?: string, // если указано, то ответ заворачивается в вызов функции, имя которой передано в параметре (реализация JSONP)\r\n  forum?: string, // раздел форума (1c|it|life);\r\n  section_short_name?: string,\r\n  user_id?: string,\r\n  mytopics?: string\r\n}\r\n\r\nexport type ResponseTopicsListItem = {\r\n  id: number,\r\n  forum: string,\r\n  sect1: string,\r\n  sect2: string,\r\n  v8: string,\r\n  closed: number,\r\n  down: number,\r\n  text: string,\r\n  utime: number,\r\n  created: number,\r\n  user: string,\r\n  user0: string,\r\n  is_voting: number,\r\n  answ: number\r\n}\r\n\r\nexport type ResponseTopicsList = Array<ResponseTopicsListItem>;\r\n\r\nexport const fetchTopicsList = async (params: RequestTopicsList): Promise<ResponseTopicsList> => {\r\n  const json = await fetchAndGetJson(urlTopicsList, params);\r\n  return json;\r\n}","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nimport * as API from 'src/api/topicslist'\r\nimport type { RequestTopicsList, ResponseTopicsList } from 'src/api/topicslist'\r\nimport type { State } from 'src/reducers'\r\nimport { domain, urlTopicsList } from 'src/api/index';\r\n\r\nexport const requestTopicsList = createAction('REQUEST_TOPICS_LIST');\r\nexport const receiveTopicsList = createAction('RECEIVE_TOPICS_LIST', list => ({\r\n  payload: {\r\n    list\r\n  },\r\n  error: false\r\n}));\r\nexport const receiveTopicsListFailed = createAction('RECEIVE_TOPICS_LIST', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\nexport const clearTopicsList = createAction('CLEAR_TOPICS_LIST');\r\nexport const togglePreview = createAction('TOGGLE_PREVIEW', id => ({\r\n  payload : {\r\n    id\r\n  }\r\n}));\r\n\r\nconst getTopicsList = (params: any) => async (dispatch: any, getState: any) => {\r\n\r\n  dispatch(requestTopicsList())\r\n\r\n  const page = params.page || 1;\r\n  let reqestParams: RequestTopicsList = {};\r\n\r\n  let topicsPerPage = +getState().options.items.topicsPerPage;\r\n  if (topicsPerPage > 99) topicsPerPage = 99;\r\n\r\n  let topicsCount = page * topicsPerPage;\r\n  reqestParams.topics = topicsCount;\r\n\r\n  if (params.section)\r\n    reqestParams.section_short_name = params.section;\r\n\r\n  if (params.forum)\r\n    reqestParams.forum = params.forum;\r\n\r\n  if (params.user_id)\r\n    reqestParams.user_id = params.user_id;\r\n\r\n  if (params.mytopics)\r\n    reqestParams.mytopics = params.mytopics;\r\n\r\n  try {\r\n    const json = await API.fetchTopicsList(reqestParams);\r\n\r\n    let data = json.slice(-topicsPerPage);\r\n    dispatch(receiveTopicsList(data));\r\n\r\n  } catch (error) {\r\n\r\n    dispatch(receiveTopicsListFailed(`${error.message} ${domain}/${urlTopicsList}`));\r\n    console.error(error.message);\r\n\r\n  }\r\n\r\n}\r\n\r\nconst shouldGetTopicsList = (state: State) => {\r\n  const topicsList = state.topicsList;\r\n  if (!topicsList) {\r\n    return true\r\n  }\r\n  if (topicsList.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const getTopicsListIfNeeded = (params: any): any => (dispatch: any, getState: any) => {\r\n  if (shouldGetTopicsList(getState())) {\r\n    return dispatch(getTopicsList(params));\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Form from 'react-bootstrap/Form'\r\nimport queryString from 'query-string'\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport Search from 'src/components/common/search'\r\nimport { getTopicsListIfNeeded } from 'src/data/topicslist/actions'\r\n\r\nimport './nav_bar.css'\r\n\r\nconst NavBar = (props) => {\r\n\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const onClick = (e) => {\r\n    dispatch(getTopicsListIfNeeded({}));\r\n  }\r\n\r\n  const menu = [\r\n    { name: '1С', link: `${window.hash}/index.php?forum=1C` },\r\n    { name: 'IT', link: `${window.hash}/index.php?forum=IT` },\r\n    { name: 'JOB', link: `${window.hash}/index.php?forum=JOB` },\r\n    { name: 'LIFE', link: `${window.hash}/index.php?forum=LIFE` },\r\n    { name: 'Wiki', link: 'https://wiki.mista.ru' },\r\n    { name: 'Книга знаний', link: 'https://kb.mista.ru' },\r\n  ];\r\n\r\n  const menuItems = menu.map((item, i) => {\r\n    return (\r\n      <Nav.Item key={i}>\r\n        <Nav.Link href={item.link}>\r\n          {item.name}\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" fixed=\"top\">\r\n      <Navbar.Brand\r\n        href={`${window.hash}`}\r\n        onClick={onClick}>\r\n        React.Mista\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse>\r\n        <Nav className=\"mr-auto\">\r\n          {menuItems}\r\n        </Nav>\r\n        <Form inline>\r\n          <Search />\r\n        </Form>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default connect()(NavBar);","//@flow\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { requestTopicsList, receiveTopicsList, clearTopicsList, togglePreview } from './actions'\r\n\r\nimport type { ResponseTopicsListItem } from 'src/api'\r\n\r\nexport type TopicsListItem = ResponseTopicsListItem & {\r\n  showPreview?: ?boolean\r\n}\r\n\r\nexport type TopicsListState = {\r\n  isFetching: boolean;\r\n  items: Array<TopicsListItem>,\r\n  error?: ?string,\r\n  lastUpdated?: Date\r\n};\r\n\r\nexport const defaultTopicsListState: TopicsListState = {\r\n  isFetching: false,\r\n  items: []\r\n}\r\n\r\nconst reducer = createReducer(defaultTopicsListState, (builder) => {\r\n  builder\r\n    .addCase(requestTopicsList, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveTopicsList, (state, action) => {\r\n\r\n      if (action.error) {\r\n        state.error = action.payload.toString();\r\n      } else {\r\n        state.items = action.payload.list;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(clearTopicsList, (state) => {\r\n      state.items = [];\r\n      state.isFetching = false;\r\n      delete state.error;\r\n      delete state.lastUpdated;\r\n    })\r\n    .addCase(togglePreview, (state, action) => {\r\n      let items = state.items.slice();\r\n      const ind = items.findIndex(item => item.id === action.payload.id);\r\n\r\n      let item = Object.assign({}, items[ind]);\r\n      item.showPreview = !item.showPreview;\r\n      items[ind] = item;\r\n      state.items = items;\r\n    })    \r\n})\r\n\r\nexport default reducer;\r\n","import { domain, urlTopicInfo, urlTopicMessages, fetchAndGetJson, fetchJsonpAndGetJson } from '.'\r\n\r\n// Topics info\r\nexport type RequestInfo = {\r\n  id: string // идентификатор (topic_id) темы\r\n}\r\n\r\nexport type ResponseVoteItem = {\r\n  select: string,\r\n  result: number\r\n}\r\n\r\nexport type ResponseInfo = {\r\n  id: string,\r\n  text: string,\r\n  forum?: string,\r\n  section?: string,\r\n  created?: string,\r\n  user_id?: string,\r\n  user_name?: string,\r\n  answers_count: string,\r\n  down?: number,\r\n  closed?: number,\r\n  deleted?: number,\r\n  is_voting?: number,\r\n  voting?: Array<ResponseVoteItem>\r\n}\r\n\r\nexport const getTopicInfo = async (params: RequestInfo): Promise<ResponseInfo> => {\r\n  const json = await fetchAndGetJson(urlTopicInfo, params);\r\n  return json;\r\n}\r\n\r\n\r\n// Topic messages\r\nexport type RequestMessages = {\r\n  id: number | string, // идентификатор (topic_id) темы\r\n  from?: number, // с какого сообщения. если не указан, то с первого\r\n  to?: number  // до какого сообщения. если не указан, то from+10\r\n}\r\n\r\nexport type ResponseMessage = {\r\n  id: string,\r\n  n: string,\r\n  user: string,\r\n  userId: string,\r\n  text: string,\r\n  utime: string,\r\n  vote: number\r\n}\r\n\r\nexport type ResponseMessages = Array<ResponseMessage>;\r\n\r\nexport const getTopicMessages = async (params: RequestMessages): Promise<ResponseMessages> => {\r\n  const json = await fetchAndGetJson(urlTopicMessages, params);\r\n  return json;\r\n}\r\n\r\nexport const getMessage = async (id: number | string, n: number): Promise<?ResponseMessage> => {\r\n  \r\n  let from = n;\r\n  let to = +n;\r\n  if (n === 0) //does't work from=0&to=0\r\n    to++;\r\n\r\n  const json = await getTopicMessages({\r\n    id,\r\n    from,\r\n    to\r\n  }\r\n  );\r\n\r\n  let data;\r\n  if (json && json.length > 0)\r\n    data = json.find(val => val.n === String(n));\r\n\r\n  return data;\r\n}\r\n\r\nexport const getTopicMessagesCount = async (id: number | string): Promise<number> => {\r\n  const info = await getTopicInfo({ id: String(id) });\r\n  return +info.answers_count;\r\n}","//@flow\r\nimport * as API from 'src/api/topic'\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nimport type { ResponseInfo, ResponseMessage, ResponseMessages } from 'src/api/topic'\r\n\r\nexport const requestTopic = createAction('REQUEST_TOPIC');\r\nexport const receiveTopic = createAction('RECEIVE_TOPIC', (info, item0, list) => ({\r\n  payload: {\r\n    info,\r\n    item0,\r\n    list\r\n  },\r\n  error: false\r\n}));\r\nexport const receiveTopicFailed = createAction('RECEIVE_TOPIC', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\nexport const clearTopicMessages = createAction('CLEAR_TOPIC_MESSAGES');\r\n\r\nexport const requestNewMessages = createAction('REQUEST_NEW_MESSAGES');\r\nexport const receiveNewMessages = createAction('RECEIVE_NEW_MESSAGES', (list) => ({\r\n  payload: {\r\n    list\r\n  },\r\n  error: false\r\n}));\r\nexport const receiveNewMessagesFailed = createAction('RECEIVE_NEW_MESSAGES', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\n\r\nexport const fetchTopic = (params: any, item0: ?ResponseMessage): any => async (dispatch: any) => {\r\n\r\n  dispatch(requestTopic())\r\n\r\n  let info;\r\n  try {\r\n    info = await API.getTopicInfo({ id: params.id });\r\n  } catch (e) {\r\n    console.error(e);\r\n    info = {\r\n      id: params.id,\r\n      text: '',\r\n      answers_count: \"0\"\r\n    };\r\n  }\r\n  try {\r\n    let page = params.page || 1;\r\n\r\n    let _item0 = item0;\r\n    let _items;\r\n    if (page === 'last20') {\r\n\r\n      if (+info.answers_count > 21) {\r\n\r\n        if (!_item0) {\r\n          let items = await API.getTopicMessages({\r\n            id: params.id,\r\n            from: 0,\r\n            to: 1\r\n          });\r\n          _item0 = items[0];\r\n        }\r\n\r\n        let first = +info.answers_count - 20;\r\n        _items = await API.getTopicMessages({\r\n          id: params.id,\r\n          from: first,\r\n          to: 1010\r\n        });\r\n\r\n      } else {\r\n        let items = await API.getTopicMessages({\r\n          id: params.id,\r\n          from: 0,\r\n          to: 1010\r\n        });\r\n        _item0 = items[0];\r\n        _items = items.slice(1);\r\n      }\r\n\r\n    } else {\r\n\r\n      page = +page;\r\n      let first = 0;\r\n      let last = page * 100 - 1;\r\n\r\n      if (page > 1) {\r\n\r\n        first = (page - 1) * 100;\r\n        if (!_item0) {\r\n          _item0 = await API.getMessage(params.id, 0);\r\n        }\r\n\r\n        _items = await API.getTopicMessages({\r\n          id: params.id,\r\n          from: first,\r\n          to: last\r\n        });\r\n\r\n      } else {\r\n        if (_item0)\r\n          first = 1;\r\n        else\r\n          first = 0;\r\n\r\n        let items = await API.getTopicMessages({\r\n          id: params.id,\r\n          from: first,\r\n          to: last\r\n        });\r\n\r\n        if (_item0) {\r\n          _items = items;\r\n        } else {\r\n          _item0 = items[0];\r\n          _items = items.slice(1);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    if (info.answers_count === \"0\" && _items.length > 0)\r\n      info.answers_count = _items[_items.length - 1].n;\r\n\r\n    if (page === 'last20' && _items.length > 20) {\r\n      _items = _items.slice(-20);\r\n    }\r\n\r\n    dispatch(receiveTopic(info, _item0, _items));\r\n\r\n  } catch (error) {\r\n\r\n    console.error('Failed to fetch topic:', error);\r\n    dispatch(receiveTopicFailed(error));\r\n\r\n  }\r\n}\r\n\r\nconst shouldFetch = (state) => {\r\n  const topic = state.topic;\r\n  if (!topic) {\r\n    return true\r\n  }\r\n  if (topic.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const fetchTopicIfNeeded = (params: any, item0: ?ResponseMessage): any => (dispatch: any, getState: any) => {\r\n  if (shouldFetch(getState())) {\r\n    return dispatch(fetchTopic(params, item0));\r\n  }\r\n}\r\n\r\nexport type FetchNewMessageseParams = {\r\n  id: number | string,\r\n  last: number\r\n}\r\n\r\nexport const fetchNewMessages = (params: FetchNewMessageseParams): any => async (dispatch: any) => {\r\n\r\n  dispatch(requestNewMessages());\r\n\r\n  try {\r\n    const list = await API.getTopicMessages({\r\n      id: params.id,\r\n      from: +params.last + 1,\r\n      to: 1010\r\n    });\r\n\r\n    dispatch(receiveNewMessages(list));\r\n\r\n  } catch (error) {\r\n    console.error('Failed to fetch new messages:', error);\r\n    dispatch(receiveNewMessagesFailed(error));\r\n  }\r\n\r\n}\r\n\r\nexport const fetchNewMessagesIfNeeded = (params: FetchNewMessageseParams): any => (dispatch: any, getState: any) => {\r\n  if (shouldFetch(getState())) {\r\n    return dispatch(fetchNewMessages(params));\r\n  }\r\n}","//@flow \r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport type { ResponseInfo, ResponseMessages, ResponseMessage } from 'src/api/topic'\r\nimport type { TopicAction } from 'src/data/topic/actions'\r\n\r\nimport { requestTopic, receiveTopic, clearTopicMessages, requestNewMessages, receiveNewMessages } from './actions'\r\n\r\nexport type TopicState = {\r\n  isFetching: boolean;\r\n  info: ResponseInfo,\r\n  item0?: ?ResponseMessage,\r\n  items: ResponseMessages,\r\n  lastUpdated?: ?Date,\r\n  error?: ?string\r\n};\r\n\r\nexport const defaultInfo = {\r\n  id: \"\",\r\n  text: \"\",\r\n  answers_count: \"\"\r\n}\r\n\r\nexport const defaultTopicState: TopicState = {\r\n  isFetching: false,\r\n  info: defaultInfo,\r\n  items: []\r\n}\r\n\r\nconst reducer = createReducer(defaultTopicState, (builder) => {\r\n  builder\r\n    .addCase(requestTopic, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveTopic, (state, action) => {\r\n\r\n      if (action.error) {\r\n        state.error = action.error.toString();\r\n      } else {\r\n        state.items = action.payload.list;\r\n        state.item0 = action.payload.item0;\r\n        state.info = action.payload.info;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(clearTopicMessages, (state) => {\r\n      state.items = defaultTopicState.items;\r\n      state.item0 = defaultTopicState.item0;\r\n      state.info = defaultTopicState.info;\r\n      delete state.error;\r\n    })\r\n    .addCase(requestNewMessages, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveNewMessages, (state, action) => {\r\n      if (action.error) {\r\n        state.error = action.error.toString();\r\n      } else {\r\n        state.isFetching = false;\r\n        state.items = state.items.concat(action.payload.list);\r\n        state.info.answers_count = state.items[state.items.length - 1].n;\r\n      }\r\n    })\r\n})\r\n\r\nexport default reducer;","import { fetchJsonpAndGetJson, urlSections } from '.'\r\n\r\n// Sections\r\nexport type ResponseSection = {\r\n  id: number,\r\n  forum: string,\r\n  shortn: string,\r\n  fulln: string,\r\n  id: number\r\n}\r\n\r\nexport type ResponseSections = Array<ResponseSection>;\r\n\r\nfunction convertResponse(response: IAPIResponse): ISectionItem {\r\n\r\n  return ({\r\n    id: response.id,\r\n    forum: response.forum,\r\n    code: response.shortn,\r\n    name: response.fulln,\r\n  })\r\n\r\n}\r\n\r\nexport const fetchSections = async (): Promise<ResponseSections> => {\r\n  const list = await fetchJsonpAndGetJson(urlSections);\r\n  return list.map(convertResponse);\r\n}\r\n","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nimport * as API from 'src/api/sections'\r\nimport type { ResponseSections } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\n\r\nexport const requestSections = createAction('REQUEST_SECTIONS');\r\nexport const receiveSections = createAction('RECEIVE_SECTIONS', list => ({\r\n  payload: {\r\n    list,\r\n  },\r\n  error: false\r\n}));\r\n\r\nexport const receiveSectionsFailed = createAction('RECEIVE_SECTIONS', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\n\r\nexport const getSections = (): any => async (dispatch: any) => {\r\n\r\n  dispatch(requestSections());\r\n\r\n  try {\r\n    \r\n    const list: ResponseSections = await API.fetchSections();\r\n    dispatch(receiveSections(list));\r\n\r\n  } catch (e) {\r\n\r\n    dispatch(receiveSectionsFailed(e));\r\n    console.error(e);\r\n\r\n  }\r\n\r\n}\r\n\r\nconst shouldGetSections = (state: State): boolean => {\r\n\r\n  const sections = state.sections;\r\n\r\n  if (!sections)\r\n    return true\r\n\r\n  if (sections.isFetching)\r\n    return false\r\n\r\n  if (sections.items.length > 0)\r\n    return false;\r\n\r\n  return true\r\n}\r\n\r\nexport const getSectionsIfNeeded = (): any => (dispatch: any, getState: any) => {\r\n  if (shouldGetSections(getState())) {\r\n    return dispatch(getSections());\r\n  }\r\n}","//@flow \r\nimport { createReducer } from '@reduxjs/toolkit'\r\n\r\nimport { requestSections, receiveSections } from './actions'\r\nimport type { ResponseSections } from 'src/api'\r\n\r\nimport { groupBy } from 'src/utils'\r\n\r\nexport type SectionsState = {\r\n  isFetching: boolean;\r\n  items: ResponseSections,\r\n  tree: { [string]: any },\r\n  map: { [string]: any },\r\n  lastUpdated?: Date,\r\n  error?: ?string\r\n};\r\n\r\nexport const initialState: SectionsState = {\r\n  isFetching: false,\r\n  items: [],\r\n  tree: {},\r\n  map: {}\r\n}\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(requestSections, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveSections, (state, action) => {\r\n\r\n      if (action.error) {\r\n        state.error = action.payload.toString();\r\n      } else {\r\n        let map = {};\r\n        action.payload.list.forEach(item => {\r\n            map[item.code] = item.name\r\n        });\r\n        state.items = action.payload.list;\r\n        state.tree = groupBy(state.items, item => item.forum);\r\n        state.map = map;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n})\r\n\r\nexport default reducer;\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport type { OptionsItems } from 'src/data/options/reducer'\r\n\r\nexport const readOptions = createAction('READ_OPTIONS');\r\nexport const saveOptions = createAction('SAVE_OPTIONS', options => ({\r\n  payload: {\r\n    options,\r\n  }\r\n}));\r\n","//@flow\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { readOptions, saveOptions } from './actions'\r\n\r\nexport type Column = {\r\n  name: string,\r\n  className?: string,\r\n  width?: string\r\n}\r\n\r\nexport type OptionsItems = {\r\n  theme: 'yellow' | 'lightgray' | 'dark',\r\n  topicsPerPage: string,\r\n  autoRefreshTopicsList: string,\r\n  autoRefreshTopicsListInterval: string,\r\n  autoRefreshTopic: string,\r\n  autoRefreshTopicInterval: string,\r\n  contetnMaxWidth?: string,\r\n  tooltipDelay: string,\r\n  showTooltips: string,\r\n  showTooltipOnTopicsList: string\r\n}\r\n\r\nexport type OptionsState = {\r\n  voteColors: Array<string>,\r\n  items: OptionsItems,\r\n  show?: boolean\r\n};\r\n\r\nexport const defaultOptionsState: OptionsState = {\r\n  voteColors: [\r\n    \"#FF1616\", //1\r\n    \"#1A861A\", //2\r\n    \"#0023FF\", //3\r\n    \"#FF6B18\", //4\r\n    \"#9B3A6E\", //5\r\n    \"#567655\", //6\r\n    \"#233345\", //7\r\n    \"#CC0000\", //8\r\n    \"#00CCCC\", //9\r\n    \"#0000CC\", //10\r\n  ],\r\n  items: {\r\n    theme: 'lightgray',\r\n    topicsPerPage: '20',\r\n    autoRefreshTopicsList: 'false',\r\n    autoRefreshTopicsListInterval: '60',\r\n    autoRefreshTopic: 'true',\r\n    autoRefreshTopicInterval: '60',\r\n    //tooltips\r\n    showTooltips: 'true',\r\n    tooltipDelay: '500',\r\n    showTooltipOnTopicsList: 'true',\r\n    showTooltipOnPostLink: 'true',\r\n    //links\r\n    showYoutubeVideoTitle: 'true',\r\n    replaceCatalogMista: 'true',\r\n    fixBrokenLinks: 'true',\r\n  }\r\n}\r\n\r\nconst readOption = (name, defaultValue) => {\r\n  return window.localStorage.getItem(name) || defaultValue;\r\n}\r\n\r\nconst readAllOptions = () => {\r\n  \r\n  let state: OptionsState = defaultOptionsState;\r\n  for (let key in state.items) {\r\n    state.items[key] = readOption(key, state.items[key]);\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nconst reducer = createReducer(readAllOptions(), (builder) => {\r\n  builder\r\n    .addCase(readOptions, (state) => {\r\n      let items = Object.assign({}, defaultOptionsState.items);\r\n      for (let key in items) {\r\n        items[key] = readOption(key, defaultOptionsState.items[key]);\r\n      }\r\n      state.items = items;\r\n    })\r\n    .addCase(saveOptions, (state, action) => {\r\n      for (let key in action.payload.options) {\r\n        const value = String(action.payload.options[key]); \r\n        window.localStorage.setItem(key, value);\r\n        state.items[key] = value;\r\n      }\r\n    })\r\n  })\r\n\r\nexport default reducer;","import { domain, urlLogin, urlLogout, urlCookies, fetchJsonpAndGetJson, paramsToString } from '.'\r\n\r\n// Cookies\r\nexport type ResponseCookies = {\r\n  cookie: {\r\n    entr_id: string,\r\n    entr_key: string,\r\n    entr_hash: string\r\n  },\r\n  session: {\r\n    user_id: string,\r\n    user_name: string,\r\n    user_hash: string,\r\n    is_moderator: number,\r\n    light_moderator: number,\r\n    section: string,\r\n    show_moderator_tools: number,\r\n    last_error?: string\r\n  }\r\n}\r\n\r\nexport const getCookies = async (): Promise<ResponseCookies> => {\r\n  const json = await fetchJsonpAndGetJson(urlCookies);\r\n  return json;\r\n}\r\n\r\n// Login\r\nexport type RequestLogin = {\r\n  username: string, // логин (ник) пользователя\r\n  password: string, // пароль пользователя\r\n  callback?: string, // если указано, то ответ заворачивается в вызов функции, имя которой передано в параметре (реализация JSONP)\r\n}\r\n\r\nexport type ResponseLogin = {\r\n  userid: string,\r\n  username: string,\r\n  hashkey: string,\r\n  error?: string\r\n}\r\n\r\nexport const getLogin = async (params: RequestLogin): Promise<any> => {\r\n  let result = await fetch(`${domain}/${urlLogin}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', {user_name: params.username, user_password: params.password}),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Accept': 'text/html,application/xhtml+xml,application/xml',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: 'follow'\r\n  });\r\n}\r\n\r\nexport const getLogout = async (): Promise<any> => {\r\n  const fullUrl = `${domain}/${urlLogout}`;\r\n  await fetch(fullUrl, {\r\n    mode: 'no-cors',\r\n    credentials: 'include'\r\n  });\r\n}","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nimport * as API from 'src/api/login'\r\nimport type { RequestLogin, ResponseLogin } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\n\r\nexport const loginStart = createAction('LOGIN_START');\r\nexport const loginComplete = createAction('LOGIN_COMPLETE', (userid, username, hashkey) => ({\r\n  payload: {\r\n    userid,\r\n    username,\r\n    hashkey,\r\n  },\r\n  error: false\r\n}));\r\nexport const loginFailed = createAction('LOGIN_COMPLETE', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\n\r\nexport const logoutStart = createAction('LOGOUT_START');\r\nexport const logoutComplete = createAction('LOGOUT_COMPLETE');\r\n\r\nexport const checkLoginStart = createAction('CHECK_LOGIN_START');\r\n\r\nconst shouldLogin = (state: State): boolean => {\r\n  const { login } = state;\r\n  if (!login) {\r\n    return true\r\n  }\r\n  if (login.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const checkLogin = (params: any): any => async (dispatch: any) => {\r\n\r\n  dispatch(checkLoginStart());\r\n\r\n  let json;\r\n  try {\r\n    json = await API.getCookies();\r\n  } catch (e) {\r\n    dispatch(loginFailed(e));\r\n    return;\r\n  }\r\n  const { cookie, session } = json;\r\n\r\n  if (session && session.user_id){\r\n\r\n    let error = (session.last_error || '').trim();\r\n    if (error === 'Не указано сообщение.') error = '';\r\n    dispatch(loginComplete(\r\n      session.user_id,\r\n      session.user_name,\r\n      cookie.entr_hash\r\n    ));\r\n  } else\r\n    dispatch(loginFailed(''));\r\n}\r\n\r\nexport const checkLoginIfNeeded = (params: any): any => (dispatch: any, getState: any) => {\r\n  if (shouldLogin(getState())) {\r\n    return dispatch(checkLogin(params))\r\n  }\r\n}\r\n\r\nexport const doLogout = (params: any): any => async (dispatch: any) => {\r\n\r\n  dispatch(logoutStart());\r\n\r\n  try {\r\n    \r\n    await API.getLogout();\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  \r\n  dispatch(logoutComplete());\r\n  dispatch(checkLogin());\r\n\r\n}\r\n\r\nexport const doLogin = (params: RequestLogin): any => async (dispatch: any) => {\r\n\r\n  dispatch(loginStart());\r\n\r\n  try {\r\n\r\n    await API.getLogin({\r\n      username: encodeURIComponent(params.username),\r\n      password: encodeURIComponent(params.password)\r\n    })\r\n\r\n    dispatch(checkLogin());\r\n\r\n  } catch (err) {\r\n    console.error('Login error :', err);\r\n    dispatch(loginFailed(err.message));\r\n  }\r\n\r\n}\r\n\r\nexport const doLoginIfNeeded = (params: RequestLogin): any => (dispatch: any, getState: any) => {\r\n  if (shouldLogin(getState())) {\r\n    return dispatch(doLogin(params))\r\n  }\r\n}","//@flow \r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { loginStart, loginComplete, logoutStart, logoutComplete, checkLoginStart } from './actions'\r\n\r\nexport type LoginState = {\r\n  isFetching: boolean;\r\n  logged: any,\r\n  userid?: string,\r\n  username?: string,\r\n  hashkey?: string,\r\n  error?: string\r\n};\r\n\r\nexport const defaultLoginState: LoginState = {\r\n  isFetching: false,\r\n  logged: undefined\r\n}\r\n\r\nconst reducer = createReducer(defaultLoginState, (builder) => {\r\n  builder\r\n    .addCase(loginStart, (state) => {\r\n      state.isFetching = true;\r\n    })\r\n    .addCase(loginComplete, (state, action) => {\r\n      if (action.error) {\r\n        state.logged = false;\r\n        state.error = action.payload.toString();\r\n      } else {\r\n\r\n        state.userid = action.payload.userid;\r\n        state.username = action.payload.username;\r\n        state.hashkey = action.payload.hashkey;\r\n        state.logged = true;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(logoutStart, (state) => {\r\n      state.isFetching = true;\r\n    })\r\n    .addCase(logoutComplete, (state) => {\r\n      state.isFetching = false;\r\n      state.logged = false;\r\n      delete state.userid;\r\n      delete state.username;\r\n      delete state.hashkey;\r\n      delete state.error;\r\n    })    \r\n})\r\n\r\nexport default reducer;\r\n","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\nimport type { State } from '../reducers'\r\n\r\nexport type TooltipKeys = {\r\n  type: 'TOPIC' | 'TOPIC_PREVIEW',\r\n  topicId: string,\r\n  number: number\r\n}\r\n\r\nexport type Coords = {\r\n  x: number,\r\n  y: number\r\n}\r\n\r\nexport type TooltipItem = {\r\n  keys: TooltipKeys,\r\n  coords: Coords\r\n}\r\n\r\nexport const createTooltip = createAction('CREATE_TOOLTIP', (keys, coords) => ({\r\n  payload: {\r\n    keys,\r\n    coords\r\n  },\r\n}));\r\nexport const closeTooltip = createAction('CLOSE_TOOLTIP', keys => ({\r\n  payload: {\r\n    keys\r\n  },\r\n}));\r\nexport const clearTooltips = createAction('CLEAR_TOOLTIPS');\r\n\r\nexport const showTooltip = (keys: TooltipKeys, coords: Coords): any => async (dispatch: any) => {\r\n\r\n  if (keys.type === 'TOPIC' || keys.type === 'TOPIC_PREVIEW') {\r\n    dispatch(createTooltip(keys, coords));\r\n  }\r\n}\r\n\r\nexport const clearTooltipsIfNeeded = (): any => (dispatch: any, getState: any) => {\r\n  const state: State = getState();\r\n  if (state.tooltips.items.length > 0) {\r\n    dispatch(clearTooltips());;\r\n  }\r\n}","//@flow\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { createTooltip, closeTooltip, clearTooltips } from './actions'\r\n\r\nexport type TooltipItemState = {\r\n  i: number,\r\n  hash: string\r\n} & TooltipItem\r\n\r\nexport type TooltipsState = {\r\n  items: Array<TooltipItemState>\r\n};\r\n\r\nexport const defaultTooltipsState: TooltipsState = {\r\n  items: []\r\n}\r\n\r\nconst reducer = createReducer(defaultTooltipsState, (builder) => {\r\n  builder\r\n    .addCase(createTooltip, (state, action) => {\r\n      const hash = JSON.stringify(action.payload.keys);\r\n      const index = state.items.findIndex(item => item.hash === hash);\r\n      let zIndex = 0;\r\n      if (state.items.length)\r\n        zIndex = state.items[state.items.length - 1].zIndex + 1;\r\n      if (index === - 1)\r\n        state.items.push({\r\n          keys: action.payload.keys,\r\n          coords: action.payload.coords,\r\n          hash,\r\n          zIndex \r\n        })\r\n      else {\r\n        //state.list = moveToEnd(state.list, index);\r\n        state.list[state.list.length - 1].zIndex = zIndex;\r\n      }  \r\n    })\r\n    .addCase(closeTooltip, (state, action) => {\r\n      let hash = JSON.stringify(action.payload.keys);\r\n      state.items = state.items.filter(val => val.hash !== hash);\r\n    })\r\n    .addCase(clearTooltips, (state) => {\r\n      state.items = [];\r\n    })    \r\n})\r\n\r\nexport default reducer;\r\n","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nimport * as API from 'src/api'\r\nimport type { RequestNewTopic } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\nimport type { ResponseSection } from 'src/api'\r\n\r\nexport type postNewTopicParams = {\r\n  subject: string,\r\n  text: string,\r\n  section: number,\r\n  forum: string,\r\n  isVoting: boolean,\r\n  votingItems?: Array<string>,\r\n  onSuccess?: () => void\r\n};\r\n\r\nexport const postNewTopicStart = createAction('POST_NEW_TOPIC_START');\r\nexport const postNewTopicComplete = createAction('POST_NEW_TOPIC_COMPLETE');\r\nexport const postNewTopicError = createAction('POST_NEW_TOPIC_ERROR', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\nexport const newTopicText = createAction('NEW_TOPIC_TEXT', text => ({\r\n  payload: {\r\n    text\r\n  },\r\n  error: false\r\n}));\r\nexport const newTopicClear = createAction('NEW_TOPIC_CLEAR');\r\nexport const newTopicSubject = createAction('NEW_TOPIC_SUBJECT', text => ({\r\n  payload: {\r\n    text\r\n  },\r\n  error: false\r\n}));\r\nexport const newTopicSection = createAction('NEW_TOPIC_SECTION', section => ({\r\n  payload: {\r\n    section\r\n  },\r\n  error: false\r\n}));\r\nexport const newTopicShowVoting = createAction('SHOW_VOTING', show => ({\r\n  payload: {\r\n    show\r\n  },\r\n  error: false\r\n}));\r\n\r\nexport const shouldPostNewTopic = (state: State): boolean => {\r\n  const newTopic = state.newTopic;\r\n  if (!newTopic) {\r\n    return false\r\n  }\r\n  if (newTopic.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const postNewTopicIfNeeded = (params: postNewTopicParams): any => (dispatch: any, getState: any) => {\r\n  if (shouldPostNewTopic(getState())) {\r\n    return dispatch(postNewTopic(params));\r\n  }\r\n}\r\n\r\nconst postNewTopic = (params: postNewTopicParams) => async (dispatch: any) => {\r\n\r\n  dispatch(postNewTopicStart());\r\n\r\n  let fetchParams: RequestNewTopic = {\r\n    message_text: encodeURIComponent(params.text),\r\n    topic_text: encodeURIComponent(params.subject),\r\n    target_section: String(params.section),\r\n    target_forum: params.forum.toLowerCase(),\r\n    action: 'new',\r\n    rnd: Math.round(Math.random() * 10000000000),\r\n    voting: params.isVoting ? 1 : 0\r\n  };\r\n\r\n  if (params.votingItems)\r\n    for (let i = 0; i < params.votingItems.length; i++) {\r\n      fetchParams[`section${i + 1}`] = params.votingItems[i];\r\n    }\r\n\r\n  await API.postNewTopic(fetchParams);\r\n\r\n  dispatch(postNewTopicComplete());\r\n\r\n  if (params.onSuccess)\r\n    params.onSuccess();\r\n}","//@flow\r\nimport { createReducer } from '@reduxjs/toolkit'\r\n\r\nimport { postNewTopicStart, postNewTopicComplete, postNewTopicError, newTopicText, \r\n  newTopicClear, newTopicSubject, newTopicSection, newTopicShowVoting} from './actions'\r\nimport type { NewTopicAction } from './actions/new_topic'\r\nimport type { ResponseSection } from 'src/api'\r\n\r\nexport type NewTopicState = {\r\n  isFetching: boolean,\r\n  section: ?ResponseSection,\r\n  text: string,\r\n  subject: string,\r\n  forum: string,\r\n  isVoting: boolean,\r\n  error?: ?string\r\n};\r\n\r\nexport const defaultNewTopicState: NewTopicState = {\r\n  isFetching: false,\r\n  section: null,\r\n  text: '',\r\n  subject: '',\r\n  forum: '1C',\r\n  isVoting: false\r\n}\r\n\r\nconst reducer = createReducer(defaultNewTopicState, (builder) => {\r\n  builder\r\n    .addCase(postNewTopicStart, (state) => {\r\n      state.isFetching = true;\r\n      delete state.error;\r\n    })\r\n    .addCase(postNewTopicComplete, (state) => {\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(postNewTopicError, (state, action) => {\r\n      state.isFetching = false;\r\n      state.error = action.payload;\r\n    })\r\n    .addCase(newTopicText, (state, action) => {\r\n      state.text = action.payload.text;\r\n    })    \r\n    .addCase(newTopicClear, (state) => {\r\n      state.text = '';\r\n      state.subject = '';\r\n      state.isVoting = false;\r\n    })    \r\n    .addCase(newTopicSubject, (state, action) => {\r\n      state.subject = action.payload.text;\r\n    })    \r\n    .addCase(newTopicShowVoting, (state, action) => {\r\n      state.isVoting = action.payload.show;\r\n    })   \r\n    .addCase(newTopicSection, (state, action) => {\r\n      state.section = action.payload.section;\r\n      state.forum = action.payload.section == null ? '' : action.payload.section.forum.toLowerCase()\r\n    })   \r\n  })\r\n\r\nconst newTopic = (state: NewTopicState = defaultNewTopicState, action: NewTopicAction): NewTopicState => {\r\n  switch (action.type) {\r\n    case 'POST_NEW_TOPIC_START':\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: undefined\r\n      }\r\n    case 'POST_NEW_TOPIC_COMPLETE':\r\n      return {\r\n        ...state,\r\n        isFetching: false\r\n      }\r\n    case 'POST_NEW_TOPIC_ERROR':\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        error: action.error\r\n      }\r\n    case 'NEW_TOPIC_SECTION':\r\n      return {\r\n        ...state,\r\n        section: action.section,\r\n        forum: action.section == null ? '' : action.section.forum.toLowerCase()\r\n      }\r\n    case 'NEW_TOPIC_TEXT':\r\n      return {\r\n        ...state,\r\n        text: action.text\r\n      }\r\n    case 'NEW_TOPIC_SUBJECT':\r\n      return {\r\n        ...state,\r\n        subject: action.text\r\n      }\r\n    case 'NEW_TOPIC_CLEAR':\r\n      return {\r\n        ...state,\r\n        text: '',\r\n        subject: '',\r\n        isVoting: false\r\n      }\r\n    case 'SHOW_VOTING':\r\n      return {\r\n        ...state,\r\n        isVoting: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer;","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\nimport * as API from 'src/api'\r\nimport type { RequestNewMessage } from 'src/api'\r\n\r\nexport const postNewMessageStart = createAction('POST_NEW_MESSAGE_START');\r\nexport const postNewMessageComplete = createAction('POST_NEW_MESSAGE_COMPLETE');\r\nexport const newMessageText = createAction('NEW_MESSAGE_TEXT', text => ({\r\n  payload: {\r\n    text,\r\n  }\r\n}));\r\nexport const addMessageText = createAction('ADD_MESSAGE_TEXT', text => ({\r\n  payload: {\r\n    text,\r\n  }\r\n}));\r\n\r\nexport type PostNewmessageParams = {\r\n  text: string,\r\n  topicId: string,\r\n  voting_select?: number,\r\n  onSuccess?: () => void\r\n}\r\n\r\nexport const postNewMessage = (params: PostNewmessageParams): any => async (dispatch: any) => {\r\n\r\n  dispatch(postNewMessageStart());\r\n\r\n  let fetchParams: RequestNewMessage = {\r\n    message_text: encodeURIComponent(params.text),\r\n    action: \"new\",\r\n    topic_id: params.topicId,\r\n    rnd: Math.round(Math.random() * 10000000000)\r\n  };\r\n\r\n  if (params.voting_select)\r\n    fetchParams.voting_select = params.voting_select;\r\n\r\n  try {\r\n    await API.postNewMessage(fetchParams);\r\n    await dispatch(postNewMessageComplete());\r\n    if (params.onSuccess)\r\n      params.onSuccess();\r\n\r\n  } catch (err) {\r\n    console.error(\"Failed to post new message: \" + err);\r\n  }\r\n}\r\n","//@flow\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { addMessageText, NewMessageAction, newMessageText, postNewMessageComplete, postNewMessageStart } from './actions'\r\n\r\nexport type NewMessageState = {\r\n  isFetching: boolean;\r\n  text: string\r\n};\r\n\r\nexport const initialState: NewMessageState = {\r\n  isFetching: false,\r\n  text: ''\r\n}\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(postNewMessageStart, (state) => {\r\n      state.isFetching = true;\r\n    })\r\n    .addCase(postNewMessageComplete, (state) => {\r\n      state.isFetching = false;\r\n    })  \r\n    .addCase(newMessageText, (state, action) => {\r\n      state.text = action.payload.text;\r\n    })  \r\n    .addCase(addMessageText, (state, action) => {\r\n      state.text += action.payload.text;\r\n    })            \r\n  })\r\n\r\nexport default reducer;","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nimport * as API from 'src/api/topic'\r\nimport type { ResponseMessage } from 'src/api'\r\n\r\nexport type PreviewTextParams = {\r\n  topicId: string,\r\n  n: number\r\n}\r\n\r\nexport const showPreview = createAction('SHOW_PREVIEW', topicId => ({\r\n  payload: {\r\n    topicId   \r\n  }\r\n}));\r\nexport const closePreview = createAction('CLOSE_PREVIEW', topicId => ({\r\n  payload: {\r\n    topicId   \r\n  }\r\n}));\r\nexport const requestPreviewText = createAction('REQUEST_PREVIEW_TEXT', topicId => ({\r\n  payload: {\r\n    topicId   \r\n  }\r\n}));\r\nexport const recievePreviewText = createAction('RECEIVE_PREVIEW_TEXT', topicId => ({\r\n  payload: {\r\n    topicId,\r\n    message   \r\n  }\r\n}));\r\n\r\nexport const fetchTopicPreviewText = (params: PreviewTextParams): any => async (dispatch: any) => {\r\n\r\n  dispatch(requestPreviewText(params.topicId));\r\n\r\n  const json = await API.getMessage(params.topicId, params.n);\r\n\r\n  if (json.length > 0)\r\n    dispatch(recievePreviewText(params.topicId, json[0]));\r\n}","import { configureStore  } from '@reduxjs/toolkit'\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport logger from 'redux-logger'\r\n\r\nimport topicsList from './topicslist/reducer'\r\nimport topic from './topic/reducer'\r\nimport sections from './sections/reducer'\r\nimport options from './options/reducer'\r\nimport login from './login/reducer'\r\nimport tooltips from './tooltips/reducer'\r\nimport newTopic from './newtopic/reducer'\r\nimport newMessage from './newmessage/reducer'\r\nimport topicPreview from './topic_preview/reducer'\r\n\r\nconst reducer = {\r\n  topicsList,\r\n  topic,\r\n  sections,\r\n  options,\r\n  login,\r\n  tooltips,\r\n  newTopic,\r\n  newMessage,\r\n  topicPreview  \r\n}\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  //middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n  devTools: process.env.NODE_ENV !== 'production'\r\n})\r\n\r\nexport const useAppDispatch = () => useDispatch()\r\n\r\nexport default store","//@flow\r\nimport { createReducer } from '@reduxjs/toolkit'\r\n\r\nimport { showPreview, closePreview, requestPreviewText, recievePreviewText } from './actions'\r\n\r\nexport type TopicPreviewState = {\r\n  items: { [string]: ResponseMessage | null }\r\n};\r\n\r\nexport const defaultTopicPreviewState: TopicPreviewState = {\r\n  items: {}\r\n};\r\n\r\nconst reducer = createReducer(defaultTopicPreviewState, (builder) => {\r\n  builder\r\n    .addCase(showPreview, (state, action) => {\r\n      let previewItem = state[action.topicId];\r\n      if (previewItem === undefined)\r\n        state.items[action.topicId] = {\r\n          n: '0',\r\n          id: action.topicId,\r\n          text: '',\r\n          user: '',\r\n          userId: '',\r\n          utime: '0',\r\n          vote: 0\r\n        };\r\n    })\r\n    .addCase(closePreview, (state, action) => {\r\n      delete state.items[action.topicId];\r\n    })\r\n    .addCase(requestPreviewText, (state, action) => {\r\n\r\n    })\r\n    .addCase(recievePreviewText, (state, action) => {\r\n      let previewItem = state.items[action.topicId];\r\n      if (previewItem === undefined)\r\n        return state;\r\n      else\r\n        state.items[action.topicId] = action.message;\r\n    })\r\n  })    \r\n\r\nexport default reducer;","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Dropdown } from 'react-bootstrap'\r\n\r\nimport { doLogout } from 'src/data/login/actions'\r\nimport { domain } from 'src/api'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype LoggedUserProps = {\r\n    userId: string,\r\n    userName: string    \r\n}\r\n\r\ntype Props = LoggedUserProps & DefaultProps;\r\n\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n  <span\r\n    ref={ref} \r\n    style={{ cursor: \"pointer\" }} \r\n    className='link'\r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n  >\r\n    {children}\r\n  </span>\r\n));\r\n\r\nclass LoggedUser extends Component<Props> {\r\n\r\n    onLogout = (event: any) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const { dispatch } = this.props;\r\n        dispatch(doLogout());  \r\n    }\r\n\r\n    onMenuSelect = (eventKey: any, event: Object): any => {\r\n\r\n        if (eventKey === 'exit') {\r\n           this.onLogout(event);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { userId, userName } = this.props;\r\n        return (\r\n            <div style={{float: \"left\"}}>\r\n                <Dropdown id=\"dropdown-custom-menu\" onSelect={this.onMenuSelect}>\r\n                    <span>Привет, </span>\r\n                    <Dropdown.Toggle as={CustomToggle} bsRole=\"toggle\">{userName} ▼</Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item eventKey=\"profile\" href={`${domain}/users.php?id=${userId}`}>Профиль</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"myTopics\" href={`${window.hash}/index.php?user_id=${userId}`}>Мои темы</Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"options\" href={`${window.hash}/options.php`}>Настройки</Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"exit\">Выход</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ( connect()(LoggedUser): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FormControl, Button } from 'react-bootstrap'\r\n\r\nimport { doLoginIfNeeded } from 'src/data/login/actions'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { LoginState } from 'src/data/login/reducer'\r\nimport type { State } from 'src/reducers'\r\n\r\ntype Props = LoginState & DefaultProps;\r\n\r\nclass LoginForm extends Component<Props> {\r\n\r\n    username: any;\r\n    password: any;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.username = React.createRef();  \r\n        this.password = React.createRef();  \r\n    }\r\n        \r\n    onLogin = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const { dispatch } = this.props;\r\n\r\n        const params = {\r\n            username: this.username.current.value,\r\n            password: this.password.current.value\r\n        }\r\n        dispatch(doLoginIfNeeded(params));  \r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <form name=\"enterform\" className=\"flex-row\" style={{flexWrap: \"wrap\"}}>\r\n                    <FormControl \r\n                        type=\"text\" \r\n                        placeholder=\"Имя\" \r\n                        ref={this.username} \r\n                        size=\"sm\" \r\n                        style={{marginRight: \"5px\", flex: \"0 1 300px\"}}\r\n                    />\r\n                    <FormControl \r\n                        type=\"password\" \r\n                        placeholder=\"Пароль\" \r\n                        maxLength=\"20\" \r\n                        autoComplete=\"off\" \r\n                        ref={this.password}\r\n                        size=\"sm\" \r\n                        style={{marginRight: \"5px\", flex: \"0 1 300px\"}}\r\n                    />\r\n                    <Button \r\n                        size=\"sm\"\r\n                        variant=\"light\" \r\n                        onClick={this.onLogin}\r\n                    >Войти</Button>\r\n                </form>\r\n                <p style={{margin: \"0px\"}}>Войти можно на сайте <a href=\"https://forum.mista.ru/\">forum.mista.ru</a></p>\r\n                <a rel=\"nofollow\" href=\"https://forum.mista.ru/user_registration.php\">Регистрация</a>\r\n                <span style={{ margin: \"5px\" }}>|</span>\r\n                <a rel=\"nofollow\" href=\"https://forum.mista.ru/remember_password.php\">Забыли пароль?</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): LoginState => {\r\n    return state.login;\r\n}\r\n\r\nexport default ( connect(mapStateToProps)(LoginForm): any );","//@flow\r\nimport React from 'react'\r\n\r\nimport './error.css'\r\n\r\nconst ErrorElem = ({ text }): any => {\r\n  if (!text)\r\n    return null;\r\n\r\n  return (\r\n    <div className=\"error\" dangerouslySetInnerHTML={{ __html: text }}></div>\r\n  )\r\n}\r\n\r\nexport default ErrorElem;","//@flow\r\nimport React, { Fragment, Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport LoggedUser from './logged_user'\r\nimport LoginForm from './login_form'\r\nimport ErrorElem from '../common/error'\r\n\r\nimport { checkLoginIfNeeded } from 'src/data/login/actions'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { LoginState } from 'src/data/login/reducer'\r\n\r\ntype Props = LoginState & DefaultProps;\r\n\r\nclass Login extends Component<Props> {\r\n\r\n    componentDidMount() {\r\n        const { dispatch } = this.props;\r\n        dispatch(checkLoginIfNeeded());        \r\n    }\r\n\r\n    render() {\r\n\r\n        const { logged, userid, username, error, dispatch } = this.props;\r\n\r\n        let elem;\r\n        if (logged === true) \r\n            elem = <LoggedUser dispatch={dispatch} userId={userid} userName={username} />\r\n        else if (logged === false)\r\n            elem = <LoginForm /> \r\n        else \r\n            elem = null;   \r\n\r\n        return (\r\n            <Fragment>\r\n                {elem}\r\n                {error && <ErrorElem text={error} />}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): LoginState => {\r\n    \r\n    return state.login;\r\n}\r\n\r\nexport default ( connect(mapStateToProps)(Login): any );","//@flow\r\nimport React, { Component, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nimport { getSectionsIfNeeded } from 'src/data/sections/actions'\r\n\r\nimport type { ResponseSection, ResponseSections } from 'src/api'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { State } from 'src/reducers'\r\nimport { useAppDispatch } from 'src/data/store'\r\n\r\ntype SectionSelectProps = {\r\n  defaultValue: string,\r\n  selected: string,\r\n  className: string,\r\n  id: string,\r\n  style?: {},\r\n  size: ?string,\r\n  onChange: (e: any, section: ResponseSection | null) => void\r\n}\r\n\r\ntype StateProps = {\r\n  items: ResponseSections,\r\n  tree: {}\r\n}\r\n\r\ntype Props = SectionSelectProps & StateProps & DefaultProps;\r\n\r\nconst Sections = (props) => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getSectionsIfNeeded());\r\n  }, [dispatch]);\r\n\r\n  const onSelect: (e: SyntheticEvent<HTMLSelectElement>) => void = (e: SyntheticEvent<HTMLSelectElement>) => {\r\n\r\n    const { items, onChange } = props;\r\n\r\n    if (onChange) {\r\n      const code = e.currentTarget.value;\r\n      const arr = items.filter(val => val.code === code);\r\n      if (arr.length > 0)\r\n        onChange(e, arr[0]);\r\n      else\r\n        onChange(e, null);\r\n    }\r\n  }\r\n\r\n  const { id, tree, defaultValue, selected, style, size } = props;\r\n\r\n  let sectionsElem = [];\r\n  for (let forum in tree) {\r\n\r\n    let group =\r\n      <optgroup key={forum} label={forum}>\r\n        {tree[forum].map((item, i) => (\r\n          <option key={item.id} value={item.code}>\r\n            {item.name}\r\n          </option>\r\n        ))}\r\n      </optgroup>\r\n\r\n    sectionsElem.push(group);\r\n  }\r\n\r\n  return (\r\n    <Form.Control as=\"select\"\r\n      onChange={onSelect}\r\n      value={selected}\r\n      style={style}\r\n      className='input'\r\n      size={size}\r\n      id={id}\r\n    >\r\n      <option value=\"\">{defaultValue}</option>\r\n      {sectionsElem}\r\n    </Form.Control>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  const { items, tree } = state.sections;\r\n\r\n  return {\r\n    items,\r\n    tree\r\n  }\r\n}\r\n\r\nexport { Sections };\r\nexport default connect(mapStateToProps)(Sections);","//@flow\r\nimport React, { Component, useEffect } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport queryString from 'query-string'\r\n\r\nimport Login from '../login'\r\nimport Sections from './sections'\r\nimport { getSectionsIfNeeded } from 'src/data/sections/actions'\r\n\r\nconst Header = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate()\r\n  const location = useLocation();\r\n  const params = queryString.parse(location.search);\r\n\r\n  useEffect(() => {\r\n    dispatch(getSectionsIfNeeded());\r\n  }, [dispatch]);  \r\n\r\n  const onSectionChange = (e, value) => {\r\n    if (value)\r\n      navigate(`/index.php?section=${value.code}`);\r\n    else\r\n      navigate(`/`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div className=\"header-left\">\r\n        <Login />\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <Sections\r\n          defaultValue=\"--Все секции--\"\r\n          selected={params.section || \"\"}\r\n          onChange={onSectionChange}\r\n          size=\"sm\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default connect()(Header);","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { getMaxPage } from 'src/utils'\r\n\r\n\r\nconst Pages = (props) => {\r\n\r\n    const { answ, topicId } = props;\r\n\r\n    let pages = [];\r\n    if (answ > 100) {\r\n        let maxPage = getMaxPage(answ);\r\n        for (let i = 1; i <= maxPage; i++) {\r\n            let href = `/topic.php?id=${topicId}&page=${i}`;\r\n            let text;\r\n            if (i > 3 && i < maxPage)\r\n                text = '•';\r\n            else\r\n                text = i;\r\n            pages.push(<Link key={i}  className=\"agh\" style={{ margin: \"3px\" }} to={href}>{text}</Link>);\r\n        }\r\n    }\r\n\r\n    if (answ > 20) {\r\n        let href = `/topic.php?id=${topicId}&page=last20#F`;\r\n        pages.push(<Link key=\"last20\" className=\"agh\" style={{ margin: \"3px\" }} to={href}>»</Link>);\r\n    }\r\n\r\n    return (\r\n        <span className=\"topic-pages\">\r\n            {pages}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Pages;","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport type { ResponseTopicsListItem } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\n\r\nimport type { LoginState } from 'src/data/login/reducer'\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { TopicPreviewState } from 'src/data/topic_preview/reducer'\r\n\r\nimport Pages from './pages';\r\n\r\ntype TopicNameCellProps = {\r\n    data: ResponseTopicsListItem,\r\n    preview: ?number\r\n};\r\n\r\ntype StateProps = {\r\n    login: LoginState,\r\n    topicPreview: TopicPreviewState\r\n};\r\n\r\ntype Props = TopicNameCellProps & StateProps & DefaultProps;\r\n\r\nclass TopicNameCell extends Component<Props> {\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { data, login } = this.props;\r\n\r\n        let href = `/topic.php?id=${data.id}`;\r\n        let classes = classNames('agb', 'mr5', {\r\n            'bold': data.answ >= 100,\r\n            'mytopics': data.user0 === login.username\r\n        });\r\n\r\n        let isVoting;\r\n        if (data.is_voting === 1) {\r\n            isVoting = <span className=\"agh separator\">[±]</span>\r\n        }\r\n        \r\n        let sectionHref = `/index.php?section=${data.sect2}`;\r\n        let section;\r\n\r\n        if (data.sect1) {\r\n            section = (\r\n            <span className=\"topic-section\">\r\n                <span className=\"agh\" style={{margin: \"0px 5px\"}}>/</span>\r\n                <Link key=\"1\" rel=\"nofollow\" className=\"agh\" to={sectionHref} >{data.sect1}</Link>\r\n            </span>    \r\n            )\r\n        }\r\n\r\n        let closed;\r\n        let down;\r\n        let text = data.text;\r\n        if (data.closed)\r\n            closed = <span className=\"agh\">Ø</span>\r\n\r\n        if (data.down === 1)\r\n            down = <span className=\"agh\">↓</span>\r\n\r\n        if (data.sect2 === 'job' && text.substr(0, 3) !== 'JOB')\r\n            text = 'JOB: ' + text;\r\n\r\n        else if (data.forum === 'life' && text.substr(0, 3) !== 'OFF')\r\n            text = 'OFF: ' + text;\r\n\r\n        else if (data.sect2 === 'v7' && text.substr(0, 2) !== 'v7')\r\n            text = 'v7: ' + text;\r\n\r\n        return (\r\n            <div className=\"cell-title\">\r\n                <Link to={href} className={classes} dangerouslySetInnerHTML={{ __html: text }} style={{overflowWrap: \"anywhere\"}}></Link>\r\n                {isVoting}\r\n                <Pages answ={data.answ} topicId={data.id} />\r\n                {closed}\r\n                {down}\r\n                {section}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n    return {\r\n        login: state.login,\r\n        topicPreview: state.topicPreview\r\n    }\r\n}\r\n\r\nexport default ( connect(mapStateToProps)(TopicNameCell): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { showTooltip } from '../../data/tooltips/actions'\r\n\r\nimport { getMaxPage, childrenToText } from 'src/utils';\r\nimport { getTopicInfo } from 'src/api/topic'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { ResponseInfo, ResponseMessages } from 'src/api'\r\n\r\ntype LinkToPostProps = {\r\n  topicId: string,\r\n  number: number,\r\n  isPreview: boolean,\r\n  style: {}\r\n}\r\n\r\ntype StateProps = {\r\n  info: ResponseInfo,\r\n  items: ResponseMessages,\r\n  tooltipDelay: string\r\n}\r\n\r\ntype Props = LinkToPostProps & StateProps & DefaultProps;\r\n\r\nclass LinkToPost extends Component<Props, { text: string }> {\r\n\r\n  timer;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { children, number } = this.props;\r\n    if (children)\r\n      this.state = { text: childrenToText(children).join('') };\r\n    else\r\n      this.state = { text: String(number) };\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    if (!props.children) {\r\n      this.setState({ text: String(props.number) });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    if (this.state.text.startsWith(\"http\")) {\r\n\r\n      const { topicId } = this.props;\r\n      getTopicInfo({ id: topicId })\r\n        .then(response => {\r\n          this.setState({\r\n            text: response.text\r\n          })\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  onMouseOver = (event) => {\r\n    event.persist();\r\n    const { tooltipDelay } = this.props;\r\n    this.timer = setTimeout(() => this.showToolTip(event), +tooltipDelay);\r\n  }\r\n\r\n  onClick = (event) => {\r\n    event.stopPropagation();\r\n    clearTimeout(this.timer);\r\n    this.showToolTip(event);\r\n  }\r\n\r\n  onMouseOut = (event) => {\r\n    clearTimeout(this.timer);\r\n  }\r\n\r\n  showToolTip = (e) => {\r\n    const { topicId, number, dispatch, isPreview } = this.props;\r\n\r\n    const coords = {\r\n      x: e.pageX,\r\n      y: e.pageY - 50 // remove navbar margin-top\r\n    }\r\n\r\n    const keys = {\r\n      type: isPreview ? 'TOPIC_PREVIEW' : 'TOPIC',\r\n      topicId,\r\n      number\r\n    }\r\n\r\n    dispatch(showTooltip(\r\n      keys,\r\n      coords\r\n    ));\r\n  }\r\n\r\n  render() {\r\n\r\n    const { topicId, number, style, info } = this.props;\r\n    const page = getMaxPage(number);\r\n\r\n    let pageParam = '';\r\n    if (page > 1)\r\n      pageParam = `&page=${page}`;\r\n\r\n    let a;\r\n    if (info && topicId === info.id || !isNaN(this.state.text))\r\n      a = (\r\n        <span\r\n          onMouseOver={this.onMouseOver}\r\n          onMouseOut={this.onMouseOut}\r\n          onClick={this.onClick}\r\n          className='link'\r\n          style={{ ...style }}\r\n        >{this.state.text}</span>\r\n      )\r\n    else\r\n      a = (\r\n        <span>\r\n          <a href={`${window.hash}/topic.php?id=${topicId}${pageParam}#${number}`}\r\n            style={{ ...style }}\r\n          >{this.state.text}</a>{' '}\r\n                    (<span onMouseOver={this.onMouseOver}\r\n            onMouseOut={this.onMouseOut}\r\n            onClick={this.onClick}\r\n            className='link'\r\n          >{number}</span>)\r\n        </span>\r\n      )\r\n\r\n    return a;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  const {\r\n    items, info\r\n  } = state.topic;\r\n\r\n  return {\r\n    items,\r\n    info,\r\n    tooltipDelay: state.options.items['tooltipDelay']\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(LinkToPost): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport { useAppDispatch } from 'src/data/store';\r\nimport { togglePreview } from 'src/data/topicslist/actions';\r\n\r\ntype PreviewLinkProps = {\r\n  topicId: string,\r\n  expanded: boolean\r\n};\r\n\r\nconst PreviewLink = ({ topicId, expanded }) => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onClick = () => {\r\n    dispatch(togglePreview(topicId));\r\n  }\r\n\r\n  const text = expanded ? '-' : '+';\r\n  return (\r\n    <div className=\"cell-preview-link\" onClick={onClick}>\r\n      <span>{text}</span>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default connect()(PreviewLink);","//@flow\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport dateFormat from 'dateformat'\r\n\r\nimport TopicNameCell from './topic_name_cell';\r\nimport LinkToPost from 'src/components/extensions/link_to_post'\r\nimport PreviewLink from './preview_link'\r\n\r\nimport { today } from 'src/utils'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { TopicsListItem } from 'src/data/topicslist/reducer'\r\nimport type { LoginState } from 'src/data/login/reducer'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype RowProps = {\r\n  columns: any,\r\n  data: TopicsListItem\r\n}\r\n\r\ntype StateProps = {\r\n  login: LoginState,\r\n  showTooltipOnTopicsList: string\r\n}\r\n\r\ntype Props = RowProps & StateProps & DefaultProps;\r\n\r\nconst Row = (props: Props) => {\r\n\r\n  const { data, showTooltipOnTopicsList } = props;\r\n  let time = new Date(+data.utime * 1000);\r\n  if (today(time)) {\r\n    time = dateFormat(time, 'HH:MM')\r\n  } else {\r\n    time = dateFormat(time, 'dd.mm.yy');\r\n  }\r\n  return (\r\n    <div className=\"topics-list-row\">\r\n      {/*{cells}*/}\r\n      <div className=\"cell-forum\">\r\n        {data.forum}\r\n      </div>\r\n      <div className=\"cell-section\">\r\n        {data.sect1}\r\n      </div>\r\n      <div className=\"cell-answ\">\r\n        <i className=\"fa fa-comments-o\" aria-hidden=\"true\" style={{marginRight: \"3px\"}}></i>\r\n        {showTooltipOnTopicsList === 'true' ?\r\n          <LinkToPost topicId={data.id} number={data.answ} style={{ color: \"inherit\" }} isPreview />\r\n          :\r\n          data.answ\r\n        }\r\n      </div>\r\n      <PreviewLink topicId={data.id} expanded={data.showPreview} />\r\n      <TopicNameCell data={data} />\r\n      <div className=\"cell-author\">\r\n        <i aria-hidden=\"true\" className=\"fa fa-user-circle\" style={{marginRight: \"3px\"}}></i>\r\n        {data.user0}\r\n      </div>\r\n      <div className=\"cell-lastuser\">\r\n        <div style={{ display: \"flex\" }}>\r\n          <span className=\"cell-lastuser-time\">{time}</span>\r\n          <span className=\"cell-lastuser-user\">{data.user}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"cell-last20\">\r\n        <Link to={`/topic.php?id=${String(data.id)}&page=last20#F`} style={{ color: \"inherit\", display: \"block\", width: \"100%\", textAlign: \"center\" }}>{'>'}</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    login: state.login,\r\n    showTooltipOnTopicsList: state.options.items.showTooltipOnTopicsList\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(Row): any );","//@flow\r\nimport React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\n\r\nimport { paramsToString } from 'src/api'\r\nimport './pages.css'\r\n\r\ntype Props = {\r\n  locationParams: { page?: string },\r\n  baseUrl: string,\r\n  maxPage: number,\r\n  last20?: boolean\r\n}\r\n\r\nconst Pages = (props: Props): any => {\r\n\r\n  const { locationParams, baseUrl, maxPage, last20 } = props;\r\n  let currentPage;\r\n  if (!locationParams.page)\r\n    currentPage = 1;\r\n  else if (locationParams.page === \"last20\")\r\n    currentPage = \"last20\";\r\n  else\r\n    currentPage = parseInt(locationParams.page, 10) || 1;\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= maxPage; i++) {\r\n    let params = { ...locationParams, page: i };\r\n    let href = `${window.hash}/${baseUrl}` + paramsToString('?', params);\r\n\r\n    pages.push(<Pagination.Item active={currentPage === i} key={i} href={href}>{i}</Pagination.Item>);\r\n  }\r\n\r\n  if (last20 === true) {\r\n    let params = { ...locationParams, page: \"last20\" };\r\n    let href = `${window.hash}/${baseUrl}` + paramsToString('?', params);\r\n    pages.push(<Pagination.Item active={currentPage === \"last20\"} key=\"last20\" href={href}>»</Pagination.Item>);\r\n  }\r\n\r\n  return (\r\n    <Pagination style={{ margin: \"0px\" }}>\r\n      {pages}\r\n    </Pagination>\r\n  )\r\n\r\n}\r\n\r\nexport default Pages;","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FormControl, Button, ButtonGroup, Form } from 'react-bootstrap'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\n\r\nimport './text_editor.css'\r\n\r\ntype TextEditorProps = {\r\n  placeholder: string,\r\n  showVoting: boolean,\r\n  isVoting: boolean,\r\n  text: string,\r\n  isFetching: boolean,\r\n  formName: string,\r\n  onChange?: (e: any, text: string) => void,\r\n}\r\n\r\ntype Props = TextEditorProps & DefaultProps;\r\n\r\nclass TextEditor extends Component<Props> {\r\n\r\n  textArea;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.textArea = React.createRef();\r\n  }\r\n\r\n  onButtonCode1c = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    var openTag = '[1C]\\n';\r\n    var closeTag = '\\n[/1C]';\r\n\r\n    var textArea: any = this.textArea.current;\r\n\r\n    var start = textArea.selectionStart;\r\n    var end = textArea.selectionEnd;\r\n\r\n    var oldText = textArea.value;\r\n    var len = oldText.length;\r\n    var selectedText = oldText.substring(start, end);\r\n    var replacement = openTag + selectedText + closeTag;\r\n    var newText = oldText.substring(0, start) + replacement + oldText.substring(end, len);\r\n\r\n    const { dispatch, formName } = this.props;\r\n    dispatch({\r\n      type: formName + '_TEXT',\r\n      payload: {\r\n        text: newText\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  onVotingChange = (e: SyntheticEvent<HTMLInputElement>) => {\r\n    const { dispatch } = this.props;\r\n    dispatch({\r\n      type: 'SHOW_VOTING',\r\n      payload: {\r\n        show: e.currentTarget.checked\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange = (e: SyntheticEvent<HTMLTextAreaElement>) => {\r\n    const { dispatch, formName } = this.props;\r\n    dispatch({\r\n      type: formName + '_TEXT',\r\n      payload: {\r\n        text: e.currentTarget.value\r\n      }  \r\n    })\r\n  }\r\n\r\n  onKeyPress = (e: SyntheticKeyboardEvent<HTMLTextAreaElement>) => {\r\n\r\n    if (e.key === 'Enter' && e.ctrlKey) {\r\n      let parent = e.currentTarget.parentElement;\r\n      while (parent && parent.tagName.toUpperCase() !== \"FORM\") {\r\n        parent = parent.parentElement;\r\n      }\r\n      if (parent)\r\n        parent.dispatchEvent(new Event(\"submit\", { cancelable: true, bubbles: true }));\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { placeholder, showVoting, isVoting, isFetching, text } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <FormControl\r\n          as=\"textarea\"\r\n          placeholder={placeholder}\r\n          cols=\"70\" rows=\"3\"\r\n          value={text}\r\n          onChange={this.onChange}\r\n          onKeyPress={this.onKeyPress}\r\n          ref={this.textArea}\r\n          className=\"text-editor input\"\r\n        />\r\n        <div className=\"flex-row\">\r\n          <ButtonGroup>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"light\"\r\n              onClick={this.onButtonCode1c}\r\n              style={{ marginRight: \"5px\" }}\r\n              className='button'\r\n            >Код 1С</Button>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"light\"\r\n              disabled={isFetching}\r\n              type=\"submit\"\r\n              className='button'\r\n            >\r\n              {isFetching ? 'Отправляется' : 'Отправить'}\r\n            </Button>\r\n          </ButtonGroup>\r\n          {showVoting &&\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              checked={isVoting}\r\n              onChange={this.onVotingChange}\r\n              label=\"Голосование\"\r\n              style={{ margin: \"auto 0px auto auto\" }} />\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default (connect()(TextEditor): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FormGroup } from 'react-bootstrap'\r\n\r\nimport type { ResponseSection } from 'src/api'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { State } from 'src/reducers'\r\nimport type { SectionsState } from 'src/data/sections/reducer'\r\nimport type { NewTopicState } from 'src/data/new_topic/reducer'\r\n\r\nimport { newTopicClear, newTopicSection, newTopicSubject, postNewTopicError, postNewTopicIfNeeded } from 'src/data/newtopic/actions'\r\nimport type { NewTopicAction, postNewTopicParams } from 'src/data/newtopic/actions'\r\n\r\nimport Sections from './sections'\r\nimport TextEditor from '../common/text_editor'\r\nimport ErrorElem from '../common/error'\r\n\r\nimport './new_topic.css'\r\n\r\ntype StateProps = {\r\n  sections: SectionsState,\r\n  newTopic: NewTopicState,\r\n}\r\n\r\ntype NewTopicProps = {\r\n  onSubmitSuccess?: () => void\r\n};\r\n\r\ntype Props = NewTopicProps & StateProps & DefaultProps;\r\n\r\nclass NewTopic extends Component<Props> {\r\n\r\n  currentSection: ?ResponseSection;\r\n\r\n  onSectionChange = (e: any, section: ResponseSection) => {\r\n    const { dispatch } = this.props;\r\n    this.currentSection = section;\r\n    dispatch(newTopicSection(section));\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n    const { dispatch, newTopic } = this.props;\r\n\r\n    let action: NewTopicAction;\r\n    if (!this.currentSection) {\r\n      dispatch(postNewTopicError('Не выбрана секция'));\r\n      return;\r\n    }\r\n\r\n    let subject = newTopic.subject;\r\n    if (!subject) {\r\n      dispatch(postNewTopicError('Не указана тема'));\r\n      return;\r\n    }\r\n\r\n    if (!newTopic.text) {\r\n      dispatch(postNewTopicError('Не указано сообщение'));\r\n      return;\r\n\r\n    }\r\n\r\n    let params: postNewTopicParams = {\r\n      subject,\r\n      text: newTopic.text,\r\n      section: this.currentSection.id,\r\n      forum: this.currentSection.forum,\r\n      isVoting: newTopic.isVoting,\r\n      votingItems: [],\r\n      onSuccess: this.onSubmitSuccess\r\n    };\r\n\r\n    if (newTopic.isVoting) {\r\n      params.votingItems = [];\r\n      for (let i = 1; i <= 10; i++) {\r\n        let val = this.refs[`vote${i}`].value;\r\n        if (val) {\r\n          params.votingItems.push(val);\r\n        }\r\n      }\r\n    }\r\n\r\n    dispatch(postNewTopicIfNeeded(params));\r\n  }\r\n\r\n  onSubjectChange = (e) => {\r\n\r\n    const { dispatch } = this.props;\r\n    dispatch(newTopicSubject(e.target.value));\r\n\r\n  }\r\n\r\n  onSubmitSuccess = () => {\r\n\r\n    const { dispatch } = this.props;\r\n    dispatch(newTopicClear());\r\n\r\n    if (this.props.onSubmitSuccess) {\r\n      this.props.onSubmitSuccess();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { sections, newTopic } = this.props;\r\n\r\n    let groupsElem = [];\r\n    for (let forum in sections.tree) {\r\n      groupsElem.push(<option key={forum} value={forum.toLowerCase()}>{forum}</option>);\r\n    }\r\n\r\n    let votingOptions = [];\r\n\r\n    if (newTopic.isVoting) {\r\n      votingOptions.push(<div key=\"p\">Варианты:</div>);\r\n      for (let i = 1; i <= 10; i++) {\r\n        votingOptions.push(\r\n          <InputGroup key={i} size=\"sm\" style={{ marginBottom: \"3px\", width: \"100%\" }}>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text\r\n                style={{ width: \"40px\" }} className='input'>\r\n                {`${i}.`}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"text\"\r\n              maxLength=\"50\"\r\n              ref={`vote${i}`}\r\n              className='input'\r\n            />\r\n          </InputGroup>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <form className=\"new-topic-container\" onSubmit={this.onSubmit}>\r\n        <div id=\"newtopic_form\" className=\"new-topic-text\">\r\n          <div><b>Новая тема:</b></div>\r\n          {newTopic.error && <ErrorElem text={newTopic.error} />}\r\n          <div className=\"flex-row\" style={{ marginBottom: \"3px\" }}>\r\n            <Form.Control as=\"select\"\r\n              size=\"sm\"\r\n              readOnly={true}\r\n              value={newTopic.forum}\r\n              style={{ flex: \"0 1 90px\" }}\r\n              className='input'\r\n            >\r\n              {groupsElem}\r\n            </Form.Control>\r\n            <Sections\r\n              defaultValue=\"Секция\"\r\n              id=\"target_section\"\r\n              size=\"sm\"\r\n              style={{ flex: \"1 1 auto\" }}\r\n              onChange={this.onSectionChange}\r\n            />\r\n          </div>\r\n          <Form.Control\r\n            type=\"text\"\r\n            size=\"sm\"\r\n            value={newTopic.subject}\r\n            onChange={this.onSubjectChange}\r\n            style={{ marginBottom: \"3px\" }}\r\n            className='input'\r\n            placeholder=\"Тема\"\r\n            maxLength=\"90\"\r\n          />\r\n          <TextEditor\r\n            placeholder=\"Сообщение\"\r\n            showVoting={true}\r\n            isVoting={newTopic.isVoting}\r\n            text={newTopic.text}\r\n            isFetching={newTopic.isFetching}\r\n            formName=\"NEW_TOPIC\"\r\n          />\r\n        </div>\r\n        <FormGroup className=\"new-topic-voting\">\r\n          {votingOptions}\r\n        </FormGroup>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    sections: state.sections,\r\n    newTopic: state.newTopic\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(NewTopic): any );","\r\nfunction highlight(text) {\r\n\r\n  const keywords = new Set(\r\n    \"|if|если|then|тогда|elsif|иначеесли|else|иначе|endif|конецесли|do|цикл|for|для|to|по|each|каждого|in|из|while|пока|enddo|конеццикла|procedure|процедура|endprocedure|конецпроцедуры|function|функция|endfunction|конецфункции|var|перем|export|экспорт|goto|перейти|and|и|or|или|not|не|val|знач|break|прервать|continue|продолжить|return|возврат|try|попытка|except|исключение|endtry|конецпопытки|raise|вызватьисключение|false|ложь|true|истина|undefined|неопределено|null|new|новый|execute|выполнить|\"\r\n      .split('|')\r\n  );\r\n\r\n  const Спецсиволы = new Set(\"():;.,=+-*<>?[]%/\".split(''));\r\n  const НачалоТега = \"<span class=\";\r\n  const КонецТега = \"</span>\";\r\n\r\n  const мЦветФона = \"bg>\";\r\n  const мЦветЧисла = \"num>\";\r\n  const мЦветСтроки = \"str>\";\r\n  //const мЦветПараметра = \"par>\";\r\n  const мЦветКомментария = \"com>\";\r\n  const мЦветСпецСимвола = \"sp>\";\r\n  const мЦветПрепроцессора = \"pr>\";\r\n  const мЦветКлючевогоСлова1 = \"key>\";\r\n\r\n\r\n  let СтрокаРезультат;\r\n  let УстановленЦвет;\r\n  let ПоследнийЦвет;\r\n\r\n  let ВСтроке = false;\r\n  let Токен = \"\";\r\n\r\n  function ПустаяСтрока(Строка) {\r\n    return Строка.trim() === '';\r\n  }\r\n\r\n  function Сред(Строка, Нач, Длина) {\r\n    return Строка.substr(Нач - 1, Длина);\r\n  }\r\n\r\n  function Прав(Строка, Длина) {\r\n    return Строка.substr(-Длина);\r\n  }\r\n\r\n  function isKeyword(token) {\r\n    return keywords.has(token.toLowerCase().trim());\r\n  }\r\n\r\n  function ДобавитьЧастьСтроки1С(Часть, Цвет) {\r\n\r\n    if (Часть === \" \" || ПоследнийЦвет === Цвет) {\r\n      СтрокаРезультат = СтрокаРезультат + Часть;\r\n    } else {\r\n      if (УстановленЦвет) {\r\n        СтрокаРезультат = СтрокаРезультат + КонецТега;\r\n        УстановленЦвет = false;\r\n      };\r\n\r\n      СтрокаРезультат = СтрокаРезультат + НачалоТега + Цвет + Часть;\r\n      УстановленЦвет = true;\r\n      ПоследнийЦвет = Цвет;\r\n    };\r\n  }\r\n\r\n  function РазукраситьСтроку(СтрокаКода) {\r\n\r\n    //  https://infostart.ru/profile/34707/public/\r\n    let ВСтрокеСкобка = false;\r\n    let ВСтрокеТильда = false;\r\n    let НачалоСтроки = 1;\r\n    let ТокенДоТочки = true;\r\n    // Заменяем 8 символьную табуляцию на 4 символьную пробелами\r\n\r\n    // Последовательно перебираются все символы строки кода\r\n    let Поз = 1;\r\n    for (Поз = 1; Поз <= СтрокаКода.length; Поз++) {\r\n\r\n      let ТекущийСимвол = СтрокаКода.charAt(Поз - 1);\r\n      if (ВСтроке) {\r\n\r\n        // Операции встрече символа \"кавычка\"\r\n        if (ТекущийСимвол === '\"') {\r\n          // Нашли парную кавычку - окрашиваем как строку\r\n          ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\r\n          ВСтроке = false;\r\n          Токен = \"\";\r\n          ТокенДоТочки = true;\r\n        } else {\r\n          Токен = Токен + ТекущийСимвол;\r\n        };\r\n\r\n      } else if (ВСтрокеСкобка) {\r\n\r\n        // Операции встрече символа \"кавычка\" литерал\r\n        if (ТекущийСимвол === \"'\") {\r\n          // Нашли парную скобку - окрашиваем как комментарий\r\n          ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\r\n          ВСтрокеСкобка = false;\r\n          Токен = \"\";\r\n          ТокенДоТочки = true;\r\n        } else {\r\n          Токен = Токен + ТекущийСимвол;\r\n        };\r\n\r\n      } else if (ТекущийСимвол === \" \") {\r\n        // Операции при встрече символа табуляции или пробела\r\n        if (!ПустаяСтрока(Токен)) {\r\n          // Пробел после токена, значит\r\n          // токен - ключевое слово...\r\n          if (ВСтрокеТильда) {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветСтроки);\r\n            ВСтрокеТильда = false;\r\n\r\n          } else if (isKeyword(Токен.trim())) {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветКлючевогоСлова1);\r\n\r\n          } else if (!isNaN(parseInt(Токен, 10))) {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветЧисла);\r\n\r\n          } else {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветФона);\r\n          };\r\n          Токен = \"\";\r\n        } else {\r\n          СтрокаРезультат = СтрокаРезультат + \" \";\r\n        };\r\n        ТокенДоТочки = true;\r\n\r\n      } else if (Спецсиволы.has(ТекущийСимвол)) {\r\n\r\n        // Встретился один из специальных символов\r\n        if (!ПустаяСтрока(Токен)) {\r\n          // Чтобы избежать окраски метода объекта с совпадающим именем\r\n          // с одним из ключевых слов, проверяем текущий символ на \".\"\r\n          if (ВСтрокеТильда) {\r\n\r\n            ДобавитьЧастьСтроки1С(Токен, мЦветСтроки);\r\n            ВСтрокеТильда = false;\r\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\r\n\r\n          } else if (ТокенДоТочки && isKeyword(Токен)) {\r\n            ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\r\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\r\n\r\n          } else {\r\n            // Не ключевое слово - значит число\r\n            if (!isNaN(parseInt(Токен, 10))) {\r\n              ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\r\n\r\n            } else {\r\n              ДобавитьЧастьСтроки1С(Токен, мЦветФона);\r\n            };\r\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\r\n          };\r\n          Токен = \"\";\r\n        };\r\n        // Один из специальных символов\r\n        if (ТекущийСимвол === \".\" && ПоследнийЦвет === мЦветЧисла) {\r\n          // Продолжение числа\r\n          ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветЧисла);\r\n          continue;\r\n\r\n        } else if (ТекущийСимвол === \"=\" && Сред(СтрокаКода, Поз - 1, 1) === \"<\") {\r\n          // Знак \"меньше или равно\" - вторая ошибка движка Инфостарт\r\n          ПоследнийЦвет = undefined;\r\n\r\n        } else if (ТекущийСимвол === \"/\" && Сред(СтрокаКода, Поз + 1, 1) === \"/\") {\r\n          // Проверяется на комментарий\r\n          ДобавитьЧастьСтроки1С(Прав(СтрокаКода, СтрокаКода.length - Поз + 1), мЦветКомментария);\r\n          return;\r\n        };\r\n        ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветСпецСимвола);\r\n\r\n      } else if (ТекущийСимвол === '\"' || ТекущийСимвол === \"|\") {\r\n\r\n        // Операции встрече символа \"кавычка\"\r\n        // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\r\n        if (ПустаяСтрока(Токен)) {\r\n          НачалоСтроки = Поз;\r\n          ВСтроке = true;\r\n        } else {\r\n          // Ошибка синтаксиса\r\n          ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\r\n          Токен = \"\";\r\n        };\r\n        ТокенДоТочки = true;\r\n\r\n      } else if (ТекущийСимвол === \"'\") {\r\n\r\n        // Операции встрече символа \"кавычка\" литерал\r\n        // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\r\n        if (ПустаяСтрока(Токен)) {\r\n          НачалоСтроки = Поз;\r\n          ВСтрокеСкобка = true;\r\n        } else {\r\n          // Ошибка синтаксиса\r\n          ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\r\n          Токен = \"\";\r\n        };\r\n        ТокенДоТочки = true;\r\n\r\n      } else if (ТекущийСимвол === \"#\" || (ТекущийСимвол === \"&\" && ПустаяСтрока(СтрокаРезультат))) {\r\n\r\n        // Встретился символ препроцессора\r\n        ДобавитьЧастьСтроки1С(Прав(СтрокаКода, СтрокаКода.length - Поз + 1), мЦветПрепроцессора);\r\n        Поз = СтрокаКода.length;\r\n        break;\r\n\r\n      } else if (ТекущийСимвол === \"~\") {\r\n        Токен = Токен + ТекущийСимвол;\r\n        ВСтрокеТильда = true;\r\n      } else {\r\n        // Остальные символы\r\n        Токен = Токен + ТекущийСимвол;\r\n      }\r\n    }\r\n\r\n    if (ВСтроке) {\r\n\r\n      // Многострочная строка\r\n      ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\r\n\r\n    } else if (ВСтрокеСкобка) {\r\n\r\n      // Незавершенный литерал\r\n      ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\r\n\r\n    } else if (!ПустаяСтрока(Токен)) {\r\n\r\n      // Анализируем последний токен строки кода\r\n      if (isKeyword(Токен)) {\r\n        ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\r\n\r\n      } else if (!isNaN(parseInt(Токен, 10))) {\r\n        ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\r\n\r\n      } else {\r\n        ДобавитьЧастьСтроки1С(Токен, мЦветФона);\r\n      };\r\n\r\n    };\r\n\r\n  }\r\n\r\n  ВСтроке = false;\r\n  Токен = \"\";\r\n  УстановленЦвет = false;\r\n  ПоследнийЦвет = undefined;\r\n  СтрокаРезультат = '';\r\n\r\n  let result = [];\r\n\r\n  for (let СтрокаКода of text.split('\\n')) {\r\n\r\n    if (ПустаяСтрока(СтрокаКода)) {\r\n      result.push('');\r\n      continue;\r\n    }\r\n\r\n    СтрокаРезультат = '';\r\n    РазукраситьСтроку(СтрокаКода);\r\n    if (УстановленЦвет && !ВСтроке) {\r\n      СтрокаРезультат += '</span>';\r\n      УстановленЦвет = false;\r\n      ПоследнийЦвет = '';\r\n      Токен = '';\r\n    } else if (!ВСтроке) {\r\n      ПоследнийЦвет = '';\r\n      Токен = '';\r\n    }\r\n\r\n    result.push(СтрокаРезультат);\r\n  }\r\n\r\n  return result.join('\\n');\r\n}\r\n\r\nexport default highlight;","//@flow\r\nimport React, { Component, useEffect } from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport queryString from 'query-string'\r\nimport { fetchTopicIfNeeded, fetchNewMessagesIfNeeded, clearTopicMessages } from 'src/data/topic/actions'\r\n\r\nimport type { DefaultProps, Location } from 'src/components'\r\nimport type { ResponseInfo, ResponseMessage, ResponseMessages } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\nimport type { LoginState } from 'src/data/login/reducer'\r\nimport type { OptionsItems } from 'src/data/options/reducer'\r\n\r\nimport Error from 'src/components/common/error'\r\nimport Pages from 'src/components/common/pages'\r\nimport Header from './header'\r\nimport TopicInfo from './topic_info'\r\nimport Row from './row'\r\nimport Footer from './footer'\r\nimport NewMessage from './new_message';\r\nimport { getMaxPage, extractTextFromHTML } from 'src/utils';\r\n\r\nimport './topic.css'\r\n\r\ntype TopicLocationParams = {\r\n  id: string,\r\n  page?: string,\r\n  hash?: string\r\n}\r\n\r\ntype StateProps = {\r\n  login: LoginState,\r\n  info: ResponseInfo,\r\n  item0?: ?ResponseMessage,\r\n  items: ResponseMessages,\r\n  error?: any,\r\n  options: OptionsItems\r\n}\r\n\r\ntype Props = {\r\n  fetchTopicIfNeeded: any,\r\n  fetchNewMessagesIfNeeded: any,\r\n  closeTopic: any,\r\n  clearText: any\r\n} & DefaultProps & StateProps\r\n\r\nvar scrolledToHash;\r\n\r\nconst Topic = (props) => {\r\n  \r\n  const dispatch = useDispatch()\r\n  const location = useLocation();\r\n  let timer;\r\n  let locationParams = queryString.parse(location.search);\r\n  if (!locationParams.page)\r\n    locationParams.page = 1;\r\n\r\n  const updateTopic = () => {\r\n\r\n    let { fetchTopicIfNeeded, item0 } = props;\r\n\r\n    if (locationParams.page !== 'last20') {\r\n      locationParams.page = +locationParams.page;\r\n      if (isNaN(locationParams.page))\r\n        locationParams.page = 1;\r\n    }\r\n\r\n    if (locationParams.id !== locationParams.id)\r\n      item0 = null;\r\n\r\n    fetchTopicIfNeeded(locationParams, null);\r\n  }\r\n\r\n  const onPostNewMessageSuccess = () => {\r\n\r\n    const { fetchNewMessagesIfNeeded, info } = props;\r\n\r\n    const isLastPage = (locationParams.page === 'last20' || locationParams.page === getMaxPage(+info.answers_count));\r\n\r\n    if (isLastPage)\r\n      fetchNewMessagesIfNeeded({\r\n        id: info.id,\r\n        last: parseInt(info.answers_count, 10)\r\n      });\r\n\r\n  }\r\n  \r\n  const { login, items, item0, info, error } = props;\r\n  const maxPage = getMaxPage(+info.answers_count);\r\n\r\n  useEffect(() => {\r\n    if (info.text)\r\n      document.title = extractTextFromHTML(info.text);\r\n  }, [info.text]);\r\n\r\n  useEffect(() => {\r\n    updateTopic();\r\n  }, [dispatch, locationParams.id, locationParams.page]);\r\n    \r\n  useEffect(() => {\r\n    \r\n    const clearStore = () => {\r\n      dispatch(clearTopicMessages());\r\n      scrolledToHash = undefined;\r\n    }\r\n    return clearStore;\r\n\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!scrolledToHash &&\r\n      location.hash &&\r\n      props.items.length > 0) {\r\n      let nodeHash = document.getElementById(location.hash.slice(1));\r\n      if (nodeHash)\r\n        setTimeout(() => window.scrollTo(0, nodeHash.offsetTop), 1);\r\n      scrolledToHash = true;\r\n    }  \r\n  });  \r\n\r\n  return (\r\n    <div style={{ marginBottom: \"5px\" }}>\r\n      {error && <Error text={error.message} />}\r\n      <Header currentPage={locationParams.page} />\r\n      <div className=\"topic-table\">\r\n        <TopicInfo />\r\n        <Row key='0' data={item0} />\r\n        {items.map((item, i) => (\r\n          <Row key={item.n} data={item} />\r\n        ))}\r\n        {(maxPage > 1 || locationParams.page === \"last20\") &&\r\n          <div className=\"tf\">\r\n            <Pages baseUrl='topic.php' locationParams={locationParams} maxPage={maxPage} last20 />\r\n          </div>\r\n        }\r\n      </div>\r\n      <Footer params={locationParams} />\r\n      {login.logged &&\r\n        <NewMessage onSubmitSuccess={onPostNewMessageSuccess} />\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nclass Topic1 extends Component<Props> {\r\n\r\n  locationParams: TopicLocationParams;\r\n  location: Location;\r\n  timer: any;\r\n  scrolledToHash: boolean;\r\n  nodeF: any;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.locationParams = { id: '' };\r\n    this.scrolledToHash = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.location = this.props.location;\r\n    this.updateTopic();\r\n\r\n    if (this.props.options.autoRefreshTopic === 'true') {\r\n\r\n      let autoRefreshTopicInterval = +this.props.options.autoRefreshTopicInterval;\r\n      if (autoRefreshTopicInterval < 60) autoRefreshTopicInterval = 60;\r\n\r\n      this.timer = setInterval(this.autoUpdate, autoRefreshTopicInterval * 1000);\r\n    }\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    \r\n    const { location, items, info } = this.props;\r\n    if (!this.scrolledToHash &&\r\n      location.hash &&\r\n      items.length > 0) {\r\n\r\n      this.scrolledToHash = true;\r\n      let nodeHash = document.getElementById(location.hash.slice(1));\r\n      if (nodeHash)\r\n        setTimeout(() => window.scrollTo(0, nodeHash.offsetTop), 1);\r\n    }\r\n\r\n    let title = info.text;\r\n    if (title && document.title !== title) {\r\n      \r\n      const parser = new DOMParser();\r\n      const floatingElement = parser.parseFromString(title, 'text/html');\r\n      title = floatingElement.firstChild.innerText;\r\n\r\n      document.title = title;\r\n    }\r\n    \r\n    if (this.location.search !== location.search) {\r\n      this.location = location;\r\n      this.updateTopic();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n    const { closeTopic, clearText } = this.props;\r\n\r\n    clearInterval(this.timer);\r\n    closeTopic();\r\n    clearText();\r\n  }\r\n\r\n  autoUpdate = () => {\r\n    const { info, fetchNewMessagesIfNeeded } = this.props;\r\n    const isLastPage = (this.locationParams.page === 'last20' || this.locationParams.page === getMaxPage(+info.answers_count));\r\n\r\n    if (isLastPage)\r\n      fetchNewMessagesIfNeeded({\r\n        id: info.id,\r\n        last: parseInt(info.answers_count, 10)\r\n      })\r\n  }\r\n\r\n  updateTopic = () => {\r\n\r\n    let { fetchTopicIfNeeded, item0 } = this.props;\r\n    let locationParams = queryString.parse(this.location.search);\r\n\r\n    if (!locationParams.page)\r\n      locationParams.page = 1;\r\n\r\n    else if (locationParams.page !== 'last20') {\r\n      locationParams.page = +locationParams.page;\r\n      if (isNaN(locationParams.page))\r\n        locationParams.page = 1;\r\n    }\r\n\r\n    if (locationParams.id !== this.locationParams.id)\r\n      item0 = null;\r\n\r\n    this.locationParams = locationParams;\r\n    fetchTopicIfNeeded(this.locationParams, item0);\r\n  }\r\n\r\n  onPostNewMessageSuccess = () => {\r\n\r\n    const { fetchNewMessagesIfNeeded, info } = this.props;\r\n\r\n    const isLastPage = (this.locationParams.page === 'last20' || this.locationParams.page === getMaxPage(+info.answers_count));\r\n\r\n    if (isLastPage)\r\n      fetchNewMessagesIfNeeded({\r\n        id: info.id,\r\n        last: parseInt(info.answers_count, 10)\r\n      });\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { login, items, item0, info, error } = this.props;\r\n    const maxPage = getMaxPage(+info.answers_count);\r\n\r\n    return (\r\n      <div style={{ marginBottom: \"5px\" }}>\r\n        {error && <Error text={error.message} />}\r\n        <Header currentPage={this.locationParams.page} />\r\n        <div className=\"topic-table\">\r\n          <TopicInfo />\r\n          <Row key='0' data={item0} />\r\n          {items.map((item, i) => (\r\n            <Row key={item.n} data={item} />\r\n          ))}\r\n          {(maxPage > 1 || this.locationParams.page === \"last20\") &&\r\n            <div className=\"tf\">\r\n              <Pages baseUrl='topic.php' locationParams={this.locationParams} maxPage={maxPage} last20 />\r\n            </div>\r\n          }\r\n        </div>\r\n        <Footer params={this.locationParams} />\r\n        {login.logged &&\r\n          <NewMessage onSubmitSuccess={this.onPostNewMessageSuccess} />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  const {\r\n    isFetching,\r\n    lastUpdated,\r\n    info,\r\n    item0,\r\n    items,\r\n    error\r\n  } = state.topic;\r\n\r\n  return {\r\n    login: state.login,\r\n    info,\r\n    item0,\r\n    items,\r\n    isFetching,\r\n    lastUpdated,\r\n    error,\r\n    options: state.options.items\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchTopicIfNeeded: (...params) => dispatch(fetchTopicIfNeeded(...params)),\r\n  fetchNewMessagesIfNeeded: (...params) => dispatch(fetchNewMessagesIfNeeded(...params)),\r\n  closeTopic: (...params) => dispatch(closeTopic(...params)),\r\n  clearText: () => dispatch({ type: 'NEW_MESSAGE_TEXT', text: '' })\r\n})\r\n\r\nexport default (connect(mapStateToProps, mapDispatchToProps)(Topic): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Form, FormControl, Button } from 'react-bootstrap'\r\n\r\nimport RadioOption from './radio_option'\r\nimport StringOption from './string_option'\r\n\r\nimport { saveOptions } from 'src/data/options/actions'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { OptionsState } from 'src/data/options/reducer'\r\nimport { defaultOptionsState } from 'src/data/options/reducer'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\nimport './options.css'\r\n\r\ntype Props = OptionsState & DefaultProps;\r\n\r\nexport const withNavigate = (Component: any) => {\r\n  return (props: any) => {\r\n    const navigate = useNavigate();\r\n    return <Component navigate={navigate} {...props} />;\r\n  };\r\n};\r\n\r\nclass Options extends Component<Props> {\r\n\r\n  optionsParams: any;\r\n  state: any;\r\n  form: any;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: props.options.items\r\n    };\r\n\r\n    this.optionsParams = {\r\n      'theme': {\r\n        type: 'radio',\r\n        label: 'Цветовая палитра:',\r\n        oneLine: true,\r\n        values: [\r\n          { name: 'yellow', descr: 'Золотая' },\r\n          { name: 'lightgray', descr: 'Серая' },\r\n          { name: 'dark', descr: 'Темная' }\r\n        ]\r\n      },\r\n      'topicsPerPage': {\r\n        type: 'number',\r\n        label: 'Тем на странице (max 99):',\r\n        min: 1,\r\n        max: 99\r\n      },\r\n      'autoRefreshTopicsList': {\r\n        type: 'checkbox',\r\n        label: 'Автообновление списка тем'\r\n      },\r\n      'autoRefreshTopicsListInterval': {\r\n        type: 'number',\r\n        label: '',\r\n        min: 60,\r\n        max: 1000000,\r\n        postfix: 'сек'\r\n      },\r\n      'autoRefreshTopic': {\r\n        type: 'checkbox',\r\n        label: 'Автообновление темы'\r\n      },\r\n      'autoRefreshTopicInterval': {\r\n        type: 'number',\r\n        label: '',\r\n        min: 60,\r\n        max: 1000000,\r\n        postfix: 'сек'\r\n      },\r\n      //Tooltips   \r\n      'showTooltips': {\r\n        type: 'checkbox',\r\n        label: 'Показывать тултипы, задержка'\r\n      },\r\n      'tooltipDelay': {\r\n        type: 'number',\r\n        max: 1000000,\r\n        label: '',\r\n        postfix: 'мс'\r\n      },\r\n      'showTooltipOnTopicsList': {\r\n        type: 'checkbox',\r\n        label: 'Показывать тултипы на главной странице, при наведении на кол-во ответов'\r\n      },\r\n      'showTooltipOnPostLink': {\r\n        type: 'checkbox',\r\n        label: 'Показывать тултип ссыки на другую ветку'\r\n      },\r\n      //links   \r\n      'showYoutubeVideoTitle': {\r\n        type: 'checkbox',\r\n        label: 'Показывать наименования роликов youtube'\r\n      },\r\n      'replaceCatalogMista': {\r\n        type: 'checkbox',\r\n        label: 'Обратно заменять catalog.mista.ru на infostart.ru'\r\n      },\r\n      'fixBrokenLinks': {\r\n        type: 'checkbox',\r\n        label: 'Чинить поломанные ссылки (с русскими символами)'\r\n      },\r\n    }\r\n\r\n    this.form = [\r\n      {\r\n        tabName: 'Общие',\r\n        rows: [\r\n          ['theme'],\r\n          ['topicsPerPage'],\r\n          ['autoRefreshTopicsList', 'autoRefreshTopicsListInterval'],\r\n          ['autoRefreshTopic', 'autoRefreshTopicInterval'],\r\n        ]\r\n      },\r\n      {\r\n        tabName: 'Тултипы',\r\n        rows: [\r\n          ['showTooltips', 'tooltipDelay'],\r\n          ['showTooltipOnTopicsList'],\r\n          ['showTooltipOnPostLink']\r\n        ]\r\n      },\r\n      {\r\n        tabName: 'Ссылки',\r\n        rows: [\r\n          ['showYoutubeVideoTitle'],\r\n          ['replaceCatalogMista'],\r\n          ['fixBrokenLinks'],\r\n        ]\r\n      }\r\n    ]\r\n\r\n  }\r\n\r\n  closeForm = () => {\r\n    const { navigate } = this.props;\r\n    navigate('/' + window.hash);\r\n  }\r\n\r\n  resetOptions = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      items: Object.assign({}, defaultOptionsState.items)\r\n    })\r\n  }\r\n\r\n  applyOptions = () => {\r\n\r\n    const { dispatch } = this.props;\r\n    dispatch(saveOptions(this.state.items));\r\n    this.closeForm();\r\n  }\r\n\r\n  onTabClick = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      activeTab: e.target.textContent\r\n    });\r\n  }\r\n\r\n  onChange = (e, name, value) => {\r\n\r\n    let items = Object.assign({}, this.state.items);\r\n    items[name] = value;\r\n    this.setState({\r\n      ...this.state,\r\n      items\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    let tabs = [];\r\n    for (let tab of this.form) {\r\n\r\n      let rows = [];\r\n      for (let i in tab.rows) {\r\n\r\n        const row = tab.rows[i];\r\n        let rowElem = [];\r\n        for (let name of row) {\r\n\r\n          const item = this.optionsParams[name];\r\n          if (!item) continue;\r\n\r\n          const value = this.state.items[name];\r\n\r\n          if (item.type === 'radio') {\r\n            rowElem.push(\r\n              <RadioOption\r\n                key={name}\r\n                name={name}\r\n                label={item.label}\r\n                values={item.values}\r\n                value={value}\r\n                oneLine={item.oneLine}\r\n                onChange={this.onChange}\r\n              />\r\n            );\r\n          } else if (item.type === 'number') {\r\n\r\n            if (item.label)\r\n              rowElem.push(\r\n                <label\r\n                  htmlFor={name}\r\n                  key={name + '_label'}\r\n                  style={{ fontWeight: \"inherit\" }}>\r\n                  {item.label}\r\n                </label>\r\n              );\r\n\r\n            rowElem.push(\r\n              <FormControl\r\n                key={name}\r\n                type=\"number\"\r\n                min={item.min}\r\n                max={item.max}\r\n                value={value}\r\n                onChange={(e) => this.onChange(e, name, e.target.value)}\r\n                style={{ flex: \"0 0 100px\", marginLeft: \"5px\" }}\r\n                className='input'\r\n                size=\"sm\"\r\n              >\r\n              </FormControl>\r\n            );\r\n\r\n            if (item.postfix) {\r\n              rowElem.push(\r\n                <span key={name + '_postfix'} style={{ marginLeft: \"5px\", flex: \"0 0 auto\", }}>{item.postfix}</span>\r\n              )\r\n            };\r\n\r\n          } else if (item.type === 'string') {\r\n            rowElem.push(\r\n              <StringOption\r\n                key={name}\r\n                name={name}\r\n                label={item.label}\r\n                postfix={item.postfix}\r\n                value={value}\r\n                onChange={this.onChange}\r\n              />\r\n            );\r\n          } else if (item.type === 'checkbox') {\r\n            rowElem.push(\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label={item.label}\r\n                key={name}\r\n                name={name}\r\n                checked={String(value) === 'true'}\r\n                onChange={(e) => this.onChange(e, name, e.target.checked)}\r\n                style={{ flex: \"0 0 auto\", margin: \"0px\", width: \"100%\" }}\r\n              />\r\n            );\r\n          }\r\n        }\r\n\r\n        rows.push(\r\n          <div key={i} className=\"options-row\">\r\n            {rowElem}\r\n          </div>\r\n        );\r\n\r\n      }\r\n\r\n      tabs.push(\r\n        <div key={tab.tabName}>\r\n          <div className=\"tab-header\">\r\n            {tab.tabName}\r\n          </div>\r\n          <div className=\"tab-content\">\r\n            {rows}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"options-form\">\r\n        <div className=\"options-header\" style={{ cursor: \"default\" }}>\r\n          <b>Настройки</b>\r\n        </div>\r\n        {tabs}\r\n        <div className=\"button-row\">\r\n          <Button\r\n            id=\"applyOptions\"\r\n            size=\"sm\"\r\n            variant=\"light\"\r\n            style={{ margin: \"5px\" }}\r\n            className='button'\r\n            onClick={this.applyOptions}>\r\n            OK\r\n                        </Button>\r\n          <Button\r\n            id=\"cancelOptions\"\r\n            size=\"sm\"\r\n            variant=\"light\"\r\n            style={{ margin: \"5px\", float: \"left\" }}\r\n            className='button'\r\n            onClick={this.closeForm}>\r\n            Отмена\r\n                        </Button>\r\n          <Button\r\n            id=\"defaultOptions\"\r\n            size=\"sm\"\r\n            variant=\"light\"\r\n            style={{ margin: \"5px\", float: \"right\" }}\r\n            className='button'\r\n            onClick={this.resetOptions}>\r\n            Сбросить настройки\r\n                        </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n\r\n  return {\r\n    options: state.options\r\n  };\r\n\r\n}\r\n\r\nexport default (connect(mapStateToProps)(withNavigate(Options)): any );","import React, { Component } from 'react'\r\nimport { childrenToText } from 'src/utils'\r\nimport highlight from './code_highlight'\r\nimport './code1c.css'\r\n\r\nclass Code extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onShowClick = this.onShowClick.bind(this);\r\n    this.state = { hidden: true };\r\n\r\n    const { children } = props;\r\n    if (children) {\r\n\r\n      const textArr = childrenToText(children);\r\n      this.text = textArr.join('');\r\n\r\n      // replace double new-lines\r\n      this.text = this.text\r\n        .replace(/\\n<br>/g, '\\n')\r\n        .replace(/<br>\\n/g, '\\n')\r\n        .replace(/\\r<br>/g, '\\n')\r\n        .replace(/<br>\\r/g, '\\n')\r\n        .replace(/<br>/g, '\\n');\r\n\r\n      // remove all leading|ending new-lines\r\n      while (this.text[0] === '\\n') {\r\n        this.text = this.text.substr(1);\r\n      }\r\n\r\n      while (this.text.substr(-1) === '\\n') {\r\n        this.text = this.text.substr(0, this.text.length - 1);\r\n      }\r\n\r\n      this.text = highlight(this.text);\r\n    }\r\n  }\r\n\r\n  onShowClick() {\r\n    this.setState({\r\n      hidden: !this.state.hidden\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    let buttonText;\r\n    let linesCount = 0;\r\n    if (this.text)\r\n      linesCount = this.text.split(\"\\n\").length;\r\n\r\n    if (this.state.hidden)\r\n      buttonText = `Показать: ${linesCount} строк`;\r\n    else\r\n      buttonText = 'Скрыть';\r\n\r\n    let buttonShow;\r\n    if (linesCount > 7)\r\n      buttonShow = (\r\n        <div className=\"expand-button-div\">\r\n          <span className=\"expand-button-span\" onClick={this.onShowClick}>{buttonText}</span>\r\n        </div>\r\n      );\r\n\r\n    let preStyle = {\r\n    }\r\n\r\n    if (this.state.hidden && linesCount > 7) {\r\n      preStyle.overflow = \"hidden\";\r\n      preStyle.height = \"135px\";\r\n    } else {\r\n      preStyle.overflow = \"auto\";\r\n      preStyle.height = \"auto\";\r\n    }\r\n\r\n    return (\r\n      <div style={{ marginTop: \"5px\" }}>\r\n        <pre className=\"code-pre\" style={preStyle} dangerouslySetInnerHTML={{ __html: this.text }}>\r\n        </pre>\r\n        {buttonShow}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Code;","//@flow\r\nimport React, { Component } from 'react'\r\n\r\ntype LinkToUserProps = {\r\n  href: string,\r\n  children: any\r\n}\r\n\r\nconst LinkToUser = ({ href, children }) => {\r\n  return <a href={href} className=\"registered-user\">{children}</a>\r\n}\r\n\r\nexport default LinkToUser;","import React, { FC, ReactElement, useEffect, useState } from 'react';\r\n\r\ntype IProps = {\r\n  href: string,\r\n}\r\n\r\nconst getVideoId = (href: string): string | null => {\r\n\r\n  let fullHref = href;\r\n  if (href.search(/http/) === -1) fullHref = 'http://' + fullHref;\r\n\r\n  try {\r\n    var url = new URL(fullHref);\r\n  } catch (e)  {\r\n    return null;\r\n  }\r\n\r\n  if (url.hostname.search(/youtube/) !== -1) {\r\n    return url.searchParams.get('v');\r\n\r\n  } else if (url.hostname.search(/youtu\\.be/) !== -1) {\r\n    return url.pathname.substring(1)\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nconst getVideoParams = async (videoId: string): Promise<{ hrefName: string, title: string }> => {\r\n\r\n  const apiKey = localStorage.getItem('youtubeApiKey') || 'AIzaSyCztN2QW4Fxw_1YuAHBTOZdYLbzigPz25g';\r\n  let apiUrl = `https://www.googleapis.com/youtube/v3/videos?key=${apiKey}&fields=items(snippet(title))&part=snippet&id=${videoId}`;\r\n  const response = await fetch(apiUrl);\r\n  const json = await response.json();\r\n\r\n  let title = json.items[0].snippet.title;\r\n  let hrefName = title;\r\n  let maxLength = 50;\r\n  if (title.length > maxLength + 5)\r\n    hrefName = hrefName.substring(0, maxLength) + '...'\r\n\r\n  return {\r\n    hrefName,\r\n    title\r\n  }\r\n}\r\n\r\nconst YoutubeLink: FC<IProps> = ({ href }): ReactElement => {\r\n\r\n  let [state, setState] = useState({\r\n    hrefName: href,\r\n    title: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    const run = async () => {\r\n\r\n      const videoId = getVideoId(href);\r\n      if (!videoId)\r\n        return;\r\n\r\n      try {\r\n        const params = await getVideoParams(videoId);\r\n        setState({\r\n          ...params\r\n        });\r\n\r\n      } catch (e) {\r\n        console.error('youtube', e.message);\r\n      }\r\n    }\r\n\r\n    run();\r\n  }, [href])\r\n\r\n  const prefix = 'youtube';\r\n  return (\r\n    <a href={href} title={state.title}>{`${prefix}: ${state.hrefName}`}</a>\r\n  )\r\n}\r\n\r\nexport default YoutubeLink;","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport URL from 'url-parse'\r\n\r\nimport LinkToPost from './link_to_post'\r\nimport LinkToUser from './link_to_user'\r\nimport YoutubeLink from './youtube_link'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\n\r\nimport { childrenToText } from 'src/utils'\r\n\r\ntype CustomLinkProps = {\r\n  href: string,\r\n  parentText: string,\r\n  target: string,\r\n  class: string,\r\n  rel: string,\r\n  showTooltipOnPostLink: string,\r\n  showYoutubeVideoTitle: string,\r\n  replaceCatalogMista: string,\r\n  fixBrokenLinks: string,\r\n}\r\n\r\ntype Props = CustomLinkProps & DefaultProps;\r\n\r\nclass CustomLink extends Component<Props> {\r\n\r\n  fixBrokenLink(href: string, parentText: string): string {\r\n    let escapedHref = href\r\n      .replace(/\\[/g, '\\\\[')\r\n      .replace(/\\]/g, '\\\\]')\r\n      .replace(/\\./g, '\\\\.')\r\n      .replace(/\\./g, '.')\r\n      .replace(/\\*/g, '\\\\*')\r\n      .replace(/\\+/g, '\\\\+')\r\n      .replace(/\\(/g, '\\\\(')\r\n      .replace(/\\)/g, '\\\\)')\r\n      .replace(/\\?/g, '\\\\?')\r\n      .replace(/\\//g, '\\\\/');\r\n\r\n    try {\r\n      let regExp = new RegExp(escapedHref + '<\\\\/a>(\\\\)|[а-яёА-ЯЁ0-9#\\\\-\\\\+\\\\_\\\\%\\\\?=]*)');\r\n      let arr = parentText.match(regExp);\r\n      if (arr && arr.length > 1) {\r\n        if (arr[1] === ')' && href.search('\\\\(') === -1) {\r\n          return href;\r\n        }\r\n        href = href + arr[1];\r\n        return href;\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    return href;\r\n  }\r\n\r\n  render() {\r\n\r\n    const { href, children, parentText,\r\n      showTooltipOnPostLink, showYoutubeVideoTitle, replaceCatalogMista, fixBrokenLinks } = this.props;\r\n\r\n    try {\r\n      var url = new URL(href, true);\r\n    } catch (error) {\r\n      console.error(error.message, href);\r\n      return <a href={href}>{href}</a>;\r\n    }\r\n\r\n\r\n    let newHref = href;\r\n    if (newHref.startsWith('/')) {\r\n      url.set('protocol', 'https')\r\n      url.set('hostname', 'forum.mista.ru')\r\n      newHref = url.href;\r\n    }\r\n\r\n    if (showTooltipOnPostLink === 'true') {\r\n      if (url.hostname.search(/forum\\.mista.ru/) !== -1) {\r\n\r\n        if (url.pathname === '/topic.php') {\r\n          return (\r\n            <LinkToPost topicId={url.query.id} number={url.hash.replace('#', '') || \"0\"}>\r\n              {childrenToText(children)}\r\n            </LinkToPost>\r\n          )\r\n        } else if (url.pathname === '/users.php') {\r\n          return (\r\n            <LinkToUser href={url.href} >\r\n              {children}\r\n            </LinkToUser>\r\n          )\r\n        }\r\n      }\r\n\r\n      if (url.hostname === 'a-sitnikov.github.io' &&\r\n        url.pathname === '/react.mista/') {\r\n\r\n        if (Object.keys(url.query).length === 0) {\r\n\r\n          url = new URL(href.replace(/#\\//, ''), true);\r\n          if (url.pathname === '/react.mista/topic.php')\r\n            return (\r\n              <LinkToPost topicId={url.query.id} number={url.hash.replace('#', '') || \"0\"}>\r\n                {childrenToText(children)}\r\n              </LinkToPost>\r\n            )\r\n        }\r\n      }\r\n    }\r\n\r\n    if (showYoutubeVideoTitle === 'true')\r\n      if (url.hostname.search(/youtube/) !== -1\r\n        || url.hostname.search(/youtu\\.be/) !== -1) {\r\n        return <YoutubeLink href={href} />\r\n      }\r\n\r\n    if (replaceCatalogMista === 'true')\r\n      if (url.hostname.search(/catalog\\.mista/) !== -1) {\r\n        url.set('hostname', 'infostart.ru')\r\n\r\n        return (\r\n          <a target={this.props.target}\r\n            className={this.props.class}\r\n            rel={this.props.rel}\r\n            href={url.href} >{url.href} </a>\r\n        )\r\n      }\r\n\r\n    if (fixBrokenLinks === 'true' && parentText) {\r\n      newHref = this.fixBrokenLink(newHref, parentText);\r\n    }\r\n\r\n    return (\r\n      <a target={this.props.target}\r\n        className={this.props.class}\r\n        rel={this.props.rel}\r\n        href={newHref} >{children}</a>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  const {\r\n    showTooltipOnPostLink,\r\n    showYoutubeVideoTitle,\r\n    replaceCatalogMista,\r\n    fixBrokenLinks\r\n  } = state.options.items;\r\n\r\n  return {\r\n    showTooltipOnPostLink,\r\n    showYoutubeVideoTitle,\r\n    replaceCatalogMista,\r\n    fixBrokenLinks\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(CustomLink): any );","//@flow\r\nimport React from 'react'\r\nimport { domain } from 'src/api'\r\n\r\nimport type { ResponseVoteItem } from 'src/api'\r\n\r\ntype Props = {\r\n  topicId: string,\r\n  data: ResponseVoteItem,\r\n  colors: Array<string>,\r\n  total: number,\r\n  n: number\r\n}\r\n\r\nconst VoteItem = (props: Props) => {\r\n\r\n  const { topicId, data, total, n, colors } = props;\r\n\r\n  const img = `${domain}/css/voting${n}.png`;\r\n\r\n  let percent = 0;\r\n\r\n  if (total) {\r\n    percent = Math.round(100 * data.result / total);\r\n  }\r\n\r\n  const imgStyle = { maxWwidth: \"500px\", width: \"100%\", height: \"15px\" };\r\n\r\n  return (\r\n    <div className=\"voting-item\">\r\n      <div className=\"voting-title\">\r\n        <a rel=\"nofollow\" style={{ textDecoration: \"none\" }} href={`${window.hash}/topic.php?id=${topicId}&sel=${n}`}>\r\n          <b><span style={{ color: colors[n - 1] }}>{`${n}. ${data.select}`}</span></b>\r\n        </a>\r\n      </div>\r\n      <div className=\"voting-percentage\">\r\n        {/*<div className=\"div-va-middle\">*/}\r\n        <b><span style={{ color: colors[n - 1] }}>{`${percent}% (${data.result})`}</span></b>\r\n        {/*</div>*/}\r\n      </div>\r\n      <div className=\"voting-bar\">\r\n        <div style={{ width: `${percent}%` }}>\r\n          <a href={img}>\r\n            <img src={img} style={imgStyle} alt={`п${n}`} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default (VoteItem: any);","//@flow\r\nimport React from 'react'\r\nimport VoteItem from './vote_item'\r\nimport type { ResponseVoteItem } from 'src/api'\r\n\r\ntype Props = {\r\n  items: Array<ResponseVoteItem>,\r\n  topicId: string,\r\n  colors: Array<string>\r\n}\r\n\r\nconst VoteChart = (props: Props) => {\r\n\r\n  const { items, topicId, colors } = props;\r\n\r\n  let total = items.reduce((sum, e) => sum + e.result, 0);\r\n\r\n  return (\r\n    <div style={{ marginBottom: \"10px\" }}>\r\n      {items.filter(val => val.select).map((data, i) => <VoteItem key={i} data={data} total={total} n={i + 1} topicId={topicId} colors={colors} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default (VoteChart: any);","import React, { Component } from 'react'\r\n\r\nclass Vote extends Component {\r\n\r\n  render() {\r\n    const { colors, info, vote } = this.props;\r\n\r\n    const voteOption = info[vote - 1];\r\n    return (\r\n      <div style={{ marginTop: \"5px\" }}>\r\n        <b><span style={{ color: colors[vote - 1] }}>{`${vote}. ${voteOption.select}`}</span></b>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Vote;","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport activeHtml from 'react-active-html';\r\n\r\nimport Code from 'src/components/extensions/code1c'\r\nimport LinkToPost from 'src/components/extensions/link_to_post'\r\nimport CustomLink from 'src/components/extensions/custom_link'\r\n\r\nimport VoteChart from './vote_chart'\r\nimport Vote from './vote'\r\n\r\nimport type { ResponseInfo, ResponseMessage } from 'src/api'\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { State } from 'src/reducers'\r\n\r\ntype MsgTextProps = {\r\n  topicId: string,\r\n  n: string,\r\n  html: string,\r\n  vote: number,\r\n  data: ResponseMessage,\r\n  style: {}\r\n}\r\n\r\ntype StateProps = {\r\n  info: ResponseInfo,\r\n  showTooltips: string,\r\n  voteColors?: Array<string>\r\n}\r\n\r\ntype Props = MsgTextProps & StateProps & DefaultProps;\r\n\r\nclass MsgText extends Component<Props> {\r\n\r\n  processLinksToPosts(text: string): string {\r\n\r\n    const { topicId } = this.props;\r\n\r\n    const regexp = /(\\()(\\d+)(\\))/gi; // (12)\r\n    return text.replace(regexp, (res, ...segments) => {\r\n      const number = segments[1];\r\n      return `(<link data-topicid='${topicId}' data-number='${number}' ></link>)`\r\n    });\r\n  }\r\n\r\n  processCode1C(text: string): string {\r\n\r\n    const regexp = /(\\[1[CС]\\])((.|\\n|\\r)*?)(\\[\\/1[CС]\\])/gi; // [1C] text [/1C]\r\n    return text.replace(regexp, (res, ...segments) => {\r\n      let txt = segments[1];\r\n\r\n      //remove first <br>\r\n      if (txt.substr(0, 4) === \"<br>\")\r\n        txt = txt.substr(4);\r\n      return `<code>${txt}</code>`\r\n    });\r\n  }\r\n\r\n  processText(text: ?string): ?string {\r\n\r\n    if (!text)\r\n      return text;\r\n\r\n    const { showTooltips } = this.props;\r\n\r\n    text = this.processCode1C(text);\r\n\r\n    if (showTooltips === 'true')\r\n      text = this.processLinksToPosts(text);\r\n\r\n    return text;\r\n  }\r\n\r\n  render() {\r\n    const { topicId, n, html, vote, info, style, voteColors } = this.props;\r\n\r\n    let voteElement;\r\n    if (vote && info.voting && topicId === info.id) {\r\n      let voteOption = info.voting[vote - 1];\r\n      if (voteOption)\r\n        voteElement = <Vote info={info.voting} vote={vote} colors={voteColors} />\r\n    }\r\n\r\n    let voteChart;\r\n    if (n === \"0\" && info.is_voting === 1 && info.voting) {\r\n      voteChart = <VoteChart items={info.voting} topicId={topicId} colors={voteColors} />\r\n    }\r\n\r\n    let processedHtml = this.processText(html);\r\n    const componentsMap = {\r\n      link: props => <LinkToPost topicId={props['data-topicid']} number={props['data-number']} key={props.key} />,\r\n      code: props => <Code {...props} />,\r\n      a: props => <CustomLink {...props} parentText={processedHtml} />\r\n    };\r\n    let textComponent = activeHtml(processedHtml, componentsMap);\r\n\r\n    return (\r\n      <div className=\"message\" style={{ ...style }}>\r\n        {voteChart}\r\n        <div>\r\n          {textComponent}\r\n        </div>\r\n        {voteElement}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  const { info } = state.topic;\r\n\r\n  return {\r\n    info,\r\n    voteColors: state.options.voteColors,\r\n    showTooltips: state.options.items['showTooltips']\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(MsgText): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport dateFormat from 'dateformat'\r\n\r\nimport './topic_preview.css'\r\n\r\ntype TopicPreviewProps = {\r\n    user: ?string,\r\n    utime: ?number,\r\n    topicId: string,\r\n    n: number,\r\n    onFirst: any,   \r\n    onLast: any,   \r\n    onPrev: any,   \r\n    onNext: any\r\n}\r\n\r\nclass PreviewHeader extends Component<TopicPreviewProps> {\r\n\r\n    render() {\r\n        const { user, utime, topicId, n } = this.props;\r\n\r\n        if (utime)\r\n            var date = new Date(utime*1000);\r\n\r\n        return (\r\n            <div>\r\n                <span className=\"plus-nav\" onClick={this.props.onFirst}>[← </span>\r\n                <span className=\"plus-nav\" onClick={this.props.onPrev}> « </span>\r\n                <Link className=\"plus-nav\" title={`Перейти к сообщению ${n}`} to={`/topic.php?id=${topicId}#${n}`}>{n}</Link>\r\n                <span className=\"plus-nav\" onClick={this.props.onNext}> » </span>\r\n                <span className=\"plus-nav\" onClick={this.props.onLast}> →]</span>\r\n                <b style={{margin: \"auto 5px\"}}>{user}</b>\r\n                <span className=\"agh\">{dateFormat(date, 'dd.mm.yy - HH:MM')}</span>\r\n            </div>\r\n        )    \r\n    }\r\n\r\n}\r\n\r\nexport default ( PreviewHeader: any );","//@flow\r\nimport React, { Component } from 'react'\r\n\r\nimport * as API from 'src/api/topic'\r\n\r\nimport MsgText from 'src/components/topic/row/msg_text'\r\n\r\nimport PreviewHeader from './preview_header'\r\nimport './topic_preview.css'\r\n\r\ntype TopicPreviewProps = {\r\n    topicId: string,\r\n    n: number   \r\n}\r\n\r\ntype Props = TopicPreviewProps;\r\ntype State = {\r\n    n: number,\r\n    data: ?any,\r\n    error: ?string    \r\n}\r\n\r\nclass TopicPreview extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            n: props.n,\r\n            data: null,\r\n            error: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.fetchData(this.state.n);\r\n    }\r\n\r\n    fetchData = async (n: number) => {\r\n        let data, error;\r\n        try {\r\n            data = await API.getMessage(this.props.topicId, n);\r\n            if (!data)\r\n                error = `Сообщение не найдено ${n}`;\r\n\r\n        } catch(e) {\r\n            error = e.message\r\n        };\r\n        this.setState({\r\n            n,\r\n            data,\r\n            error\r\n        })\r\n    }\r\n\r\n    onClickFirst = () => {\r\n        this.fetchData(0);\r\n    }\r\n    \r\n    onClickNext = () => {\r\n        this.fetchData(this.state.n + 1);\r\n    }\r\n\r\n    onClickPrev = () => {\r\n        if (this.state.n > 0)\r\n            this.fetchData(this.state.n - 1);\r\n    }\r\n\r\n    onClickLast = async () => {\r\n        const n = await API.getTopicMessagesCount(this.props.topicId);\r\n        this.fetchData(n);\r\n    }\r\n\r\n    render() {\r\n        const { topicId } = this.props;\r\n        const { data, error, n } = this.state;\r\n        if (!data && !error)\r\n            return null;\r\n\r\n        if (data)\r\n            var { user, utime } = data;\r\n\r\n        return (\r\n            <div className=\"topic-preview\">\r\n                <PreviewHeader \r\n                    user={user}\r\n                    utime={+utime}\r\n                    topicId={topicId}\r\n                    n={n}\r\n                    onFirst={this.onClickFirst}\r\n                    onLast={this.onClickLast}\r\n                    onNext={this.onClickNext}\r\n                    onPrev={this.onClickPrev}\r\n                />\r\n                {data && <MsgText \r\n                    data={data} \r\n                    html={data.text} \r\n                    topicId={topicId} \r\n                    style={{maxHeight: \"500px\", overflowY: \"auto\", overflowWrap: \"break-word\"}}\r\n                />}\r\n                {error && <p>{error}</p>}\r\n            </div>\r\n        )    \r\n    }\r\n\r\n}\r\n\r\nexport default ( TopicPreview: any );","import React, { Component, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useLocation } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { DefaultProps, Location } from 'src/components'\r\n\r\nimport type { TopicsListState } from 'src/data/topicslist/reducer'\r\nimport type { SectionsState } from 'src/data/sections/reducer'\r\nimport type { LoginState } from 'src/data/login/reducer'\r\n\r\nimport { useAppDispatch } from 'src/data/store'\r\nimport { getTopicsListIfNeeded } from 'src/data/topicslist/actions'\r\n\r\nimport Header from './header'\r\nimport Row from './row'\r\nimport Pages from 'src/components/common/pages'\r\nimport NewTopic from './new_topic'\r\nimport Error from 'src/components/common/error'\r\n\r\nimport TopicPreview from 'src/components/preview/topic_preview'\r\n\r\nimport './topics_list.css'\r\n\r\ntype StateProps = {\r\n  topicsList: TopicsListState,\r\n  sections: SectionsState,\r\n  login: LoginState,\r\n  topicsPerPage: string,\r\n  autoRefreshTopicsList: string,\r\n  autoRefreshTopicsListInterval: string\r\n}\r\n\r\ntype Props = {\r\n  fetchTopicsListIfNeeded: any\r\n} & DefaultProps & StateProps;\r\n\r\nconst TopicsList = (props) => {\r\n\r\n  const dispatch = useAppDispatch()\r\n  const location = useLocation();\r\n  const locationParams = queryString.parse(location.search);\r\n\r\n  const updateTopicsList = () => {\r\n    dispatch(getTopicsListIfNeeded(locationParams));\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = 'React.Mista';\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateTopicsList();\r\n  }, [location.search]);\r\n\r\n  const { topicsList, sections } = props;\r\n\r\n  let rows = [];\r\n  for (let item of topicsList.items) {\r\n\r\n    rows.push(<Row key={item.id} data={item} />);\r\n    if (item.showPreview)\r\n      rows.push(\r\n        <div key={`preview${String(item.id)}`} className=\"preview-container\">\r\n          <TopicPreview topicId={String(item.id)} n={0} />\r\n        </div>\r\n      )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {topicsList.error && (<Error text={topicsList.error} />)}\r\n      <div className=\"table\">\r\n        <div className=\"th\" style={{ position: \"sticky\", top: \"39px\" }}>\r\n          <div style={{ letterSpacing: \"-1px\" }}>Раздел</div>\r\n          <div>Re</div>\r\n          <div></div>\r\n          <div>Тема</div>\r\n          <div>Автор</div>\r\n          <div><span style={{ cursor: \"pointer\" }} title=\"Обновить список\" onClick={updateTopicsList}>{topicsList.isFetching ? \"Обновляется\" : \"Обновлено\"}</span></div>\r\n        </div>\r\n        {rows}\r\n        <div className=\"tf\">\r\n          <Pages baseUrl='index.php' locationParams={locationParams} maxPage={10} />\r\n        </div>\r\n      </div>\r\n      <div id=\"F\" className=\"newtopic\" style={{ marginBottom: \"10px\", marginTop: \"5px\", position: 'relative' }}>\r\n        <NewTopic \r\n          sections={sections.items} \r\n          locationParams={locationParams} \r\n          onSubmitSuccess={updateTopicsList}\r\n          />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    topicsList: state.topicsList,\r\n    sections: state.sections,\r\n    login: state.login,\r\n    topicsPerPage: state.options.items.topicsPerPage,\r\n    autoRefreshTopicsList: state.options.items.autoRefreshTopicsList,\r\n    autoRefreshTopicsListInterval: state.options.items.autoRefreshTopicsListInterval,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getTopicsListIfNeeded: (...params) => dispatch(getTopicsListIfNeeded(...params)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicsList);","// @flow\r\nimport * as React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Login from '../login'\r\n\r\ntype Props = {\r\n  info: { forum: string }\r\n}\r\n\r\nconst Header = ({ info }) => {\r\n\r\n  const forums = {\r\n    '1c': '1С:Предприятие',\r\n    'life': 'О жизни',\r\n    'it': 'Информационные технологии',\r\n    'job': 'Работа'\r\n  };\r\n\r\n  return (\r\n\r\n    <div className=\"flex-row\">\r\n      <div className=\"header-left\">\r\n        <Login />\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <span id=\"forum_string\" className=\"bold120\">\r\n          <a rel=\"nofollow\" href={`${window.hash}/index.php?forum=${info.forum}`} style={{ textDecoration: \"none\" }}>{forums[info.forum]}</a>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n  const {\r\n    info\r\n  } = state.topic || {\r\n    info: {\r\n      forum: ''\r\n    }\r\n  }\r\n\r\n  return {\r\n    info\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(Header): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { defaultTopicState } from 'src/data/topic/reducer'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { ResponseInfo } from 'src/api'\r\nimport { domain, urlTopicInfo, urlTopicMessages } from 'src/api'\r\n\r\ntype StateProps = {\r\n  info: ResponseInfo\r\n}\r\n\r\nclass TopicInfo extends Component<StateProps> {\r\n\r\n  render() {\r\n\r\n    const { info } = this.props;\r\n\r\n    let yandexUrl = \"https://www.yandex.ru/yandsearch?rpt=rad&text=\" + encodeURIComponent(info.text);\r\n\r\n    return (\r\n      <div className=\"topic-row\">\r\n        <div className=\"cell-userinfo\">\r\n          <div className=\"topic-tools\">\r\n            <a title=\"API.info\" href={`${domain}/${urlTopicInfo}?id=${info.id}`} className=\"agh\" style={{ display: \"block\", lineHeight: \"1em\" }}>i</a>\r\n            <a title=\"API.messages\" href={`${domain}/${urlTopicMessages}?id=${info.id}&from=0&to=20`} className=\"agh\" style={{ display: \"block\", lineHeight: \"1em\" }}>m</a>\r\n            {/*<a href=\"add_voting.php?topic_id=815217\" title=\"Добавить голосование\">vote</a> &nbsp;&nbsp;*/}\r\n          </div>\r\n        </div>\r\n        <div className=\"cell-message\">\r\n          <div className=\"flex-row\">\r\n            <div style={{ flex: 1, textAlign: \"center\" }}>\r\n              <a href={`${domain}/topic.php?id=${info.id}`}>\r\n                <h1 className=\"topic-title\" dangerouslySetInnerHTML={{ __html: info.text }}></h1>\r\n              </a>\r\n              <div className=\"moder-action\"></div>\r\n            </div>\r\n            <div style={{ flex: \"0 0 20px\", position: \"relative\" }}>\r\n              <div className=\"div-va-middle\">\r\n                <a rel=\"noopener noreferrer\" href={yandexUrl} title=\"Искать в Яндексе\" target=\"_blank\" className=\"yandex\">Я</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  const {\r\n    info\r\n  } = state.topic || defaultTopicState;\r\n\r\n  return {\r\n    info\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(TopicInfo): any );","//@flow\r\nimport React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport dateFormat from 'dateformat'\r\nimport classNames from 'classnames'\r\nimport { domain } from 'src/api'\r\n\r\nimport { addMessageText } from 'src/data/newmessage/actions'\r\n\r\nimport type { ResponseMessage } from 'src/api'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype UserInfoProps = {\r\n  data: ResponseMessage,\r\n  isAuthor: boolean,\r\n  isYou?: boolean,\r\n  isTooltip?: boolean\r\n}\r\n\r\ntype Props = UserInfoProps & DefaultProps;\r\n\r\nclass UserInfo extends Component<Props> {\r\n\r\n  onClick = () => {\r\n    const { dispatch, data } = this.props;\r\n    dispatch(addMessageText(`(${data.n})`));\r\n\r\n    let elem = document.getElementById('message_text');\r\n    if (elem)\r\n      window.scrollTo(0, elem.offsetTop);\r\n  }\r\n\r\n  onImageLoad = (event) => {\r\n    event.target.style.display = 'inline';\r\n  }\r\n\r\n  render() {\r\n    const { data, isAuthor, isYou, isTooltip } = this.props;\r\n    const href = `${domain}/users.php?id=${data.userId}`;\r\n    let dataStr;\r\n    if (!data) {\r\n      dataStr = '';\r\n    } else if (data.n === \"0\") {\r\n      dataStr = dateFormat(new Date(+data.utime * 1000), 'dd.mm.yy - HH:MM');\r\n    } else {\r\n      dataStr = (\r\n        <Fragment>\r\n          <span className=\"message-number\">{data.n}</span>{' - ' + dateFormat(new Date(+data.utime * 1000), 'dd.mm.yy - HH:MM')}\r\n        </Fragment>\r\n      )\r\n    }\r\n\r\n    const userClassNames = classNames(\"registered-user\", {\r\n      \"is-author\": isAuthor,\r\n      \"is-you\": isYou\r\n    });\r\n\r\n    let imgElem;\r\n    if (window.innerWidth > 768)\r\n    imgElem = <img src={`${domain}/css/user_icons/${data.userId}_16x16.png`} \r\n              onLoad={this.onImageLoad} \r\n              style={{display:\"none\", marginBottom:\"4px\", marginRight:\"1px\"}}/>\r\n\r\n    let timeElem;  \r\n    if (isTooltip) {\r\n      timeElem = <div className=\"ah\" style={{display:\"inline-block\", marginLeft:\"5px\"}}>{dataStr}</div>;\r\n    } else {\r\n      timeElem =\r\n        <div className=\"message-time\">\r\n          <span className=\"ah\" >{dataStr}</span>\r\n          <button className=\"button ah\" onClick={this.onClick}>{dataStr}</button>\r\n        </div>\r\n    }  \r\n\r\n    return (\r\n      <div className=\"user-info\">\r\n        {imgElem}\r\n        <a className={userClassNames} href={href}>{data.user}</a>\r\n        {timeElem}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default (connect()(UserInfo): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport UserInfo from './user_info'\r\nimport MsgText from './msg_text'\r\n\r\nimport type { ResponseMessage } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\nimport type { LoginState } from 'src/data/login/reducer'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype RowProps = {\r\n    data: ResponseMessage\r\n}\r\n\r\ntype StateProps = {\r\n    topicId: string,\r\n    author: string,\r\n    login: LoginState\r\n}\r\n\r\ntype Props = RowProps & StateProps & DefaultProps;\r\n\r\nclass Row extends Component<Props> {\r\n\r\n    render() {\r\n        const { data, author, topicId, login } = this.props;\r\n\r\n        if (!data)\r\n            return null;\r\n\r\n        return (\r\n            <div className=\"topic-row\" id={data.n}>\r\n                <div className=\"cell-userinfo\">\r\n                    <UserInfo data={data} isAuthor={data.user === author} isYou={data.user === login.username}/>\r\n                </div>\r\n                <div className=\"cell-message\">\r\n                    <MsgText data={data} html={data.text} topicId={topicId} n={data.n} vote={+data.vote}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n    const {\r\n        info,\r\n        item0,\r\n    } = state.topic || {\r\n        info: {},\r\n        item0: {},\r\n    }\r\n\r\n    return {\r\n        topicId: info.id,\r\n        author: item0 ? item0.user : '',\r\n        login: state.login\r\n    }\r\n}\r\n\r\nexport default ( connect(mapStateToProps)(Row): any );","//@flow\r\nimport * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport { fetchNewMessagesIfNeeded } from 'src/data/topic/actions'\r\nimport { getMaxPage } from 'src/utils'\r\n\r\ntype FooterProps = {\r\n  info: any,\r\n  dispatch: any,\r\n  bookmark: any,\r\n  isFetching: boolean,\r\n  params: any\r\n}\r\n\r\nclass Footer extends React.Component<FooterProps> {\r\n\r\n  onBookmarkClick = () => {\r\n    const { info, dispatch } = this.props;\r\n    //dispatch(addBookmark(info));\r\n  }\r\n\r\n  onRefreshClick = () => {\r\n\r\n    const { info, dispatch } = this.props;\r\n\r\n    dispatch(fetchNewMessagesIfNeeded({\r\n      id: info.id,\r\n      last: parseInt(info.answers_count, 10)\r\n    }));\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { info, bookmark, isFetching, params } = this.props;\r\n    const maxPage = getMaxPage(info.answers_count);\r\n\r\n    let updateButton;\r\n    let page = params.page || 1;\r\n    if (page === 'last20' || page === maxPage)\r\n      updateButton =\r\n        <Button\r\n          onClick={this.onRefreshClick}\r\n          disabled={bookmark.isFetching}\r\n          size=\"sm\"\r\n          className='button'\r\n          variant=\"light\">\r\n          {isFetching ? 'Обновляется' : 'Обновить ветку'}\r\n        </Button>\r\n\r\n    return (\r\n      <div className=\"flex-row\" id=\"F\">\r\n        <div className=\"ta-left va-top\" style={{ width: \"50%\" }}>\r\n          <Button\r\n            onClick={this.onBookmarkClick}\r\n            disabled={bookmark.isFetching}\r\n            size=\"sm\"\r\n            className='button'\r\n            variant=\"light\">\r\n            {bookmark.isFetching ? 'Подождите...' : 'Закладка'}\r\n          </Button>\r\n        </div>\r\n        <div className=\"ta-right va-middle\" style={{ marginLeft: \"auto\" }}>\r\n          {updateButton}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n  const {\r\n    isFetching,\r\n    lastUpdated,\r\n    info,\r\n  } = state.topic || {\r\n    isFetching: true,\r\n    info: {},\r\n  }\r\n\r\n  return {\r\n    info,\r\n    isFetching,\r\n    lastUpdated,\r\n    bookmark: state.bookmark || {}\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(Footer): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FormGroup, Form } from 'react-bootstrap'\r\n\r\nimport TextEditor from 'src/components/common/text_editor'\r\nimport { postNewMessage } from 'src/data/newmessage/actions'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { NewMessageState } from 'src/data/newmessage/reducer'\r\n\r\nimport type { ResponseInfo } from 'src/api'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype NewMessageProps = {\r\n  onSubmitSuccess?: () => void\r\n}\r\n\r\ntype StateProps = {\r\n  info: ResponseInfo,\r\n  newMessage: NewMessageState\r\n}\r\n\r\ntype Props = NewMessageProps & StateProps & DefaultProps;\r\ntype ComponentState = {\r\n  voting?: number\r\n}\r\n\r\nclass NewMessage extends Component<Props, ComponentState> {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { voting: undefined };\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    const { dispatch, info, newMessage } = this.props;\r\n\r\n    let params = {\r\n      text: newMessage.text,\r\n      topicId: info.id,\r\n      onSuccess: this.onSubmitSuccess,\r\n      voting_select: undefined\r\n    };\r\n\r\n    if (this.state.voting) {\r\n      params.voting_select = this.state.voting;\r\n    }\r\n\r\n    dispatch(postNewMessage(params));\r\n  }\r\n\r\n  onSubmitSuccess = () => {\r\n\r\n    const { dispatch } = this.props;\r\n\r\n    dispatch({\r\n      type: 'NEW_MESSAGE_TEXT',\r\n      text: ''\r\n    });\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      voting: undefined\r\n    });\r\n\r\n    if (this.props.onSubmitSuccess) {\r\n      this.props.onSubmitSuccess();\r\n    }\r\n  }\r\n\r\n  clearVoting = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      voting: undefined\r\n    })\r\n\r\n  }\r\n\r\n  setVotingOption = (i) => {\r\n    this.setState({\r\n      ...this.state,\r\n      voting: i\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { info, newMessage } = this.props;\r\n\r\n    let votingElem;\r\n    if (info.is_voting && info.voting) {\r\n\r\n      let votingOptions = [];\r\n      for (let i = 1; i <= info.voting.length; i++) {\r\n\r\n        const item = info.voting[i - 1];\r\n        if (!item.select)\r\n          continue;\r\n\r\n        votingOptions.push(\r\n          <Form.Check\r\n            type=\"radio\"\r\n            key={i}\r\n            name=\"voting\"\r\n            checked={this.state.voting === i}\r\n            onChange={() => this.setVotingOption(i)}\r\n            label={`${i}. ${item.select}`}\r\n          />\r\n        );\r\n      }\r\n\r\n\r\n      votingElem = (\r\n        <FormGroup>\r\n          <legend>\r\n            <small>Ваш выбор:\r\n              <span href=\"\" id=\"voting_clear\" style={{ marginLeft: \"5px\", cursor: \"pointer\" }} onClick={this.clearVoting}>очистить</span>\r\n            </small>\r\n          </legend>\r\n          {votingOptions}\r\n          Обоснуйте свой выбор!\r\n        </FormGroup>\r\n      );\r\n\r\n    }\r\n\r\n    return (\r\n      <form style={{ marginTop: \"5px\" }} onSubmit={this.onSubmit}>\r\n        <div className=\"bold\">Добавить сообщение в тему:</div>\r\n        <div className=\"new-message-container\">\r\n          <div className=\"new-message-text\">\r\n            <TextEditor\r\n              isFetching={newMessage.isFetching}\r\n              text={newMessage.text}\r\n              placeholder=\"Сообщение\"\r\n              formName=\"NEW_MESSAGE\"\r\n            />\r\n          </div>\r\n          <div className=\"new-message-voting\">\r\n            {votingElem}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    info: state.topic.info,\r\n    newMessage: state.newMessage\r\n  };\r\n\r\n}\r\n\r\nexport default (connect(mapStateToProps)(NewMessage): any );","//@flow\r\nimport React, { Component } from 'react'\r\n\r\ntype RadioOptionProps = {\r\n  name: string,\r\n  label: string,\r\n  value: string,\r\n  values: Array<{ name: string, descr: string }>,\r\n  onChange: any,\r\n  oneLine: boolean\r\n}\r\n\r\nclass RadioOption extends Component<RadioOptionProps> {\r\n\r\n  onChange = (e: any) => {\r\n    const { name } = this.props;\r\n    this.props.onChange(e, name, e.target.value);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { name, label, values, oneLine } = this.props;\r\n\r\n    let valuesElem = [];\r\n    for (let i = 0; i < values.length; i++) {\r\n      let item = values[i];\r\n      valuesElem.push(\r\n        <label key={i} htmlFor={item.name} style={{ marginRight: \"5px\" }}>\r\n          <input type=\"radio\" name={name} value={item.name} checked={item.name === this.props.value} onChange={this.onChange} />\r\n          {item.descr}\r\n        </label>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <span>\r\n        <span style={{ marginRight: \"5px\" }}>{label}</span>\r\n        {oneLine ? null : <br />}\r\n        {valuesElem}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (RadioOption: any);","//@flow\r\nimport React, { Component } from 'react'\r\n\r\ntype StringOptionProps = {\r\n  name: string,\r\n  label: string,\r\n  value: string,\r\n  onChange: any,\r\n  postfix: ?string\r\n}\r\n\r\nclass StringOption extends Component<StringOptionProps> {\r\n\r\n  onChange = (e: any) => {\r\n    const { name } = this.props;\r\n    this.props.onChange(e, name, e.target.value);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { name, value, label, postfix } = this.props;\r\n\r\n    return (\r\n      <label htmlFor={name} style={{ marginRight: \"5px\" }}>\r\n        <span style={{ marginRight: \"5px\" }}>{label}</span>\r\n        <input type=\"string\" name={name} value={value} onChange={this.onChange} className='input' />\r\n        {postfix !== undefined ?\r\n          <span style={{ marginLeft: \"5px\" }}>{postfix}</span>\r\n          : null}\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (StringOption: any);","import { Routes, Route } from 'react-router-dom'\r\nimport React, { Component } from 'react';\r\n\r\nimport TopicsList from './topics_list'\r\nimport Topic from './topic'\r\nimport Options from './options'\r\nimport { clearTooltipsIfNeeded } from 'src/data/tooltips/actions'\r\n\r\nimport { useAppDispatch } from 'src/data/store';\r\n\r\nconst Container = () => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onClick = (e: SyntheticEvent<HTMLElement>) => {\r\n    dispatch(clearTooltipsIfNeeded());\r\n  }\r\n\r\n  return (\r\n    <div onClick={onClick} style={{ flex: \"auto\" }}>\r\n      <div className=\"container\">\r\n        <Routes>\r\n          <Route path='/' element={<TopicsList />} />\r\n          <Route path='/index.php' element={<TopicsList />} />\r\n          <Route path='/topic.php' element={<Topic />} />\r\n          <Route path='/options.php' element={<Options />} />\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Container;","import React from 'react'\r\nimport { domain } from 'src/api'\r\n\r\nconst NavBarFooter = (props) => {\r\n\r\n    return (\r\n        <footer className=\"flex-row navbar-footer\">\r\n            <a href={`${domain}/rules.php`}>Правила</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/about.php`}>Описание</a>\r\n            <span className=\"separator\">|</span>\r\n            <b><a href={`${domain}/ad.php`}>Реклама на сайте</a>  </b>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/find.php`}>Поиск</a>\r\n            <span className=\"separator\">|</span>\r\n            <a rel=\"nofollow\" href={`${domain}/sections_list.php`}>Секции</a>\r\n            <span className=\"separator\">|</span>\r\n            <a rel=\"nofollow\" href={`${domain}/rating.php`}>Рейтинг</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href=\"http://kb.mista.ru\">Книга знаний</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href=\"http://wiki.mista.ru\">Вики-миста (КЗ2)</a>\r\n            <span className=\"separator\">|</span>\r\n            <a rel=\"nofollow\" href=\"http://m.mista.ru/\">Мобильная</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/archive.php`}>Архив</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/moders.php`}>Модераторы</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/users_gallery.php`}>Галерея</a>\r\n            <span className=\"separator\">|</span>\r\n            <span>18+</span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default NavBarFooter;","import React from 'react'\r\n\r\nconst TooltipHeader = ({children, closeWindow}) => {\r\n    return (\r\n        <div className=\"tooltip-header\">\r\n            {children}\r\n            <div className=\"tooltip-close\" onClick={closeWindow} onTouchEnd={closeWindow}>\r\n                <span className=\"tooltip-close-x\">x</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TooltipHeader;","import React from 'react'\r\n\r\nconst TooltipBody = ({children, onScroll}) => {\r\n    \r\n    var startX = 0;\r\n\r\n    function onTouchStart(e) {\r\n        startX = e.nativeEvent.changedTouches[0].clientX;\r\n    }\r\n    \r\n    function onTouchEnd(e) {\r\n        let endX = e.nativeEvent.changedTouches[0].clientX;\r\n        if (Math.abs(endX - startX) > 100)\r\n            onScroll(-endX + startX);\r\n    }\r\n\r\n    return (\r\n        <div className=\"tooltip-text\" onTouchStart={onTouchStart} onTouchEnd={onTouchEnd}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TooltipBody;","//@flow\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nimport TooltipHeader from './tooltip_header'\r\nimport TooltipBody from './tooltip_body'\r\n\r\nimport './tooltip.css'\r\n\r\nimport { closeTooltip } from 'src/data/tooltips/actions'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { TooltipItemState } from 'src/data/tooltips/reducer'\r\n\r\ntype TooltipProps = {\r\n  tooltip: TooltipItemState,\r\n  onScroll: (delta: any) => void\r\n}\r\n\r\ntype Props = TooltipProps & DefaultProps;\r\n\r\nclass TooltipWindow extends Component<Props> {\r\n\r\n  onCloseClick = () => {\r\n    const { dispatch, tooltip } = this.props;\r\n    dispatch(closeTooltip(tooltip.keys));\r\n  }\r\n\r\n  onWheel = (e) => {\r\n    e.preventDefault();\r\n    this.props.onScroll(-e.nativeEvent.deltaY);\r\n  }\r\n\r\n  render() {\r\n    const { coords, i } = this.props.tooltip;\r\n\r\n    let axis;\r\n    let position;\r\n    if (window.innerWidth <= 768) {\r\n      axis = \"y\";\r\n      position = { top: coords.y, left: 5 };\r\n    } else {\r\n      axis = \"both\";\r\n      position = { top: coords.y, left: Math.min(coords.x, window.innerWidth - 670) }\r\n    }\r\n\r\n    let [header, body] = React.Children.toArray(this.props.children);\r\n\r\n    return (\r\n      <Draggable\r\n        axis={axis}\r\n        handle=\".tooltip-header\"\r\n        defaultClassNameDragging=\"dragging\"\r\n        key={i}>\r\n\r\n        <div className=\"tooltip-window\" style={{ ...position }} onWheelCapture={this.onWheel}>\r\n          <TooltipHeader closeWindow={this.onCloseClick}>\r\n            {header.props.children}\r\n          </TooltipHeader>\r\n          <TooltipBody onScroll={this.props.onScroll}>\r\n            {body.props.children}\r\n          </TooltipBody>\r\n        </div>\r\n      </Draggable>\r\n    )\r\n  }\r\n}\r\n\r\nexport default (connect()(TooltipWindow): any );","//@flow\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as API from 'src/api/topic'\r\n\r\nimport MsgText from '../topic/row/msg_text'\r\nimport UserInfo from '../topic/row/user_info';\r\n\r\nimport TooltipWindow from './tooltip_window'\r\nimport TooltipHeader from './tooltip_header'\r\nimport TooltipBody from './tooltip_body'\r\nimport './tooltip.css'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { TooltipItemState } from 'src/data/tooltips/reducer'\r\nimport type { TooltipKeys } from 'src/data/tooltips/actions'\r\n\r\ntype TooltipProps = {\r\n  tooltip: TooltipItemState,\r\n  info: any,\r\n  items: any,\r\n  item0: any\r\n}\r\n\r\ntype Props = TooltipProps & DefaultProps;\r\ntype State = {\r\n  data: any,\r\n  text: string,\r\n  number: number\r\n}\r\n\r\nclass Tooltip extends Component<Props, State> {\r\n\r\n  data: any;\r\n  text: string;\r\n  fetchData: any;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { tooltip, info, items, item0 } = props;\r\n    const { keys } = tooltip;\r\n\r\n    let text = '';\r\n    let data;\r\n    if (keys.topicId === info.id) {\r\n      if (keys.number === 0)\r\n        data = item0;\r\n      else\r\n        data = items.find(item => item.n === String(keys.number));\r\n\r\n      if (data)\r\n        text = data.text;\r\n    }\r\n\r\n    this.state = {\r\n      data,\r\n      text,\r\n      number: keys.number\r\n    }\r\n  }\r\n\r\n  fetchData = async (number: number) => {\r\n\r\n    if (number < 0) return;\r\n\r\n    let data;\r\n    let text = '';\r\n    const topicId = this.props.tooltip.keys.topicId;\r\n\r\n    try {\r\n      data = await API.getMessage(topicId, number);\r\n      if (data)\r\n        text = data.text;\r\n      else\r\n        text = `Сообщение не найдено ${number}`;\r\n\r\n    } catch (e) {\r\n      text = e.message;\r\n    }\r\n\r\n    this.setState({ data, text, number });\r\n  }\r\n\r\n  onScroll = (delta) => {\r\n\r\n    const { keys } = this.props.tooltip;\r\n    if (keys.type !== 'TOPIC_PREVIEW') return;\r\n    if (delta > 0) {\r\n      this.fetchData(this.state.number + 1)\r\n    } else {\r\n      this.fetchData(this.state.number - 1)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.state.data)\r\n      this.fetchData(this.state.number);\r\n\r\n  }\r\n\r\n  render() {\r\n    const { keys } = this.props.tooltip;\r\n\r\n    if (!this.state.text)\r\n      return null;\r\n\r\n    let header;\r\n    if (!this.state.data) {\r\n      header = <b>Заголовок</b>\r\n    } else {\r\n      header = <UserInfo data={this.state.data} isAuthor={false} isTooltip={true}/>\r\n    }\r\n\r\n    if (keys.type === 'TOPIC' || keys.type === 'TOPIC_PREVIEW')\r\n      return (\r\n        <TooltipWindow tooltip={this.props.tooltip} onScroll={this.onScroll}>\r\n          <TooltipHeader>\r\n            {header}\r\n          </TooltipHeader>\r\n          <TooltipBody>\r\n            <MsgText\r\n              data={this.state.data}\r\n              html={this.state.text}\r\n              topicId={keys.topicId}\r\n              style={{ maxHeight: \"min(550px, 80vh)\", overflowY: \"auto\" }}\r\n            />\r\n          </TooltipBody>\r\n        </TooltipWindow>\r\n      )\r\n    else\r\n      return null;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n  const {\r\n    info,\r\n    items,\r\n    item0\r\n  } = state.topic;\r\n\r\n  return {\r\n    info,\r\n    items,\r\n    item0\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(Tooltip): any );","//@flow\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport Tooltip from './tooltip'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { TooltipItemState } from 'src/data/tooltips/reducer'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype StateProps = {\r\n    items: Array<TooltipItemState>\r\n}\r\n\r\ntype Props = StateProps & DefaultProps;\r\n\r\nclass TooltipsList extends Component<Props> {\r\n\r\n    render() {\r\n\r\n        const { items } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {items.map((item, i) => {\r\n                    return (\r\n                        <Tooltip key={item.hash} tooltip={item} keys={item.keys}>\r\n                        </Tooltip>\r\n                    )}\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n    const {\r\n        items\r\n    } = state.tooltips\r\n\r\n    return {\r\n        items,\r\n    }\r\n}\r\n\r\nexport default ( connect(mapStateToProps)(TooltipsList): any );","//@flow\r\nimport React, { Component, Fragment, useEffect } from 'react';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\nimport NavBar from './components/nav_bar';\r\nimport Container from './components/container';\r\nimport NavBarFooter from './components/nav_bar_footer';\r\nimport TooltipsList from './components/tooltips/tooltips_list';\r\n\r\nimport { readOptions } from 'src/data/options/actions'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype StateProps = {\r\n  theme: string\r\n}\r\n\r\ntype Props = StateProps & DefaultProps\r\n\r\nfunction App(props): Props {\r\n\r\n  useEffect(() => {\r\n    document.body.setAttribute('theme', props.theme);\r\n  })\r\n\r\n  return (\r\n    <HashRouter>\r\n      <NavBar />\r\n      <Container />\r\n      <NavBarFooter />\r\n      <TooltipsList />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    theme: state.options.items.theme\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","//@flow\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux'\r\n\r\nimport reducer from './reducers'\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from 'src/data/store'\r\n\r\nconst Root = ({ store }) => (\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n)\r\n\r\n// for github pages\r\nwindow.hash = \"#\";\r\n\r\nReactDOM.render(<Root store={store} />,\r\n    document.getElementById('root'));\r\n\r\n//registerServiceWorker();\r\n"],"sourceRoot":""}