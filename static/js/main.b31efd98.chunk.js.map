{"version":3,"sources":["components/common/search.tsx","utils.ts","api/index.ts","api/topicslist.ts","data/topicslist/actions.ts","components/navigation/nav_bar.tsx","data/topicslist/reducer.ts","data/topicslist/index.ts","data/topic/index.ts","api/topicinfo.ts","api/topicMessages.ts","data/topic/actions.ts","data/topic/reducer.ts","api/sections.ts","data/sections/actions.ts","data/sections/reducer.ts","data/sections/index.ts","data/options/index.ts","data/options/actions.ts","data/options/reducer.ts","api/cookies.ts","api/login.ts","data/login/actions.ts","data/login/reducer.ts","data/login/index.ts","data/tooltips/actions.ts","data/tooltips/reducer.ts","data/tooltips/index.ts","api/newtopic.ts","data/newtopic/actions.ts","data/newtopic/reducer.ts","data/newtopic/index.ts","api/newmessage.ts","data/newmessage/actions.ts","data/store.ts","data/newmessage/reducer.ts","data/newmessage/index.ts","components/login/logged_user.tsx","components/login/login_form.tsx","components/common/error.tsx","components/login/index.tsx","components/topics_list/sections.tsx","components/topics_list/header.tsx","components/topics_list/row/pages.tsx","components/topics_list/row/topic_name_cell.tsx","components/extensions/link_to_post.js","components/topics_list/row/preview_link.tsx","components/topics_list/row/index.tsx","components/common/pages.tsx","components/common/text_editor.js","components/topics_list/new_topic.js","components/extensions/code_highlight.ts","components/topic/index.tsx","components/extensions/code1c.tsx","components/extensions/link_to_user.tsx","components/extensions/youtube_link.tsx","components/extensions/custom_link.tsx","components/topic/row/vote_item.tsx","components/topic/row/vote_chart.tsx","components/topic/row/vote.tsx","components/topic/row/msg_text.tsx","components/preview/preview_header.tsx","components/preview/topic_preview.tsx","components/topics_list/index.tsx","components/topic/header.tsx","components/topic/topic_info.tsx","components/topic/row/user_info.tsx","components/topic/row/index.tsx","components/topic/footer.tsx","components/topic/new_message.tsx","components/options/radio_option.tsx","components/options/string_option.tsx","components/options/formscheme.ts","components/options/tab.tsx","components/options/index.tsx","components/container.tsx","components/navigation/nav_bar_footer.tsx","components/tooltips/tooltip_header.tsx","components/tooltips/tooltip_body.tsx","components/tooltips/tooltip_window.tsx","components/tooltips/tooltip.js","components/tooltips/tooltips_list.tsx","App.tsx","index.tsx"],"names":["Search","useState","searchEngine","setSearchEngine","text","setText","doSearch","url","window","open","InputGroup","size","Prepend","DropdownButton","id","title","style","marginRight","className","variant","Dropdown","Item","eventKey","onSelect","FormControl","type","placeholder","paddingRight","onKeyPress","e","key","onChange","target","value","Append","marginLeft","marginTop","marginBottom","cursor","onClick","zIndex","parseJSON","JSON","parse","replace","console","error","message","log","getMaxPage","count","Math","min","ceil","childrenToText","children","map","displayName","props","number","domain","localStorage","getItem","urlTopicsList","urlTopicInfo","urlTopicMessages","urlLogin","urlLogout","urlCookies","urlSections","urlNewMessage","urlNewTopic","paramsToString","paramsPrefix","params","arr","undefined","push","length","join","fetchJsonpAndGetJson","a","fullUrl","fetchJsonp","response","json","responseJson","utils","fetchAndGetJson","options","fetch","convertResponse","forum","section","sect1","sectionCode","sect2","author","user0","lastUser","user","created","updated","utime","answ","closed","down","pinned","isVoting","is_voting","showPreview","fetchTopicsList","list","requestTopicsList","createAction","receiveTopicsList","payload","receiveTopicsListFailed","clearTopicsList","togglePreview","getTopicsListIfNeeded","dispatch","getState","state","topicsList","isFetching","shouldGetTopicsList","page","reqestParams","topicsPerPage","items","topicsCount","topics","section_short_name","user_id","mytopics","API","data","slice","getTopicsList","NavBar","location","useLocation","useDispatch","URLSearchParams","search","get","menuItems","name","link","item","i","Nav","Link","href","active","Navbar","bg","expand","fixed","Brand","Toggle","aria-controls","Collapse","Form","inline","reducer","createReducer","builder","addCase","action","toString","lastUpdated","Date","getTime","ind","findIndex","Object","assign","defaultInfo","initialState","info","voting","x","select","result","parseInt","sectionId","authorId","user_name","updated_name","answers_count","deleted","fetchTopicInfo","n","userId","time","vote","fetchTopicMessages","fetchTopicMessage","to","from","find","requestTopic","receiveTopic","item0","receiveTopicFailed","clearTopicMessages","requestNewMessages","receiveNewMessages","receiveNewMessagesFailed","shouldFetch","topic","getTopicIfNeeded","_item0","first","_items","last","getTopic","getNewMessagesIfNeeded","getNewMessages","concat","code","shortn","fulln","fetchSections","requestSections","receiveSections","receiveSectionsFailed","getSectionsIfNeeded","sections","shouldGetSections","tree","getKey","reduce","previous","currentItem","group","defaultOptionsState","voteColors","theme","autoRefreshTopicsList","autoRefreshTopicsListInterval","autoRefreshTopic","autoRefreshTopicInterval","showTooltips","tooltipDelay","showYoutubeVideoTitle","replaceCatalogMista","fixBrokenLinks","readOptions","saveOptions","readOption","defaultValue","readAllOptions","String","setItem","session","Number","userName","userHash","user_hash","lastError","last_error","fetchCookies","fetchLogin","method","body","username","user_password","password","mode","credentials","headers","redirect","fetchLogout","loginStart","loginComplete","loginFailed","logoutStart","logoutComplete","checkLoginStart","shouldLogin","login","checkLogin","trim","doLoginIfNeeded","encodeURIComponent","doLogin","logged","createTooltip","keys","coords","closeTooltip","clearTooltips","hash","stringify","index","filter","val","fetchNewTopic","postNewTopicStart","postNewTopicComplete","postNewTopicError","newTopicText","newTopicClear","newTopicSubject","newTopicSection","newTopicShowVoting","show","postNewTopicIfNeeded","newTopic","shouldPostNewTopic","postNewTopic","fetchParams","message_text","topic_text","subject","target_section","target_forum","toLowerCase","rnd","round","random","votingItems","onSuccess","fetchNewMessage","topic_id","postNewMessageStart","postNewMessageComplete","newMessageText","addMessageText","tooltips","newMessage","store","configureStore","devTools","process","useAppDispatch","useSelector","CustomToggle","React","forwardRef","ref","preventDefault","LoggedUser","onLogout","event","float","as","Menu","Divider","connector","connect","setUsername","setPassword","flexWrap","flex","maxLength","autoComplete","Button","margin","rel","ErrorElem","dangerouslySetInnerHTML","__html","elem","useEffect","selected","sectionsElem","label","Control","currentTarget","Header","navigate","useNavigate","queryString","Pages","topicId","pages","maxPage","classes","classNames","sectionHref","substring","aria-hidden","overflowWrap","LinkToPost","onMouseOver","persist","timer","setTimeout","showToolTip","stopPropagation","clearTimeout","onMouseOut","showTooltip","isPreview","pageX","y","pageY","this","setState","startsWith","then","pageParam","isNaN","Component","PreviewLink","expanded","setTime","updateTime","useCallback","msg","timeF","date","td","d","getDate","getMonth","getFullYear","today","dateFormat","color","display","width","textAlign","currentPage","locationParams","baseUrl","last20","Pagination","TextEditor","onButtonCode1c","textArea","current","start","selectionStart","end","selectionEnd","oldText","len","replacement","newText","formName","onVotingChange","checked","ctrlKey","parent","parentElement","tagName","toUpperCase","dispatchEvent","Event","cancelable","bubbles","createRef","showVoting","cols","rows","ButtonGroup","disabled","Check","NewTopic","onSectionChange","currentSection","onSubmit","onSubmitSuccess","refs","onSubjectChange","groupsElem","votingOptions","Text","readOnly","FormGroup","highlight","scrolledToHash","СтрокаРезультат","УстановленЦвет","ПоследнийЦвет","keywords","Set","split","Спецсиволы","мЦветФона","мЦветЧисла","мЦветСтроки","мЦветКлючевогоСлова1","ВСтроке","Токен","ПустаяСтрока","Строка","Сред","Нач","Длина","Прав","isKeyword","token","has","ДобавитьЧастьСтроки1С","Часть","Цвет","РазукраситьСтроку","СтрокаКода","ВСтрокеСкобка","ВСтрокеТильда","НачалоСтроки","ТокенДоТочки","Поз","ТекущийСимвол","charAt","Code","hidden","setHidden","newtext","prepareText","buttonText","buttonShow","linesCount","preStyle","overflow","height","LinkToUser","getVideoId","fullHref","URL","hostname","searchParams","pathname","getVideoParams","videoId","apiKey","apiUrl","snippet","hrefName","YoutubeLink","run","parentText","newHref","set","query","isMistaCatalog","class","escapedHref","regExp","RegExp","match","fixBrokenLink","VoteItem","total","colors","img","percent","textDecoration","src","maxWwidth","alt","VoteChart","max","Vote","voteElement","voteChart","html","voteOption","processedHtml","res","txt","substr","processCode1C","processLinksToPosts","processText","componentsMap","textComponent","activeHtml","PreviewHeader","onFirst","onPrev","onNext","onLast","TopicPreview","msgNumber","setMsgNumber","fetchData","onClickLast","maxHeight","overflowY","updateTopicsList","document","position","top","letterSpacing","yandexUrl","lineHeight","UserInfo","dataStr","isAuthor","isYou","isTooltip","imgElem","timeElem","userClassNames","innerWidth","onLoad","getElementById","scrollTo","offsetTop","updateButton","votingElem","setVoting","afterSubmit","setVotingOption","voting_select","postNewMessage","locationPage","htmltext","DOMParser","parseFromString","firstChild","innerText","nodeHash","RadioOption","values","oneLine","valuesElem","htmlFor","descr","StringOption","postfix","formTabs","tabName","formParams","Tab","closeForm","tabs","tab","row","rowElem","fontWeight","Container","path","element","NavBarFooter","TooltipHeader","closeWindow","onTouchEnd","TooltipBody","onScroll","startX","onTouchStart","nativeEvent","changedTouches","clientX","endX","abs","TooltipWindow","axis","tooltip","left","Children","toArray","header","handle","defaultClassNameDragging","onWheelCapture","deltaY","Tooltip","delta","setAttribute","Root","ReactDOM","render"],"mappings":"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","file":"static/js/main.b31efd98.chunk.js","sourcesContent":["import React, { ReactElement, useState } from 'react'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n\r\nimport './search.css'\r\n\r\nconst Search = (): ReactElement => {\r\n\r\n  const [searchEngine, setSearchEngine] = useState('Яндекс');\r\n  const [text, setText] = useState('');\r\n\r\n  const onKeyPress = (e: any) => {\r\n    if (e.key === 'Enter') {\r\n      doSearch();\r\n    }\r\n  }\r\n\r\n  const doSearch = () => {\r\n\r\n    let url;\r\n    if (searchEngine === 'Яндекс') {\r\n      url = `https://www.yandex.ru/search/?text=${text}&site=forum.mista.ru`;\r\n\r\n    } else if (searchEngine === 'Google') {\r\n      url = `https://www.google.ru/search?q=${text}+site:forum.mista.ru`\r\n    }\r\n\r\n    window.open(url);\r\n\r\n    setText('');\r\n\r\n  }\r\n\r\n  return (\r\n    <InputGroup size=\"sm\">\r\n      <InputGroup.Prepend>\r\n        <DropdownButton id=\"search-engine\" title=\"\" size=\"sm\" style={{ marginRight: \"2px\" }} className='button' variant=\"light\">\r\n          <Dropdown.Item eventKey=\"Яндекс\" onSelect={() => setSearchEngine(\"Яндекс\")}>Яндекс</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"Google\" onSelect={() => setSearchEngine(\"Google\")}>Google</Dropdown.Item>\r\n        </DropdownButton>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        type=\"text\"\r\n        placeholder={`${searchEngine}: поиск`}\r\n        style={{ marginRight: \"4px\", paddingRight: \"27px\" }}\r\n        className='input'\r\n        onKeyPress={onKeyPress}\r\n        onChange={e => setText(e.target.value)}\r\n        value={text}\r\n      />\r\n      <InputGroup.Append style={{ marginLeft: \"-25px\", marginTop: \"auto\", marginBottom: \"auto\", cursor: \"pointer\" }} onClick={doSearch}>\r\n        <i className=\"fa fa-search input\" style={{ zIndex: 1000 }} />\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  )\r\n\r\n}\r\n\r\nexport default Search;","\r\nexport function today(td: Date): boolean {\r\n  var d = new Date();\r\n  return td.getDate() === d.getDate() && td.getMonth() === d.getMonth() && td.getFullYear() === d.getFullYear();\r\n}\r\n\r\nexport const groupBy = <T, K extends keyof any>(list: T[], getKey: (item: T) => K) =>\r\n  list.reduce((previous, currentItem) => {\r\n    const group = getKey(currentItem);\r\n    if (!previous[group]) previous[group] = [];\r\n    previous[group].push(currentItem);\r\n    return previous;\r\n  }, {} as Record<K, T[]>)\r\n\r\nexport const parseJSON = (text: string): {} => {\r\n\r\n  try {\r\n    return JSON.parse(text);\r\n  } catch (e) {\r\n\r\n  }\r\n\r\n  try {\r\n    text = text\r\n      .replace(/\\\\</g, '<')\r\n      .replace(/\\\\>/g, '>')\r\n      .replace(/\\\\&/g, '&')\r\n      .replace(/\\\\'/g, \"'\")\r\n      .replace(/\\\\\"/g, \"\")\r\n      .replace(/ \"/g, ' \\\\\"')\r\n      .replace(/\"\"/g, '\\\\\"\"')\r\n      .replace(/\\t/g, '\\\\t')\r\n      .replace(/\"(\\.| |\\?)/g, '\\\\\"$1')\r\n\r\n    //           console.log(text);\r\n    return JSON.parse(text);\r\n\r\n    //return eval(text);\r\n  } catch (e) {\r\n    console.error(e.message);\r\n    console.log(text);\r\n\r\n    return {};\r\n  }\r\n}\r\n\r\nexport const getMaxPage = (count: number): number => Math.min(Math.ceil(count / 100), 10) || 1;\r\n\r\nexport const childrenToText = (children: any): string[]=> {\r\n\r\n  if (!children) return children;\r\n\r\n  return children.map(value => {\r\n    if (typeof (value) === 'string') {\r\n      return value;\r\n    } else if (value.type === 'br') {\r\n      return '<br>'\r\n    } else if (value.type.displayName === 'Connect(LinkToPost)' || value.type.displayName === 'Connect(t)') {\r\n      return value.props.number;\r\n    } else {\r\n      console.log(value);\r\n      return value;\r\n    }\r\n  })\r\n}\r\n\r\nexport const extractTextFromHTML = (htmltext: string): string => {\r\n  const parser = new DOMParser();\r\n  const floatingElement = parser.parseFromString(htmltext, 'text/html');\r\n  return (floatingElement.firstChild as HTMLElement).innerText;\r\n}","import fetchJsonp from 'fetch-jsonp'\r\nimport * as utils from 'src/utils'\r\n\r\nexport const domain: string = localStorage.getItem('domain') || 'https://forum.mista.ru';\r\n//export const domain = 'https://dev.mista.ru';\r\nexport const urlTopicsList: string = localStorage.getItem('urlTopicsList') || 'api/topic.php';\r\nexport const urlTopicInfo: string = localStorage.getItem('urlTopicInfo') || 'ajax_gettopic.php';\r\nexport const urlTopicMessages: string = localStorage.getItem('urlTopicMessages') || 'api/message.php';\r\nexport const urlLogin: string = localStorage.getItem('urlLogin') || 'users.php?action=do_enter';\r\nexport const urlLogout: string = localStorage.getItem('urlLogout') || 'users.php?action=exit';\r\nexport const urlCookies: string = localStorage.getItem('urlCookies') || 'ajax_cookie.php';\r\nexport const urlSections: string = localStorage.getItem('urlSections') || 'ajax_getsectionslist.php';\r\nexport const urlNewMessage: string = localStorage.getItem('urlNewMessage') || 'topic.php?id=:id&page=1';\r\nexport const urlNewTopic: string = localStorage.getItem('urlNewTopic') || 'index.php';\r\nexport const urlAddBookmark: string = localStorage.getItem('urlAddBookmark') || 'ajax_addbookmark.php';\r\nexport const urlSearch: string = localStorage.getItem('urlSearch') || 'ajax_find.php';\r\n\r\n//Bookmark\r\nexport type RequestBookmark = {\r\n  id: string\r\n}\r\n\r\nexport const postBookmark = async (params: RequestBookmark) => {\r\n\r\n  await fetch(`${domain}/${urlAddBookmark}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n  });\r\n}\r\n\r\nexport const paramsToString = (paramsPrefix: string, params?: {}): string => {\r\n\r\n  if (!params)\r\n    return '';\r\n\r\n  let arr = [];\r\n  for (let key in params) {\r\n    if (params[key] !== undefined)\r\n      arr.push(key + '=' + params[key]);\r\n  }\r\n\r\n  if (arr.length > 0)\r\n    return paramsPrefix + arr.join('&');\r\n  else\r\n    return '';\r\n}\r\n\r\nexport const fetchJsonpAndGetJson = async (url: string, params?: {}): Promise<any> => {\r\n\r\n  let fullUrl = `${domain}/${url}${paramsToString('?', params)}`;\r\n  const response = await fetchJsonp(fullUrl);\r\n  let responseJson = await response.json();\r\n  let json;\r\n  if (typeof (responseJson) === 'string') {\r\n\r\n    try {\r\n      json = JSON.parse(responseJson)\r\n    } catch (e) {\r\n      json = utils.parseJSON(responseJson);\r\n    }\r\n  } else {\r\n    json = responseJson;\r\n  }\r\n  return json;\r\n}\r\n\r\nexport const fetchAndGetJson = async (url: string, params?: {}, options?: {}): Promise<any> => {\r\n\r\n  let fullUrl = `${domain}/${url}${paramsToString('?', params)}`;\r\n  const response = await fetch(fullUrl, options);\r\n  return await response.json();\r\n  \r\n}","import { fetchAndGetJson, urlTopicsList } from '.'\r\n\r\nimport type { ITopicsList, ITopicsListItem } from 'src/data/topicslist'\r\n\r\nexport interface IRequest {\r\n  itemsPerPage?: number | null,\r\n  page?: number | null,\r\n  beforeTime?: string | null,\r\n  forum?: string | null,\r\n  section?: string | null,\r\n  user_id?: string | null,\r\n  myTopics?: string | null\r\n}\r\n\r\ninterface IAPIRequest {\r\n  topics?: number | null,\r\n  utime?: string | null,\r\n  forum?: string | null,\r\n  section_short_name?: string | null,\r\n  user_id?: string | null,\r\n  mytopics?: string | null\r\n}\r\n\r\ninterface IAPIResponse {\r\n  id: number,\r\n  forum: string,\r\n  sect1: string,\r\n  sect2: string,\r\n  v8: string,\r\n  closed: number,\r\n  down: number,\r\n  paid: number,\r\n  text: string,\r\n  message: string,\r\n  created: number,\r\n  utime: number,\r\n  user: string,\r\n  user0: string,\r\n  is_voting: number,\r\n  answ: number\r\n}\r\n\r\nfunction convertRequest(request?: IRequest): IAPIRequest {\r\n\r\n  const itemsPerPage: number = request?.itemsPerPage ?? 20;\r\n  const page: number = request?.page ?? 1;\r\n  const count = itemsPerPage * page;\r\n\r\n  return ({\r\n    topics: count,\r\n    utime: request?.beforeTime,\r\n    forum: request?.forum,\r\n    section_short_name: request?.section,\r\n    user_id: request?.user_id,\r\n    mytopics: request?.myTopics\r\n  })\r\n\r\n}\r\n\r\nfunction convertResponse(response: IAPIResponse): ITopicsListItem {\r\n\r\n  return ({\r\n    id: response.id,\r\n    forum: response.forum,\r\n    section: response.sect1,\r\n    sectionCode: response.sect2,\r\n    author: response.user0,\r\n    lastUser: response.user,\r\n    created: response.created * 1000,\r\n    updated: response.utime * 1000,\r\n    count: response.answ,\r\n    text: response.text,\r\n    closed: response.closed === 1,\r\n    down: response.down === 1,\r\n    pinned: response.utime === 2147483648,\r\n    isVoting: response.is_voting === 1,\r\n    showPreview: false\r\n  })\r\n\r\n}\r\n\r\nasync function fetchTopicsList(params?: IRequest): Promise<ITopicsList> {\r\n\r\n  //const request = convertRequest(params);\r\n\r\n  const list = await fetchAndGetJson(urlTopicsList, params);\r\n  return list.map(convertResponse);\r\n\r\n}\r\n\r\nexport { fetchTopicsList }","import { createAction } from '@reduxjs/toolkit'\r\n\r\nimport * as API from 'src/api/topicslist'\r\nimport { domain, urlTopicsList } from 'src/api/index';\r\n\r\nimport { RootState } from '../store';\r\n\r\nexport const requestTopicsList = createAction('REQUEST_TOPICS_LIST');\r\nexport const receiveTopicsList = createAction('RECEIVE_TOPICS_LIST', list => ({\r\n  payload: {\r\n    list\r\n  },\r\n  error: false\r\n}));\r\nexport const receiveTopicsListFailed = createAction('RECEIVE_TOPICS_LIST', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\nexport const clearTopicsList = createAction('CLEAR_TOPICS_LIST');\r\nexport const togglePreview = createAction('TOGGLE_PREVIEW', id => ({\r\n  payload : {\r\n    id\r\n  }\r\n}));\r\n\r\nconst getTopicsList = (params: any) => async (dispatch: any, getState: any) => {\r\n\r\n  dispatch(requestTopicsList())\r\n\r\n  const page = params.page || 1;\r\n  let reqestParams: any = {};\r\n\r\n  let topicsPerPage = +getState().options.items.topicsPerPage;\r\n  if (topicsPerPage > 99) topicsPerPage = 99;\r\n\r\n  let topicsCount = page * topicsPerPage;\r\n  reqestParams.topics = topicsCount;\r\n\r\n  if (params.section)\r\n    reqestParams.section_short_name = params.section;\r\n\r\n  if (params.forum)\r\n    reqestParams.forum = params.forum;\r\n\r\n  if (params.user_id)\r\n    reqestParams.user_id = params.user_id;\r\n\r\n  if (params.mytopics)\r\n    reqestParams.mytopics = params.mytopics;\r\n\r\n  try {\r\n    const json = await API.fetchTopicsList(reqestParams);\r\n\r\n    let data = json.slice(-topicsPerPage);\r\n    dispatch(receiveTopicsList(data));\r\n\r\n  } catch (e) {\r\n\r\n    dispatch(receiveTopicsListFailed(`${e.message} ${domain}/${urlTopicsList}`));\r\n    console.error(e.message);\r\n\r\n  }\r\n\r\n}\r\n\r\nconst shouldGetTopicsList = (state: RootState) => {\r\n  const topicsList = state.topicsList;\r\n  if (!topicsList) {\r\n    return true\r\n  }\r\n  if (topicsList.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const getTopicsListIfNeeded = (params: any): any => (dispatch: any, getState: any) => {\r\n  if (shouldGetTopicsList(getState())) {\r\n    return dispatch(getTopicsList(params));\r\n  }\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport Search from 'src/components/common/search'\r\nimport { getTopicsListIfNeeded } from 'src/data/topicslist/actions'\r\n\r\nimport './nav_bar.css'\r\n\r\nconst NavBar = (): ReactElement => {\r\n\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const locationParams = new URLSearchParams(location.search);\r\n  const forum = locationParams.get('forum');\r\n\r\n  const onClick = () => {\r\n    dispatch(getTopicsListIfNeeded({}));\r\n  }\r\n\r\n  const menu = [\r\n    { name: '1C', link: `#/index.php?forum=1C` },\r\n    { name: 'IT', link: `#/index.php?forum=IT` },\r\n    { name: 'JOB', link: `#/index.php?forum=JOB` },\r\n    { name: 'LIFE', link: `#/index.php?forum=LIFE` },\r\n    { name: 'Wiki', link: 'https://wiki.mista.ru' },\r\n    { name: 'Книга знаний', link: 'https://kb.mista.ru' },\r\n  ];\r\n\r\n  const menuItems = menu.map((item, i) => {\r\n    return (\r\n      <Nav.Item key={i}>\r\n        <Nav.Link href={item.link} active={item.name === forum}>\r\n          {item.name}\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" fixed=\"top\">\r\n      <Navbar.Brand\r\n        href={`#`}\r\n        onClick={onClick}>\r\n        React.Mista\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse>\r\n        <Nav className=\"mr-auto\">\r\n          {menuItems}\r\n        </Nav>\r\n        <Form inline>\r\n          <Search />\r\n        </Form>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default NavBar;","import { createReducer } from '@reduxjs/toolkit'\r\nimport { initialState } from '.'\r\nimport { requestTopicsList, receiveTopicsList, clearTopicsList, togglePreview } from './actions'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(requestTopicsList, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveTopicsList, (state, action) => {\r\n\r\n      if (action.error) {\r\n        state.error = action.payload.toString();\r\n      } else {\r\n        state.items = action.payload.list;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(clearTopicsList, (state) => {\r\n      state.items = [];\r\n      state.isFetching = false;\r\n      delete state.error;\r\n      delete state.lastUpdated;\r\n    })\r\n    .addCase(togglePreview, (state, action) => {\r\n      let items = state.items.slice();\r\n      const ind = items.findIndex(item => item.id === action.payload.id);\r\n\r\n      let item = Object.assign({}, items[ind]);\r\n      item.showPreview = !item.showPreview;\r\n      items[ind] = item;\r\n      state.items = items;\r\n    })    \r\n})\r\n\r\nexport default reducer;\r\n","export interface ITopicsListItem {\r\n  id: number,\r\n  author: string,\r\n  lastUser: string,\r\n  forum: string,\r\n  sectionCode: string,\r\n  section: string,\r\n  count: number,\r\n  text: string,\r\n  created: number,\r\n  updated: number,\r\n  closed: boolean,\r\n  down: boolean,\r\n  pinned: boolean\r\n  isVoting: boolean,\r\n  showPreview: boolean\r\n}\r\n\r\nexport interface ITopicsList extends Array<ITopicsListItem> { }\r\n\r\nexport interface ITopicsListState {\r\n  isFetching: boolean;\r\n  items: ITopicsList,\r\n  error?: string,\r\n  lastUpdated?: number\r\n}\r\n\r\nexport const initialState: ITopicsListState = {\r\n  isFetching: false,\r\n  items: []\r\n}","export interface IVotingItem {\r\n  text: string,\r\n  count: number\r\n}\r\n\r\nexport interface ITopicInfo {\r\n    id: number,\r\n    title: string,\r\n    forum?: string,\r\n    sectionId?: string,\r\n    created?: number,\r\n    authorId?: string,\r\n    author?: string,\r\n    updated?: number,\r\n    lastUser?: string,\r\n    count?: number,\r\n    down?: number,\r\n    closed?: number,\r\n    deleted?: number,\r\n    isVoting?: number,\r\n    voting?: IVotingItem[]\r\n  }\r\n\r\nexport interface ITopicMessage {\r\n  id: number,\r\n  n: number,\r\n  user: string,\r\n  userId: string,\r\n  text: string,\r\n  time: number,\r\n  vote: number\r\n}\r\n\r\nexport interface ITopicMessagesList extends Array<ITopicMessage> {}\r\n\r\nexport interface ITopicState {\r\n  isFetching: boolean;\r\n  items: ITopicMessagesList,\r\n  item0?: ITopicMessage,\r\n  info?: ITopicInfo,\r\n  error?: string,\r\n  lastUpdated?: number\r\n}\r\n\r\nexport const defaultInfo: ITopicInfo = {\r\n  id: 0,\r\n  title: \"\",\r\n  count: 0\r\n}\r\n\r\nexport const initialState: ITopicState = {\r\n  isFetching: false,\r\n  items: [],\r\n  info: defaultInfo\r\n}\r\n\r\n","import { fetchAndGetJson, urlTopicInfo } from '.'\r\nimport type { ITopicInfo } from 'src/data/topic'\r\n\r\ninterface IAPIResponse {\r\n  id: string,\r\n  text: string,\r\n  forum: string,\r\n  section: string,\r\n  created: string,\r\n  user_id: string,\r\n  user_name: string,\r\n  updated: string,\r\n  updated_name: string,\r\n  answers_count: string,\r\n  down: number,\r\n  closed: number,\r\n  deleted: number,\r\n  is_voting: number,\r\n  voting: {\r\n    select: string,\r\n    result: number\r\n  }[]\r\n}  \r\n\r\nfunction convertResponse(response: IAPIResponse): ITopicInfo {\r\n\r\n  let voting = response.voting.map(x => ({\r\n    text: x.select,\r\n    count: x.result\r\n  }));\r\n\r\n  return ({\r\n    id: parseInt(response.id),\r\n    title: response.text,\r\n    forum: response.forum,\r\n    sectionId: response.section,\r\n    created: parseInt(response.created) * 1000,\r\n    authorId: response.user_id,\r\n    author: response.user_name,\r\n    updated: parseInt(response.updated) * 1000,\r\n    lastUser: response.updated_name,\r\n    count: parseInt(response.answers_count),\r\n    down: response.down,\r\n    closed: response.closed,\r\n    deleted: response.deleted,\r\n    isVoting: response.is_voting,\r\n    voting\r\n  })\r\n\r\n}\r\n\r\nasync function fetchTopicInfo(id: number): Promise<ITopicInfo> {\r\n\r\n  const info = await fetchAndGetJson(urlTopicInfo, { id });\r\n  return convertResponse(info);\r\n\r\n}\r\n\r\nexport { fetchTopicInfo }","\r\nimport { fetchAndGetJson, urlTopicMessages } from '.'\r\nimport type { ITopicMessage, ITopicMessagesList } from 'src/data/topic'\r\n\r\ninterface IAPIRequest {\r\n  id: number,\r\n  from?: number,\r\n  to?: number\r\n}\r\n\r\nexport interface IRequest extends IAPIRequest {}\r\n\r\ninterface IAPIResponse {\r\n  id: string,\r\n  n: string,\r\n  user: string,\r\n  userId: string,\r\n  text: string,\r\n  utime: string,\r\n  vote: number\r\n}  \r\n\r\nfunction convertResponse(response: IAPIResponse): ITopicMessage {\r\n\r\n  return ({\r\n    id: parseInt(response.id),\r\n    n: parseInt(response.n),\r\n    user: response.user,\r\n    userId: response.userId,\r\n    text: response.text,\r\n    time: parseInt(response.utime) * 1000,\r\n    vote: response.vote\r\n  })\r\n\r\n}\r\n\r\nasync function fetchTopicMessages(params?: IRequest): Promise<ITopicMessagesList> {\r\n\r\n  const list = await fetchAndGetJson(urlTopicMessages, params);\r\n  return list.map(convertResponse);\r\n\r\n}\r\n\r\nasync function fetchTopicMessage(id: number, n: number): Promise<ITopicMessage> {\r\n\r\n  const to = (n === 0) ? n+1 : n;\r\n\r\n  const list = await fetchAndGetJson(urlTopicMessages, {id, from: n, to});\r\n  return list.map(convertResponse).find((item: ITopicMessage) => item.n === n);\r\n\r\n}\r\n\r\nexport { fetchTopicMessages, fetchTopicMessage }","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nimport { fetchTopicInfo } from 'src/api/topicinfo'\r\nimport { fetchTopicMessage, fetchTopicMessages } from 'src/api/topicMessages'\r\nimport { ITopicInfo } from '.';\r\n\r\nexport const requestTopic = createAction('REQUEST_TOPIC');\r\nexport const receiveTopic = createAction('RECEIVE_TOPIC', (info, item0, list) => ({\r\n  payload: {\r\n    info,\r\n    item0,\r\n    list\r\n  },\r\n  error: false\r\n}));\r\nexport const receiveTopicFailed = createAction('RECEIVE_TOPIC', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\nexport const clearTopicMessages = createAction('CLEAR_TOPIC_MESSAGES');\r\n\r\nexport const requestNewMessages = createAction('REQUEST_NEW_MESSAGES');\r\nexport const receiveNewMessages = createAction('RECEIVE_NEW_MESSAGES', (list) => ({\r\n  payload: {\r\n    list\r\n  },\r\n  error: false\r\n}));\r\nexport const receiveNewMessagesFailed = createAction('RECEIVE_NEW_MESSAGES', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\n\r\nexport const getTopic = (params: any, item0: any): any => async (dispatch: any) => {\r\n\r\n  dispatch(requestTopic())\r\n\r\n  let info: ITopicInfo;\r\n  try {\r\n    info = await fetchTopicInfo(params.id);\r\n  } catch (e) {\r\n    console.error(e);\r\n    info = {\r\n      id: params.id,\r\n      title: '',\r\n      count: 0\r\n    };\r\n  }\r\n  try {\r\n    let page = params.page || 1;\r\n\r\n    let _item0 = item0;\r\n    let _items;\r\n    if (page === 'last20') {\r\n\r\n      if (info.count > 21) {\r\n\r\n        if (!_item0) {\r\n          _item0 = await fetchTopicMessage(params.id, 0);\r\n        }\r\n\r\n        let first = info.count - 20;\r\n        _items = await fetchTopicMessages({\r\n          id: params.id,\r\n          from: first,\r\n          to: 1010\r\n        });\r\n\r\n      } else {\r\n        let items = await fetchTopicMessages({\r\n          id: params.id,\r\n          from: 0,\r\n          to: 1010\r\n        });\r\n        _item0 = items[0];\r\n        _items = items.slice(1);\r\n      }\r\n\r\n    } else {\r\n\r\n      page = +page;\r\n      let first = 0;\r\n      let last = page * 100 - 1;\r\n\r\n      if (page > 1) {\r\n\r\n        first = (page - 1) * 100;\r\n        if (!_item0) {\r\n          _item0 = await fetchTopicMessage(params.id, 0);\r\n        }\r\n\r\n        _items = await fetchTopicMessages({\r\n          id: params.id,\r\n          from: first,\r\n          to: last\r\n        });\r\n\r\n      } else {\r\n        if (_item0)\r\n          first = 1;\r\n        else\r\n          first = 0;\r\n\r\n        let items = await fetchTopicMessages({\r\n          id: params.id,\r\n          from: first,\r\n          to: last\r\n        });\r\n\r\n        if (_item0) {\r\n          _items = items;\r\n        } else {\r\n          _item0 = items[0];\r\n          _items = items.slice(1);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    if (info.count === 0 && _items.length > 0)\r\n      info.count = _items[_items.length - 1].n;\r\n\r\n    if (page === 'last20' && _items.length > 20) {\r\n      _items = _items.slice(-20);\r\n    }\r\n\r\n    dispatch(receiveTopic(info, _item0, _items));\r\n\r\n  } catch (error) {\r\n\r\n    console.error('Failed to fetch topic:', error);\r\n    dispatch(receiveTopicFailed(error));\r\n\r\n  }\r\n}\r\n\r\nconst shouldFetch = (state) => {\r\n  const topic = state.topic;\r\n  if (!topic) {\r\n    return true\r\n  }\r\n  if (topic.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const getTopicIfNeeded = (params: any, item0: any): any => (dispatch: any, getState: any) => {\r\n  if (shouldFetch(getState())) {\r\n    return dispatch(getTopic(params, item0));\r\n  }\r\n}\r\n\r\nexport type FetchNewMessageseParams = {\r\n  id: number | string,\r\n  last: number\r\n}\r\n\r\nexport const getNewMessages = (params: any): any => async (dispatch: any) => {\r\n\r\n  dispatch(requestNewMessages());\r\n\r\n  try {\r\n    const list = await fetchTopicMessages({\r\n      id: params.id,\r\n      from: +params.last + 1,\r\n      to: 1010\r\n    });\r\n    dispatch(receiveNewMessages(list));\r\n\r\n  } catch (error) {\r\n    console.error('Failed to fetch new messages:', error);\r\n    dispatch(receiveNewMessagesFailed(error));\r\n  }\r\n\r\n}\r\n\r\nexport const getNewMessagesIfNeeded = (params: FetchNewMessageseParams): any => (dispatch: any, getState: any) => {\r\n  if (shouldFetch(getState())) {\r\n    return dispatch(getNewMessages(params));\r\n  }\r\n}","//@flow \r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { defaultInfo, initialState } from '.';\r\n\r\nimport { requestTopic, receiveTopic, clearTopicMessages, requestNewMessages, receiveNewMessages } from './actions'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(requestTopic, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveTopic, (state, action) => {\r\n\r\n      if (action.error) {\r\n        state.error = action.error.toString();\r\n      } else {\r\n        state.items = action.payload.list;\r\n        state.item0 = action.payload.item0;\r\n        state.info = action.payload.info;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(clearTopicMessages, (state) => {\r\n      state.items = [];\r\n      state.info = defaultInfo;\r\n      delete state.item0;\r\n      delete state.error;\r\n    })\r\n    .addCase(requestNewMessages, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveNewMessages, (state, action) => {\r\n      if (action.error) {\r\n        state.error = action.payload.toString();\r\n      } else {\r\n        state.isFetching = false;\r\n        state.items = state.items.concat(action.payload.list);\r\n        if (state.items.length > 0)\r\n          state.info.count = state.items[state.items.length - 1].n;\r\n      }\r\n    })\r\n})\r\n\r\nexport default reducer;","import { fetchJsonpAndGetJson, urlSections } from '.'\r\nimport type { ISectionsList, ISectionItem } from 'src/data/sections'\r\n\r\ninterface IAPIResponse {\r\n  id: number,\r\n  forum: string,\r\n  shortn: string,\r\n  fulln: string\r\n}\r\n\r\nfunction convertResponse(response: IAPIResponse): ISectionItem {\r\n\r\n  return ({\r\n    id: response.id,\r\n    forum: response.forum,\r\n    code: response.shortn,\r\n    name: response.fulln,\r\n  })\r\n\r\n}\r\n\r\nexport const fetchSections = async (): Promise<ISectionsList> => {\r\n  const list = await fetchJsonpAndGetJson(urlSections);\r\n  return list.map(convertResponse);\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nimport { fetchSections } from 'src/api/sections'\r\nimport { RootState } from '../store';\r\n\r\nexport const requestSections = createAction('REQUEST_SECTIONS');\r\nexport const receiveSections = createAction('RECEIVE_SECTIONS', list => ({\r\n  payload: {\r\n    list,\r\n  },\r\n  error: false\r\n}));\r\n\r\nexport const receiveSectionsFailed = createAction('RECEIVE_SECTIONS', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\n\r\nexport const getSections = () => async (dispatch: any) => {\r\n\r\n  dispatch(requestSections());\r\n\r\n  try {\r\n    \r\n    const list = await fetchSections();\r\n    dispatch(receiveSections(list));\r\n\r\n  } catch (e) {\r\n\r\n    dispatch(receiveSectionsFailed(e.message));\r\n    console.error(e);\r\n\r\n  }\r\n\r\n}\r\n\r\nconst shouldGetSections = (state: RootState): boolean => {\r\n\r\n  const sections = state.sections;\r\n\r\n  if (!sections)\r\n    return true\r\n\r\n  if (sections.isFetching)\r\n    return false\r\n\r\n  if (sections.items.length > 0)\r\n    return false;\r\n\r\n  return true\r\n}\r\n\r\nexport const getSectionsIfNeeded = (): any => (dispatch: any, getState: any) => {\r\n  if (shouldGetSections(getState())) {\r\n    return dispatch(getSections());\r\n  }\r\n}","import { createReducer } from '@reduxjs/toolkit'\r\n\r\nimport { requestSections, receiveSections } from './actions'\r\nimport { groupBy } from 'src/utils'\r\nimport { initialState } from '.'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(requestSections, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveSections, (state, action) => {\r\n\r\n      if (action.error) {\r\n        state.error = action.payload.toString();\r\n      } else {\r\n        state.items = action.payload.list;\r\n        state.tree = groupBy(state.items, item => item.forum);\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n})\r\n\r\nexport default reducer;\r\n","export interface ISectionItem {\r\n  id: number;\r\n  forum: string,\r\n  code: string,\r\n  name: string,\r\n}\r\n\r\nexport interface ISectionsList extends Array<ISectionItem> {}\r\n\r\nexport interface ISectionsTree{\r\n  [key: string]: ISectionItem[]\r\n}\r\n\r\nexport interface ISectionsListState {\r\n  isFetching: boolean;\r\n  items: ISectionsList,\r\n  tree?: {},\r\n  error?: string,\r\n  lastUpdated?: number\r\n}\r\n\r\nexport const initialState: ISectionsListState = {\r\n  isFetching: false,\r\n  items: [],\r\n  tree: {}\r\n}\r\n","export interface IOptionsItems {\r\n  theme: 'yellow' | 'lightgray' | 'dark',\r\n  topicsPerPage: string,\r\n  autoRefreshTopicsList: string,\r\n  autoRefreshTopicsListInterval: string,\r\n  autoRefreshTopic: string,\r\n  autoRefreshTopicInterval: string,\r\n  tooltipDelay: string,\r\n  showTooltips: string,\r\n  showYoutubeVideoTitle: string,\r\n  replaceCatalogMista: string,\r\n  fixBrokenLinks: string\r\n}\r\n\r\nexport interface IOptionsState {\r\n  voteColors: Array<string>,\r\n  items: IOptionsItems,\r\n  show?: boolean\r\n};\r\n\r\nexport const defaultOptionsState: IOptionsState = {\r\n  voteColors: [\r\n    \"#FF1616\", //1\r\n    \"#1A861A\", //2\r\n    \"#0023FF\", //3\r\n    \"#FF6B18\", //4\r\n    \"#9B3A6E\", //5\r\n    \"#567655\", //6\r\n    \"#233345\", //7\r\n    \"#CC0000\", //8\r\n    \"#00CCCC\", //9\r\n    \"#0000CC\", //10\r\n  ],\r\n  items: {\r\n    theme: 'lightgray',\r\n    topicsPerPage: '20',\r\n    autoRefreshTopicsList: 'false',\r\n    autoRefreshTopicsListInterval: '60',\r\n    autoRefreshTopic: 'true',\r\n    autoRefreshTopicInterval: '60',\r\n    //tooltips\r\n    showTooltips: 'true',\r\n    tooltipDelay: '500',\r\n    //links\r\n    showYoutubeVideoTitle: 'true',\r\n    replaceCatalogMista: 'true',\r\n    fixBrokenLinks: 'true',\r\n  }\r\n}","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport const readOptions = createAction('READ_OPTIONS');\r\nexport const saveOptions = createAction('SAVE_OPTIONS', options => ({\r\n  payload: {\r\n    options,\r\n  }\r\n}));\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { defaultOptionsState, IOptionsState } from '.';\r\nimport { readOptions, saveOptions } from './actions'\r\n\r\n\r\nconst readOption = (name: string, defaultValue: string): string => {\r\n  return window.localStorage.getItem(name) || defaultValue;\r\n}\r\n\r\nconst readAllOptions = (): IOptionsState => {\r\n  \r\n  let state: IOptionsState = defaultOptionsState;\r\n  for (let key in state.items) {\r\n    state.items[key] = readOption(key, state.items[key]);\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nconst reducer = createReducer(readAllOptions(), (builder) => {\r\n  builder\r\n    .addCase(readOptions, (state) => {\r\n      let items = Object.assign({}, defaultOptionsState.items);\r\n      for (let key in items) {\r\n        items[key] = readOption(key, defaultOptionsState.items[key]);\r\n      }\r\n      state.items = items;\r\n    })\r\n    .addCase(saveOptions, (state, action) => {\r\n      for (let key in action.payload.options) {\r\n        const value = String(action.payload.options[key]); \r\n        window.localStorage.setItem(key, value);\r\n        state.items[key] = value;\r\n      }\r\n    })\r\n  })\r\n\r\nexport default reducer;","import { fetchJsonpAndGetJson, urlCookies } from '.'\r\nimport { ILogin } from 'src/data/login';\r\n\r\nexport type IAPIResponse = {\r\n  cookie: {\r\n    entr_id: string,\r\n    entr_key: string,\r\n    entr_hash: string,\r\n    musthave: string,\r\n    hotlog: string\r\n  },\r\n  session: {\r\n    entered: number,\r\n    user_id: string,\r\n    user_name: string,\r\n    user_hash: string,\r\n    is_moderator: number,\r\n    light_moderator: number,\r\n    section: string,\r\n    show_moderator_tools: number,\r\n    kb: string,\r\n    registered_unixtime: string,\r\n    guid: string,\r\n    last_error?: string,\r\n    user: {\r\n      id: string,\r\n      name: string,\r\n      is_moderator: boolean,\r\n      light_moderator: boolean,\r\n      kb: boolean,\r\n      section_owner: boolean,\r\n      section: string,\r\n      registered_unixtime: string,\r\n      balance: number\r\n    }\r\n  }\r\n}\r\n\r\nfunction convertResponse(response: IAPIResponse): ILogin {\r\n\r\n  const { session } = response;\r\n\r\n  return ({\r\n    userId: Number(session?.user_id),\r\n    userName: session?.user_name,\r\n    userHash: session?.user_hash,\r\n    lastError: session?.last_error\r\n  })\r\n\r\n}\r\n\r\nasync function fetchCookies(): Promise<ILogin| undefined>  {\r\n\r\n  const response = await fetchJsonpAndGetJson(urlCookies);\r\n  return convertResponse(response);\r\n\r\n}\r\n\r\nexport { fetchCookies }","import { domain, urlLogin, urlLogout, paramsToString } from '.'\r\n\r\nexport interface IRequest {\r\n  username: string,\r\n  password: string,\r\n}\r\n\r\nexport const fetchLogin = async (params: IRequest): Promise<void> => {\r\n  await fetch(`${domain}/${urlLogin}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', {user_name: params.username, user_password: params.password}),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Accept': 'text/html,application/xhtml+xml,application/xml',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: 'follow'\r\n  });\r\n}\r\n\r\nexport const fetchLogout = async (): Promise<void> => {\r\n  const fullUrl = `${domain}/${urlLogout}`;\r\n  await fetch(fullUrl, {\r\n    mode: 'no-cors',\r\n    credentials: 'include'\r\n  });\r\n}","import { createAction } from '@reduxjs/toolkit'\r\n\r\nimport { fetchCookies } from 'src/api/cookies';\r\nimport { fetchLogin, fetchLogout } from 'src/api/login'\r\nimport { RootState } from '../store';\r\n\r\nexport const loginStart = createAction('LOGIN_START');\r\nexport const loginComplete = createAction('LOGIN_COMPLETE', (userId, userName, userHash) => ({\r\n  payload: {\r\n    userId,\r\n    userName,\r\n    userHash,\r\n  },\r\n  error: false\r\n}));\r\nexport const loginFailed = createAction('LOGIN_COMPLETE', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\n\r\nexport const logoutStart = createAction('LOGOUT_START');\r\nexport const logoutComplete = createAction('LOGOUT_COMPLETE');\r\n\r\nexport const checkLoginStart = createAction('CHECK_LOGIN_START');\r\n\r\nconst shouldLogin = (state: RootState): boolean => {\r\n  const { login } = state;\r\n  if (!login) {\r\n    return true\r\n  }\r\n  if (login.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const checkLogin = () => async (dispatch: any) => {\r\n\r\n  dispatch(checkLoginStart());\r\n\r\n  let json;\r\n  try {\r\n    json = await fetchCookies();\r\n  } catch (e) {\r\n    dispatch(loginFailed(e));\r\n    return;\r\n  }\r\n \r\n  if (json && json.userId){\r\n\r\n    let error = (json.lastError || '').trim();\r\n    if (error === 'Не указано сообщение.') error = '';\r\n    dispatch(loginComplete(\r\n      json.userId,\r\n      json.userName,\r\n      json.userHash\r\n    ));\r\n  } else\r\n    dispatch(loginFailed(''));\r\n}\r\n\r\nexport const checkLoginIfNeeded = () => (dispatch: any, getState: any) => {\r\n  if (shouldLogin(getState())) {\r\n    return dispatch(checkLogin())\r\n  }\r\n}\r\n\r\nexport const doLogout = () => async (dispatch: any) => {\r\n\r\n  dispatch(logoutStart());\r\n\r\n  try {\r\n    await fetchLogout();\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  \r\n  dispatch(logoutComplete());\r\n  dispatch(checkLogin());\r\n\r\n}\r\n\r\nexport const doLogin = (username: string, password: string): any => async (dispatch: any) => {\r\n\r\n  dispatch(loginStart());\r\n  try {\r\n\r\n    await fetchLogin({\r\n      username: encodeURIComponent(username),\r\n      password: encodeURIComponent(password)\r\n    })\r\n\r\n    dispatch(checkLogin());\r\n\r\n  } catch (err) {\r\n    console.error('Login error :', err);\r\n    dispatch(loginFailed(err.message));\r\n  }\r\n\r\n}\r\n\r\nexport const doLoginIfNeeded = (username: string, password: string): any => (dispatch: any, getState: any) => {\r\n  if (shouldLogin(getState())) {\r\n    return dispatch(doLogin(username, password))\r\n  }\r\n}","import { createReducer } from '@reduxjs/toolkit'\r\nimport { initialState } from '.';\r\nimport { loginStart, loginComplete, logoutStart, logoutComplete, checkLoginStart } from './actions'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(loginStart, (state) => {\r\n      state.isFetching = true;\r\n    })\r\n    .addCase(checkLoginStart, (state) => {\r\n      state.isFetching = true;\r\n    })    \r\n    .addCase(loginComplete, (state, action) => {\r\n      if (action.error) {\r\n        state.logged = false;\r\n        state.error = action.payload.toString();\r\n      } else {\r\n\r\n        state.userId = action.payload.userId;\r\n        state.userName = action.payload.userName;\r\n        state.userHash = action.payload.userHash;\r\n        state.logged = true;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(logoutStart, (state) => {\r\n      state.isFetching = true;\r\n    })\r\n    .addCase(logoutComplete, (state) => {\r\n      state.isFetching = false;\r\n      state.logged = false;\r\n      delete state.userId;\r\n      delete state.userName;\r\n      delete state.userHash;\r\n      delete state.error;\r\n    })    \r\n})\r\n\r\nexport default reducer;\r\n","export interface ILogin {\r\n  userId?: number;\r\n  userName?: string,\r\n  userHash?: string,\r\n  lastError?: string,\r\n}\r\n\r\nexport interface ILoginState {\r\n  logged?: boolean,\r\n  userId?: number,\r\n  userName?: string,\r\n  userHash?: string,\r\n  lastError?: string,\r\n  error?: string,\r\n  lastUpdated?: number,\r\n  isFetching: boolean,\r\n}\r\n\r\nexport const initialState: ILoginState = {\r\n  isFetching: false\r\n}\r\n","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\nimport { RootState } from '../store'\r\n\r\nexport type TooltipKeys = {\r\n  type: 'TOPIC' | 'TOPIC_PREVIEW',\r\n  topicId: string,\r\n  number: number\r\n}\r\n\r\nexport type Coords = {\r\n  x: number,\r\n  y: number\r\n}\r\n\r\nexport type TooltipItem = {\r\n  keys: TooltipKeys,\r\n  coords: Coords\r\n}\r\n\r\nexport const createTooltip = createAction('CREATE_TOOLTIP', (keys, coords) => ({\r\n  payload: {\r\n    keys,\r\n    coords\r\n  },\r\n}));\r\nexport const closeTooltip = createAction('CLOSE_TOOLTIP', keys => ({\r\n  payload: {\r\n    keys\r\n  },\r\n}));\r\nexport const clearTooltips = createAction('CLEAR_TOOLTIPS');\r\n\r\nexport const showTooltip = (keys: TooltipKeys, coords: Coords): any => async (dispatch: any) => {\r\n\r\n  if (keys.type === 'TOPIC' || keys.type === 'TOPIC_PREVIEW') {\r\n    dispatch(createTooltip(keys, coords));\r\n  }\r\n}\r\n\r\nexport const clearTooltipsIfNeeded = (): any => (dispatch: any, getState: any) => {\r\n  const state: RootState = getState();\r\n  if (state.tooltips.items.length > 0) {\r\n    dispatch(clearTooltips());;\r\n  }\r\n}","//@flow\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { initialState } from '.';\r\nimport { createTooltip, closeTooltip, clearTooltips } from './actions'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(createTooltip, (state, action) => {\r\n      const hash = JSON.stringify(action.payload.keys);\r\n      const index = state.items.findIndex(item => item.hash === hash);\r\n      let zIndex = 0;\r\n      if (state.items.length)\r\n        zIndex = state.items[state.items.length - 1].zIndex + 1;\r\n      if (index === - 1)\r\n        state.items.push({\r\n          keys: action.payload.keys,\r\n          coords: action.payload.coords,\r\n          hash,\r\n          zIndex \r\n        })\r\n      else {\r\n        //state.list = moveToEnd(state.list, index);\r\n        state.items[state.items.length - 1].zIndex = zIndex;\r\n      }  \r\n    })\r\n    .addCase(closeTooltip, (state, action) => {\r\n      let hash = JSON.stringify(action.payload.keys);\r\n      state.items = state.items.filter(val => val.hash !== hash);\r\n    })\r\n    .addCase(clearTooltips, (state) => {\r\n      state.items = [];\r\n    })    \r\n})\r\n\r\nexport default reducer;\r\n","export interface ITooltipKeys {\r\n  type: string,\r\n  topicId: number,\r\n  number: number\r\n}\r\n\r\nexport interface ICoords {\r\n  x: number,\r\n  y: number\r\n}\r\n\r\nexport interface ITooltipItem {\r\n  hash: string,\r\n  keys: ITooltipKeys,\r\n  coords: ICoords,\r\n  zIndex: number\r\n}\r\n\r\nexport interface ITooltipsList extends Array<ITooltipItem> {}\r\n\r\nexport interface ITooltipsState {\r\n  items: ITooltipsList,\r\n}\r\n\r\nexport const initialState: ITooltipsState = {\r\n  items: []\r\n}","import { domain, paramsToString, urlNewTopic } from \".\";\r\n\r\nexport interface IRequest {\r\n  action: \"new\",\r\n  rnd: number,\r\n  topic_text: string,\r\n  message_text: string,\r\n  target_section: string,\r\n  target_forum: string,\r\n  voting: number,\r\n  select1?: string,\r\n  select2?: string,\r\n  select3?: string,\r\n  select4?: string,\r\n  select5?: string,\r\n  select6?: string,\r\n  select7?: string,\r\n  select8?: string,\r\n  select9?: string,\r\n  select10?: string\r\n}\r\n\r\nexport const fetchNewTopic = async (params: IRequest): Promise<any> => {\r\n\r\n  await fetch(`${domain}/${urlNewTopic}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    }\r\n  });\r\n}","import { createAction } from '@reduxjs/toolkit'\r\n\r\nimport { fetchNewTopic, IRequest } from 'src/api/newtopic';\r\nimport { RootState } from '../store';\r\n\r\nexport type postNewTopicParams = {\r\n  subject: string,\r\n  text: string,\r\n  section: number,\r\n  forum: string,\r\n  isVoting: boolean,\r\n  votingItems?: Array<string>,\r\n  onSuccess?: () => void\r\n};\r\n\r\nexport const postNewTopicStart = createAction('POST_NEW_TOPIC_START');\r\nexport const postNewTopicComplete = createAction('POST_NEW_TOPIC_COMPLETE');\r\nexport const postNewTopicError = createAction('POST_NEW_TOPIC_ERROR', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\nexport const newTopicText = createAction('NEW_TOPIC_TEXT', text => ({\r\n  payload: {\r\n    text\r\n  },\r\n  error: false\r\n}));\r\nexport const newTopicClear = createAction('NEW_TOPIC_CLEAR');\r\nexport const newTopicSubject = createAction('NEW_TOPIC_SUBJECT', text => ({\r\n  payload: {\r\n    text\r\n  },\r\n  error: false\r\n}));\r\nexport const newTopicSection = createAction('NEW_TOPIC_SECTION', section => ({\r\n  payload: {\r\n    section\r\n  },\r\n  error: false\r\n}));\r\nexport const newTopicShowVoting = createAction('SHOW_VOTING', show => ({\r\n  payload: {\r\n    show\r\n  },\r\n  error: false\r\n}));\r\n\r\nexport const shouldPostNewTopic = (state: RootState): boolean => {\r\n  const newTopic = state.newTopic;\r\n  if (!newTopic) {\r\n    return false\r\n  }\r\n  if (newTopic.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const postNewTopicIfNeeded = (params: postNewTopicParams): any => (dispatch: any, getState: any) => {\r\n  if (shouldPostNewTopic(getState())) {\r\n    return dispatch(postNewTopic(params));\r\n  }\r\n}\r\n\r\nconst postNewTopic = (params: postNewTopicParams) => async (dispatch: any) => {\r\n\r\n  dispatch(postNewTopicStart());\r\n\r\n  let fetchParams: IRequest = {\r\n    message_text: encodeURIComponent(params.text),\r\n    topic_text: encodeURIComponent(params.subject),\r\n    target_section: String(params.section),\r\n    target_forum: params.forum.toLowerCase(),\r\n    action: 'new',\r\n    rnd: Math.round(Math.random() * 10000000000),\r\n    voting: params.isVoting ? 1 : 0\r\n  };\r\n\r\n  if (params.votingItems)\r\n    for (let i = 0; i < params.votingItems.length; i++) {\r\n      fetchParams[`section${i + 1}`] = params.votingItems[i];\r\n    }\r\n\r\n  await fetchNewTopic(fetchParams);\r\n\r\n  dispatch(postNewTopicComplete());\r\n\r\n  if (params.onSuccess)\r\n    params.onSuccess();\r\n}","//@flow\r\nimport { createReducer } from '@reduxjs/toolkit'\r\n\r\nimport { postNewTopicStart, postNewTopicComplete, postNewTopicError, newTopicText, \r\n  newTopicClear, newTopicSubject, newTopicSection, newTopicShowVoting} from './actions'\r\n\r\nimport { initialState } from '.'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(postNewTopicStart, (state) => {\r\n      state.isFetching = true;\r\n      delete state.error;\r\n    })\r\n    .addCase(postNewTopicComplete, (state) => {\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(postNewTopicError, (state, action) => {\r\n      state.isFetching = false;\r\n      state.error = action.payload;\r\n    })\r\n    .addCase(newTopicText, (state, action) => {\r\n      state.text = action.payload.text;\r\n    })    \r\n    .addCase(newTopicClear, (state) => {\r\n      state.text = '';\r\n      state.subject = '';\r\n      state.isVoting = false;\r\n    })    \r\n    .addCase(newTopicSubject, (state, action) => {\r\n      state.subject = action.payload.text;\r\n    })    \r\n    .addCase(newTopicShowVoting, (state, action) => {\r\n      state.isVoting = action.payload.show;\r\n    })   \r\n    .addCase(newTopicSection, (state, action) => {\r\n      state.section = action.payload.section;\r\n      state.forum = action.payload.section == null ? '' : action.payload.section.forum.toLowerCase()\r\n    })   \r\n  })\r\n\r\nexport default reducer;","import { ISectionItem } from \"../sections\";\r\n\r\nexport type NewTopicState = {\r\n  isFetching: boolean,\r\n  section: ISectionItem,\r\n  text: string,\r\n  subject: string,\r\n  forum: string,\r\n  isVoting: boolean,\r\n  error?: string\r\n};\r\n\r\nexport const initialState: NewTopicState = {\r\n  isFetching: false,\r\n  section: null,\r\n  text: '',\r\n  subject: '',\r\n  forum: '1C',\r\n  isVoting: false\r\n}","import { domain, paramsToString, urlNewMessage } from \".\";\r\n\r\n// New message\r\nexport interface IRequest {\r\n  message_text: string,\r\n  action: \"new\",\r\n  topic_id: string,\r\n  rnd: number,\r\n  voting_select?: number,\r\n  as_admin?: boolean\r\n}\r\n\r\nexport const fetchNewMessage = async (params: IRequest): Promise<any> => {\r\n\r\n  let url = urlNewMessage.replace(':id', params.topic_id);\r\n\r\n  let result = await fetch(`${domain}/${url}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Accept': 'text/html,application/xhtml+xml,application/xml',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: 'follow'\r\n  });\r\n\r\n  return result;\r\n}","import { createAction } from '@reduxjs/toolkit'\r\nimport { fetchNewMessage, IRequest } from 'src/api/newmessage'\r\n\r\nexport const postNewMessageStart = createAction('POST_NEW_MESSAGE_START');\r\nexport const postNewMessageComplete = createAction('POST_NEW_MESSAGE_COMPLETE');\r\nexport const newMessageText = createAction('NEW_MESSAGE_TEXT', text => ({\r\n  payload: {\r\n    text,\r\n  }\r\n}));\r\nexport const addMessageText = createAction('ADD_MESSAGE_TEXT', text => ({\r\n  payload: {\r\n    text,\r\n  }\r\n}));\r\n\r\nexport type PostNewmessageParams = {\r\n  text: string,\r\n  topicId: string,\r\n  voting_select?: number,\r\n  onSuccess?: () => void\r\n}\r\n\r\nexport const postNewMessage = (params: PostNewmessageParams): any => async (dispatch: any) => {\r\n\r\n  dispatch(postNewMessageStart());\r\n\r\n  let fetchParams: IRequest = {\r\n    message_text: encodeURIComponent(params.text),\r\n    action: \"new\",\r\n    topic_id: params.topicId,\r\n    rnd: Math.round(Math.random() * 10000000000)\r\n  };\r\n\r\n  if (params.voting_select)\r\n    fetchParams.voting_select = params.voting_select;\r\n\r\n  try {\r\n    await fetchNewMessage(fetchParams);\r\n    await dispatch(postNewMessageComplete());\r\n    if (params.onSuccess)\r\n      params.onSuccess();\r\n\r\n  } catch (err) {\r\n    console.error(\"Failed to post new message: \" + err);\r\n  }\r\n}\r\n","import { configureStore  } from '@reduxjs/toolkit'\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport logger from 'redux-logger' // eslint-disable-line @typescript-eslint/no-unused-vars\r\n\r\nimport topicsList from './topicslist/reducer'\r\nimport topic from './topic/reducer'\r\nimport sections from './sections/reducer'\r\nimport options from './options/reducer'\r\nimport login from './login/reducer'\r\nimport tooltips from './tooltips/reducer'\r\nimport newTopic from './newtopic/reducer'\r\nimport newMessage from './newmessage/reducer'\r\n\r\nconst reducer = {\r\n  topicsList,\r\n  topic,\r\n  sections,\r\n  options,\r\n  login,\r\n  tooltips,\r\n  newTopic,\r\n  newMessage\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  //middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n  devTools: process.env.NODE_ENV !== 'production'\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n\r\nexport default store","//@flow\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { initialState } from '.';\r\nimport { addMessageText, newMessageText, postNewMessageComplete, postNewMessageStart } from './actions'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(postNewMessageStart, (state) => {\r\n      state.isFetching = true;\r\n    })\r\n    .addCase(postNewMessageComplete, (state) => {\r\n      state.isFetching = false;\r\n    })  \r\n    .addCase(newMessageText, (state, action) => {\r\n      state.text = action.payload.text;\r\n    })  \r\n    .addCase(addMessageText, (state, action) => {\r\n      state.text += action.payload.text;\r\n    })            \r\n  })\r\n\r\nexport default reducer;","\r\nexport type INewMessageState = {\r\n  isFetching: boolean;\r\n  text: string\r\n};\r\n\r\nexport const initialState: INewMessageState = {\r\n  isFetching: false,\r\n  text: ''\r\n}","import React, { FC, ReactElement } from 'react'\r\nimport { Dropdown } from 'react-bootstrap'\r\n\r\nimport { doLogout } from 'src/data/login/actions'\r\nimport { domain } from 'src/api'\r\n\r\nimport { useAppDispatch } from 'src/data/store'\r\n\r\ntype IProps = {\r\n  userId: number,\r\n  userName: string\r\n}\r\n\r\ntype HTMLProps = React.HTMLProps<HTMLSpanElement>\r\nconst CustomToggle = React.forwardRef<HTMLSpanElement, HTMLProps>(({ children, onClick }, ref) => (\r\n  <span\r\n    ref={ref}\r\n    style={{ cursor: \"pointer\" }}\r\n    className='link'\r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n  >\r\n    {children}\r\n  </span>\r\n));\r\n\r\nconst LoggedUser: FC<IProps> = ({ userId, userName }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onLogout = (event: any) => {\r\n    event.preventDefault();\r\n    dispatch(doLogout());\r\n  }\r\n\r\n  const onMenuSelect = (eventKey: any, event: any): any => {\r\n    if (eventKey === 'exit') {\r\n      onLogout(event);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ float: \"left\" }}>\r\n      <Dropdown id=\"dropdown-custom-menu\" onSelect={onMenuSelect}>\r\n        <span>Привет, </span>\r\n        <Dropdown.Toggle as={CustomToggle}>{userName} ▼</Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item eventKey=\"profile\" href={`${domain}/users.php?id=${userId}`}>Профиль</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"myTopics\" href={`#/index.php?user_id=${userId}`}>Мои темы</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item eventKey=\"options\" href={`#/options.php`}>Настройки</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item eventKey=\"exit\">Выход</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoggedUser;","//@flow\r\nimport React, { FC, ReactElement, useState } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { FormControl, Button } from 'react-bootstrap'\r\n\r\nimport { doLoginIfNeeded } from 'src/data/login/actions'\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\n\r\nconst mapState = (state: RootState) => {\r\n  return state.login;\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst LoginForm: FC<ConnectedProps<typeof connector>> = (props): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onLogin = (event) => {\r\n    event.preventDefault();\r\n    dispatch(doLoginIfNeeded(username, password));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form name=\"enterform\" className=\"flex-row\" style={{ flexWrap: \"wrap\" }}>\r\n        <FormControl\r\n          type=\"text\"\r\n          placeholder=\"Имя\"\r\n          value={username}\r\n          onChange={e => setUsername(e.target.value)}\r\n          size=\"sm\"\r\n          style={{ marginRight: \"5px\", flex: \"0 1 300px\" }}\r\n        />\r\n        <FormControl\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          maxLength={20}\r\n          autoComplete=\"off\"\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n          size=\"sm\"\r\n          style={{ marginRight: \"5px\", flex: \"0 1 300px\" }}\r\n        />\r\n        <Button\r\n          size=\"sm\"\r\n          variant=\"light\"\r\n          onClick={onLogin}\r\n        >Войти</Button>\r\n      </form>\r\n      <p style={{ margin: \"0px\" }}>Войти можно на сайте <a href=\"https://forum.mista.ru/\">forum.mista.ru</a></p>\r\n      <a rel=\"nofollow\" href=\"https://forum.mista.ru/user_registration.php\">Регистрация</a>\r\n      <span style={{ margin: \"5px\" }}>|</span>\r\n      <a rel=\"nofollow\" href=\"https://forum.mista.ru/remember_password.php\">Забыли пароль?</a>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default connector(LoginForm);","import React, { FC, ReactElement } from 'react'\r\n\r\nimport './error.css'\r\n\r\ntype IProps = {\r\n  text: string\r\n}\r\n\r\nconst ErrorElem: FC<IProps> = ({ text }): ReactElement => {\r\n  if (!text)\r\n    return null;\r\n\r\n  return (\r\n    <div className=\"error\" dangerouslySetInnerHTML={{ __html: text }}></div>\r\n  )\r\n}\r\n\r\nexport default ErrorElem;","import React, { FC, ReactElement, useEffect } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport LoggedUser from './logged_user'\r\nimport LoginForm from './login_form'\r\nimport ErrorElem from '../common/error'\r\n\r\nimport { checkLoginIfNeeded } from 'src/data/login/actions'\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\n\r\nconst mapState = (state: RootState) => {\r\n  return state.login;\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst Login: FC<ConnectedProps<typeof connector>> = ({ logged, userId, userName, error }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(checkLoginIfNeeded());\r\n  }, [dispatch]);\r\n\r\n  let elem: ReactElement;\r\n  if (logged === true)\r\n    elem = <LoggedUser userId={userId} userName={userName} />\r\n  else if (logged === false)\r\n    elem = <LoginForm />\r\n  else\r\n    elem = null;\r\n\r\n  return (\r\n    <>\r\n      {elem}\r\n      {error && <ErrorElem text={error} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connector(Login);","import React, { FC, ReactElement, useEffect } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nimport { getSectionsIfNeeded } from 'src/data/sections/actions'\r\n\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\n\r\nimport type { ISectionItem, ISectionsList, ISectionsTree } from 'src/data/sections'\r\n\r\ntype IProps = {\r\n  id: string,\r\n  items: ISectionsList,\r\n  tree?: ISectionsTree,\r\n  defaultValue: string,\r\n  selected: string,\r\n  style?: {},\r\n  size?: 'sm' | 'lg',\r\n  onChange: (e: any, value: ISectionItem) => void\r\n}\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const { items, tree } = state.sections;\r\n\r\n  return {\r\n    items,\r\n    tree\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst Sections: FC<ConnectedProps<typeof connector> & IProps> = (props): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getSectionsIfNeeded());\r\n  }, [dispatch]);\r\n\r\n  const onSelect: (e: any) => void = (e: any) => {\r\n\r\n    const { items, onChange } = props;\r\n\r\n    if (onChange) {\r\n      const code = e.currentTarget.value;\r\n      const arr = items.filter(item => item.code === code);\r\n      if (arr.length > 0)\r\n        onChange(e, arr[0]);\r\n      else\r\n        onChange(e, null);\r\n    }\r\n  }\r\n\r\n  const { id, tree, defaultValue, selected, style, size } = props;\r\n\r\n  let sectionsElem = [];\r\n  for (let forum in tree) {\r\n\r\n    let group =\r\n      <optgroup key={forum} label={forum}>\r\n        {tree[forum].map((item) => (\r\n          <option key={item.id} value={item.code}>\r\n            {item.name}\r\n          </option>\r\n        ))}\r\n      </optgroup>\r\n\r\n    sectionsElem.push(group);\r\n  }\r\n\r\n  return (\r\n    <Form.Control as=\"select\"\r\n      onChange={onSelect}\r\n      value={selected}\r\n      style={style}\r\n      className='input'\r\n      size={size}\r\n      id={id}\r\n    >\r\n      <option value=\"\">{defaultValue}</option>\r\n      {sectionsElem}\r\n    </Form.Control>\r\n  )\r\n}\r\n\r\nexport { Sections };\r\nexport default connector(Sections);","//@flow\r\nimport React, { ReactElement, useEffect } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport queryString from 'query-string'\r\n\r\nimport Login from '../login'\r\nimport Sections from './sections'\r\nimport { getSectionsIfNeeded } from 'src/data/sections/actions'\r\n\r\nconst Header = (): ReactElement => {\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate()\r\n  const location = useLocation();\r\n  const params = queryString.parse(location.search);\r\n\r\n  useEffect(() => {\r\n    dispatch(getSectionsIfNeeded());\r\n  }, [dispatch]);  \r\n\r\n  const onSectionChange = (e, value) => {\r\n    if (value)\r\n      navigate(`/index.php?section=${value.code}`);\r\n    else\r\n      navigate(`/`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div className=\"header-left\">\r\n        <Login />\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <Sections\r\n          id=\"sect\"\r\n          defaultValue=\"--Все секции--\"\r\n          selected={String(params.section) || \"\"}\r\n          onChange={onSectionChange}\r\n          size=\"sm\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Header;","import React, { FC, ReactElement } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { getMaxPage } from 'src/utils'\r\n\r\ntype IProps = {\r\n  count: number,\r\n  topicId: number\r\n}\r\n\r\nconst Pages: FC<IProps> = ({ count, topicId }): ReactElement => {\r\n\r\n  let pages = [];\r\n  if (count > 100) {\r\n    let maxPage = getMaxPage(count);\r\n    for (let i = 1; i <= maxPage; i++) {\r\n      let href = `/topic.php?id=${topicId}&page=${i}`;\r\n      let text: string;\r\n      if (i > 3 && i < maxPage)\r\n        text = '•';\r\n      else\r\n        text = String(i);\r\n      pages.push(<Link key={i} className=\"agh\" style={{ margin: \"3px\" }} to={href}>{text}</Link>);\r\n    }\r\n  }\r\n\r\n  if (count > 20) {\r\n    let href = `/topic.php?id=${topicId}&page=last20#F`;\r\n    pages.push(<Link key=\"last20\" className=\"agh\" style={{ margin: \"3px\" }} to={href}>»</Link>);\r\n  }\r\n\r\n  return (\r\n    <span className=\"topic-pages\">\r\n      {pages}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default Pages;","import React, { FC, ReactElement } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Pages from './pages';\r\nimport { ITopicsListItem } from 'src/data/topicslist';\r\nimport { RootState } from 'src/data/store';\r\n\r\ntype IProps = {\r\n  data: ITopicsListItem\r\n};\r\n\r\nconst mapState = (state: RootState) => {\r\n  return {\r\n    login: state.login\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst TopicNameCell: FC<ConnectedProps<typeof connector> & IProps> = ({ data, login }): ReactElement => {\r\n\r\n  let href = `/topic.php?id=${data.id}`;\r\n  let classes = classNames('agb', 'mr5', {\r\n    'bold': data.count >= 100,\r\n    'mytopics': data.author === login.userName,\r\n    'pinned': data.pinned\r\n  });\r\n\r\n  let isVoting;\r\n  if (data.isVoting) {\r\n    isVoting = <span className=\"agh separator\">[±]</span>\r\n  }\r\n\r\n  let sectionHref = `/index.php?section=${data.sectionCode}`;\r\n  let section;\r\n\r\n  if (data.section) {\r\n    section = (\r\n      <span className=\"topic-section\">\r\n        <span className=\"agh\" style={{ margin: \"0px 5px\" }}>/</span>\r\n        <Link key=\"1\" rel=\"nofollow\" className=\"agh\" to={sectionHref} >{data.section}</Link>\r\n      </span>\r\n    )\r\n  }\r\n\r\n  let closed;\r\n  let down;\r\n  let text = data.text;\r\n  if (data.closed)\r\n    closed = <span className=\"agh\">Ø</span>\r\n\r\n  if (data.down)\r\n    down = <span className=\"agh\">↓</span>\r\n\r\n  if (data.sectionCode === 'job' && text.substring(0, 3) !== 'JOB')\r\n    text = 'JOB: ' + text;\r\n\r\n  else if (data.forum === 'life' && text.substring(0, 3) !== 'OFF')\r\n    text = 'OFF: ' + text;\r\n\r\n  else if (data.sectionCode === 'v7' && text.substring(0, 2) !== 'v7')\r\n    text = 'v7: ' + text;\r\n\r\n  return (\r\n    <div className=\"cell-title\">\r\n      {data.pinned && <i className=\"fa fa-thumb-tack agh\" aria-hidden=\"true\" style={{marginRight: \"5px\"}}></i>}\r\n      <Link to={href} className={classes} dangerouslySetInnerHTML={{ __html: text }} style={{ overflowWrap: \"anywhere\" }}></Link>\r\n      {isVoting}\r\n      <Pages count={data.count} topicId={data.id} />\r\n      {closed}\r\n      {down}\r\n      {section}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default connector(TopicNameCell);","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { showTooltip } from '../../data/tooltips/actions'\r\n\r\nimport { getMaxPage, childrenToText } from 'src/utils';\r\nimport { fetchTopicInfo } from 'src/api/topicinfo'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { ResponseInfo, ResponseMessages } from 'src/api'\r\n\r\ntype LinkToPostProps = {\r\n  topicId: string,\r\n  number: number,\r\n  isPreview: boolean,\r\n  style: {}\r\n}\r\n\r\ntype StateProps = {\r\n  info: ResponseInfo,\r\n  items: ResponseMessages,\r\n  tooltipDelay: string\r\n}\r\n\r\ntype Props = LinkToPostProps & StateProps & DefaultProps;\r\n\r\nclass LinkToPost extends Component<Props, { text: string }> {\r\n\r\n  timer;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { children, number } = this.props;\r\n    if (children)\r\n      this.state = { text: childrenToText(children).join('') };\r\n    else\r\n      this.state = { text: String(number) };\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    if (!props.children) {\r\n      this.setState({ text: String(props.number) });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    if (this.state.text.startsWith(\"http\")) {\r\n\r\n      const { topicId } = this.props;\r\n      fetchTopicInfo(topicId)\r\n        .then(response => {\r\n          this.setState({\r\n            text: response.text\r\n          })\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  onMouseOver = (event) => {\r\n    event.persist();\r\n    const { tooltipDelay } = this.props;\r\n    this.timer = setTimeout(() => this.showToolTip(event), +tooltipDelay);\r\n  }\r\n\r\n  onClick = (event) => {\r\n    event.stopPropagation();\r\n    clearTimeout(this.timer);\r\n    this.showToolTip(event);\r\n  }\r\n\r\n  onMouseOut = (event) => {\r\n    clearTimeout(this.timer);\r\n  }\r\n\r\n  showToolTip = (e) => {\r\n    const { topicId, number, dispatch, isPreview } = this.props;\r\n\r\n    const coords = {\r\n      x: e.pageX,\r\n      y: e.pageY - 50 // remove navbar margin-top\r\n    }\r\n\r\n    const keys = {\r\n      type: isPreview ? 'TOPIC_PREVIEW' : 'TOPIC',\r\n      topicId,\r\n      number: +number\r\n    }\r\n    dispatch(showTooltip(\r\n      keys,\r\n      coords\r\n    ));\r\n  }\r\n\r\n  render() {\r\n\r\n    const { topicId, number, style, info } = this.props;\r\n    const page = getMaxPage(number);\r\n\r\n    let pageParam = '';\r\n    if (page > 1)\r\n      pageParam = `&page=${page}`;\r\n\r\n    let a;\r\n    if (info && topicId === info.id || !isNaN(this.state.text))\r\n      a = (\r\n        <span\r\n          onMouseOver={this.onMouseOver}\r\n          onMouseOut={this.onMouseOut}\r\n          onClick={this.onClick}\r\n          className='link'\r\n          style={{ ...style }}\r\n        >{this.state.text}</span>\r\n      )\r\n    else\r\n      a = (\r\n        <span>\r\n          <a href={`#/topic.php?id=${topicId}${pageParam}#${number}`}\r\n            style={{ ...style }}\r\n          >{this.state.text}</a>{' '}\r\n                    (<span onMouseOver={this.onMouseOver}\r\n            onMouseOut={this.onMouseOut}\r\n            onClick={this.onClick}\r\n            className='link'\r\n          >{number}</span>)\r\n        </span>\r\n      )\r\n\r\n    return a;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n\r\n  const {\r\n    items, info\r\n  } = state.topic;\r\n\r\n  return {\r\n    items,\r\n    info,\r\n    tooltipDelay: state.options.items['tooltipDelay']\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LinkToPost);","import React, { FC, ReactElement } from 'react'\r\n\r\nimport { useAppDispatch } from 'src/data/store';\r\nimport { togglePreview } from 'src/data/topicslist/actions';\r\n\r\ntype IProps = {\r\n  topicId: number,\r\n  expanded: boolean\r\n};\r\n\r\nconst PreviewLink: FC<IProps> = ({ topicId, expanded }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onClick = () => {\r\n    dispatch(togglePreview(topicId));\r\n  }\r\n\r\n  const text = expanded \r\n    ? <i className=\"fa fa-minus-square-o agh\" aria-hidden=\"true\"></i> \r\n    : <i className=\"fa fa-plus-square-o agh\" aria-hidden=\"true\"></i>;\r\n  return (\r\n    <div className=\"cell-preview-link\" onClick={onClick}>\r\n      <span>{text}</span>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default PreviewLink;","import { FC, ReactElement, useCallback, useEffect, useState } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport dateFormat from 'dateformat'\r\n\r\nimport TopicNameCell from './topic_name_cell';\r\nimport LinkToPost from 'src/components/extensions/link_to_post'\r\nimport PreviewLink from './preview_link'\r\n\r\nimport { today } from 'src/utils'\r\nimport { RootState } from 'src/data/store';\r\nimport { ITopicsListItem } from 'src/data/topicslist';\r\nimport { fetchTopicInfo } from 'src/api/topicinfo';\r\nimport { fetchTopicMessage } from 'src/api/topicMessages';\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  return {\r\n    login: state.login\r\n  }\r\n}\r\nconst connector = connect(mapState);\r\n\r\ntype IProps = {\r\n  data: ITopicsListItem,\r\n  topicId: number\r\n}\r\n\r\nconst Row: FC<ConnectedProps<typeof connector> & IProps> = ({ data, topicId }): ReactElement => {\r\n\r\n  const [time, setTime] = useState(data.updated);\r\n  const updateTime = useCallback(async () => {\r\n    const msg = await fetchTopicMessage(topicId, data.count);\r\n    setTime(msg.time);\r\n  }, [])\r\n  \r\n  useEffect(() => {\r\n    if (data.pinned)\r\n      updateTime();\r\n  }, [data.pinned, updateTime])\r\n\r\n  let date = new Date(time);\r\n  let timeF: string;\r\n  if (time === 2147483648000) {\r\n    timeF = '';\r\n  } else if (today(date)) {\r\n    timeF = dateFormat(time, 'HH:MM')\r\n  } else {\r\n    timeF = dateFormat(time, 'dd.mm.yy');\r\n  }\r\n  return (\r\n    <div className=\"topics-list-row\">\r\n      <div className=\"cell-forum\">\r\n        {data.forum}\r\n      </div>\r\n      <div className=\"cell-section\">\r\n        {data.section}\r\n      </div>\r\n      <div className=\"cell-answ\">\r\n        <i className=\"fa fa-comments-o\" aria-hidden=\"true\" style={{marginRight: \"3px\"}}></i>\r\n        <LinkToPost topicId={data.id} number={data.count} style={{ color: \"inherit\" }} isPreview />\r\n      </div>\r\n      <PreviewLink topicId={data.id} expanded={data.showPreview} />\r\n      <TopicNameCell data={data}/>\r\n      <div className=\"cell-author\">\r\n        <i aria-hidden=\"true\" className=\"fa fa-user-circle\" style={{marginRight: \"3px\"}}></i>\r\n        {data.author}\r\n      </div>\r\n      <div className=\"cell-lastuser\">\r\n        <div style={{ display: \"flex\" }}>\r\n          <span className=\"cell-lastuser-time\">{timeF}</span>\r\n          <span className=\"cell-lastuser-user\">{data.lastUser}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"cell-last20\">\r\n        <Link to={`/topic.php?id=${String(data.id)}&page=last20#F`} style={{ color: \"inherit\", display: \"block\", width: \"100%\", textAlign: \"center\" }}>{'>'}</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default connector(Row);","import React, { FC, ReactElement } from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\n\r\nimport { paramsToString } from 'src/api'\r\nimport './pages.css'\r\n\r\ntype IProps = {\r\n  locationParams: { page?: string },\r\n  baseUrl: string,\r\n  maxPage: number,\r\n  last20?: boolean\r\n}\r\n\r\nconst Pages: FC<IProps> = ({ locationParams, baseUrl, maxPage, last20 }): ReactElement => {\r\n\r\n  let currentPage: number | string;\r\n  if (!locationParams.page)\r\n    currentPage = 1;\r\n  else if (locationParams.page === \"last20\")\r\n    currentPage = \"last20\";\r\n  else\r\n    currentPage = parseInt(locationParams.page, 10) || 1;\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= maxPage; i++) {\r\n    let params = { ...locationParams, page: i };\r\n    let href = `#/${baseUrl}` + paramsToString('?', params);\r\n\r\n    pages.push(<Pagination.Item active={currentPage === i} key={i} href={href}>{i}</Pagination.Item>);\r\n  }\r\n\r\n  if (last20 === true) {\r\n    let params = { ...locationParams, page: \"last20\" };\r\n    let href = `#/${baseUrl}` + paramsToString('?', params);\r\n    pages.push(<Pagination.Item active={currentPage === \"last20\"} key=\"last20\" href={href}>»</Pagination.Item>);\r\n  }\r\n\r\n  return (\r\n    <Pagination style={{ margin: \"0px\" }}>\r\n      {pages}\r\n    </Pagination>\r\n  )\r\n\r\n}\r\n\r\nexport default Pages;","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FormControl, Button, ButtonGroup, Form } from 'react-bootstrap'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\n\r\nimport './text_editor.css'\r\n\r\ntype TextEditorProps = {\r\n  placeholder: string,\r\n  showVoting: boolean,\r\n  isVoting: boolean,\r\n  text: string,\r\n  isFetching: boolean,\r\n  formName: string,\r\n  onChange?: (e: any, text: string) => void,\r\n}\r\n\r\ntype Props = TextEditorProps & DefaultProps;\r\n\r\nclass TextEditor extends Component<Props> {\r\n\r\n  textArea;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.textArea = React.createRef();\r\n  }\r\n\r\n  onButtonCode1c = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    var openTag = '[1C]\\n';\r\n    var closeTag = '\\n[/1C]';\r\n\r\n    var textArea: any = this.textArea.current;\r\n\r\n    var start = textArea.selectionStart;\r\n    var end = textArea.selectionEnd;\r\n\r\n    var oldText = textArea.value;\r\n    var len = oldText.length;\r\n    var selectedText = oldText.substring(start, end);\r\n    var replacement = openTag + selectedText + closeTag;\r\n    var newText = oldText.substring(0, start) + replacement + oldText.substring(end, len);\r\n\r\n    const { dispatch, formName } = this.props;\r\n    dispatch({\r\n      type: formName + '_TEXT',\r\n      payload: {\r\n        text: newText\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  onVotingChange = (e: SyntheticEvent<HTMLInputElement>) => {\r\n    const { dispatch } = this.props;\r\n    dispatch({\r\n      type: 'SHOW_VOTING',\r\n      payload: {\r\n        show: e.currentTarget.checked\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange = (e: SyntheticEvent<HTMLTextAreaElement>) => {\r\n    const { dispatch, formName } = this.props;\r\n    dispatch({\r\n      type: formName + '_TEXT',\r\n      payload: {\r\n        text: e.currentTarget.value\r\n      }  \r\n    })\r\n  }\r\n\r\n  onKeyPress = (e: SyntheticKeyboardEvent<HTMLTextAreaElement>) => {\r\n\r\n    if (e.key === 'Enter' && e.ctrlKey) {\r\n      let parent = e.currentTarget.parentElement;\r\n      while (parent && parent.tagName.toUpperCase() !== \"FORM\") {\r\n        parent = parent.parentElement;\r\n      }\r\n      if (parent)\r\n        parent.dispatchEvent(new Event(\"submit\", { cancelable: true, bubbles: true }));\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { placeholder, showVoting, isVoting, isFetching, text } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <FormControl\r\n          as=\"textarea\"\r\n          placeholder={placeholder}\r\n          cols=\"70\" rows=\"3\"\r\n          value={text}\r\n          onChange={this.onChange}\r\n          onKeyPress={this.onKeyPress}\r\n          ref={this.textArea}\r\n          className=\"text-editor input\"\r\n        />\r\n        <div className=\"flex-row\">\r\n          <ButtonGroup>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"light\"\r\n              onClick={this.onButtonCode1c}\r\n              style={{ marginRight: \"5px\" }}\r\n              className='button'\r\n            >Код 1С</Button>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"light\"\r\n              disabled={isFetching}\r\n              type=\"submit\"\r\n              className='button'\r\n            >\r\n              {isFetching ? 'Отправляется' : 'Отправить'}\r\n            </Button>\r\n          </ButtonGroup>\r\n          {showVoting &&\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              checked={isVoting}\r\n              onChange={this.onVotingChange}\r\n              label=\"Голосование\"\r\n              style={{ margin: \"auto 0px auto auto\" }} />\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default (connect()(TextEditor): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FormGroup } from 'react-bootstrap'\r\n\r\nimport type { ResponseSection } from 'src/api'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { State } from 'src/reducers'\r\nimport type { SectionsState } from 'src/data/sections/reducer'\r\nimport type { NewTopicState } from 'src/data/new_topic/reducer'\r\n\r\nimport { newTopicClear, newTopicSection, newTopicSubject, postNewTopicError, postNewTopicIfNeeded } from 'src/data/newtopic/actions'\r\nimport type { NewTopicAction, postNewTopicParams } from 'src/data/newtopic/actions'\r\n\r\nimport Sections from './sections'\r\nimport TextEditor from '../common/text_editor'\r\nimport ErrorElem from '../common/error'\r\n\r\nimport './new_topic.css'\r\n\r\ntype StateProps = {\r\n  sections: SectionsState,\r\n  newTopic: NewTopicState,\r\n}\r\n\r\ntype NewTopicProps = {\r\n  onSubmitSuccess?: () => void\r\n};\r\n\r\ntype Props = NewTopicProps & StateProps & DefaultProps;\r\n\r\nclass NewTopic extends Component<Props> {\r\n\r\n  currentSection: ?ResponseSection;\r\n\r\n  onSectionChange = (e: any, section: ResponseSection) => {\r\n    const { dispatch } = this.props;\r\n    this.currentSection = section;\r\n    dispatch(newTopicSection(section));\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n    const { dispatch, newTopic } = this.props;\r\n\r\n    let action: NewTopicAction;\r\n    if (!this.currentSection) {\r\n      dispatch(postNewTopicError('Не выбрана секция'));\r\n      return;\r\n    }\r\n\r\n    let subject = newTopic.subject;\r\n    if (!subject) {\r\n      dispatch(postNewTopicError('Не указана тема'));\r\n      return;\r\n    }\r\n\r\n    if (!newTopic.text) {\r\n      dispatch(postNewTopicError('Не указано сообщение'));\r\n      return;\r\n\r\n    }\r\n\r\n    let params: postNewTopicParams = {\r\n      subject,\r\n      text: newTopic.text,\r\n      section: this.currentSection.id,\r\n      forum: this.currentSection.forum,\r\n      isVoting: newTopic.isVoting,\r\n      votingItems: [],\r\n      onSuccess: this.onSubmitSuccess\r\n    };\r\n\r\n    if (newTopic.isVoting) {\r\n      params.votingItems = [];\r\n      for (let i = 1; i <= 10; i++) {\r\n        let val = this.refs[`vote${i}`].value;\r\n        if (val) {\r\n          params.votingItems.push(val);\r\n        }\r\n      }\r\n    }\r\n\r\n    dispatch(postNewTopicIfNeeded(params));\r\n  }\r\n\r\n  onSubjectChange = (e) => {\r\n\r\n    const { dispatch } = this.props;\r\n    dispatch(newTopicSubject(e.target.value));\r\n\r\n  }\r\n\r\n  onSubmitSuccess = () => {\r\n\r\n    const { dispatch } = this.props;\r\n    dispatch(newTopicClear());\r\n\r\n    if (this.props.onSubmitSuccess) {\r\n      this.props.onSubmitSuccess();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { sections, newTopic } = this.props;\r\n\r\n    let groupsElem = [];\r\n    for (let forum in sections.tree) {\r\n      groupsElem.push(<option key={forum} value={forum.toLowerCase()}>{forum}</option>);\r\n    }\r\n\r\n    let votingOptions = [];\r\n\r\n    if (newTopic.isVoting) {\r\n      votingOptions.push(<div key=\"p\">Варианты:</div>);\r\n      for (let i = 1; i <= 10; i++) {\r\n        votingOptions.push(\r\n          <InputGroup key={i} size=\"sm\" style={{ marginBottom: \"3px\", width: \"100%\" }}>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text\r\n                style={{ width: \"40px\" }} className='input'>\r\n                {`${i}.`}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"text\"\r\n              maxLength=\"50\"\r\n              ref={`vote${i}`}\r\n              className='input'\r\n            />\r\n          </InputGroup>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <form className=\"new-topic-container\" onSubmit={this.onSubmit}>\r\n        <div id=\"newtopic_form\" className=\"new-topic-text\">\r\n          <div><b>Новая тема:</b></div>\r\n          {newTopic.error && <ErrorElem text={newTopic.error} />}\r\n          <div className=\"flex-row\" style={{ marginBottom: \"3px\" }}>\r\n            <Form.Control as=\"select\"\r\n              size=\"sm\"\r\n              readOnly={true}\r\n              value={newTopic.forum}\r\n              style={{ flex: \"0 1 90px\" }}\r\n              className='input'\r\n            >\r\n              {groupsElem}\r\n            </Form.Control>\r\n            <Sections\r\n              defaultValue=\"Секция\"\r\n              id=\"target_section\"\r\n              size=\"sm\"\r\n              style={{ flex: \"1 1 auto\" }}\r\n              onChange={this.onSectionChange}\r\n            />\r\n          </div>\r\n          <Form.Control\r\n            type=\"text\"\r\n            size=\"sm\"\r\n            value={newTopic.subject}\r\n            onChange={this.onSubjectChange}\r\n            style={{ marginBottom: \"3px\" }}\r\n            className='input'\r\n            placeholder=\"Тема\"\r\n            maxLength=\"90\"\r\n          />\r\n          <TextEditor\r\n            placeholder=\"Сообщение\"\r\n            showVoting={true}\r\n            isVoting={newTopic.isVoting}\r\n            text={newTopic.text}\r\n            isFetching={newTopic.isFetching}\r\n            formName=\"NEW_TOPIC\"\r\n          />\r\n        </div>\r\n        <FormGroup className=\"new-topic-voting\">\r\n          {votingOptions}\r\n        </FormGroup>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    sections: state.sections,\r\n    newTopic: state.newTopic\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(NewTopic): any );","\nfunction highlight(text: string): string {\n\n  const keywords = new Set(\n    (\"if|если|then|тогда|elsif|иначеесли|else|иначе|endif|конецесли\" +\n    \"|do|цикл|for|для|to|по|each|каждого|in|из|while|пока|enddo|конеццикла\" +\n    \"|procedure|процедура|endprocedure|конецпроцедуры|function|функция|endfunction\" +\n    \"|конецфункции|var|перем|export|экспорт|goto|перейти|and|и|or|или|not|не\" +\n    \"|val|знач|break|прервать|continue|продолжить|return|возврат|try|попытка|except|исключение\" +\n    \"|endtry|конецпопытки|raise|вызватьисключение|false|ложь|true|истина\" +\n    \"|undefined|неопределено|null|new|новый|execute|выполнить\" +\n    \"|асинх|async|ждать|wait\")\n      .split('|')\n  );\n\n  const Спецсиволы = new Set(\"():;.,=+-*<>?[]%/\".split(''));\n  const НачалоТега = \"<span class=\";\n  const КонецТега = \"</span>\";\n\n  const мЦветФона = \"bg>\";\n  const мЦветЧисла = \"num>\";\n  const мЦветСтроки = \"str>\";\n  //const мЦветПараметра = \"par>\";\n  const мЦветКомментария = \"com>\";\n  const мЦветСпецСимвола = \"sp>\";\n  const мЦветПрепроцессора = \"pr>\";\n  const мЦветКлючевогоСлова1 = \"key>\";\n\n\n  let СтрокаРезультат: string;\n  let УстановленЦвет: boolean;\n  let ПоследнийЦвет: string | undefined;\n\n  let ВСтроке = false;\n  let Токен = \"\";\n\n  function ПустаяСтрока(Строка: string) {\n    return Строка.trim() === '';\n  }\n\n  function Сред(Строка: string, Нач: number, Длина: number) {\n    return Строка.substring(Нач - 1, Нач -1 + Длина);\n  }\n\n  function Прав(Строка: string, Длина: number) {\n    return Строка.substring(Строка.length - Длина);\n  }\n\n  function isKeyword(token: string) {\n    return keywords.has(token.toLowerCase().trim());\n  }\n\n  function ДобавитьЧастьСтроки1С(Часть: string, Цвет: string) {\n\n    if (Часть === \" \" || ПоследнийЦвет === Цвет) {\n      СтрокаРезультат = СтрокаРезультат + Часть;\n    } else {\n      if (УстановленЦвет) {\n        СтрокаРезультат = СтрокаРезультат + КонецТега;\n        УстановленЦвет = false;\n      };\n\n      СтрокаРезультат = СтрокаРезультат + НачалоТега + Цвет + Часть;\n      УстановленЦвет = true;\n      ПоследнийЦвет = Цвет;\n    };\n  }\n\n  function РазукраситьСтроку(СтрокаКода: string) {\n\n    //  https://infostart.ru/profile/34707/public/\n    let ВСтрокеСкобка = false;\n    let ВСтрокеТильда = false;\n    let НачалоСтроки = 1;\n    let ТокенДоТочки = true;\n    // Заменяем 8 символьную табуляцию на 4 символьную пробелами\n\n    // Последовательно перебираются все символы строки кода\n    let Поз = 1;\n    for (Поз = 1; Поз <= СтрокаКода.length; Поз++) {\n\n      let ТекущийСимвол = СтрокаКода.charAt(Поз - 1);\n      if (ВСтроке) {\n\n        // Операции встрече символа \"кавычка\"\n        if (ТекущийСимвол === '\"') {\n          // Нашли парную кавычку - окрашиваем как строку\n          ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n          ВСтроке = false;\n          Токен = \"\";\n          ТокенДоТочки = true;\n        } else {\n          Токен = Токен + ТекущийСимвол;\n        };\n\n      } else if (ВСтрокеСкобка) {\n\n        // Операции встрече символа \"кавычка\" литерал\n        if (ТекущийСимвол === \"'\") {\n          // Нашли парную скобку - окрашиваем как комментарий\n          ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n          ВСтрокеСкобка = false;\n          Токен = \"\";\n          ТокенДоТочки = true;\n        } else {\n          Токен = Токен + ТекущийСимвол;\n        };\n\n      } else if (ТекущийСимвол === \" \") {\n        // Операции при встрече символа табуляции или пробела\n        if (!ПустаяСтрока(Токен)) {\n          // Пробел после токена, значит\n          // токен - ключевое слово...\n          if (ВСтрокеТильда) {\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветСтроки);\n            ВСтрокеТильда = false;\n\n          } else if (isKeyword(Токен.trim())) {\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветКлючевогоСлова1);\n\n          } else if (!isNaN(parseInt(Токен, 10))) {\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветЧисла);\n\n          } else {\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветФона);\n          };\n          Токен = \"\";\n        } else {\n          СтрокаРезультат = СтрокаРезультат + \" \";\n        };\n        ТокенДоТочки = true;\n\n      } else if (Спецсиволы.has(ТекущийСимвол)) {\n\n        // Встретился один из специальных символов\n        if (!ПустаяСтрока(Токен)) {\n          // Чтобы избежать окраски метода объекта с совпадающим именем\n          // с одним из ключевых слов, проверяем текущий символ на \".\"\n          if (ВСтрокеТильда) {\n\n            ДобавитьЧастьСтроки1С(Токен, мЦветСтроки);\n            ВСтрокеТильда = false;\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\n\n          } else if (ТокенДоТочки && isKeyword(Токен)) {\n            ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\n\n          } else {\n            // Не ключевое слово - значит число\n            if (!isNaN(parseInt(Токен, 10))) {\n              ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\n\n            } else {\n              ДобавитьЧастьСтроки1С(Токен, мЦветФона);\n            };\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\n          };\n          Токен = \"\";\n        };\n        // Один из специальных символов\n        if (ТекущийСимвол === \".\" && ПоследнийЦвет === мЦветЧисла) {\n          // Продолжение числа\n          ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветЧисла);\n          continue;\n\n        } else if (ТекущийСимвол === \"=\" && Сред(СтрокаКода, Поз - 1, 1) === \"<\") {\n          // Знак \"меньше или равно\" - вторая ошибка движка Инфостарт\n          ПоследнийЦвет = undefined;\n\n        } else if (ТекущийСимвол === \"/\" && Сред(СтрокаКода, Поз + 1, 1) === \"/\") {\n          // Проверяется на комментарий\n          ДобавитьЧастьСтроки1С(Прав(СтрокаКода, СтрокаКода.length - Поз + 1), мЦветКомментария);\n          return;\n        };\n        ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветСпецСимвола);\n\n      } else if (ТекущийСимвол === '\"' || ТекущийСимвол === \"|\") {\n\n        // Операции встрече символа \"кавычка\"\n        // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\n        if (ПустаяСтрока(Токен)) {\n          НачалоСтроки = Поз;\n          ВСтроке = true;\n        } else {\n          // Ошибка синтаксиса\n          ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\n          Токен = \"\";\n        };\n        ТокенДоТочки = true;\n\n      } else if (ТекущийСимвол === \"'\") {\n\n        // Операции встрече символа \"кавычка\" литерал\n        // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\n        if (ПустаяСтрока(Токен)) {\n          НачалоСтроки = Поз;\n          ВСтрокеСкобка = true;\n        } else {\n          // Ошибка синтаксиса\n          ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\n          Токен = \"\";\n        };\n        ТокенДоТочки = true;\n\n      } else if (ТекущийСимвол === \"#\" || (ТекущийСимвол === \"&\" && ПустаяСтрока(СтрокаРезультат))) {\n\n        // Встретился символ препроцессора\n        ДобавитьЧастьСтроки1С(Прав(СтрокаКода, СтрокаКода.length - Поз + 1), мЦветПрепроцессора);\n        Поз = СтрокаКода.length;\n        break;\n\n      } else if (ТекущийСимвол === \"~\") {\n        Токен = Токен + ТекущийСимвол;\n        ВСтрокеТильда = true;\n      } else {\n        // Остальные символы\n        Токен = Токен + ТекущийСимвол;\n      }\n    }\n\n    if (ВСтроке) {\n\n      // Многострочная строка\n      ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n\n    } else if (ВСтрокеСкобка) {\n\n      // Незавершенный литерал\n      ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n\n    } else if (!ПустаяСтрока(Токен)) {\n\n      // Анализируем последний токен строки кода\n      if (isKeyword(Токен)) {\n        ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\n\n      } else if (!isNaN(parseInt(Токен, 10))) {\n        ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\n\n      } else {\n        ДобавитьЧастьСтроки1С(Токен, мЦветФона);\n      };\n\n    };\n\n  }\n\n  ВСтроке = false;\n  Токен = \"\";\n  УстановленЦвет = false;\n  ПоследнийЦвет = undefined;\n  СтрокаРезультат = '';\n\n  let result = [];\n\n  for (let СтрокаКода of text.split('\\n')) {\n\n    if (ПустаяСтрока(СтрокаКода)) {\n      result.push('');\n      continue;\n    }\n\n    СтрокаРезультат = '';\n    РазукраситьСтроку(СтрокаКода);\n    if (УстановленЦвет && !ВСтроке) {\n      СтрокаРезультат += '</span>';\n      УстановленЦвет = false;\n      ПоследнийЦвет = '';\n      Токен = '';\n    } else if (!ВСтроке) {\n      ПоследнийЦвет = '';\n      Токен = '';\n    }\n\n    result.push(СтрокаРезультат);\n  }\n\n  return result.join('\\n');\n}\n\nexport default highlight;","import React, { FC, ReactElement, useEffect } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\nimport queryString from 'query-string'\r\nimport { getTopicIfNeeded, getNewMessagesIfNeeded, clearTopicMessages } from 'src/data/topic/actions'\r\nimport { newMessageText } from 'src/data/newmessage/actions'\r\n\r\nimport Error from 'src/components/common/error'\r\nimport Pages from 'src/components/common/pages'\r\nimport Header from './header'\r\nimport TopicInfo from './topic_info'\r\nimport Row from './row'\r\nimport Footer from './footer'\r\nimport NewMessage from './new_message';\r\nimport { getMaxPage, extractTextFromHTML } from 'src/utils';\r\n\r\nimport './topic.css'\r\nimport { RootState, useAppDispatch } from 'src/data/store';\r\n\r\nvar scrolledToHash;\r\nvar timer;\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const {\r\n    isFetching,\r\n    lastUpdated,\r\n    info,\r\n    item0,\r\n    items,\r\n    error\r\n  } = state.topic;\r\n\r\n  return {\r\n    login: state.login,\r\n    info,\r\n    item0,\r\n    items,\r\n    isFetching,\r\n    lastUpdated,\r\n    error,\r\n    options: state.options.items\r\n  }\r\n}\r\n\r\nconst getPageNumber = (locationPage: string | string[]): number | \"last20\" => {\r\n  if (!locationPage) return 1;\r\n  if (locationPage === \"last20\") return \"last20\";\r\n  if (isNaN(+locationPage)) return 1;\r\n  return +locationPage;\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst Topic: FC<ConnectedProps<typeof connector>> = ({ login, items, item0, info, error }): ReactElement => {\r\n  \r\n  const dispatch = useAppDispatch()\r\n  const location = useLocation();\r\n  \r\n  let locationParams = queryString.parse(location.search);\r\n  let page = getPageNumber(locationParams.page);\r\n  const maxPage = getMaxPage(info.count);\r\n\r\n  const updateTopic = () => {\r\n\r\n    if (locationParams.id !== String(info.id))\r\n      item0 = null;\r\n\r\n    dispatch(getTopicIfNeeded(locationParams, item0));\r\n  }\r\n\r\n  const onPostNewMessageSuccess = () => {\r\n\r\n    const isLastPage = (page === 'last20' || page === maxPage);\r\n\r\n    if (isLastPage)\r\n      dispatch(getNewMessagesIfNeeded({\r\n        id: info.id,\r\n        last: info.count\r\n      }));\r\n\r\n      dispatch(newMessageText(''));\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if (info.title)\r\n      document.title = extractTextFromHTML(info.title);\r\n  }, [info.title]);\r\n\r\n  useEffect(() => {\r\n    updateTopic();\r\n  }, [dispatch, locationParams.id, page]);\r\n    \r\n  useEffect(() => {\r\n    \r\n    const clearStore = () => {\r\n      dispatch(clearTopicMessages());\r\n      scrolledToHash = undefined;\r\n    }\r\n    return clearStore;\r\n\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!scrolledToHash &&\r\n      location.hash &&\r\n      items.length > 0) {\r\n      let nodeHash = document.getElementById(location.hash.slice(1));\r\n      if (nodeHash)\r\n        setTimeout(() => window.scrollTo(0, nodeHash.offsetTop), 1);\r\n      scrolledToHash = true;\r\n    }  \r\n  });  \r\n\r\n  return (\r\n    <div style={{ marginBottom: \"5px\" }}>\r\n      {error && <Error text={error} />}\r\n      <Header/>\r\n      <div className=\"topic-table\">\r\n        <TopicInfo />\r\n        <Row key='0' data={item0} />\r\n        {items.map((item, i) => (\r\n          <Row key={item.n} data={item} />\r\n        ))}\r\n        {(maxPage > 1 || page === \"last20\") &&\r\n          <div className=\"tf\">\r\n            <Pages baseUrl='topic.php' locationParams={locationParams} maxPage={maxPage} last20 />\r\n          </div>\r\n        }\r\n      </div>\r\n      <Footer locationParams={locationParams} />\r\n      {login.logged &&\r\n        <NewMessage onSubmitSuccess={onPostNewMessageSuccess} />\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default connector(Topic);","import { FC, ReactElement, useState } from 'react'\r\nimport { childrenToText } from 'src/utils'\r\nimport highlight from './code_highlight'\r\nimport './code1c.css'\r\n\r\nconst prepareText = (text: string): string => {\r\n\r\n  // replace double new-lines\r\n  let newtext = text\r\n    .replace(/\\n<br>/g, '\\n')\r\n    .replace(/<br>\\n/g, '\\n')\r\n    .replace(/\\r<br>/g, '\\n')\r\n    .replace(/<br>\\r/g, '\\n')\r\n    .replace(/<br>/g, '\\n');\r\n\r\n  // remove all leading|ending new-lines\r\n  while (newtext[0] === '\\n') {\r\n    newtext = newtext.substring(1);\r\n  }\r\n\r\n  while (newtext.substring(newtext.length - 1) === '\\n') {\r\n    newtext = newtext.substring(0, newtext.length - 1);\r\n  }\r\n\r\n  return highlight(newtext);\r\n}\r\n\r\nconst Code: FC = ({ children }): ReactElement => {\r\n\r\n  const [hidden, setHidden] = useState(true);\r\n\r\n  if (children) {\r\n\r\n    const textArr = childrenToText(children);\r\n    var text = textArr.join('');\r\n\r\n    text = prepareText(text);\r\n  }\r\n\r\n  const onShowClick = () => {\r\n    setHidden(!hidden);\r\n  }\r\n\r\n  let buttonText: string;\r\n  let linesCount = 0;\r\n  if (text)\r\n    linesCount = text.split(\"\\n\").length;\r\n\r\n  if (hidden)\r\n    buttonText = `Показать: ${linesCount} строк`;\r\n  else\r\n    buttonText = 'Скрыть';\r\n\r\n  let buttonShow: ReactElement;\r\n  if (linesCount > 7)\r\n    buttonShow = (\r\n      <div className=\"expand-button-div\">\r\n        <span className=\"expand-button-span\" onClick={onShowClick}>{buttonText}</span>\r\n      </div>\r\n    );\r\n\r\n  let preStyle: React.CSSProperties = {\r\n  }\r\n\r\n  if (hidden && linesCount > 7) {\r\n    preStyle.overflow = \"hidden\";\r\n    preStyle.height = \"135px\";\r\n  } else {\r\n    preStyle.overflow = \"auto\";\r\n    preStyle.height = \"auto\";\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: \"5px\" }}>\r\n      <pre className=\"code-pre\" style={preStyle} dangerouslySetInnerHTML={{ __html: text }}>\r\n      </pre>\r\n      {buttonShow}\r\n    </div>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default Code;","import React, { FC, ReactElement } from 'react'\r\n\r\ntype IProps = {\r\n  href: string\r\n}\r\n\r\nconst LinkToUser: FC<IProps> = ({ href, children }): ReactElement => {\r\n  return <a href={href} className=\"registered-user\">{children}</a>\r\n}\r\n\r\nexport default LinkToUser;","import React, { FC, ReactElement, useEffect, useState } from 'react';\r\n\r\ntype IProps = {\r\n  href: string,\r\n}\r\n\r\nconst getVideoId = (href: string): string | null => {\r\n\r\n  let fullHref = href;\r\n  if (href.search(/http/) === -1) fullHref = 'http://' + fullHref;\r\n\r\n  try {\r\n    var url = new URL(fullHref);\r\n  } catch (e)  {\r\n    return null;\r\n  }\r\n\r\n  if (url.hostname.search(/youtube/) !== -1) {\r\n    return url.searchParams.get('v');\r\n\r\n  } else if (url.hostname.search(/youtu\\.be/) !== -1) {\r\n    return url.pathname.substring(1)\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nconst getVideoParams = async (videoId: string): Promise<{ hrefName: string, title: string }> => {\r\n\r\n  const apiKey = localStorage.getItem('youtubeApiKey') || 'AIzaSyCztN2QW4Fxw_1YuAHBTOZdYLbzigPz25g';\r\n  let apiUrl = `https://www.googleapis.com/youtube/v3/videos?key=${apiKey}&fields=items(snippet(title))&part=snippet&id=${videoId}`;\r\n  const response = await fetch(apiUrl);\r\n  const json = await response.json();\r\n\r\n  let title = json.items[0].snippet.title;\r\n  let hrefName = title;\r\n  let maxLength = 50;\r\n  if (title.length > maxLength + 5)\r\n    hrefName = hrefName.substring(0, maxLength) + '...'\r\n\r\n  return {\r\n    hrefName,\r\n    title\r\n  }\r\n}\r\n\r\nconst YoutubeLink: FC<IProps> = ({ href }): ReactElement => {\r\n\r\n  let [state, setState] = useState({\r\n    hrefName: href,\r\n    title: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    const run = async () => {\r\n\r\n      const videoId = getVideoId(href);\r\n      if (!videoId)\r\n        return;\r\n\r\n      try {\r\n        const params = await getVideoParams(videoId);\r\n        setState({\r\n          ...params\r\n        });\r\n\r\n      } catch (e) {\r\n        console.error('youtube', e.message);\r\n      }\r\n    }\r\n\r\n    run();\r\n  }, [href])\r\n\r\n  const prefix = 'youtube';\r\n  return (\r\n    <a href={href} title={state.title}>{`${prefix}: ${state.hrefName}`}</a>\r\n  )\r\n}\r\n\r\nexport default YoutubeLink;","import { FC, ReactElement } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport URL from 'url-parse'\r\n\r\nimport LinkToPost from './link_to_post'\r\nimport LinkToUser from './link_to_user'\r\nimport YoutubeLink from './youtube_link'\r\n\r\nimport { childrenToText } from 'src/utils'\r\nimport { RootState } from 'src/data/store'\r\n\r\ntype IProps = {\r\n  href: string,\r\n  parentText: string,\r\n  target: string,\r\n  class: string,\r\n  rel: string,\r\n  showTooltipOnPostLink: string,\r\n  showYoutubeVideoTitle: string,\r\n  replaceCatalogMista: string,\r\n  fixBrokenLinks: string,\r\n}\r\n\r\nconst fixBrokenLink = (href: string, parentText: string): string => {\r\n  let escapedHref = href\r\n    .replace(/\\[/g, '\\\\[')\r\n    .replace(/\\]/g, '\\\\]')\r\n    .replace(/\\./g, '\\\\.')\r\n    .replace(/\\./g, '.')\r\n    .replace(/\\*/g, '\\\\*')\r\n    .replace(/\\+/g, '\\\\+')\r\n    .replace(/\\(/g, '\\\\(')\r\n    .replace(/\\)/g, '\\\\)')\r\n    .replace(/\\?/g, '\\\\?')\r\n    .replace(/\\//g, '\\\\/');\r\n\r\n  try {\r\n    let regExp = new RegExp(escapedHref + '<\\\\/a>(\\\\)|[а-яёА-ЯЁ0-9#\\\\-\\\\+\\\\_\\\\%\\\\?=]*)');\r\n    let arr = parentText.match(regExp);\r\n    if (arr && arr.length > 1) {\r\n      if (arr[1] === ')' && href.search('\\\\(') === -1) {\r\n        return href;\r\n      }\r\n      href = href + arr[1];\r\n      return href;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  return href;\r\n}\r\n\r\nconst isYoutube = (hostname: string): boolean => {\r\n  if (hostname.search(/youtube/) !== -1\r\n    || hostname.search(/youtu\\.be/) !== -1)\r\n    return true;\r\n  else\r\n    return false\r\n}\r\n\r\nconst isMistaCatalog = (hostname: string): boolean => {\r\n  if (hostname.search(/catalog\\.mista/) !== -1)\r\n    return true;\r\n  else\r\n    return false\r\n}\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const {\r\n    showYoutubeVideoTitle,\r\n    replaceCatalogMista,\r\n    fixBrokenLinks\r\n  } = state.options.items;\r\n\r\n  return {\r\n    showYoutubeVideoTitle,\r\n    replaceCatalogMista,\r\n    fixBrokenLinks\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst CustomLink: FC<ConnectedProps<typeof connector> & IProps> = (props): ReactElement => {\r\n\r\n  const { href, children, parentText,\r\n    showYoutubeVideoTitle, replaceCatalogMista, fixBrokenLinks } = props;\r\n\r\n  try {\r\n    var url = new URL(href, true);\r\n  } catch (error) {\r\n    console.error(error.message, href);\r\n    return <a href={href}>{href}</a>;\r\n  }\r\n\r\n  let newHref = href;\r\n  if (newHref.startsWith('/')) {\r\n    url.set('protocol', 'https')\r\n    url.set('hostname', 'forum.mista.ru')\r\n    newHref = url.href;\r\n  }\r\n\r\n  if (url.hostname.search(/forum\\.mista.ru/) !== -1) {\r\n\r\n    if (url.pathname === '/topic.php') {\r\n      return (\r\n        <LinkToPost topicId={url.query.id} number={url.hash.replace('#', '') || \"0\"}>\r\n          {childrenToText(children)}\r\n        </LinkToPost>\r\n      )\r\n    } else if (url.pathname === '/users.php') {\r\n      return (\r\n        <LinkToUser href={url.href} >\r\n          {children}\r\n        </LinkToUser>\r\n      )\r\n    }\r\n\r\n    if (url.hostname === 'a-sitnikov.github.io' &&\r\n      url.pathname === '/react.mista/') {\r\n\r\n      if (Object.keys(url.query).length === 0) {\r\n\r\n        url = new URL(href.replace(/#\\//, ''), true);\r\n        if (url.pathname === '/react.mista/topic.php')\r\n          return (\r\n            <LinkToPost topicId={url.query.id} number={url.hash.replace('#', '') || \"0\"}>\r\n              {childrenToText(children)}\r\n            </LinkToPost>\r\n          )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (showYoutubeVideoTitle === 'true')\r\n    if (isYoutube(url.hostname)) \r\n      return <YoutubeLink href={href} />\r\n\r\n  if (replaceCatalogMista === 'true')\r\n    if (isMistaCatalog(url.hostname)) {\r\n      url.set('hostname', 'infostart.ru')\r\n\r\n      return (\r\n        <a target={props.target}\r\n          className={props.class}\r\n          rel={props.rel}\r\n          href={url.href} >{url.href} </a>\r\n      )\r\n    }\r\n\r\n  if (fixBrokenLinks === 'true' && parentText) {\r\n    newHref = fixBrokenLink(newHref, parentText);\r\n  }\r\n\r\n  return (\r\n    <a target={props.target}\r\n      className={props.class}\r\n      rel={props.rel}\r\n      href={newHref} >{children}</a>\r\n  )\r\n}\r\n\r\nexport default connector(CustomLink);","//@flow\r\nimport React, { FC, ReactElement } from 'react'\r\nimport { domain } from 'src/api'\r\n\r\nimport { IVotingItem } from 'src/data/topic'\r\n\r\ntype IProps = {\r\n  topicId: number,\r\n  data: IVotingItem,\r\n  colors: string[],\r\n  total: number,\r\n  n: number\r\n}\r\n\r\nconst VoteItem: FC<IProps> = ({ topicId, data, total, n, colors }): ReactElement => {\r\n\r\n  const img = `${domain}/css/voting${n}.png`;\r\n\r\n  let percent = 0;\r\n\r\n  if (total) {\r\n    percent = Math.round(100 * data.count / total);\r\n  }\r\n\r\n  const imgStyle = { maxWwidth: \"500px\", width: \"100%\", height: \"15px\" };\r\n\r\n  return (\r\n    <div className=\"voting-item\">\r\n      <div className=\"voting-title\">\r\n        <a rel=\"nofollow\" style={{ textDecoration: \"none\" }} href={`#/topic.php?id=${topicId}&sel=${n}`}>\r\n          <b><span style={{ color: colors[n - 1] }}>{`${n}. ${data.text}`}</span></b>\r\n        </a>\r\n      </div>\r\n      <div className=\"voting-percentage\">\r\n        {/*<div className=\"div-va-middle\">*/}\r\n        <b><span style={{ color: colors[n - 1] }}>{`${percent}% (${data.count})`}</span></b>\r\n        {/*</div>*/}\r\n      </div>\r\n      <div className=\"voting-bar\">\r\n        <div style={{ width: `${percent}%` }}>\r\n          <a href={img}>\r\n            <img src={img} style={imgStyle} alt={`п${n}`} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VoteItem;","import { FC, ReactElement } from 'react'\r\nimport VoteItem from './vote_item'\r\nimport { IVotingItem } from 'src/data/topic'\r\n\r\ntype IProps = {\r\n  items: IVotingItem[],\r\n  topicId: number,\r\n  colors: string[]\r\n}\r\n\r\nconst VoteChart: FC<IProps> = ({ items, topicId, colors }): ReactElement => {\r\n\r\n  let total = Math.max(...items.map(item => item.count));\r\n\r\n  return (\r\n    <div style={{ marginBottom: \"10px\" }}>\r\n      {items.filter(item => item.text).map((data, i) => <VoteItem key={i} data={data} total={total} n={i + 1} topicId={topicId} colors={colors} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VoteChart;","import React, { FC, ReactElement } from 'react'\r\n\r\ntype IProps = {\r\n  colors: string[],\r\n  n: number,\r\n  text: string\r\n}\r\n\r\nconst Vote: FC<IProps> = ({ colors, n, text }): ReactElement => {\r\n\r\n  return (\r\n    <div style={{ marginTop: \"5px\" }}>\r\n      <b><span style={{ color: colors[n - 1] }}>{`${n}. ${text}`}</span></b>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Vote;","import React, { FC, ReactElement } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport activeHtml from 'react-active-html';\r\n\r\nimport Code from 'src/components/extensions/code1c'\r\nimport LinkToPost from 'src/components/extensions/link_to_post'\r\nimport CustomLink from 'src/components/extensions/custom_link'\r\n\r\nimport VoteChart from './vote_chart'\r\nimport Vote from './vote'\r\nimport { ITopicMessage } from 'src/data/topic';\r\nimport { RootState } from 'src/data/store';\r\n\r\ntype IProps = {\r\n  topicId: number,\r\n  n: number,\r\n  html: string,\r\n  vote: number,\r\n  data: ITopicMessage,\r\n  style?: {}\r\n}\r\n\r\nconst processLinksToPosts = (text: string, topicId: number): string => {\r\n\r\n  const regexp = /(\\()(\\d+)(\\))/gi; // (12)\r\n  return text.replace(regexp, (res, ...segments) => {\r\n    const number = segments[1];\r\n    return `(<link data-topicid='${topicId}' data-number='${number}' ></link>)`\r\n  });\r\n}\r\n\r\nconst processCode1C = (text: string): string => {\r\n\r\n  const regexp = /(\\[1[CС]\\])((.|\\n|\\r)*?)(\\[\\/1[CС]\\])/gi; // [1C] text [/1C]\r\n  return text.replace(regexp, (res, ...segments) => {\r\n    let txt = segments[1];\r\n\r\n    //remove first <br>\r\n    if (txt.substr(0, 4) === \"<br>\")\r\n      txt = txt.substr(4);\r\n    return `<code>${txt}</code>`\r\n  });\r\n}\r\n\r\nconst processText = (text: string, topicId: number): string | undefined => {\r\n\r\n  if (!text)\r\n    return text;\r\n\r\n  let newtext = processCode1C(text);\r\n  newtext = processLinksToPosts(newtext, topicId);\r\n\r\n  return newtext;\r\n}\r\n\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const { info } = state.topic;\r\n\r\n  return {\r\n    info,\r\n    voteColors: state.options.voteColors,\r\n    showTooltips: state.options.items['showTooltips']\r\n  }\r\n}\r\nconst connector = connect(mapState);\r\nconst MsgText: FC<ConnectedProps<typeof connector> & IProps> = \r\n  ({ topicId, n, html, vote, info, style, voteColors }): ReactElement => {\r\n\r\n  let voteElement;\r\n  if (vote && info.voting && topicId === info.id) {\r\n    let voteOption = info.voting[vote - 1];\r\n    if (voteOption)\r\n      voteElement = <Vote text={voteOption.text} n={vote} colors={voteColors} />\r\n  }\r\n\r\n  let voteChart;\r\n  if (n === 0 && info.isVoting && info.voting) {\r\n    voteChart = <VoteChart items={info.voting} topicId={topicId} colors={voteColors} />\r\n  }\r\n\r\n  let processedHtml = processText(html, topicId);\r\n  const componentsMap = {\r\n    link: (props: any) => <LinkToPost topicId={props['data-topicid']} number={props['data-number']} key={props.key} />,\r\n    code: (props: any) => <Code {...props} />,\r\n    a: (props: any) => <CustomLink {...props} parentText={processedHtml} />\r\n  };\r\n  const textComponent = activeHtml(processedHtml, componentsMap);\r\n\r\n  return (\r\n    <div className=\"message\" style={style}>\r\n      {voteChart}\r\n      <div>\r\n        {textComponent}\r\n      </div>\r\n      {voteElement}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connector(MsgText);","//@flow\r\nimport React, { FC, ReactElement } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport dateFormat from 'dateformat'\r\n\r\nimport './topic_preview.css'\r\n\r\ntype IProps = {\r\n  user?: string,\r\n  time?: number,\r\n  topicId: number,\r\n  n: number,\r\n  onFirst: any,\r\n  onLast: any,\r\n  onPrev: any,\r\n  onNext: any\r\n}\r\n\r\nconst PreviewHeader: FC<IProps> = ({user, time, topicId, n,\r\n  onFirst, onPrev, onNext, onLast}): ReactElement => {\r\n\r\n  if (time)\r\n    var date = new Date(time);\r\n\r\n  return (\r\n  <div>\r\n    <span className=\"plus-nav\" onClick={onFirst}>[← </span>\r\n    <span className=\"plus-nav\" onClick={onPrev}> « </span>\r\n    <Link className=\"plus-nav\" title={`Перейти к сообщению ${n}`} to={`/topic.php?id=${topicId}#${n}`}>{n}</Link>\r\n    <span className=\"plus-nav\" onClick={onNext}> » </span>\r\n    <span className=\"plus-nav\" onClick={onLast}> →]</span>\r\n    <b style={{ margin: \"auto 5px\" }}>{user}</b>\r\n    <span className=\"agh\">{dateFormat(date, 'dd.mm.yy - HH:MM')}</span>\r\n  </div>\r\n  )    \r\n\r\n}\r\n\r\nexport default PreviewHeader;","//@flow\r\nimport React, { FC, ReactElement, useState, useEffect, useCallback } from 'react'\r\nimport { fetchTopicInfo } from 'src/api/topicinfo'\r\n\r\nimport { fetchTopicMessage } from 'src/api/topicMessages'\r\n\r\nimport MsgText from 'src/components/topic/row/msg_text'\r\nimport { ITopicMessage } from 'src/data/topic'\r\nimport ErrorElem from '../common/error'\r\n\r\nimport PreviewHeader from './preview_header'\r\nimport './topic_preview.css'\r\n\r\ntype IProps = {\r\n  topicId: number\r\n}\r\n\r\ntype IState = {\r\n  data?: ITopicMessage,\r\n  error?: string  \r\n}\r\n\r\nconst TopicPreview: FC<IProps> = ({ topicId }): ReactElement => {\r\n\r\n  const [state, setState] = useState<IState>({\r\n    data: null,\r\n    error: null\r\n  })\r\n\r\n  const [ msgNumber, setMsgNumber ] = useState(0);\r\n\r\n  const fetchData = useCallback(async (n: number) => {\r\n    let data, error;\r\n    try {\r\n      data = await fetchTopicMessage(topicId, n);\r\n      if (!data)\r\n        error = `Сообщение не найдено ${n}`;\r\n\r\n    } catch (e) {\r\n      error = e.message\r\n    };\r\n\r\n    setState({\r\n      data,\r\n      error\r\n    })\r\n  }, [topicId]);\r\n\r\n  useEffect(() => {\r\n    fetchData(msgNumber);\r\n  }, [msgNumber, fetchData])\r\n\r\n  const onClickFirst = () => {\r\n    setMsgNumber(0);\r\n  }\r\n\r\n  const onClickNext = () => {\r\n    setMsgNumber(msgNumber + 1);\r\n  }\r\n\r\n  const onClickPrev = () => {\r\n    if (msgNumber > 0)\r\n      setMsgNumber(msgNumber - 1);\r\n  }\r\n\r\n  const onClickLast = async () => {\r\n    const info = await fetchTopicInfo(topicId);\r\n    setMsgNumber(info.count)\r\n  }\r\n\r\n  const { data, error } = state;\r\n  if (!data && !error)\r\n    return null;\r\n\r\n  if (data)\r\n    var { user, time } = data;\r\n\r\n  return (\r\n    <div className=\"topic-preview\">\r\n      <PreviewHeader\r\n        user={user}\r\n        time={time}\r\n        topicId={topicId}\r\n        n={msgNumber}\r\n        onFirst={onClickFirst}\r\n        onLast={onClickLast}\r\n        onNext={onClickNext}\r\n        onPrev={onClickPrev}\r\n      />\r\n      {data && <MsgText\r\n        topicId={topicId}\r\n        n={msgNumber}\r\n        data={data}\r\n        html={data.text}\r\n        vote={data.vote}\r\n        style={{ maxHeight: \"500px\", overflowY: \"auto\", overflowWrap: \"break-word\" }}\r\n      />}\r\n      {error && <ErrorElem text={error}/>}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default TopicPreview;","import React, { FC, ReactElement, useCallback, useEffect } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { useLocation } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\n\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\nimport { getTopicsListIfNeeded } from 'src/data/topicslist/actions'\r\n\r\nimport Header from './header'\r\nimport Row from './row'\r\nimport Pages from 'src/components/common/pages'\r\nimport NewTopic from './new_topic'\r\nimport Error from 'src/components/common/error'\r\n\r\nimport TopicPreview from 'src/components/preview/topic_preview'\r\n\r\nimport './topics_list.css'\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  return {\r\n    topicsList: state.topicsList,\r\n    sections: state.sections,\r\n    login: state.login,\r\n    options: state.options\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\n\r\nconst TopicsList: FC<ConnectedProps<typeof connector>> = ({ topicsList, sections }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch()\r\n  const location = useLocation();\r\n  const locationParams = queryString.parse(location.search);\r\n\r\n  const updateTopicsList = useCallback((locationParams) => {\r\n    dispatch(getTopicsListIfNeeded(locationParams));\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    document.title = 'React.Mista';\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const locationParams = queryString.parse(location.search);\r\n    updateTopicsList(locationParams);\r\n  }, [location.search, updateTopicsList]);\r\n\r\n  let rows = [];\r\n  for (let item of topicsList.items) {\r\n\r\n    rows.push(<Row key={item.id} data={item} topicId={item.id}/>);\r\n    if (item.showPreview)\r\n      rows.push(\r\n        <div key={`preview${String(item.id)}`} className=\"preview-container\">\r\n          <TopicPreview topicId={item.id} />\r\n        </div>\r\n      )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {topicsList.error && (<Error text={topicsList.error} />)}\r\n      <div className=\"table\">\r\n        <div className=\"th\" style={{ position: \"sticky\", top: \"39px\" }}>\r\n          <div style={{ letterSpacing: \"-1px\" }}>Раздел</div>\r\n          <div>Re</div>\r\n          <div></div>\r\n          <div>Тема</div>\r\n          <div>Автор</div>\r\n          <div><span style={{ cursor: \"pointer\" }} title=\"Обновить список\" onClick={updateTopicsList}>{topicsList.isFetching ? \"Обновляется\" : \"Обновлено\"}</span></div>\r\n        </div>\r\n        {rows}\r\n        <div className=\"tf\">\r\n          <Pages baseUrl='index.php' locationParams={locationParams} maxPage={10} />\r\n        </div>\r\n      </div>\r\n      <div id=\"F\" className=\"newtopic\" style={{ marginBottom: \"10px\", marginTop: \"5px\", position: 'relative' }}>\r\n        <NewTopic \r\n          sections={sections.items} \r\n          locationParams={locationParams} \r\n          onSubmitSuccess={updateTopicsList}\r\n          />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connector(TopicsList);","import React, { FC, ReactElement } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux'\r\n\r\nimport { RootState } from 'src/data/store'\r\nimport Login from 'src/components/login'\r\n\r\nconst mapState = (state: RootState) => {\r\n  return {\r\n    info: state.topic.info,\r\n    login: state.login\r\n  }  \r\n}\r\nconst connector = connect(mapState);\r\n\r\nconst Header: FC<ConnectedProps<typeof connector>> =  ({ info, login }): ReactElement => {\r\n\r\n  const forums = {\r\n    '1c': '1С:Предприятие',\r\n    'life': 'О жизни',\r\n    'it': 'Информационные технологии',\r\n    'job': 'Работа'\r\n  };\r\n\r\n  return (\r\n\r\n    <div className=\"flex-row\">\r\n      <div className=\"header-left\">\r\n        <Login/>\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <span id=\"forum_string\" className=\"bold120\">\r\n          <a rel=\"nofollow\" href={`#/index.php?forum=${info.forum}`} style={{ textDecoration: \"none\" }}>{forums[info.forum]}</a>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connector(Header);","import React, { FC, ReactElement } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\n\r\nimport { RootState } from 'src/data/store'\r\n\r\nimport { domain, urlTopicInfo, urlTopicMessages } from 'src/api'\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const {\r\n    info\r\n  } = state.topic;\r\n\r\n  return {\r\n    info\r\n  }\r\n}\r\nconst connector = connect(mapState);\r\nconst TopicInfo: FC<ConnectedProps<typeof connector>> = ({ info }): ReactElement => {\r\n\r\n  let yandexUrl = \"https://www.yandex.ru/yandsearch?rpt=rad&text=\" + encodeURIComponent(info.title);\r\n\r\n  return (\r\n    <div className=\"topic-row\">\r\n      <div className=\"cell-userinfo\">\r\n        <div className=\"topic-tools\">\r\n          <a title=\"API.info\" href={`${domain}/${urlTopicInfo}?id=${info.id}`} className=\"agh\" style={{ display: \"block\", lineHeight: \"1em\" }}>i</a>\r\n          <a title=\"API.messages\" href={`${domain}/${urlTopicMessages}?id=${info.id}&from=0&to=20`} className=\"agh\" style={{ display: \"block\", lineHeight: \"1em\" }}>m</a>\r\n          {/*<a href=\"add_voting.php?topic_id=815217\" title=\"Добавить голосование\">vote</a> &nbsp;&nbsp;*/}\r\n        </div>\r\n      </div>\r\n      <div className=\"cell-message\">\r\n        <div className=\"flex-row\">\r\n          <div style={{ flex: 1, textAlign: \"center\" }}>\r\n            <a href={`${domain}/topic.php?id=${info.id}`}>\r\n              <h1 className=\"topic-title\" dangerouslySetInnerHTML={{ __html: info.title }}></h1>\r\n            </a>\r\n            <div className=\"moder-action\"></div>\r\n          </div>\r\n          <div style={{ flex: \"0 0 20px\", position: \"relative\" }}>\r\n            <div className=\"div-va-middle\">\r\n              <a rel=\"noopener noreferrer\" href={yandexUrl} title=\"Искать в Яндексе\" target=\"_blank\" className=\"yandex\">Я</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default connector(TopicInfo);","//@flow\r\nimport React, { FC, ReactElement } from 'react'\r\nimport dateFormat from 'dateformat'\r\nimport classNames from 'classnames'\r\nimport { domain } from 'src/api'\r\n\r\nimport { addMessageText } from 'src/data/newmessage/actions'\r\nimport { useAppDispatch } from 'src/data/store'\r\nimport { ITopicMessage } from 'src/data/topic'\r\n\r\ntype IProps ={\r\n  data: ITopicMessage,\r\n  isAuthor: boolean,\r\n  isYou: boolean,\r\n  isTooltip?: boolean\r\n}\r\n\r\nconst UserInfo: FC<IProps> = (props): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onClick = () => {\r\n    const { data } = props;\r\n    dispatch(addMessageText(`(${data.n})`));\r\n\r\n    let elem = document.getElementById('message_text');\r\n    if (elem)\r\n      window.scrollTo(0, elem.offsetTop);\r\n  }\r\n\r\n  const onImageLoad = (event) => {\r\n    event.target.style.display = 'inline';\r\n  }\r\n\r\n    const { data, isAuthor, isYou, isTooltip } = props;\r\n    const href = `${domain}/users.php?id=${data.userId}`;\r\n    let dataStr;\r\n    if (!data) {\r\n      dataStr = '';\r\n    } else if (data.n === 0) {\r\n      dataStr = dateFormat(new Date(data.time), 'dd.mm.yy - HH:MM');\r\n    } else {\r\n      dataStr = (\r\n        <>\r\n          <span className=\"message-number\">{data.n}</span>{' - ' + dateFormat(new Date(data.time), 'dd.mm.yy - HH:MM')}\r\n        </>\r\n      )\r\n    }\r\n\r\n    const userClassNames = classNames(\"registered-user\", {\r\n      \"is-author\": isAuthor,\r\n      \"is-you\": isYou\r\n    });\r\n\r\n    let imgElem;\r\n    if (window.innerWidth > 768)\r\n    imgElem = <img src={`${domain}/css/user_icons/${data.userId}_16x16.png`} \r\n              alt=\"user ico\"\r\n              onLoad={onImageLoad} \r\n              style={{display:\"none\", marginBottom:\"4px\", marginRight:\"1px\"}}/>\r\n\r\n    let timeElem;  \r\n    if (isTooltip) {\r\n      timeElem = <div className=\"ah\" style={{display:\"inline-block\", marginLeft:\"5px\"}}>{dataStr}</div>;\r\n    } else {\r\n      timeElem =\r\n        <div className=\"message-time\">\r\n          <span className=\"ah\" >{dataStr}</span>\r\n          <button className=\"button ah\" onClick={onClick}>{dataStr}</button>\r\n        </div>\r\n    }  \r\n\r\n    return (\r\n      <div className=\"user-info\">\r\n        {imgElem}\r\n        <a className={userClassNames} href={href}>{data.user}</a>\r\n        {timeElem}\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserInfo;","import React, { FC, ReactElement } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\n\r\nimport UserInfo from './user_info'\r\nimport MsgText from './msg_text'\r\nimport { RootState } from 'src/data/store'\r\nimport { ITopicMessage } from 'src/data/topic'\r\n\r\ntype IProps = {\r\n  data: ITopicMessage\r\n}\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const {\r\n    info,\r\n    item0,\r\n  } = state.topic || {\r\n    info: {},\r\n    item0: {},\r\n  }\r\n\r\n  return {\r\n    topicId: info.id,\r\n    author: item0 ? item0.user : '',\r\n    login: state.login\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst Row: FC<ConnectedProps<typeof connector> & IProps> = (props): ReactElement => {\r\n\r\n    const { data, author, topicId, login } = props;\r\n\r\n    if (!data)\r\n      return null;\r\n\r\n    return (\r\n      <div className=\"topic-row\" id={String(data.n)}>\r\n        <div className=\"cell-userinfo\">\r\n          <UserInfo data={data} isAuthor={data.user === author} isYou={data.user === login.userName} />\r\n        </div>\r\n        <div className=\"cell-message\">\r\n          <MsgText data={data} html={data.text} topicId={topicId} n={data.n} vote={data.vote} />\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default connector(Row);","import React, { FC, ReactElement } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport { getNewMessagesIfNeeded } from 'src/data/topic/actions'\r\nimport { getMaxPage } from 'src/utils'\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\nimport { defaultInfo } from 'src/data/topic';\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const {\r\n    isFetching,\r\n    lastUpdated,\r\n    info,\r\n  } = state.topic || {\r\n    isFetching: true,\r\n    info: defaultInfo,\r\n  }\r\n\r\n  return {\r\n    info,\r\n    isFetching,\r\n    lastUpdated\r\n  }\r\n}\r\nconst connector = connect(mapState);\r\ntype IProps = { locationParams?: any};\r\n\r\nconst Footer: FC<ConnectedProps<typeof connector> & IProps> = ({ info, isFetching, locationParams }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onBookmarkClick = () => {\r\n    //dispatch(addBookmark(info));\r\n  }\r\n\r\n  const onRefreshClick = () => {\r\n\r\n    dispatch(getNewMessagesIfNeeded({\r\n      id: info.id,\r\n      last: info.count\r\n    }));\r\n\r\n  }\r\n\r\n  const maxPage = getMaxPage(info.count);\r\n\r\n  let updateButton;\r\n  let page = locationParams.page || 1;\r\n  if (page === 'last20' || page === maxPage)\r\n    updateButton =\r\n      <Button\r\n        onClick={onRefreshClick}\r\n        disabled={false}\r\n        size=\"sm\"\r\n        className='button'\r\n        variant=\"light\">\r\n        {isFetching ? 'Обновляется' : 'Обновить ветку'}\r\n      </Button>\r\n\r\n  return (\r\n    <div className=\"flex-row\" id=\"F\">\r\n      <div className=\"ta-left va-top\" style={{ width: \"50%\" }}>\r\n        <Button\r\n          onClick={onBookmarkClick}\r\n          disabled={false}\r\n          size=\"sm\"\r\n          className='button'\r\n          variant=\"light\">\r\n          {'Закладка'}\r\n        </Button>\r\n      </div>\r\n      <div className=\"ta-right va-middle\" style={{ marginLeft: \"auto\" }}>\r\n        {updateButton}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connector(Footer);","import React, { FC, ReactElement, useState } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { FormGroup, Form } from 'react-bootstrap'\r\n\r\nimport TextEditor from 'src/components/common/text_editor'\r\nimport { newMessageText, postNewMessage } from 'src/data/newmessage/actions'\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\n\r\ntype IProps = {\r\n  onSubmitSuccess?: () => void\r\n}\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  return {\r\n    info: state.topic.info,\r\n    newMessage: state.newMessage\r\n  };\r\n\r\n}\r\n\r\nconst connector = connect(mapState);\r\n\r\nconst NewMessage: FC<ConnectedProps<typeof connector> & IProps> = ({ info, newMessage, onSubmitSuccess }): ReactElement => {\r\n\r\n  const [voting, setVoting] = useState();\r\n  const dispatch = useAppDispatch()\r\n\r\n  const onSubmit = (e: any) => {\r\n\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let params = {\r\n      text: newMessage.text,\r\n      topicId: String(info.id),\r\n      onSuccess: afterSubmit,\r\n      voting_select: undefined\r\n    };\r\n\r\n    if (voting) {\r\n      params.voting_select = voting;\r\n    }\r\n\r\n    dispatch(postNewMessage(params));\r\n  }\r\n\r\n  const afterSubmit = () => {\r\n\r\n    dispatch(newMessageText(''));\r\n\r\n    setVoting(undefined);\r\n\r\n    if (onSubmitSuccess) {\r\n      onSubmitSuccess();\r\n    }\r\n  }\r\n\r\n  const clearVoting = (e) => {\r\n\r\n    e.preventDefault();\r\n    setVoting(undefined);\r\n\r\n  }\r\n\r\n  const setVotingOption = (i) => {\r\n    setVoting(i);\r\n  }\r\n\r\n  let votingElem;\r\n  if (info.isVoting && info.voting) {\r\n\r\n    let votingOptions = [];\r\n    for (let i = 1; i <= info.voting.length; i++) {\r\n\r\n      const item = info.voting[i - 1];\r\n      if (!item.text)\r\n        continue;\r\n\r\n      votingOptions.push(\r\n        <Form.Check\r\n          type=\"radio\"\r\n          key={i}\r\n          name=\"voting\"\r\n          checked={voting === i}\r\n          onChange={() => setVotingOption(i)}\r\n          label={`${i}. ${item.text}`}\r\n        />\r\n      );\r\n    }\r\n\r\n\r\n    votingElem = (\r\n      <FormGroup>\r\n        <legend>\r\n          <small>Ваш выбор:\r\n            <span id=\"voting_clear\" style={{ marginLeft: \"5px\", cursor: \"pointer\" }} onClick={clearVoting}>очистить</span>\r\n          </small>\r\n        </legend>\r\n        {votingOptions}\r\n        Обоснуйте свой выбор!\r\n      </FormGroup>\r\n    );\r\n\r\n  }\r\n\r\n  return (\r\n    <form style={{ marginTop: \"5px\" }} onSubmit={onSubmit}>\r\n      <div className=\"bold\">Добавить сообщение в тему:</div>\r\n      <div className=\"new-message-container\">\r\n        <div className=\"new-message-text\">\r\n          <TextEditor\r\n            isFetching={newMessage.isFetching}\r\n            text={newMessage.text}\r\n            placeholder=\"Сообщение\"\r\n            formName=\"NEW_MESSAGE\"\r\n          />\r\n        </div>\r\n        <div className=\"new-message-voting\">\r\n          {votingElem}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n}\r\n\r\nexport default connector(NewMessage);","import { FC, ReactElement } from 'react'\r\n\r\ntype IProps = {\r\n  name: string,\r\n  label: string,\r\n  value: string,\r\n  values: Array<{ name: string, descr: string }>,\r\n  onChange: any,\r\n  oneLine: boolean\r\n}\r\n\r\nconst RadioOption: FC<IProps> = (props): ReactElement => {\r\n\r\n  const onChange = (e: any) => {\r\n    const { name } = props;\r\n    props.onChange(e, name, e.target.value);\r\n  }\r\n\r\n  const { name, label, values, oneLine } = props;\r\n\r\n  let valuesElem = [];\r\n  for (let i = 0; i < values.length; i++) {\r\n    let item = values[i];\r\n    valuesElem.push(\r\n      <label key={ i } htmlFor = { item.name } style = {{ marginRight: \"5px\" }}>\r\n        <input type=\"radio\" name = { name } value = { item.name } checked = { item.name === props.value } onChange = {onChange } />\r\n          { item.descr }\r\n      </label>\r\n      );\r\n    }\r\n\r\nreturn (\r\n  <span>\r\n    <span style= {{ marginRight: \"5px\" }}> { label } </span>\r\n    {oneLine ? null : <br />}\r\n    { valuesElem }\r\n  </span>\r\n    );\r\n}\r\n\r\nexport default RadioOption;","import React, { FC, ReactElement } from 'react'\r\n\r\ntype IProps = {\r\n  name: string,\r\n  label: string,\r\n  value: string,\r\n  onChange: any,\r\n  postfix?: string\r\n}\r\n\r\nconst StringOption: FC<IProps> = (props): ReactElement => {\r\n\r\n  const onChange = (e: any) => {\r\n    const { name } = props;\r\n    props.onChange(e, name, e.target.value);\r\n  }\r\n\r\n  const { name, value, label, postfix } = props;\r\n\r\n  return (\r\n    <label htmlFor={name} style={{ marginRight: \"5px\" }}>\r\n      <span style={{ marginRight: \"5px\" }}>{label}</span>\r\n      <input type=\"string\" name={name} value={value} onChange={onChange} className='input' />\r\n      {postfix !== undefined ?\r\n        <span style={{ marginLeft: \"5px\" }}>{postfix}</span>\r\n        : null}\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default StringOption;","export const formTabs = [\r\n  {\r\n    tabName: 'Общие',\r\n    rows: [\r\n      ['theme'],\r\n      ['topicsPerPage'],\r\n      ['autoRefreshTopicsList', 'autoRefreshTopicsListInterval'],\r\n      ['autoRefreshTopic', 'autoRefreshTopicInterval'],\r\n    ]\r\n  },\r\n  {\r\n    tabName: 'Тултипы',\r\n    rows: [\r\n      ['showTooltips', 'tooltipDelay'],\r\n      ['showTooltipOnTopicsList'],\r\n      ['showTooltipOnPostLink']\r\n    ]\r\n  },\r\n  {\r\n    tabName: 'Ссылки',\r\n    rows: [\r\n      ['showYoutubeVideoTitle'],\r\n      ['replaceCatalogMista'],\r\n      ['fixBrokenLinks'],\r\n    ]\r\n  }\r\n];\r\n\r\nexport const formParams = {\r\n  'theme': {\r\n    type: 'radio',\r\n    label: 'Цветовая палитра:',\r\n    oneLine: true,\r\n    values: [\r\n      { name: 'yellow', descr: 'Золотая' },\r\n      { name: 'lightgray', descr: 'Серая' },\r\n      { name: 'dark', descr: 'Темная' }\r\n    ]\r\n  },\r\n  'topicsPerPage': {\r\n    type: 'number',\r\n    label: 'Тем на странице (max 99):',\r\n    min: 1,\r\n    max: 99\r\n  },\r\n  'autoRefreshTopicsList': {\r\n    type: 'checkbox',\r\n    label: 'Автообновление списка тем'\r\n  },\r\n  'autoRefreshTopicsListInterval': {\r\n    type: 'number',\r\n    label: '',\r\n    min: 60,\r\n    max: 1000000,\r\n    postfix: 'сек'\r\n  },\r\n  'autoRefreshTopic': {\r\n    type: 'checkbox',\r\n    label: 'Автообновление темы'\r\n  },\r\n  'autoRefreshTopicInterval': {\r\n    type: 'number',\r\n    label: '',\r\n    min: 60,\r\n    max: 1000000,\r\n    postfix: 'сек'\r\n  },\r\n  //Tooltips   \r\n  'showTooltips': {\r\n    type: 'checkbox',\r\n    label: 'Показывать тултипы, задержка'\r\n  },\r\n  'tooltipDelay': {\r\n    type: 'number',\r\n    max: 1000000,\r\n    label: '',\r\n    postfix: 'мс'\r\n  },\r\n  'showTooltipOnTopicsList': {\r\n    type: 'checkbox',\r\n    label: 'Показывать тултипы на главной странице, при наведении на кол-во ответов'\r\n  },\r\n  'showTooltipOnPostLink': {\r\n    type: 'checkbox',\r\n    label: 'Показывать тултип ссыки на другую ветку'\r\n  },\r\n  //links   \r\n  'showYoutubeVideoTitle': {\r\n    type: 'checkbox',\r\n    label: 'Показывать наименования роликов youtube'\r\n  },\r\n  'replaceCatalogMista': {\r\n    type: 'checkbox',\r\n    label: 'Обратно заменять catalog.mista.ru на infostart.ru'\r\n  },\r\n  'fixBrokenLinks': {\r\n    type: 'checkbox',\r\n    label: 'Чинить поломанные ссылки (с русскими символами)'\r\n  },\r\n}","import { FC, ReactElement } from \"react\";\r\n\r\ntype IProps = {\r\n  name: string\r\n}\r\n\r\nconst Tab: FC<IProps> = ({ name, children }): ReactElement => {\r\n  return (\r\n    <div>\r\n      <div className=\"tab-header\">\r\n        {name}\r\n      </div>\r\n      <div className=\"tab-content\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tab;","import { FC, ReactElement, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { Form, FormControl, Button } from 'react-bootstrap'\r\n\r\nimport RadioOption from './radio_option'\r\nimport StringOption from './string_option'\r\n\r\nimport { saveOptions } from 'src/data/options/actions'\r\n\r\nimport { defaultOptionsState } from 'src/data/options'\r\nimport { formTabs, formParams } from './formscheme'\r\nimport Tab from './tab'\r\n\r\nimport './options.css'\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\n\r\nconst mapState = (state: RootState) => {\r\n  return {\r\n    options: state.options\r\n  };\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst Options: FC<ConnectedProps<typeof connector>> = (props): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [state, setState] = useState({\r\n    items: props.options.items\r\n  })\r\n\r\n  const closeForm = () => {\r\n    navigate('/#');\r\n  }\r\n\r\n  const resetOptions = () => {\r\n    setState({\r\n      ...state,\r\n      items: Object.assign({}, defaultOptionsState.items)\r\n    })\r\n  }\r\n\r\n  const applyOptions = () => {\r\n\r\n    dispatch(saveOptions(state.items));\r\n    closeForm();\r\n  }\r\n\r\n  const onChange = (e, name, value) => {\r\n\r\n    let items = Object.assign({}, state.items);\r\n    items[name] = value;\r\n    setState({\r\n      ...state,\r\n      items\r\n    })\r\n  }\r\n\r\n  let tabs = [];\r\n  for (let tab of formTabs) {\r\n\r\n    let rows = [];\r\n    for (let i in tab.rows) {\r\n\r\n      const row = tab.rows[i];\r\n      let rowElem = [];\r\n      for (let name of row) {\r\n\r\n        const item = formParams[name];\r\n        if (!item) continue;\r\n\r\n        const value = state.items[name];\r\n\r\n        if (item.type === 'radio') {\r\n          rowElem.push(\r\n            <RadioOption\r\n              key={name}\r\n              name={name}\r\n              label={item.label}\r\n              values={item.values}\r\n              value={value}\r\n              oneLine={item.oneLine}\r\n              onChange={onChange}\r\n            />\r\n          );\r\n        } else if (item.type === 'number') {\r\n\r\n          if (item.label)\r\n            rowElem.push(\r\n              <label\r\n                htmlFor={name}\r\n                key={name + '_label'}\r\n                style={{ fontWeight: \"inherit\" }}>\r\n                {item.label}\r\n              </label>\r\n            );\r\n\r\n          rowElem.push(\r\n            <FormControl\r\n              key={name}\r\n              type=\"number\"\r\n              min={item.min}\r\n              max={item.max}\r\n              value={value}\r\n              onChange={(e) => onChange(e, name, e.target.value)}\r\n              style={{ flex: \"0 0 100px\", marginLeft: \"5px\" }}\r\n              className='input'\r\n              size=\"sm\"\r\n            >\r\n            </FormControl>\r\n          );\r\n\r\n          if (item.postfix) {\r\n            rowElem.push(\r\n              <span key={name + '_postfix'} style={{ marginLeft: \"5px\", flex: \"0 0 auto\", }}>{item.postfix}</span>\r\n            )\r\n          };\r\n\r\n        } else if (item.type === 'string') {\r\n          rowElem.push(\r\n            <StringOption\r\n              key={name}\r\n              name={name}\r\n              label={item.label}\r\n              postfix={item.postfix}\r\n              value={value}\r\n              onChange={onChange}\r\n            />\r\n          );\r\n        } else if (item.type === 'checkbox') {\r\n          rowElem.push(\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              label={item.label}\r\n              key={name}\r\n              name={name}\r\n              checked={String(value) === 'true'}\r\n              onChange={(e) => onChange(e, name, e.target.checked)}\r\n              style={{ flex: \"0 0 auto\", margin: \"0px\", width: \"100%\" }}\r\n            />\r\n          );\r\n        }\r\n      }\r\n\r\n      rows.push(\r\n        <div key={i} className=\"options-row\">\r\n          {rowElem}\r\n        </div>\r\n      );\r\n\r\n    }\r\n\r\n    tabs.push(\r\n      <Tab key={tab.tabName} name={tab.tabName}>\r\n        {rows}\r\n      </Tab>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"options-form\">\r\n      <div className=\"options-header\" style={{ cursor: \"default\" }}>\r\n        <b>Настройки</b>\r\n      </div>\r\n      {tabs}\r\n      <div className=\"button-row\">\r\n        <Button\r\n          id=\"applyOptions\"\r\n          size=\"sm\"\r\n          variant=\"light\"\r\n          style={{ margin: \"5px\" }}\r\n          className='button'\r\n          onClick={applyOptions}>\r\n          OK\r\n        </Button>\r\n        <Button\r\n          id=\"cancelOptions\"\r\n          size=\"sm\"\r\n          variant=\"light\"\r\n          style={{ margin: \"5px\", float: \"left\" }}\r\n          className='button'\r\n          onClick={closeForm}>\r\n          Отмена\r\n        </Button>\r\n        <Button\r\n          id=\"defaultOptions\"\r\n          size=\"sm\"\r\n          variant=\"light\"\r\n          style={{ margin: \"5px\", float: \"right\" }}\r\n          className='button'\r\n          onClick={resetOptions}>\r\n          Сбросить настройки\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connector(Options);","import { Routes, Route } from 'react-router-dom'\r\nimport React, { ReactElement } from 'react';\r\n\r\nimport TopicsList from './topics_list'\r\nimport Topic from './topic'\r\nimport Options from './options'\r\nimport { clearTooltipsIfNeeded } from 'src/data/tooltips/actions'\r\n\r\nimport { useAppDispatch } from 'src/data/store';\r\n\r\nconst Container = (): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onClick = () => {\r\n    dispatch(clearTooltipsIfNeeded());\r\n  }\r\n\r\n  return (\r\n    <div onClick={onClick} style={{ flex: \"auto\" }}>\r\n      <div className=\"container\">\r\n        <Routes>\r\n          <Route path='/' element={<TopicsList />} />\r\n          <Route path='/index.php' element={<TopicsList />} />\r\n          <Route path='/topic.php' element={<Topic />} />\r\n          <Route path='/options.php' element={<Options />} />\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Container;","import React, { ReactElement } from 'react'\r\nimport { domain } from 'src/api'\r\n\r\nconst NavBarFooter = (): ReactElement => {\r\n\r\n    return (\r\n        <footer className=\"flex-row navbar-footer\">\r\n            <a href={`${domain}/rules.php`}>Правила</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/about.php`}>Описание</a>\r\n            <span className=\"separator\">|</span>\r\n            <b><a href={`${domain}/ad.php`}>Реклама на сайте</a>  </b>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/find.php`}>Поиск</a>\r\n            <span className=\"separator\">|</span>\r\n            <a rel=\"nofollow\" href={`${domain}/sections_list.php`}>Секции</a>\r\n            <span className=\"separator\">|</span>\r\n            <a rel=\"nofollow\" href={`${domain}/rating.php`}>Рейтинг</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href=\"http://kb.mista.ru\">Книга знаний</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href=\"http://wiki.mista.ru\">Вики-миста (КЗ2)</a>\r\n            <span className=\"separator\">|</span>\r\n            <a rel=\"nofollow\" href=\"http://m.mista.ru/\">Мобильная</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/archive.php`}>Архив</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/moders.php`}>Модераторы</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/users_gallery.php`}>Галерея</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/ban_list.php`}>Баны</a>\r\n            <span className=\"separator\">|</span>\r\n            <span>18+</span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default NavBarFooter;","import { FC, ReactElement } from 'react'\r\n\r\ntype IProps ={\r\n    closeWindow: (e: any) => any\r\n}\r\n\r\nconst TooltipHeader: FC<IProps> = ({children, closeWindow}): ReactElement => {\r\n    return (\r\n        <div className=\"tooltip-header\">\r\n            {children}\r\n            <div className=\"tooltip-close\" onClick={closeWindow} onTouchEnd={closeWindow}>\r\n                <span className=\"tooltip-close-x\">x</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TooltipHeader;","import React, { FC, ReactElement } from 'react'\r\n\r\ntype IProps = {\r\n  onScroll?: (e: any) => any\r\n}\r\n\r\nconst TooltipBody: FC<IProps> = ({ children, onScroll }): ReactElement => {\r\n\r\n  let startX = 0;\r\n\r\n  const onTouchStart = (e: React.TouchEvent<HTMLElement>) => {\r\n    startX = e.nativeEvent.changedTouches[0].clientX;\r\n  }\r\n\r\n  const onTouchEnd = (e: React.TouchEvent<HTMLElement>) => {\r\n\r\n    if (!onScroll) return;\r\n\r\n    let endX = e.nativeEvent.changedTouches[0].clientX;\r\n    if (Math.abs(endX - startX) > 100)\r\n      onScroll(-endX + startX);\r\n  }\r\n\r\n  return (\r\n    <div className=\"tooltip-text\" onTouchStart={onTouchStart} onTouchEnd={onTouchEnd}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TooltipBody;","import React, { FC, ReactElement } from 'react'\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nimport TooltipHeader from './tooltip_header'\r\nimport TooltipBody from './tooltip_body'\r\n\r\nimport './tooltip.css'\r\n\r\nimport { closeTooltip } from 'src/data/tooltips/actions'\r\nimport { useAppDispatch } from 'src/data/store';\r\nimport { ITooltipItem } from 'src/data/tooltips';\r\n\r\ntype IProps = {\r\n  tooltip: ITooltipItem,\r\n  zIndex: number,\r\n  onScroll: (delta: any) => void\r\n}\r\n\r\nconst TooltipWindow: FC<IProps> = ({ tooltip, zIndex, onScroll, children }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onCloseClick = () => {\r\n    dispatch(closeTooltip(tooltip.keys));\r\n  }\r\n\r\n  const onWheel = (e: React.WheelEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n    onScroll(-e.nativeEvent.deltaY);\r\n  }\r\n\r\n  const { coords } = tooltip;\r\n\r\n  let axis: \"both\" | \"x\" | \"y\" | \"none\";;\r\n  let position: {\r\n    top: number,\r\n    left: number\r\n  };\r\n\r\n  if (window.innerWidth <= 768) {\r\n    axis = \"y\";\r\n    position = { top: coords.y, left: 5 };\r\n  } else {\r\n    axis = \"both\";\r\n    position = { top: coords.y, left: Math.min(coords.x, window.innerWidth - 670) }\r\n  }\r\n\r\n  let [header, body] = React.Children.toArray(children);\r\n\r\n  return (\r\n    <Draggable\r\n      axis={axis}\r\n      handle=\".tooltip-header\"\r\n      defaultClassNameDragging=\"dragging\"\r\n      key={zIndex}>\r\n\r\n      <div className=\"tooltip-window\" style={{ ...position }} onWheelCapture={onWheel}>\r\n        <TooltipHeader closeWindow={onCloseClick}>\r\n          {(header as ReactElement).props.children}\r\n        </TooltipHeader>\r\n        <TooltipBody onScroll={onScroll}>\r\n          {(body as ReactElement).props.children}\r\n        </TooltipBody>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n\r\n}\r\n\r\nexport default TooltipWindow;","//@flow\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { fetchTopicMessage } from 'src/api/topicMessages';\r\n\r\nimport MsgText from '../topic/row/msg_text'\r\nimport UserInfo from '../topic/row/user_info';\r\n\r\nimport TooltipWindow from './tooltip_window'\r\nimport TooltipHeader from './tooltip_header'\r\nimport TooltipBody from './tooltip_body'\r\nimport './tooltip.css'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { TooltipItemState } from 'src/data/tooltips/reducer'\r\nimport type { TooltipKeys } from 'src/data/tooltips/actions'\r\n\r\ntype TooltipProps = {\r\n  tooltip: TooltipItemState,\r\n  info: any,\r\n  items: any,\r\n  item0: any\r\n}\r\n\r\ntype Props = TooltipProps & DefaultProps;\r\ntype State = {\r\n  data: any,\r\n  text: string,\r\n  number: number\r\n}\r\n\r\nclass Tooltip extends Component<Props, State> {\r\n\r\n  data: any;\r\n  text: string;\r\n  fetchData: any;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { tooltip, info, items, item0 } = props;\r\n    const { keys } = tooltip;\r\n\r\n    let text = '';\r\n    let data;\r\n    if (keys.topicId === info.id) {\r\n      if (keys.number === 0)\r\n        data = item0;\r\n      else\r\n        data = items.find(item => item.n === keys.number);\r\n\r\n      if (data)\r\n        text = data.text;\r\n    }\r\n\r\n    this.state = {\r\n      data,\r\n      text,\r\n      number: keys.number\r\n    }\r\n  }\r\n\r\n  fetchData = async (number: number) => {\r\n\r\n    if (number < 0) return;\r\n\r\n    let data;\r\n    let text = '';\r\n    const topicId = this.props.tooltip.keys.topicId;\r\n\r\n    try {\r\n      data = await fetchTopicMessage(topicId, number);\r\n      if (data)\r\n        text = data.text;\r\n      else\r\n        text = `Сообщение не найдено ${number}`;\r\n\r\n    } catch (e) {\r\n      text = e.message;\r\n    }\r\n\r\n    this.setState({ data, text, number });\r\n  }\r\n\r\n  onScroll = (delta) => {\r\n\r\n    const { keys } = this.props.tooltip;\r\n    if (keys.type !== 'TOPIC_PREVIEW') return;\r\n    if (delta > 0) {\r\n      this.fetchData(this.state.number + 1)\r\n    } else {\r\n      this.fetchData(this.state.number - 1)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.state.data)\r\n      this.fetchData(this.state.number);\r\n\r\n  }\r\n\r\n  render() {\r\n    const { keys } = this.props.tooltip;\r\n\r\n    if (!this.state.text)\r\n      return null;\r\n\r\n    let header;\r\n    if (!this.state.data) {\r\n      header = <b>Заголовок</b>\r\n    } else {\r\n      header = <UserInfo data={this.state.data} isAuthor={false} isTooltip={true}/>\r\n    }\r\n\r\n    if (keys.type === 'TOPIC' || keys.type === 'TOPIC_PREVIEW')\r\n      return (\r\n        <TooltipWindow tooltip={this.props.tooltip} onScroll={this.onScroll}>\r\n          <TooltipHeader>\r\n            {header}\r\n          </TooltipHeader>\r\n          <TooltipBody>\r\n            <MsgText\r\n              data={this.state.data}\r\n              html={this.state.text}\r\n              topicId={keys.topicId}\r\n              style={{ maxHeight: \"min(550px, 80vh)\", overflowY: \"auto\" }}\r\n            />\r\n          </TooltipBody>\r\n        </TooltipWindow>\r\n      )\r\n    else\r\n      return null;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n  const {\r\n    info,\r\n    items,\r\n    item0\r\n  } = state.topic;\r\n\r\n  return {\r\n    info,\r\n    items,\r\n    item0\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(Tooltip): any );","import React, { FC, ReactElement } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\n\r\nimport { RootState } from 'src/data/store'\r\nimport Tooltip from './tooltip'\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const {\r\n    items\r\n  } = state.tooltips\r\n\r\n  return {\r\n    items,\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst TooltipsList: FC<ConnectedProps<typeof connector>> = ({ items }): ReactElement => {\r\n\r\n  return (\r\n    <>\r\n      {items.map((item) => {\r\n        return (\r\n          <Tooltip key={item.hash} tooltip={item} keys={item.keys}>\r\n          </Tooltip>\r\n        )\r\n      }\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connector(TooltipsList);","import React, { FC, ReactElement, useEffect } from 'react';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport NavBar from './components/navigation/nav_bar';\r\nimport Container from './components/container';\r\nimport NavBarFooter from './components/navigation/nav_bar_footer';\r\nimport TooltipsList from './components/tooltips/tooltips_list';\r\nimport { RootState } from './data/store';\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  return {\r\n    theme: state.options.items.theme\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst App: FC<ConnectedProps<typeof connector>> = ({theme}): ReactElement => {\r\n\r\n  useEffect(() => {\r\n    document.body.setAttribute('theme', theme);\r\n  }, [theme])\r\n\r\n  return (\r\n    <HashRouter>\r\n      <NavBar />\r\n      <Container />\r\n      <NavBarFooter />\r\n      <TooltipsList />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default connector(App);\r\n","import React, { ReactElement } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from 'src/data/store'\r\n\r\nconst Root = ({ store }): ReactElement => (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(<Root store={store} />,\r\n  document.getElementById('root'));"],"sourceRoot":""}