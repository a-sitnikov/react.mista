{"version":3,"sources":["registerServiceWorker.js","utils.js","api.js","data/topicslist/actions.js","data/topicslist/reducer.js","data/topic/actions.js","data/topic/reducer.js","data/login/actions.js","data/login/reducer.js","data/sections/actions.js","data/sections/reducer.js","reducers/new_topic.js","reducers/new_message.js","components/common/search.js","components/nav_bar.js","data/options/actions.js","data/options/reducer.js","data/tooltips/actions.js","data/tooltips/reducer.js","reducers/topic_preview.js","data/store.js","components/login/logged_user.js","components/login/login_form.js","components/common/error.js","components/login/index.js","components/topics_list/sections.js","components/topics_list/header.js","components/topics_list/row/pages.js","components/topics_list/row/topic_name_cell.js","components/extensions/link_to_post.js","components/topics_list/row/preview_link.js","components/topics_list/row/index.js","components/common/pages.js","actions/new_topic.js","components/common/text_editor.js","components/topics_list/new_topic.js","components/extensions/code_highlight.js","components/options/index.js","components/extensions/code1c.js","components/extensions/link_to_user.js","components/extensions/youtube_link.js","components/extensions/custom_link.js","components/topic/row/vote_item.js","components/topic/row/vote_chart.js","components/topic/row/vote.js","components/topic/row/msg_text.js","components/preview/preview_header.js","components/preview/topic_preview.js","components/topics_list/index.js","components/topic/header.js","components/topic/topic_info.js","actions/new_message.js","components/topic/row/user_info.js","components/topic/row/index.js","components/topic/footer.js","components/topic/new_message.js","components/topic/index.js","components/options/radio_option.js","components/options/string_option.js","components/container.js","components/nav_bar_footer.js","components/tooltips/tooltip_header.js","components/tooltips/tooltip_body.js","components/tooltips/tooltip_window.js","components/tooltips/tooltip.js","components/tooltips/tooltips_list.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","parseJSON","text","JSON","parse","e","replace","console","error","message","log","getMaxPage","answ","Math","min","ceil","childrenToText","children","map","value","type","displayName","props","number","domain","localStorage","getItem","urlTopicsList","urlTopicInfo","urlTopicMessages","urlLogin","urlLogout","urlCookies","urlSections","urlNewMessage","urlNewTopic","getTopicsList","params","a","fetchAndGetJson","json","getTopicInfo","getTopicMessages","getMessage","id","n","from","to","length","data","find","val","String","getTopicMessagesCount","info","answers_count","getLogin","fetch","method","body","paramsToString","user_name","username","user_password","password","mode","credentials","headers","redirect","getLogout","fullUrl","getCookies","fetchJsonpAndGetJson","getSections","postNewMessage","url","topic_id","result","postNewTopic","paramsPrefix","arr","key","undefined","push","join","fetchJsonp","response","responseJson","utils","options","requestTopicsList","createAction","receiveTopicsList","list","payload","receiveTopicsListFailed","clearTopicsList","togglePreview","fetchTopicsListIfNeeded","dispatch","getState","state","topicsList","isFetching","shouldFetchTopicsList","page","reqestParams","topicsPerPage","items","topicsCount","topics","section","section_short_name","forum","user_id","mytopics","API","slice","fetchTopicsList","reducer","createReducer","builder","addCase","action","toString","lastUpdated","Date","getTime","ind","findIndex","item","topicId","Object","assign","showPreview","requestTopic","receiveTopic","item0","receiveTopicFailed","clearTopicMessages","requestNewMessages","receiveNewMessages","receiveNewMessagesFailed","shouldFetch","topic","fetchTopicIfNeeded","_item0","first","_items","last","fetchTopic","fetchNewMessagesIfNeeded","fetchNewMessages","defaultTopicState","concat","loginStart","loginComplete","userid","hashkey","loginFailed","logoutStart","logoutComplete","checkLoginStart","shouldLogin","login","checkLogin","cookie","session","last_error","trim","entr_hash","doLogout","doLoginIfNeeded","encodeURIComponent","doLogin","defaultLoginState","logged","requestSections","receiveSections","receiveSectionsFailed","fetchSectionsIfNeeded","sections","shouldfetchSections","tree","forEach","shortn","fulln","getKey","reduce","previous","currentItem","group","defaultNewTopicState","subject","isVoting","newTopic","toLowerCase","defaultNewMessageState","newMessage","Search","useState","searchEngine","setSearchEngine","setText","doSearch","open","InputGroup","size","Prepend","DropdownButton","title","style","marginRight","className","variant","Dropdown","Item","eventKey","onSelect","FormControl","placeholder","paddingRight","onKeyPress","onChange","target","Append","marginLeft","marginTop","marginBottom","cursor","onClick","zIndex","connect","useLocation","useDispatch","menuItems","name","link","hash","i","Nav","Link","href","Navbar","bg","expand","fixed","Brand","Toggle","aria-controls","Collapse","Form","inline","readOptions","saveOptions","defaultOptionsState","voteColors","theme","autoRefreshTopicsList","autoRefreshTopicsListInterval","autoRefreshTopic","autoRefreshTopicInterval","showTooltips","tooltipDelay","showTooltipOnTopicsList","showTooltipOnPostLink","showYoutubeVideoTitle","replaceCatalogMista","fixBrokenLinks","readOption","defaultValue","readAllOptions","setItem","createTooltip","keys","coords","closeTooltip","clearTooltips","clearTooltipsIfNeeded","tooltips","stringify","index","filter","defaultTopicPreviewState","topicPreview","user","userId","utime","vote","store","configureStore","devTools","process","CustomToggle","React","forwardRef","ref","preventDefault","LoggedUser","onLogout","event","onMenuSelect","this","userName","float","as","bsRole","Menu","Divider","Component","LoginForm","onLogin","current","createRef","flexWrap","flex","maxLength","autoComplete","Button","margin","rel","ErrorElem","dangerouslySetInnerHTML","__html","Login","elem","SectionSelect","currentTarget","selected","sectionsElem","label","Control","navigate","useNavigate","queryString","search","useEffect","Pages","pages","maxPage","TopicNameCell","classes","classNames","user0","is_voting","closed","down","sectionHref","sect2","sect1","substr","overflowWrap","LinkToPost","onMouseOver","persist","timer","setTimeout","showToolTip","stopPropagation","clearTimeout","onMouseOut","showTooltip","isPreview","x","pageX","y","pageY","setState","startsWith","then","pageParam","isNaN","PreviewLink","expanded","time","td","d","getDate","getMonth","getFullYear","today","dateFormat","aria-hidden","color","display","width","textAlign","currentPage","locationParams","baseUrl","last20","parseInt","Pagination","active","postNewTopicIfNeeded","shouldPostNewTopic","fetchParams","message_text","topic_text","target_section","target_forum","rnd","round","random","voting","votingItems","onSuccess","TextEditor","onButtonCode1c","textArea","start","selectionStart","end","selectionEnd","oldText","len","replacement","substring","newText","formName","onVotingChange","checked","ctrlKey","parent","parentElement","tagName","toUpperCase","dispatchEvent","Event","cancelable","bubbles","showVoting","cols","rows","ButtonGroup","disabled","Check","NewTopic","onSectionChange","currentSection","onSubmit","onSubmitSuccess","refs","onSubjectChange","groupsElem","votingOptions","Text","readOnly","FormGroup","highlight","СтрокаРезультат","УстановленЦвет","ПоследнийЦвет","keywords","Set","split","Спецсиволы","мЦветФона","мЦветЧисла","мЦветСтроки","мЦветКлючевогоСлова1","ВСтроке","Токен","ПустаяСтрока","Строка","Сред","Нач","Длина","Прав","isKeyword","token","has","ДобавитьЧастьСтроки1С","Часть","Цвет","РазукраситьСтроку","СтрокаКода","ВСтрокеСкобка","ВСтрокеТильда","НачалоСтроки","ТокенДоТочки","Поз","ТекущийСимвол","charAt","Code","onShowClick","bind","hidden","textArr","buttonText","buttonShow","linesCount","preStyle","overflow","height","LinkToUser","YoutubeLink","hrefName","v","videoId","apiKey","apiUrl","snippet","getVideoId","getVideoParams","CustomLink","parentText","escapedHref","regExp","RegExp","URL","newHref","set","pathname","query","class","fixBrokenLink","VoteItem","total","colors","img","percent","textDecoration","select","src","maxWwidth","alt","VoteChart","sum","Vote","voteOption","MsgText","res","txt","processCode1C","processLinksToPosts","voteElement","voteChart","html","processedHtml","processText","componentsMap","code","textComponent","activeHtml","PreviewHeader","date","onFirst","onPrev","onNext","onLast","TopicPreview","fetchData","onClickFirst","onClickNext","onClickPrev","onClickLast","maxHeight","overflowY","updateTopicsList","document","position","top","letterSpacing","Header","TopicInfo","yandexUrl","lineHeight","addMessageText","UserInfo","getElementById","scrollTo","offsetTop","onImageLoad","dataStr","isAuthor","isYou","isTooltip","imgElem","timeElem","userClassNames","innerWidth","onLoad","Row","author","Footer","onBookmarkClick","onRefreshClick","updateButton","bookmark","NewMessage","voting_select","clearVoting","setVotingOption","votingElem","closeTopic","clearText","updateTopic","RadioOption","values","oneLine","valuesElem","htmlFor","descr","StringOption","postfix","Options","closeForm","resetOptions","applyOptions","onTabClick","activeTab","textContent","optionsParams","max","form","tabName","tabs","tab","row","rowElem","fontWeight","Container","routes","path","element","NavBarFooter","TooltipHeader","closeWindow","onTouchEnd","TooltipBody","onScroll","startX","onTouchStart","nativeEvent","changedTouches","clientX","endX","abs","TooltipWindow","onCloseClick","tooltip","onWheel","deltaY","axis","left","Children","toArray","header","handle","defaultClassNameDragging","onWheelCapture","Tooltip","delta","TooltipsList","setAttribute","Root","ReactDOM","render"],"mappings":"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","file":"static/js/main.8f3a537d.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nexport function today(td) {\r\n    var d = new Date();\r\n    return td.getDate() === d.getDate() && td.getMonth() === d.getMonth() && td.getFullYear() === d.getFullYear();\r\n}\r\n\r\nexport const groupBy = (list, getKey) =>\r\n  list.reduce((previous, currentItem) => {\r\n    const group = getKey(currentItem);\r\n    if (!previous[group]) previous[group] = [];\r\n    previous[group].push(currentItem);\r\n    return previous;\r\n  }, {})\r\n\r\n\r\nexport const parseJSON = (text) => {\r\n\r\n    try {\r\n        return JSON.parse(text);    \r\n    } catch(e) {\r\n\r\n    }\r\n\r\n    try {\r\n        text = text\r\n            .replace(/\\\\</g, '<')\r\n            .replace(/\\\\>/g, '>')\r\n            .replace(/\\\\&/g, '&')\r\n            .replace(/\\\\'/g, \"'\")\r\n            .replace(/\\\\\"/g, \"\")\r\n            .replace(/ \"/g, ' \\\\\"')\r\n            .replace(/\"\"/g, '\\\\\"\"')\r\n            .replace(/\\t/g, '\\\\t')\r\n            .replace(/\"(\\.| |\\?)/g, '\\\\\"$1')\r\n\r\n        //           console.log(text);\r\n        return JSON.parse(text);\r\n\r\n        //return eval(text);\r\n    } catch (e) {\r\n        console.error(e.message);\r\n        console.log(text);\r\n\r\n        return {};\r\n    }\r\n}\r\n\r\nexport const getMaxPage = (answ) => Math.min(Math.ceil(answ / 100), 10) || 1;\r\n\r\nexport const encodeText = (text) => {\r\n    text = text\r\n        .replace(/&/g, '%26')\r\n        .replace(/\\+/g, '%2B')\r\n\r\n    return text;\r\n}\r\n\r\nexport const compare = (obj1, obj2) => {\r\n\r\n    for (let key in obj2) {\r\n        if (obj1[key] !== obj2[key])\r\n            return false\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const join = (obj, str) => {\r\n\r\n    let res = [];\r\n    for (let key in obj) {\r\n        res.push('' + key + ':' + obj[key]);\r\n    }\r\n\r\n    return res.join(str);\r\n}\r\n\r\nexport const childrenToText = (children) => {\r\n\r\n    if (!children) return children;\r\n\r\n    return children.map(value => {\r\n        if (typeof(value) === 'string') {\r\n            return value;\r\n        } else if (value.type === 'br') {\r\n            return '<br>'\r\n        } else if (value.type.displayName === 'Connect(LinkToPost)' || value.type.displayName === 'Connect(t)') {\r\n            return value.props.number;\r\n        } else {  \r\n            console.log(value);\r\n            return value;\r\n        }    \r\n    })    \r\n}","//@flow\r\nimport fetchJsonp from 'fetch-jsonp'\r\nimport * as utils from './utils'\r\n\r\nexport const domain: string = localStorage.getItem('domain') || 'https://forum.mista.ru';\r\n//export const domain = 'https://dev.mista.ru';\r\nexport const urlTopicsList: string = localStorage.getItem('urlTopicsList') || 'api/topic.php';\r\nexport const urlTopicInfo: string = localStorage.getItem('urlTopicInfo') || 'ajax_gettopic.php';\r\nexport const urlTopicMessages: string = localStorage.getItem('urlTopicMessages') || 'api/message.php';\r\nexport const urlLogin: string = localStorage.getItem('urlLogin') || 'users.php?action=do_enter';\r\nexport const urlLogout: string = localStorage.getItem('urlLogout') || 'users.php';\r\nexport const urlCookies: string = localStorage.getItem('urlCookies') || 'ajax_cookie.php';\r\nexport const urlSections: string = localStorage.getItem('urlSections') || 'ajax_getsectionslist.php';\r\nexport const urlNewMessage: string = localStorage.getItem('urlNewMessage') || 'topic.php?id=:id&page=1';\r\nexport const urlNewTopic: string = localStorage.getItem('urlNewTopic') || 'index.php';\r\nexport const urlAddBookmark: string = localStorage.getItem('urlAddBookmark') || 'ajax_addbookmark.php';\r\nexport const urlSearch: string = localStorage.getItem('urlSearch') || 'ajax_find.php';\r\n\r\n// Topics list\r\nexport type RequestTopicsList = {\r\n  topics?: number, // число тем, которые нужно вернуть (по умолчанию - 20);\r\n  utime?: number, // время (в формате unixtime) после которого надо вернуть ветки;\r\n  callback?: string, // если указано, то ответ заворачивается в вызов функции, имя которой передано в параметре (реализация JSONP)\r\n  forum?: string, // раздел форума (1c|it|life);\r\n  section_short_name?: string,\r\n  user_id?: string,\r\n  mytopics?: string\r\n}\r\n\r\nexport type ResponseTopicsListItem = {\r\n  id: number,\r\n  forum: string,\r\n  sect1: string,\r\n  sect2: string,\r\n  v8: string,\r\n  closed: number,\r\n  down: number,\r\n  text: string,\r\n  utime: number,\r\n  created: number,\r\n  user: string,\r\n  user0: string,\r\n  is_voting: number,\r\n  answ: number\r\n}\r\n\r\nexport type ResponseTopicsList = Array<ResponseTopicsListItem>;\r\n\r\nexport const getTopicsList = async (params: RequestTopicsList): Promise<ResponseTopicsList> => {\r\n  const json = await fetchAndGetJson(urlTopicsList, params);\r\n  return json;\r\n}\r\n\r\n\r\n// Topics info\r\nexport type RequestInfo = {\r\n  id: string // идентификатор (topic_id) темы\r\n}\r\n\r\nexport type ResponseVoteItem = {\r\n  select: string,\r\n  result: number\r\n}\r\n\r\nexport type ResponseInfo = {\r\n  id: string,\r\n  text: string,\r\n  forum?: string,\r\n  section?: string,\r\n  created?: string,\r\n  user_id?: string,\r\n  user_name?: string,\r\n  answers_count: string,\r\n  down?: number,\r\n  closed?: number,\r\n  deleted?: number,\r\n  is_voting?: number,\r\n  voting?: Array<ResponseVoteItem>\r\n}\r\n\r\nexport const defaultInfo = {\r\n  id: \"\",\r\n  text: \"\",\r\n  answers_count: \"\"\r\n}\r\n\r\nexport const getTopicInfo = async (params: RequestInfo): Promise<ResponseInfo> => {\r\n  const json = await fetchAndGetJson(urlTopicInfo, params);\r\n  return json;\r\n}\r\n\r\n\r\n// Topic messages\r\nexport type RequestMessages = {\r\n  id: number | string, // идентификатор (topic_id) темы\r\n  from?: number, // с какого сообщения. если не указан, то с первого\r\n  to?: number  // до какого сообщения. если не указан, то from+10\r\n}\r\n\r\nexport type ResponseMessage = {\r\n  id: string,\r\n  n: string,\r\n  user: string,\r\n  userId: string,\r\n  text: string,\r\n  utime: string,\r\n  vote: number\r\n}\r\n\r\nexport type ResponseMessages = Array<ResponseMessage>;\r\n\r\nexport const getTopicMessages = async (params: RequestMessages): Promise<ResponseMessages> => {\r\n  const json = await fetchAndGetJson(urlTopicMessages, params);\r\n  return json;\r\n}\r\n\r\nexport const getMessage = async (id: number | string, n: number): Promise<?ResponseMessage> => {\r\n  const json = await getTopicMessages({\r\n    id,\r\n    from: n,\r\n    to: +n + 1\r\n  }\r\n  );\r\n\r\n  let data;\r\n  if (json && json.length > 0)\r\n    data = json.find(val => val.n === String(n));\r\n\r\n  return data;\r\n}\r\n\r\nexport const getTopicMessagesCount = async (id: number | string): Promise<number> => {\r\n  const info = await getTopicInfo({ id: String(id) });\r\n  return +info.answers_count;\r\n}\r\n\r\n// Login\r\nexport type RequestLogin = {\r\n  username: string, // логин (ник) пользователя\r\n  password: string, // пароль пользователя\r\n  callback?: string, // если указано, то ответ заворачивается в вызов функции, имя которой передано в параметре (реализация JSONP)\r\n}\r\n\r\nexport type ResponseLogin = {\r\n  userid: string,\r\n  username: string,\r\n  hashkey: string,\r\n  error?: string\r\n}\r\n\r\nexport const getLogin = async (params: RequestLogin): Promise<any> => {\r\n  let result = await fetch(`${domain}/${urlLogin}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', {user_name: params.username, user_password: params.password}),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Accept': 'text/html,application/xhtml+xml,application/xml',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: 'follow'\r\n  });\r\n  //const json = await fetchJsonpAndGetJson(urlLogin, params);\r\n  //return json;\r\n}\r\n\r\nexport const getLogout = async (): Promise<any> => {\r\n  const fullUrl = `${domain}/${urlLogout}?action=exit`;\r\n  await fetch(fullUrl, {\r\n    mode: 'no-cors',\r\n    credentials: 'include'\r\n  });\r\n}\r\n\r\n\r\n// Cookies\r\nexport type ResponseCookies = {\r\n  cookie: {\r\n    entr_id: string,\r\n    entr_key: string,\r\n    entr_hash: string\r\n  },\r\n  session: {\r\n    user_id: string,\r\n    user_name: string,\r\n    user_hash: string,\r\n    is_moderator: number,\r\n    light_moderator: number,\r\n    section: string,\r\n    show_moderator_tools: number,\r\n    last_error?: string\r\n  }\r\n}\r\n\r\nexport const getCookies = async (): Promise<ResponseCookies> => {\r\n  const json = await fetchJsonpAndGetJson(urlCookies);\r\n  return json;\r\n}\r\n\r\n\r\n// Sections\r\nexport type ResponseSection = {\r\n  id: number,\r\n  forum: string,\r\n  shortn: string,\r\n  fulln: string,\r\n  id: number\r\n}\r\n\r\nexport type ResponseSections = Array<ResponseSection>;\r\n\r\nexport const getSections = async (): Promise<ResponseSections> => {\r\n  const json = await fetchJsonpAndGetJson(urlSections);\r\n  return json;\r\n}\r\n\r\n\r\n// New message\r\nexport type RequestNewMessage = {\r\n  message_text: string,\r\n  action: \"new\",\r\n  topic_id: string,\r\n  rnd: number,\r\n  voting_select?: number,\r\n  as_admin?: boolean\r\n}\r\n\r\nexport const postNewMessage = async (params: RequestNewMessage): Promise<any> => {\r\n\r\n  let url = urlNewMessage.replace(':id', params.topic_id);\r\n\r\n  let result = await fetch(`${domain}/${url}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Accept': 'text/html,application/xhtml+xml,application/xml',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: 'follow'\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n\r\n// New topic\r\nexport type RequestNewTopic = {\r\n  action: \"new\",\r\n  rnd: number,\r\n  topic_text: string,\r\n  message_text: string,\r\n  target_section: string,\r\n  target_forum: string,\r\n  voting: number,\r\n  select1?: string,\r\n  select2?: string,\r\n  select3?: string,\r\n  select4?: string,\r\n  select5?: string,\r\n  select6?: string,\r\n  select7?: string,\r\n  select8?: string,\r\n  select9?: string,\r\n  select10?: string\r\n}\r\n\r\nexport const postNewTopic = async (params: RequestNewTopic): Promise<any> => {\r\n\r\n  await fetch(`${domain}/${urlNewTopic}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    }\r\n  });\r\n}\r\n\r\n\r\n//Bookmark\r\nexport type RequestBookmark = {\r\n  id: string\r\n}\r\n\r\nexport const postBookmark = async (params: RequestBookmark) => {\r\n\r\n  await fetch(`${domain}/${urlAddBookmark}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n  });\r\n}\r\n\r\n\r\n//Search\r\nexport type RequestSearch = {\r\n  keywords: string\r\n}\r\n\r\nexport type ResponseSearch = {\r\n\r\n}\r\n\r\nexport const postSearch = async (params: RequestSearch) => {\r\n\r\n  await fetch(`${domain}/${urlSearch}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n  });\r\n}\r\n\r\nexport const paramsToString = (paramsPrefix: string, params: ?{}): string => {\r\n\r\n  if (!params)\r\n    return '';\r\n\r\n  let arr = [];\r\n  for (let key in params) {\r\n    if (params[key] !== undefined)\r\n      arr.push(key + '=' + params[key]);\r\n  }\r\n\r\n  if (arr.length > 0)\r\n    return paramsPrefix + arr.join('&');\r\n  else\r\n    return '';\r\n}\r\n\r\nexport const fetchJsonpAndGetJson = async (url: string, params: any): Promise<any> => {\r\n\r\n  let fullUrl = `${domain}/${url}${paramsToString('?', params)}`;\r\n  const response = await fetchJsonp(fullUrl);\r\n  let responseJson = await response.json();\r\n  let json;\r\n  if (typeof (responseJson) === 'string') {\r\n\r\n    try {\r\n      json = JSON.parse(responseJson)\r\n    } catch (e) {\r\n      json = utils.parseJSON(responseJson);\r\n    }\r\n  } else {\r\n    json = responseJson;\r\n  }\r\n  return json;\r\n}\r\n\r\nexport const fetchAndGetJson = async (url: string, params: any, options: any): Promise<any> => {\r\n\r\n  let fullUrl = `${domain}/${url}${paramsToString('?', params)}`;\r\n  const response = await fetch(fullUrl, options);\r\n  let responseJson = await response.json();\r\n  let json;\r\n  if (typeof (responseJson) === 'string') {\r\n\r\n    try {\r\n      json = JSON.parse(responseJson)\r\n    } catch (e) {\r\n      json = utils.parseJSON(responseJson);\r\n    }\r\n  } else {\r\n    json = responseJson;\r\n  }\r\n  return json;\r\n}","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nimport * as API from 'src/api'\r\nimport type { RequestTopicsList, ResponseTopicsList } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\n\r\nexport const requestTopicsList = createAction('REQUEST_TOPICS_LIST');\r\nexport const receiveTopicsList = createAction('RECEIVE_TOPICS_LIST', list => ({\r\n  payload: {\r\n    list\r\n  },\r\n  error: false\r\n}));\r\nexport const receiveTopicsListFailed = createAction('RECEIVE_TOPICS_LIST', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\nexport const clearTopicsList = createAction('CLEAR_TOPICS_LIST');\r\nexport const togglePreview = createAction('TOGGLE_PREVIEW', id => ({\r\n  payload : {\r\n    id\r\n  }\r\n}));\r\n\r\nconst fetchTopicsList = (params: any) => async (dispatch: any, getState: any) => {\r\n\r\n  dispatch(requestTopicsList())\r\n\r\n  const page = params.page || 1;\r\n  let reqestParams: RequestTopicsList = {};\r\n\r\n  let topicsPerPage = +getState().options.items.topicsPerPage;\r\n  if (topicsPerPage > 99) topicsPerPage = 99;\r\n\r\n  let topicsCount = page * topicsPerPage;\r\n  reqestParams.topics = topicsCount;\r\n\r\n  if (params.section)\r\n    reqestParams.section_short_name = params.section;\r\n\r\n  if (params.forum)\r\n    reqestParams.forum = params.forum;\r\n\r\n  if (params.user_id)\r\n    reqestParams.user_id = params.user_id;\r\n\r\n  if (params.mytopics)\r\n    reqestParams.mytopics = params.mytopics;\r\n\r\n  try {\r\n    const json = await API.getTopicsList(reqestParams);\r\n\r\n    let data = json.slice(-topicsPerPage);\r\n    dispatch(receiveTopicsList(data));\r\n  } catch (e) {\r\n    dispatch(receiveTopicsListFailed(e));\r\n    console.error(e);\r\n  }\r\n\r\n}\r\n\r\nconst shouldFetchTopicsList = (state: State) => {\r\n  const topicsList = state.topicsList;\r\n  if (!topicsList) {\r\n    return true\r\n  }\r\n  if (topicsList.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const fetchTopicsListIfNeeded = (params: any): any => (dispatch: any, getState: any) => {\r\n  if (shouldFetchTopicsList(getState())) {\r\n    return dispatch(fetchTopicsList(params));\r\n  }\r\n}\r\n","//@flow\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { requestTopicsList, receiveTopicsList, clearTopicsList, togglePreview } from './actions'\r\n\r\nimport type { ResponseTopicsListItem } from 'src/api'\r\n\r\nexport type TopicsListItem = ResponseTopicsListItem & {\r\n  showPreview?: ?boolean\r\n}\r\n\r\nexport type TopicsListState = {\r\n  isFetching: boolean;\r\n  items: Array<TopicsListItem>,\r\n  error?: ?string,\r\n  lastUpdated?: Date\r\n};\r\n\r\nexport const defaultTopicsListState: TopicsListState = {\r\n  isFetching: false,\r\n  items: []\r\n}\r\n\r\nconst reducer = createReducer(defaultTopicsListState, (builder) => {\r\n  builder\r\n    .addCase(requestTopicsList, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveTopicsList, (state, action) => {\r\n\r\n      if (action.error) {\r\n        state.error = action.payload.toString();\r\n      } else {\r\n        state.items = action.payload.list;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(clearTopicsList, (state) => {\r\n      state.items = [];\r\n      state.isFetching = false;\r\n      delete state.error;\r\n      delete state.lastUpdated;\r\n    })\r\n    .addCase(togglePreview, (state, action) => {\r\n      let items = state.items.slice();\r\n      const ind = items.findIndex(item => item.id === action.topicId);\r\n\r\n      let item = Object.assign({}, items[ind]);\r\n      item.showPreview = !item.showPreview;\r\n      items[ind] = item;\r\n      state.items = items;\r\n    })    \r\n})\r\n\r\nexport default reducer;\r\n","//@flow\r\nimport * as API from 'src/api'\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nimport type { ResponseInfo, ResponseMessage, ResponseMessages } from 'src/api'\r\n\r\nexport const requestTopic = createAction('REQUEST_TOPIC');\r\nexport const receiveTopic = createAction('RECEIVE_TOPIC', (info, item0, list) => ({\r\n  payload: {\r\n    info,\r\n    item0,\r\n    list\r\n  },\r\n  error: false\r\n}));\r\nexport const receiveTopicFailed = createAction('RECEIVE_TOPIC', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\nexport const clearTopicMessages = createAction('CLEAR_TOPIC_MESSAGES');\r\n\r\nexport const requestNewMessages = createAction('REQUEST_NEW_MESSAGES');\r\nexport const receiveNewMessages = createAction('RECEIVE_NEW_MESSAGES', (list) => ({\r\n  payload: {\r\n    list\r\n  },\r\n  error: false\r\n}));\r\nexport const receiveNewMessagesFailed = createAction('RECEIVE_NEW_MESSAGES', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\n\r\nexport const fetchTopic = (params: any, item0: ?ResponseMessage): any => async (dispatch: any) => {\r\n\r\n  dispatch(requestTopic())\r\n\r\n  let info;\r\n  try {\r\n    info = await API.getTopicInfo({ id: params.id });\r\n  } catch (e) {\r\n    console.error(e);\r\n    info = {\r\n      id: params.id,\r\n      text: '',\r\n      answers_count: \"0\"\r\n    };\r\n  }\r\n  try {\r\n    let page = params.page || 1;\r\n\r\n    let _item0 = item0;\r\n    let _items;\r\n    if (page === 'last20') {\r\n\r\n      if (+info.answers_count > 21) {\r\n\r\n        if (!_item0) {\r\n          let items = await API.getTopicMessages({\r\n            id: params.id,\r\n            from: 0,\r\n            to: 1\r\n          });\r\n          _item0 = items[0];\r\n        }\r\n\r\n        let first = +info.answers_count - 20;\r\n        _items = await API.getTopicMessages({\r\n          id: params.id,\r\n          from: first,\r\n          to: 1010\r\n        });\r\n\r\n      } else {\r\n        let items = await API.getTopicMessages({\r\n          id: params.id,\r\n          from: 0,\r\n          to: 1010\r\n        });\r\n        _item0 = items[0];\r\n        _items = items.slice(1);\r\n      }\r\n\r\n    } else {\r\n\r\n      page = +page;\r\n      let first = 0;\r\n      let last = page * 100 - 1;\r\n\r\n      if (page > 1) {\r\n\r\n        first = (page - 1) * 100;\r\n        if (!_item0) {\r\n          let items = await API.getTopicMessages({\r\n            id: params.id,\r\n            from: 0,\r\n            to: 1\r\n          });\r\n          _item0 = items[0];\r\n        }\r\n\r\n        _items = await API.getTopicMessages({\r\n          id: params.id,\r\n          from: first,\r\n          to: last\r\n        });\r\n\r\n      } else {\r\n        if (_item0)\r\n          first = 1;\r\n        else\r\n          first = 0;\r\n\r\n        let items = await API.getTopicMessages({\r\n          id: params.id,\r\n          from: first,\r\n          to: last\r\n        });\r\n\r\n        if (_item0) {\r\n          _items = items;\r\n        } else {\r\n          _item0 = items[0];\r\n          _items = items.slice(1);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    if (info.answers_count === \"0\" && _items.length > 0)\r\n      info.answers_count = _items[_items.length - 1].n;\r\n\r\n    if (page === 'last20' && _items.length > 20) {\r\n      _items = _items.slice(-20);\r\n    }\r\n\r\n    dispatch(receiveTopic(info, _item0, _items));\r\n\r\n  } catch (error) {\r\n\r\n    console.error('Failed to fetch topic:', error);\r\n    dispatch(receiveTopicFailed(error));\r\n\r\n  }\r\n}\r\n\r\nconst shouldFetch = (state) => {\r\n  const topic = state.topic;\r\n  if (!topic) {\r\n    return true\r\n  }\r\n  if (topic.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const fetchTopicIfNeeded = (params: any, item0: ?ResponseMessage): any => (dispatch: any, getState: any) => {\r\n  if (shouldFetch(getState())) {\r\n    return dispatch(fetchTopic(params, item0));\r\n  }\r\n}\r\n\r\nexport type FetchNewMessageseParams = {\r\n  id: number | string,\r\n  last: number\r\n}\r\n\r\nexport const fetchNewMessages = (params: FetchNewMessageseParams): any => async (dispatch: any) => {\r\n\r\n  dispatch(requestNewMessages());\r\n\r\n  try {\r\n    const json = await API.getTopicMessages({\r\n      id: params.id,\r\n      from: +params.last + 1,\r\n      to: 1002\r\n    });\r\n\r\n    dispatch(receiveNewMessages(json));\r\n\r\n  } catch (error) {\r\n    console.error('Failed to fetch new messages:', error);\r\n    dispatch(receiveNewMessagesFailed(error));\r\n  }\r\n\r\n}\r\n\r\nexport const fetchNewMessagesIfNeeded = (params: FetchNewMessageseParams): any => (dispatch: any, getState: any) => {\r\n  if (shouldFetch(getState())) {\r\n    return dispatch(fetchNewMessages(params));\r\n  }\r\n}","//@flow \r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { defaultInfo } from 'src/api'\r\nimport type { ResponseInfo, ResponseMessages, ResponseMessage } from 'src/api'\r\nimport type { TopicAction } from 'src/data/topic/actions'\r\n\r\nimport { requestTopic, receiveTopic, clearTopicMessages, requestNewMessages, receiveNewMessages } from './actions'\r\n\r\nexport type TopicState = {\r\n  isFetching: boolean;\r\n  info: ResponseInfo,\r\n  item0?: ?ResponseMessage,\r\n  items: ResponseMessages,\r\n  lastUpdated?: ?Date,\r\n  error?: ?string\r\n};\r\n\r\nexport const defaultTopicState: TopicState = {\r\n  isFetching: false,\r\n  info: defaultInfo,\r\n  items: []\r\n}\r\n\r\nconst reducer = createReducer(defaultTopicState, (builder) => {\r\n  builder\r\n    .addCase(requestTopic, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveTopic, (state, action) => {\r\n\r\n      if (action.error) {\r\n        state.error = action.error.toString();\r\n      } else {\r\n        state.items = action.payload.list;\r\n        state.item0 = action.payload.item0;\r\n        state.info = action.payload.info;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(clearTopicMessages, (state) => {\r\n      state.items = defaultTopicState.items;\r\n      state.item0 = defaultTopicState.item0;\r\n      state.info = defaultTopicState.info;\r\n      delete state.error;\r\n    })\r\n    .addCase(requestNewMessages, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveNewMessages, (state, action) => {\r\n      if (action.error) {\r\n        state.error = action.error.toString();\r\n      } else {\r\n        state.isFetching = false;\r\n        state.items.concat(action.payload.list);\r\n      }\r\n    })\r\n})\r\n\r\nexport default reducer;","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nimport * as API from 'src/api'\r\nimport type { RequestLogin, ResponseLogin } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\n\r\nexport const loginStart = createAction('LOGIN_START');\r\nexport const loginComplete = createAction('LOGIN_COMPLETE', (userid, username, hashkey) => ({\r\n  payload: {\r\n    userid,\r\n    username,\r\n    hashkey,\r\n  },\r\n  error: false\r\n}));\r\nexport const loginFailed = createAction('LOGIN_COMPLETE', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\n\r\nexport const logoutStart = createAction('LOGOUT_START');\r\nexport const logoutComplete = createAction('LOGOUT_COMPLETE');\r\n\r\nexport const checkLoginStart = createAction('CHECK_LOGIN_START');\r\n\r\nconst shouldLogin = (state: State): boolean => {\r\n  const { login } = state;\r\n  if (!login) {\r\n    return true\r\n  }\r\n  if (login.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const checkLogin = (params: any): any => async (dispatch: any) => {\r\n\r\n  dispatch(checkLoginStart());\r\n\r\n  let json;\r\n  try {\r\n    json = await API.getCookies();\r\n  } catch (e) {\r\n    dispatch(loginFailed(e));\r\n    return;\r\n  }\r\n  const { cookie, session } = json;\r\n\r\n  if (session && session.user_id){\r\n\r\n    let error = (session.last_error || '').trim();\r\n    if (error === 'Не указано сообщение.') error = '';\r\n    dispatch(loginComplete(\r\n      session.user_id,\r\n      session.user_name,\r\n      cookie.entr_hash\r\n    ));\r\n  } else\r\n    dispatch(loginFailed(''));\r\n}\r\n\r\nexport const checkLoginIfNeeded = (params: any): any => (dispatch: any, getState: any) => {\r\n  if (shouldLogin(getState())) {\r\n    return dispatch(checkLogin(params))\r\n  }\r\n}\r\n\r\nexport const doLogout = (params: any): any => async (dispatch: any) => {\r\n\r\n  dispatch(logoutStart());\r\n\r\n  try {\r\n    \r\n    API.getLogout();\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  \r\n  dispatch(logoutComplete());\r\n  dispatch(checkLogin());\r\n\r\n}\r\n\r\nexport const doLogin = (params: RequestLogin): any => async (dispatch: any) => {\r\n\r\n  dispatch(loginStart());\r\n\r\n  try {\r\n\r\n    await API.getLogin({\r\n      username: encodeURIComponent(params.username),\r\n      password: encodeURIComponent(params.password)\r\n    })\r\n\r\n    dispatch(checkLogin());\r\n\r\n  } catch (err) {\r\n    console.error('Login error :', err);\r\n    dispatch(loginFailed(err.message));\r\n  }\r\n\r\n}\r\n\r\nexport const doLoginIfNeeded = (params: RequestLogin): any => (dispatch: any, getState: any) => {\r\n  if (shouldLogin(getState())) {\r\n    return dispatch(doLogin(params))\r\n  }\r\n}","//@flow \r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { loginStart, loginComplete, logoutStart, logoutComplete, checkLoginStart } from './actions'\r\n\r\nexport type LoginState = {\r\n  isFetching: boolean;\r\n  logged: any,\r\n  userid?: string,\r\n  username?: string,\r\n  hashkey?: string,\r\n  error?: string\r\n};\r\n\r\nexport const defaultLoginState: LoginState = {\r\n  isFetching: false,\r\n  logged: undefined\r\n}\r\n\r\nconst reducer = createReducer(defaultLoginState, (builder) => {\r\n  builder\r\n    .addCase(loginStart, (state) => {\r\n      state.isFetching = true;\r\n    })\r\n    .addCase(loginComplete, (state, action) => {\r\n      if (action.error) {\r\n        state.logged = false;\r\n        state.error = action.payload.toString();\r\n      } else {\r\n\r\n        state.userid = action.payload.userid;\r\n        state.username = action.payload.username;\r\n        state.hashkey = action.payload.hashkey;\r\n        state.logged = true;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(logoutStart, (state) => {\r\n      state.isFetching = true;\r\n    })\r\n    .addCase(logoutComplete, (state) => {\r\n      state.isFetching = false;\r\n      state.logged = false;\r\n      delete state.userid;\r\n      delete state.username;\r\n      delete state.hashkey;\r\n      delete state.error;\r\n    })    \r\n})\r\n\r\nexport default reducer;\r\n","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nimport * as API from 'src/api'\r\nimport type { ResponseSections } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\n\r\nexport const requestSections = createAction('REQUEST_SECTIONS');\r\nexport const receiveSections = createAction('RECEIVE_SECTIONS', list => ({\r\n  payload: {\r\n    list,\r\n  },\r\n  error: false\r\n}));\r\n\r\nexport const receiveSectionsFailed = createAction('RECEIVE_SECTIONS', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\n\r\nexport const fetchSections = (): any => async (dispatch: any) => {\r\n\r\n  dispatch(requestSections());\r\n\r\n  try {\r\n    \r\n    const list: ResponseSections = await API.getSections();\r\n    dispatch(receiveSections(list));\r\n\r\n  } catch (e) {\r\n\r\n    dispatch(receiveSectionsFailed(e));\r\n    console.error(e);\r\n\r\n  }\r\n\r\n}\r\n\r\nconst shouldfetchSections = (state: State): boolean => {\r\n\r\n  const sections = state.sections;\r\n\r\n  if (!sections)\r\n    return true\r\n\r\n  if (sections.isFetching)\r\n    return false\r\n\r\n  if (sections.items.length > 0)\r\n    return false;\r\n\r\n  return true\r\n}\r\n\r\nexport const fetchSectionsIfNeeded = (): any => (dispatch: any, getState: any) => {\r\n  if (shouldfetchSections(getState())) {\r\n    return dispatch(fetchSections());\r\n  }\r\n}","//@flow \r\nimport { createReducer } from '@reduxjs/toolkit'\r\n\r\nimport { requestSections, receiveSections } from './actions'\r\nimport type { ResponseSections } from 'src/api'\r\n\r\nimport { groupBy } from 'src/utils'\r\n\r\nexport type SectionsState = {\r\n  isFetching: boolean;\r\n  items: ResponseSections,\r\n  tree: { [string]: any },\r\n  map: { [string]: any },\r\n  lastUpdated?: Date,\r\n  error?: ?string\r\n};\r\n\r\nexport const initialState: SectionsState = {\r\n  isFetching: false,\r\n  items: [],\r\n  tree: {},\r\n  map: {}\r\n}\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(requestSections, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveSections, (state, action) => {\r\n\r\n      if (action.error) {\r\n        state.error = action.payload.toString();\r\n      } else {\r\n        let map = {};\r\n        action.payload.list.forEach(val => {\r\n            map[val.shortn] = val.fulln\r\n        });\r\n        state.items = action.payload.list;\r\n        state.tree = groupBy(state.items, item => item.forum);\r\n        state.map = map;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n})\r\n\r\nexport default reducer;\r\n","//@flow\r\nimport type { NewTopicAction } from '../actions/new_topic'\r\nimport type { ResponseSection } from 'src/api'\r\n\r\nexport type NewTopicState = {\r\n    isFetching: boolean,\r\n    section: ?ResponseSection,\r\n    text: string,\r\n    subject: string,\r\n    forum: string,\r\n    isVoting: boolean,\r\n    error?: ?string\r\n};\r\n\r\nexport const defaultNewTopicState: NewTopicState = {\r\n    isFetching: false,\r\n    section: null,\r\n    text: '',\r\n    subject: '',\r\n    forum: '1C',\r\n    isVoting: false\r\n}\r\n\r\nconst newTopic = (state: NewTopicState = defaultNewTopicState, action: NewTopicAction): NewTopicState => {\r\n    switch (action.type) {\r\n        case 'POST_NEW_TOPIC_START':\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n                error: undefined\r\n            }\r\n        case 'POST_NEW_TOPIC_COMPLETE':\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n       case 'POST_NEW_TOPIC_ERROR':\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                error: action.error\r\n            }\r\n        case 'NEW_TOPIC_SECTION':\r\n            return {\r\n                ...state,\r\n                section: action.section,\r\n                forum: action.section == null ? '' : action.section.forum.toLowerCase()\r\n            }\r\n        case 'NEW_TOPIC_TEXT':\r\n            return {\r\n                ...state,\r\n                text: action.text\r\n            }\r\n        case 'NEW_TOPIC_SUBJECT':\r\n            return {\r\n                ...state,\r\n                subject: action.text\r\n            }\r\n        case 'NEW_TOPIC_CLEAR':\r\n            return {\r\n                ...state,\r\n                text: '',\r\n                subject: '',\r\n                isVoting: false\r\n            }\r\n        case 'SHOW_VOTING':\r\n            return {\r\n                ...state,\r\n                isVoting: action.data\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default newTopic;","//@flow\r\nimport type { NewMessageAction } from 'src/actions/new_message'\r\n\r\nexport type NewMessageState = {\r\n    isFetching: boolean;\r\n    text: string\r\n};\r\n\r\nexport const defaultNewMessageState: NewMessageState = {\r\n    isFetching: false,\r\n    text: ''\r\n}\r\n\r\nconst newMessage = (state: NewMessageState = defaultNewMessageState, action: NewMessageAction): NewMessageState => {\r\n    switch (action.type) {\r\n        case 'POST_NEW_MESSAGE_START':\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            }\r\n        case 'POST_NEW_MESSAGE_COMPLETE':\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        case 'NEW_MESSAGE_TEXT':\r\n            return {\r\n                ...state,\r\n                text: action.text\r\n            }\r\n        case 'ADD_MESSAGE_TEXT':\r\n            return {\r\n                ...state,\r\n                text: state.text + action.text\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default newMessage;","//@flow\r\nimport React, { Component, useState } from 'react'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n\r\nimport './search.css'\r\n\r\nconst Search = () => {\r\n\r\n  const [searchEngine, setSearchEngine] = useState('Яндекс');\r\n  const [text, setText] = useState('');\r\n\r\n  function onKeyPress(e: any) {\r\n    if (e.key === 'Enter') {\r\n      doSearch();\r\n    }\r\n  }\r\n\r\n  function doSearch() {\r\n\r\n    let url;\r\n    if (searchEngine === 'Яндекс') {\r\n      url = `https://www.yandex.ru/search/?text=${text}&site=forum.mista.ru`;\r\n\r\n    } else if (searchEngine === 'Google') {\r\n      url = `https://www.google.ru/search?q=${text}+site:forum.mista.ru`\r\n    }\r\n\r\n    window.open(url);\r\n\r\n    setText('');\r\n\r\n  }\r\n\r\n  return (\r\n    <InputGroup size=\"sm\">\r\n      <InputGroup.Prepend>\r\n        <DropdownButton id=\"search-engine\" title=\"\" size=\"sm\" style={{ marginRight: \"2px\" }} className='button' variant=\"light\">\r\n          <Dropdown.Item eventKey=\"Яндекс\" onSelect={() => setSearchEngine(\"Яндекс\")}>Яндекс</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"Google\" onSelect={() => setSearchEngine(\"Google\")}>Google</Dropdown.Item>\r\n        </DropdownButton>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        type=\"text\"\r\n        placeholder={`${searchEngine}: поиск`}\r\n        style={{ marginRight: \"4px\", paddingRight: \"27px\" }}\r\n        className='input'\r\n        onKeyPress={onKeyPress}\r\n        onChange={e => setText(e.target.value)}\r\n        value={text}\r\n      />\r\n      <InputGroup.Append style={{ marginLeft: \"-25px\", marginTop: \"auto\", marginBottom: \"auto\", cursor: \"pointer\" }} onClick={doSearch}>\r\n        <i className=\"fa fa-search input\" style={{ zIndex: 1000 }} />\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  )\r\n\r\n}\r\n\r\nexport default (Search: any);","import React, { Component } from 'react';\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Form from 'react-bootstrap/Form'\r\nimport queryString from 'query-string'\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport Search from 'src/components/common/search'\r\nimport { fetchTopicsListIfNeeded } from 'src/data/topicslist/actions'\r\n\r\nimport './nav_bar.css'\r\n\r\nconst NavBar = (props) => {\r\n\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const onClick = (e) => {\r\n    dispatch(fetchTopicsListIfNeeded({}));\r\n  }\r\n\r\n  const menu = [\r\n    { name: '1С', link: `${window.hash}/index.php?forum=1C` },\r\n    { name: 'IT', link: `${window.hash}/index.php?forum=IT` },\r\n    { name: 'JOB', link: `${window.hash}/index.php?forum=JOB` },\r\n    { name: 'LIFE', link: `${window.hash}/index.php?forum=LIFE` },\r\n    { name: 'Wiki', link: 'https://wiki.mista.ru' },\r\n    { name: 'Книга знаний', link: 'https://kb.mista.ru' },\r\n  ];\r\n\r\n  const menuItems = menu.map((item, i) => {\r\n    return (\r\n      <Nav.Item key={i}>\r\n        <Nav.Link href={item.link}>\r\n          {item.name}\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" fixed=\"top\">\r\n      <Navbar.Brand\r\n        href={`${window.hash}`}\r\n        onClick={onClick}>\r\n        React.Mista\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse>\r\n        <Nav className=\"mr-auto\">\r\n          {menuItems}\r\n        </Nav>\r\n        <Form inline>\r\n          <Search />\r\n        </Form>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default connect()(NavBar);","import { createAction } from '@reduxjs/toolkit'\r\nimport type { OptionsItems } from 'src/data/options/reducer'\r\n\r\nexport const readOptions = createAction('READ_OPTIONS');\r\nexport const saveOptions = createAction('SAVE_OPTIONS', options => ({\r\n  payload: {\r\n    options,\r\n  }\r\n}));\r\n","//@flow\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { readOptions, saveOptions } from './actions'\r\n\r\nexport type Column = {\r\n  name: string,\r\n  className?: string,\r\n  width?: string\r\n}\r\n\r\nexport type OptionsItems = {\r\n  theme: 'yellow' | 'lightgray' | 'dark',\r\n  topicsPerPage: string,\r\n  autoRefreshTopicsList: string,\r\n  autoRefreshTopicsListInterval: string,\r\n  autoRefreshTopic: string,\r\n  autoRefreshTopicInterval: string,\r\n  contetnMaxWidth?: string,\r\n  tooltipDelay: string,\r\n  showTooltips: string,\r\n  showTooltipOnTopicsList: string\r\n}\r\n\r\nexport type OptionsState = {\r\n  voteColors: Array<string>,\r\n  items: OptionsItems,\r\n  show?: boolean\r\n};\r\n\r\nexport const defaultOptionsState: OptionsState = {\r\n  voteColors: [\r\n    \"#FF1616\", //1\r\n    \"#1A861A\", //2\r\n    \"#0023FF\", //3\r\n    \"#FF6B18\", //4\r\n    \"#9B3A6E\", //5\r\n    \"#567655\", //6\r\n    \"#233345\", //7\r\n    \"#CC0000\", //8\r\n    \"#00CCCC\", //9\r\n    \"#0000CC\", //10\r\n  ],\r\n  items: {\r\n    theme: 'lightgray',\r\n    topicsPerPage: '20',\r\n    autoRefreshTopicsList: 'false',\r\n    autoRefreshTopicsListInterval: '60',\r\n    autoRefreshTopic: 'true',\r\n    autoRefreshTopicInterval: '60',\r\n    //tooltips\r\n    showTooltips: 'true',\r\n    tooltipDelay: '500',\r\n    showTooltipOnTopicsList: 'true',\r\n    showTooltipOnPostLink: 'true',\r\n    //links\r\n    showYoutubeVideoTitle: 'true',\r\n    replaceCatalogMista: 'true',\r\n    fixBrokenLinks: 'true',\r\n  }\r\n}\r\n\r\nconst readOption = (name, defaultValue) => {\r\n  return window.localStorage.getItem(name) || defaultValue;\r\n}\r\n\r\nconst readAllOptions = () => {\r\n  \r\n  let state: OptionsState = defaultOptionsState;\r\n  for (let key in state.items) {\r\n    state.items[key] = readOption(key, state.items[key]);\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nconst reducer = createReducer(readAllOptions(), (builder) => {\r\n  builder\r\n    .addCase(readOptions, (state) => {\r\n      let items = Object.assign({}, defaultOptionsState.items);\r\n      for (let key in items) {\r\n        items[key] = readOption(key, defaultOptionsState.items[key]);\r\n      }\r\n      state.items = items;\r\n    })\r\n    .addCase(saveOptions, (state, action) => {\r\n      for (let key in action.payload.options) {\r\n        const value = String(action.payload.options[key]); \r\n        window.localStorage.setItem(key, value);\r\n        state.items[key] = value;\r\n      }\r\n    })\r\n  })\r\n\r\nexport default reducer;","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\nimport type { State } from '../reducers'\r\n\r\nexport type TooltipKeys = {\r\n  type: 'TOPIC' | 'TOPIC_PREVIEW',\r\n  topicId: string,\r\n  number: number\r\n}\r\n\r\nexport type Coords = {\r\n  x: number,\r\n  y: number\r\n}\r\n\r\nexport type TooltipItem = {\r\n  keys: TooltipKeys,\r\n  coords: Coords\r\n}\r\n\r\nexport const createTooltip = createAction('CREATE_TOOLTIP', (keys, coords) => ({\r\n  payload: {\r\n    keys,\r\n    coords\r\n  },\r\n}));\r\nexport const closeTooltip = createAction('CLOSE_TOOLTIP', keys => ({\r\n  payload: {\r\n    keys\r\n  },\r\n}));\r\nexport const clearTooltips = createAction('CLEAR_TOOLTIPS');\r\n\r\nexport const showTooltip = (keys: TooltipKeys, coords: Coords): any => async (dispatch: any) => {\r\n\r\n  if (keys.type === 'TOPIC' || keys.type === 'TOPIC_PREVIEW') {\r\n    dispatch(createTooltip(keys, coords));\r\n  }\r\n}\r\n\r\nexport const clearTooltipsIfNeeded = (): any => (dispatch: any, getState: any) => {\r\n  const state: State = getState();\r\n  if (state.tooltips.items.length > 0) {\r\n    dispatch(clearTooltips());;\r\n  }\r\n}","//@flow\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { createTooltip, closeTooltip, clearTooltips } from './actions'\r\n\r\nexport type TooltipItemState = {\r\n  i: number,\r\n  hash: string\r\n} & TooltipItem\r\n\r\nexport type TooltipsState = {\r\n  items: Array<TooltipItemState>\r\n};\r\n\r\nexport const defaultTooltipsState: TooltipsState = {\r\n  items: []\r\n}\r\n\r\nconst reducer = createReducer(defaultTooltipsState, (builder) => {\r\n  builder\r\n    .addCase(createTooltip, (state, action) => {\r\n      const hash = JSON.stringify(action.payload.keys);\r\n      const index = state.items.findIndex(item => item.hash === hash);\r\n      let zIndex = 0;\r\n      if (state.items.length)\r\n        zIndex = state.items[state.items.length - 1].zIndex + 1;\r\n      if (index === - 1)\r\n        state.items.push({\r\n          keys: action.payload.keys,\r\n          coords: action.payload.coords,\r\n          hash,\r\n          zIndex \r\n        })\r\n      else {\r\n        //state.list = moveToEnd(state.list, index);\r\n        state.list[state.list.length - 1].zIndex = zIndex;\r\n      }  \r\n    })\r\n    .addCase(closeTooltip, (state, action) => {\r\n      let hash = JSON.stringify(action.payload.keys);\r\n      state.items = state.items.filter(val => val.hash !== hash);\r\n    })\r\n    .addCase(clearTooltips, (state) => {\r\n      state.items = [];\r\n    })    \r\n})\r\n\r\nexport default reducer;\r\n","//@flow\r\nimport type { TopicPreviewAction } from 'src/actions/topic_preview'\r\nimport type { ResponseMessage } from 'src/api'\r\n\r\nexport type TopicPreviewState = {\r\n    items: {[string]: ResponseMessage | null}\r\n};\r\n\r\nexport const defaultTopicPreviewState: TopicPreviewState = {\r\n    items: {}\r\n};\r\n\r\nconst topicPreview = (state: TopicPreviewState = defaultTopicPreviewState, action: TopicPreviewAction): TopicPreviewState => {\r\n\r\n    let previewItem;\r\n\r\n    switch (action.type) {\r\n         case 'SHOW_PREVIEW':\r\n\r\n            previewItem = state[action.topicId];\r\n            if (previewItem === undefined)\r\n                state.items[action.topicId] = {\r\n                    n: '0',\r\n                    id: action.topicId,\r\n                    text: '',\r\n                    user: '',\r\n                    userId: '',\r\n                    utime: '0',\r\n                    vote: 0\r\n                };    \r\n            return {\r\n                ...state,\r\n            }\r\n         case 'CLOSE_PREVIEW': {\r\n            delete state.items[action.topicId];\r\n            return {\r\n                ...state\r\n            }\r\n         }\r\n        case 'RECEIVE_PREVIEW_TEXT':\r\n\r\n            previewItem = state.items[action.topicId];\r\n            if (previewItem === undefined)\r\n                return state;\r\n            else\r\n                state.items[action.topicId] = action.message;        \r\n            \r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default topicPreview;","import { configureStore  } from '@reduxjs/toolkit'\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport logger from 'redux-logger'\r\n\r\nimport topicsList from './topicslist/reducer'\r\nimport topic from './topic/reducer'\r\nimport sections from './sections/reducer'\r\nimport options from './options/reducer'\r\nimport login from './login/reducer'\r\nimport tooltips from './tooltips/reducer'\r\n\r\nimport newTopic from 'src/reducers/new_topic'\r\nimport newMessage from 'src/reducers/new_message'\r\nimport topicPreview from 'src/reducers/topic_preview'\r\n\r\nconst reducer = {\r\n  topicsList,\r\n  topic,\r\n  sections,\r\n  options,\r\n  login,\r\n  tooltips,\r\n  newTopic,\r\n  newMessage,\r\n  topicPreview  \r\n}\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  //middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n  devTools: process.env.NODE_ENV !== 'production'\r\n})\r\n\r\nexport const useAppDispatch = () => useDispatch()\r\n\r\nexport default store","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Dropdown } from 'react-bootstrap'\r\n\r\nimport { doLogout } from 'src/data/login/actions'\r\nimport { domain } from 'src/api'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype LoggedUserProps = {\r\n    userId: string,\r\n    userName: string    \r\n}\r\n\r\ntype Props = LoggedUserProps & DefaultProps;\r\n\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n  <span\r\n    ref={ref} \r\n    style={{ cursor: \"pointer\" }} \r\n    className='link'\r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n  >\r\n    {children}\r\n  </span>\r\n));\r\n\r\nclass LoggedUser extends Component<Props> {\r\n\r\n    onLogout = (event: any) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const { dispatch } = this.props;\r\n        dispatch(doLogout());  \r\n    }\r\n\r\n    onMenuSelect = (eventKey: any, event: Object): any => {\r\n\r\n        if (eventKey === 'exit') {\r\n           this.onLogout(event);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { userId, userName } = this.props;\r\n        return (\r\n            <div style={{float: \"left\"}}>\r\n                <Dropdown id=\"dropdown-custom-menu\" onSelect={this.onMenuSelect}>\r\n                    <span>Привет, </span>\r\n                    <Dropdown.Toggle as={CustomToggle} bsRole=\"toggle\">{userName} ▼</Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item eventKey=\"profile\" href={`${domain}/users.php?id=${userId}`}>Профиль</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"myTopics\" href={`${window.hash}/index.php?user_id=${userId}`}>Мои темы</Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"options\" href={`${window.hash}/options.php`}>Настройки</Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"exit\">Выход</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ( connect()(LoggedUser): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FormControl, Button } from 'react-bootstrap'\r\n\r\nimport { doLoginIfNeeded } from 'src/data/login/actions'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { LoginState } from 'src/data/login/reducer'\r\nimport type { State } from 'src/reducers'\r\n\r\ntype Props = LoginState & DefaultProps;\r\n\r\nclass LoginForm extends Component<Props> {\r\n\r\n    username: any;\r\n    password: any;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.username = React.createRef();  \r\n        this.password = React.createRef();  \r\n    }\r\n        \r\n    onLogin = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const { dispatch } = this.props;\r\n\r\n        const params = {\r\n            username: this.username.current.value,\r\n            password: this.password.current.value\r\n        }\r\n        dispatch(doLoginIfNeeded(params));  \r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <form name=\"enterform\" className=\"flex-row\" style={{flexWrap: \"wrap\"}}>\r\n                    <FormControl \r\n                        type=\"text\" \r\n                        placeholder=\"Имя\" \r\n                        ref={this.username} \r\n                        size=\"sm\" \r\n                        style={{marginRight: \"5px\", flex: \"0 1 300px\"}}\r\n                    />\r\n                    <FormControl \r\n                        type=\"password\" \r\n                        placeholder=\"Пароль\" \r\n                        maxLength=\"20\" \r\n                        autoComplete=\"off\" \r\n                        ref={this.password}\r\n                        size=\"sm\" \r\n                        style={{marginRight: \"5px\", flex: \"0 1 300px\"}}\r\n                    />\r\n                    <Button \r\n                        size=\"sm\"\r\n                        variant=\"light\" \r\n                        onClick={this.onLogin}\r\n                    >Войти</Button>\r\n                </form>\r\n                <p style={{margin: \"0px\"}}>Войти можно на сайте <a href=\"https://forum.mista.ru/\">forum.mista.ru</a></p>\r\n                <a rel=\"nofollow\" href=\"https://forum.mista.ru/user_registration.php\">Регистрация</a>\r\n                <span style={{ margin: \"5px\" }}>|</span>\r\n                <a rel=\"nofollow\" href=\"https://forum.mista.ru/remember_password.php\">Забыли пароль?</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): LoginState => {\r\n    return state.login;\r\n}\r\n\r\nexport default ( connect(mapStateToProps)(LoginForm): any );","//@flow\r\nimport React from 'react'\r\n\r\nimport './error.css'\r\n\r\ntype Props = {\r\n  text: ?string\r\n}\r\n\r\nconst ErrorElem = (props: Props): any => {\r\n  if (!props.text)\r\n    return null;\r\n\r\n  return (\r\n    <div className=\"error\" dangerouslySetInnerHTML={{ __html: props.text }}></div>\r\n  )\r\n}\r\n\r\nexport default ErrorElem;","//@flow\r\nimport React, { Fragment, Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport LoggedUser from './logged_user'\r\nimport LoginForm from './login_form'\r\nimport ErrorElem from '../common/error'\r\n\r\nimport { checkLoginIfNeeded } from 'src/data/login/actions'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { LoginState } from 'src/data/login/reducer'\r\n\r\ntype Props = LoginState & DefaultProps;\r\n\r\nclass Login extends Component<Props> {\r\n\r\n    componentDidMount() {\r\n        const { dispatch } = this.props;\r\n        dispatch(checkLoginIfNeeded());        \r\n    }\r\n\r\n    render() {\r\n\r\n        const { logged, userid, username, error, dispatch } = this.props;\r\n\r\n        let elem;\r\n        if (logged === true) \r\n            elem = <LoggedUser dispatch={dispatch} userId={userid} userName={username} />\r\n        else if (logged === false)\r\n            elem = <LoginForm /> \r\n        else \r\n            elem = null;   \r\n\r\n        return (\r\n            <Fragment>\r\n                {elem}\r\n                {error && <ErrorElem text={error} />}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): LoginState => {\r\n    \r\n    return state.login;\r\n}\r\n\r\nexport default ( connect(mapStateToProps)(Login): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nimport { fetchSectionsIfNeeded } from 'src/data/sections/actions'\r\n\r\nimport type { ResponseSection, ResponseSections } from 'src/api'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { State } from 'src/reducers'\r\n\r\ntype SectionSelectProps = {\r\n  defaultValue: string,\r\n  selected: string,\r\n  className: string,\r\n  id: string,\r\n  style?: {},\r\n  size: ?string,\r\n  onChange: (e: any, section: ResponseSection | null) => void\r\n}\r\n\r\ntype StateProps = {\r\n  items: ResponseSections,\r\n  tree: {}\r\n}\r\n\r\ntype Props = SectionSelectProps & StateProps & DefaultProps;\r\n\r\nclass SectionSelect extends Component<Props> {\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(fetchSectionsIfNeeded());\r\n  }\r\n\r\n  onSelect: (e: SyntheticEvent<HTMLSelectElement>) => void = (e: SyntheticEvent<HTMLSelectElement>) => {\r\n\r\n    const { items, onChange } = this.props;\r\n\r\n    if (onChange) {\r\n      const shortn = e.currentTarget.value;\r\n      const arr = items.filter(val => val.shortn === shortn);\r\n      if (arr.length > 0)\r\n        onChange(e, arr[0]);\r\n      else\r\n        onChange(e, null);\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { id, tree, defaultValue, selected, style, size } = this.props;\r\n\r\n    let sectionsElem = [];\r\n    for (let forum in tree) {\r\n\r\n      let group =\r\n        <optgroup key={forum} label={forum}>\r\n          {tree[forum].map((item, i) => (\r\n            <option key={item.id} value={item.shortn}>\r\n              {item.fulln}\r\n            </option>\r\n          ))}\r\n        </optgroup>\r\n\r\n      sectionsElem.push(group);\r\n    }\r\n\r\n    return (\r\n      <Form.Control as=\"select\"\r\n        onChange={this.onSelect}\r\n        value={selected}\r\n        style={style}\r\n        className='input'\r\n        size={size}\r\n        id={id}\r\n      >\r\n        <option value=\"\">{defaultValue}</option>\r\n        {sectionsElem}\r\n      </Form.Control>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  const { items, tree } = state.sections;\r\n\r\n  return {\r\n    items,\r\n    tree\r\n  }\r\n}\r\n\r\nexport { SectionSelect };\r\nexport default (connect(mapStateToProps)(SectionSelect): any );","//@flow\r\nimport React, { Component, useEffect } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport queryString from 'query-string'\r\n\r\nimport Login from '../login'\r\nimport Sections from './sections'\r\nimport { fetchSectionsIfNeeded } from 'src/data/sections/actions'\r\n\r\nconst Header = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate()\r\n  const location = useLocation();\r\n  const params = queryString.parse(location.search);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSectionsIfNeeded());\r\n  }, [dispatch]);  \r\n\r\n  const onSectionChange = (e, value) => {\r\n    if (value)\r\n      navigate(`/index.php?section=${value.shortn}`);\r\n    else\r\n      navigate(`/`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div className=\"header-left\">\r\n        <Login />\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <Sections\r\n          defaultValue=\"--Все секции--\"\r\n          selected={params.section || \"\"}\r\n          onChange={onSectionChange}\r\n          size=\"sm\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default connect()(Header);","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { getMaxPage } from 'src/utils'\r\n\r\n\r\nconst Pages = (props) => {\r\n\r\n    const { answ, topicId } = props;\r\n\r\n    let pages = [];\r\n    if (answ > 100) {\r\n        let maxPage = getMaxPage(answ);\r\n        for (let i = 1; i <= maxPage; i++) {\r\n            let href = `/topic.php?id=${topicId}&page=${i}`;\r\n            let text;\r\n            if (i > 3 && i < maxPage)\r\n                text = '•';\r\n            else\r\n                text = i;\r\n            pages.push(<Link key={i}  className=\"agh\" style={{ margin: \"3px\" }} to={href}>{text}</Link>);\r\n        }\r\n    }\r\n\r\n    if (answ > 20) {\r\n        let href = `/topic.php?id=${topicId}&page=last20#F`;\r\n        pages.push(<Link key=\"last20\" className=\"agh\" style={{ margin: \"3px\" }} to={href}>»</Link>);\r\n    }\r\n\r\n    return (\r\n        <span className=\"topic-pages\">\r\n            {pages}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Pages;","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport type { ResponseTopicsListItem } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\n\r\nimport type { LoginState } from 'src/data/login/reducer'\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { TopicPreviewState } from 'src/reducers/topic_preview'\r\n\r\nimport Pages from './pages';\r\n\r\ntype TopicNameCellProps = {\r\n    data: ResponseTopicsListItem,\r\n    preview: ?number\r\n};\r\n\r\ntype StateProps = {\r\n    login: LoginState,\r\n    topicPreview: TopicPreviewState\r\n};\r\n\r\ntype Props = TopicNameCellProps & StateProps & DefaultProps;\r\n\r\nclass TopicNameCell extends Component<Props> {\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { data, login } = this.props;\r\n\r\n        let href = `/topic.php?id=${data.id}`;\r\n        let classes = classNames('agb', 'mr5', {\r\n            'bold': data.answ >= 100,\r\n            'mytopics': data.user0 === login.username\r\n        });\r\n\r\n        let isVoting;\r\n        if (data.is_voting === 1) {\r\n            isVoting = <span className=\"agh separator\">[±]</span>\r\n        }\r\n        \r\n        let sectionHref = `/index.php?section=${data.sect2}`;\r\n        let section;\r\n\r\n        if (data.sect1) {\r\n            section = (\r\n            <span className=\"topic-section\">\r\n                <span className=\"agh\" style={{margin: \"0px 5px\"}}>/</span>\r\n                <Link key=\"1\" rel=\"nofollow\" className=\"agh\" to={sectionHref} >{data.sect1}</Link>\r\n            </span>    \r\n            )\r\n        }\r\n\r\n        let closed;\r\n        let down;\r\n        let text = data.text;\r\n        if (data.closed)\r\n            closed = <span className=\"agh\">Ø</span>\r\n\r\n        if (data.down === 1)\r\n            down = <span className=\"agh\">↓</span>\r\n\r\n        if (data.sect2 === 'job' && text.substr(0, 3) !== 'JOB')\r\n            text = 'JOB: ' + text;\r\n\r\n        else if (data.forum === 'life' && text.substr(0, 3) !== 'OFF')\r\n            text = 'OFF: ' + text;\r\n\r\n        else if (data.sect2 === 'v7' && text.substr(0, 2) !== 'v7')\r\n            text = 'v7: ' + text;\r\n\r\n        return (\r\n            <div className=\"cell-title\">\r\n                <Link to={href} className={classes} dangerouslySetInnerHTML={{ __html: text }} style={{overflowWrap: \"anywhere\"}}></Link>\r\n                {isVoting}\r\n                <Pages answ={data.answ} topicId={data.id} />\r\n                {closed}\r\n                {down}\r\n                {section}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n    return {\r\n        login: state.login,\r\n        topicPreview: state.topicPreview\r\n    }\r\n}\r\n\r\nexport default ( connect(mapStateToProps)(TopicNameCell): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { showTooltip } from '../../data/tooltips/actions'\r\n\r\nimport { getMaxPage, childrenToText } from 'src/utils';\r\nimport { getTopicInfo } from 'src/api'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { ResponseInfo, ResponseMessages } from 'src/api'\r\n\r\ntype LinkToPostProps = {\r\n  topicId: string,\r\n  number: number,\r\n  isPreview: boolean,\r\n  style: {}\r\n}\r\n\r\ntype StateProps = {\r\n  info: ResponseInfo,\r\n  items: ResponseMessages,\r\n  tooltipDelay: string\r\n}\r\n\r\ntype Props = LinkToPostProps & StateProps & DefaultProps;\r\n\r\nclass LinkToPost extends Component<Props, { text: string }> {\r\n\r\n  timer;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { children, number } = this.props;\r\n    if (children)\r\n      this.state = { text: childrenToText(children).join('') };\r\n    else\r\n      this.state = { text: String(number) };\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    if (!props.children) {\r\n      this.setState({ text: String(props.number) });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    if (this.state.text.startsWith(\"http\")) {\r\n\r\n      const { topicId } = this.props;\r\n      getTopicInfo({ id: topicId })\r\n        .then(response => {\r\n          this.setState({\r\n            text: response.text\r\n          })\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  onMouseOver = (event) => {\r\n    event.persist();\r\n    const { tooltipDelay } = this.props;\r\n    this.timer = setTimeout(() => this.showToolTip(event), +tooltipDelay);\r\n  }\r\n\r\n  onClick = (event) => {\r\n    event.stopPropagation();\r\n    clearTimeout(this.timer);\r\n    this.showToolTip(event);\r\n  }\r\n\r\n  onMouseOut = (event) => {\r\n    clearTimeout(this.timer);\r\n  }\r\n\r\n  showToolTip = (e) => {\r\n    const { topicId, number, dispatch, isPreview } = this.props;\r\n\r\n    const coords = {\r\n      x: e.pageX,\r\n      y: e.pageY - 50 // remove navbar margin-top\r\n    }\r\n\r\n    const keys = {\r\n      type: isPreview ? 'TOPIC_PREVIEW' : 'TOPIC',\r\n      topicId,\r\n      number\r\n    }\r\n\r\n    dispatch(showTooltip(\r\n      keys,\r\n      coords\r\n    ));\r\n  }\r\n\r\n  render() {\r\n\r\n    const { topicId, number, style, info } = this.props;\r\n    const page = getMaxPage(number);\r\n\r\n    let pageParam = '';\r\n    if (page > 1)\r\n      pageParam = `&page=${page}`;\r\n\r\n    let a;\r\n    if (info && topicId === info.id || !isNaN(this.state.text))\r\n      a = (\r\n        <span\r\n          onMouseOver={this.onMouseOver}\r\n          onMouseOut={this.onMouseOut}\r\n          onClick={this.onClick}\r\n          className='link'\r\n          style={{ ...style }}\r\n        >{this.state.text}</span>\r\n      )\r\n    else\r\n      a = (\r\n        <span>\r\n          <a href={`${window.hash}/topic.php?id=${topicId}${pageParam}#${number}`}\r\n            style={{ ...style }}\r\n          >{this.state.text}</a>{' '}\r\n                    (<span onMouseOver={this.onMouseOver}\r\n            onMouseOut={this.onMouseOut}\r\n            onClick={this.onClick}\r\n            className='link'\r\n          >{number}</span>)\r\n        </span>\r\n      )\r\n\r\n    return a;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  const {\r\n    items, info\r\n  } = state.topic;\r\n\r\n  return {\r\n    items,\r\n    info,\r\n    tooltipDelay: state.options.items['tooltipDelay']\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(LinkToPost): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype PreviewLinkProps = {\r\n    topicId: string,\r\n    expanded: boolean\r\n};\r\n\r\ntype Props = PreviewLinkProps & DefaultProps;\r\n\r\nclass PreviewLink extends Component<Props> {\r\n\r\n    onClick = () => {\r\n        const { topicId, dispatch } = this.props;\r\n\r\n        dispatch({\r\n            type: 'TOGGLE_PREVIEW',\r\n            topicId \r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { expanded } = this.props;\r\n        let text;\r\n        if (expanded)\r\n            text = '-'\r\n        else\r\n            text = '+'    \r\n\r\n        return (\r\n            <div className=\"cell-preview-link\" onClick={this.onClick}>\r\n                <span>{text}</span>\r\n            </div>\r\n        )        \r\n    }\r\n\r\n}\r\n\r\nexport default ( connect()(PreviewLink): any );","//@flow\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport dateFormat from 'dateformat'\r\n\r\nimport TopicNameCell from './topic_name_cell';\r\nimport LinkToPost from 'src/components/extensions/link_to_post'\r\nimport PreviewLink from './preview_link'\r\n\r\nimport { today } from 'src/utils'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { TopicsListItem } from 'src/data/topicslist/reducer'\r\nimport type { LoginState } from 'src/data/login/reducer'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype RowProps = {\r\n  columns: any,\r\n  data: TopicsListItem\r\n}\r\n\r\ntype StateProps = {\r\n  login: LoginState,\r\n  showTooltipOnTopicsList: string\r\n}\r\n\r\ntype Props = RowProps & StateProps & DefaultProps;\r\n\r\nconst Row = (props: Props) => {\r\n\r\n  const { data, showTooltipOnTopicsList } = props;\r\n  let time = new Date(+data.utime * 1000);\r\n  if (today(time)) {\r\n    time = dateFormat(time, 'HH:MM')\r\n  } else {\r\n    time = dateFormat(time, 'dd.mm.yy');\r\n  }\r\n  return (\r\n    <div className=\"topics-list-row\">\r\n      {/*{cells}*/}\r\n      <div className=\"cell-forum\">\r\n        {data.forum}\r\n      </div>\r\n      <div className=\"cell-section\">\r\n        {data.sect1}\r\n      </div>\r\n      <div className=\"cell-answ\">\r\n        <i className=\"fa fa-comments-o\" aria-hidden=\"true\" style={{marginRight: \"3px\"}}></i>\r\n        {showTooltipOnTopicsList === 'true' ?\r\n          <LinkToPost topicId={data.id} number={data.answ} style={{ color: \"inherit\" }} isPreview />\r\n          :\r\n          data.answ\r\n        }\r\n      </div>\r\n      <PreviewLink topicId={data.id} expanded={data.showPreview} />\r\n      <TopicNameCell data={data} />\r\n      <div className=\"cell-author\">\r\n        <i aria-hidden=\"true\" className=\"fa fa-user-circle\" style={{marginRight: \"3px\"}}></i>\r\n        {data.user0}\r\n      </div>\r\n      <div className=\"cell-lastuser\">\r\n        <div style={{ display: \"flex\" }}>\r\n          <span className=\"cell-lastuser-time\">{time}</span>\r\n          <span className=\"cell-lastuser-user\">{data.user}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"cell-last20\">\r\n        <Link to={`/topic.php?id=${String(data.id)}&page=last20`} style={{ color: \"inherit\", display: \"block\", width: \"100%\", textAlign: \"center\" }}>{'>'}</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    login: state.login,\r\n    showTooltipOnTopicsList: state.options.items.showTooltipOnTopicsList\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(Row): any );","//@flow\r\nimport React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\n\r\nimport { paramsToString } from 'src/api'\r\nimport './pages.css'\r\n\r\ntype Props = {\r\n  locationParams: { page?: string },\r\n  baseUrl: string,\r\n  maxPage: number,\r\n  last20?: boolean\r\n}\r\n\r\nconst Pages = (props: Props): any => {\r\n\r\n  const { locationParams, baseUrl, maxPage, last20 } = props;\r\n  let currentPage;\r\n  if (!locationParams.page)\r\n    currentPage = 1;\r\n  else if (locationParams.page === \"last20\")\r\n    currentPage = \"last20\";\r\n  else\r\n    currentPage = parseInt(locationParams.page, 10) || 1;\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= maxPage; i++) {\r\n    let params = { ...locationParams, page: i };\r\n    let href = `${window.hash}/${baseUrl}` + paramsToString('?', params);\r\n\r\n    pages.push(<Pagination.Item active={currentPage === i} key={i} href={href}>{i}</Pagination.Item>);\r\n  }\r\n\r\n  if (last20 === true) {\r\n    let params = { ...locationParams, page: \"last20\" };\r\n    let href = `${window.hash}/${baseUrl}` + paramsToString('?', params);\r\n    pages.push(<Pagination.Item active={currentPage === \"last20\"} key=\"last20\" href={href}>»</Pagination.Item>);\r\n  }\r\n\r\n  return (\r\n    <Pagination style={{ margin: \"0px\" }}>\r\n      {pages}\r\n    </Pagination>\r\n  )\r\n\r\n}\r\n\r\nexport default Pages;","//@flow\r\nimport * as API from '../api'\r\nimport type { RequestNewTopic } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\nimport type { ResponseSection } from 'src/api'\r\n\r\nexport type postNewTopicParams = {\r\n  subject: string,\r\n  text: string,\r\n  section: number,\r\n  forum: string,\r\n  isVoting: boolean,\r\n  votingItems?: Array<string>,\r\n  onSuccess?: () => void\r\n};\r\n\r\nexport type POST_NEW_TOPIC_START = {\r\n  type: 'POST_NEW_TOPIC_START'\r\n}\r\n\r\nexport type POST_NEW_TOPIC_COMPLETE = {\r\n  type: 'POST_NEW_TOPIC_COMPLETE'\r\n}\r\n\r\nexport type POST_NEW_TOPIC_ERROR = {\r\n  type: 'POST_NEW_TOPIC_ERROR',\r\n  error: string\r\n}\r\n\r\nexport type NEW_TOPIC_TEXT = {\r\n  type: 'NEW_TOPIC_TEXT',\r\n  text: string\r\n}\r\n\r\nexport type NEW_TOPIC_SUBJECT = {\r\n  type: 'NEW_TOPIC_SUBJECT',\r\n  text: string\r\n}\r\n\r\nexport type NEW_TOPIC_CLEAR = {\r\n  type: 'NEW_TOPIC_CLEAR'\r\n}\r\n\r\nexport type NEW_TOPIC_SHOW_VOTING = {\r\n  type: 'SHOW_VOTING',\r\n  data: boolean\r\n}\r\n\r\nexport type NEW_TOPIC_SECTION = {\r\n  type: 'NEW_TOPIC_SECTION',\r\n  section: ResponseSection\r\n}\r\n\r\nexport type NewTopicAction = POST_NEW_TOPIC_START | POST_NEW_TOPIC_COMPLETE | POST_NEW_TOPIC_ERROR |\r\n  NEW_TOPIC_CLEAR | NEW_TOPIC_TEXT | NEW_TOPIC_SUBJECT | NEW_TOPIC_SHOW_VOTING | NEW_TOPIC_SECTION;\r\n\r\nexport const shouldPostNewTopic = (state: State): boolean => {\r\n  const newTopic = state.newTopic;\r\n  if (!newTopic) {\r\n    return false\r\n  }\r\n  if (newTopic.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const postNewTopicIfNeeded = (params: postNewTopicParams): any => (dispatch: any, getState: any) => {\r\n  if (shouldPostNewTopic(getState())) {\r\n    return dispatch(postNewTopic(params));\r\n  }\r\n}\r\n\r\nconst postNewTopic = (params: postNewTopicParams) => async (dispatch: any) => {\r\n\r\n  dispatch({\r\n    type: 'POST_NEW_TOPIC_START'\r\n  });\r\n\r\n  let fetchParams: RequestNewTopic = {\r\n    message_text: encodeURIComponent(params.text),\r\n    topic_text: encodeURIComponent(params.subject),\r\n    target_section: String(params.section),\r\n    target_forum: params.forum.toLowerCase(),\r\n    action: 'new',\r\n    rnd: Math.round(Math.random() * 10000000000),\r\n    voting: params.isVoting ? 1 : 0\r\n  };\r\n\r\n  if (params.votingItems)\r\n    for (let i = 0; i < params.votingItems.length; i++) {\r\n      fetchParams[`section${i + 1}`] = params.votingItems[i];\r\n    }\r\n\r\n  await API.postNewTopic(fetchParams);\r\n\r\n  dispatch({\r\n    type: 'POST_NEW_TOPIC_COMPLETE'\r\n  });\r\n\r\n  if (params.onSuccess)\r\n    params.onSuccess();\r\n}","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FormControl, Button, ButtonGroup, Form } from 'react-bootstrap'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\n\r\nimport './text_editor.css'\r\n\r\ntype TextEditorProps = {\r\n  placeholder: string,\r\n  showVoting: boolean,\r\n  isVoting: boolean,\r\n  text: string,\r\n  isFetching: boolean,\r\n  formName: string,\r\n  onChange?: (e: any, text: string) => void,\r\n}\r\n\r\ntype Props = TextEditorProps & DefaultProps;\r\n\r\nclass TextEditor extends Component<Props> {\r\n\r\n  textArea;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.textArea = React.createRef();\r\n  }\r\n\r\n  onButtonCode1c = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    var openTag = '[1C]\\n';\r\n    var closeTag = '\\n[/1C]';\r\n\r\n    var textArea: any = this.textArea.current;\r\n\r\n    var start = textArea.selectionStart;\r\n    var end = textArea.selectionEnd;\r\n\r\n    var oldText = textArea.value;\r\n    var len = oldText.length;\r\n    var selectedText = oldText.substring(start, end);\r\n    var replacement = openTag + selectedText + closeTag;\r\n    var newText = oldText.substring(0, start) + replacement + oldText.substring(end, len);\r\n\r\n    const { dispatch, formName } = this.props;\r\n    dispatch({\r\n      type: formName + '_TEXT',\r\n      text: newText\r\n    })\r\n\r\n  }\r\n\r\n  onVotingChange = (e: SyntheticEvent<HTMLInputElement>) => {\r\n    const { dispatch } = this.props;\r\n    dispatch({\r\n      type: 'SHOW_VOTING',\r\n      data: e.currentTarget.checked\r\n    })\r\n  }\r\n\r\n  onChange = (e: SyntheticEvent<HTMLTextAreaElement>) => {\r\n    const { dispatch, formName } = this.props;\r\n    dispatch({\r\n      type: formName + '_TEXT',\r\n      text: e.currentTarget.value\r\n    })\r\n  }\r\n\r\n  onKeyPress = (e: SyntheticKeyboardEvent<HTMLTextAreaElement>) => {\r\n\r\n    if (e.key === 'Enter' && e.ctrlKey) {\r\n      let parent = e.currentTarget.parentElement;\r\n      while (parent && parent.tagName.toUpperCase() !== \"FORM\") {\r\n        parent = parent.parentElement;\r\n      }\r\n      if (parent)\r\n        parent.dispatchEvent(new Event(\"submit\", { cancelable: true, bubbles: true }));\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { placeholder, showVoting, isVoting, isFetching, text } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <FormControl\r\n          as=\"textarea\"\r\n          placeholder={placeholder}\r\n          cols=\"70\" rows=\"3\"\r\n          value={text}\r\n          onChange={this.onChange}\r\n          onKeyPress={this.onKeyPress}\r\n          ref={this.textArea}\r\n          className=\"text-editor input\"\r\n        />\r\n        <div className=\"flex-row\">\r\n          <ButtonGroup>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"light\"\r\n              onClick={this.onButtonCode1c}\r\n              style={{ marginRight: \"5px\" }}\r\n              className='button'\r\n            >Код 1С</Button>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"light\"\r\n              disabled={isFetching}\r\n              type=\"submit\"\r\n              className='button'\r\n            >\r\n              {isFetching ? 'Отправляется' : 'Отправить'}\r\n            </Button>\r\n          </ButtonGroup>\r\n          {showVoting &&\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              checked={isVoting}\r\n              onChange={this.onVotingChange}\r\n              label=\"Голосование\"\r\n              style={{ margin: \"auto 0px auto auto\" }} />\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default (connect()(TextEditor): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FormGroup } from 'react-bootstrap'\r\n\r\nimport type { ResponseSection } from 'src/api'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { State } from 'src/reducers'\r\nimport type { SectionsState } from 'src/data/sections/reducer'\r\nimport type { NewTopicState } from 'src/reducers/new_topic'\r\n\r\nimport { postNewTopicIfNeeded } from 'src/actions/new_topic'\r\nimport type { NewTopicAction, postNewTopicParams } from 'src/actions/new_topic'\r\n\r\nimport SectionSelect from './sections'\r\nimport TextEditor from '../common/text_editor'\r\nimport ErrorElem from '../common/error'\r\n\r\nimport './new_topic.css'\r\n\r\ntype StateProps = {\r\n  sections: SectionsState,\r\n  newTopic: NewTopicState,\r\n}\r\n\r\ntype NewTopicProps = {\r\n  onSubmitSuccess?: () => void\r\n};\r\n\r\ntype Props = NewTopicProps & StateProps & DefaultProps;\r\n\r\nclass NewTopic extends Component<Props> {\r\n\r\n  currentSection: ?ResponseSection;\r\n\r\n  onSectionChange = (e: any, section: ResponseSection) => {\r\n    const { dispatch } = this.props;\r\n    this.currentSection = section;\r\n\r\n    const action: NewTopicAction = {\r\n      type: 'NEW_TOPIC_SECTION',\r\n      section\r\n    };\r\n\r\n    dispatch(action);\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n    const { dispatch, newTopic } = this.props;\r\n\r\n    let action: NewTopicAction;\r\n    if (!this.currentSection) {\r\n      action = {\r\n        type: 'POST_NEW_TOPIC_ERROR',\r\n        error: 'Не выбрана секция'\r\n      };\r\n      dispatch(action);\r\n      return;\r\n    }\r\n\r\n    let subject = newTopic.subject;\r\n    if (!subject) {\r\n      action = {\r\n        type: 'POST_NEW_TOPIC_ERROR',\r\n        error: 'Не указана тема'\r\n      };\r\n      dispatch(action);\r\n      return;\r\n    }\r\n\r\n    if (!newTopic.text) {\r\n      action = {\r\n        type: 'POST_NEW_TOPIC_ERROR',\r\n        error: 'Не указано сообщение'\r\n      };\r\n      dispatch(action);\r\n      return;\r\n\r\n    }\r\n\r\n    let params: postNewTopicParams = {\r\n      subject,\r\n      text: newTopic.text,\r\n      section: this.currentSection.id,\r\n      forum: this.currentSection.forum,\r\n      isVoting: newTopic.isVoting,\r\n      votingItems: [],\r\n      onSuccess: this.onSubmitSuccess\r\n    };\r\n\r\n    if (newTopic.isVoting) {\r\n      params.votingItems = [];\r\n      for (let i = 1; i <= 10; i++) {\r\n        let val = this.refs[`vote${i}`].value;\r\n        if (val) {\r\n          params.votingItems.push(val);\r\n        }\r\n      }\r\n    }\r\n\r\n    dispatch(postNewTopicIfNeeded(params));\r\n  }\r\n\r\n  onSubjectChange = (e) => {\r\n\r\n    const { dispatch } = this.props;\r\n    dispatch({\r\n      type: 'NEW_TOPIC_SUBJECT',\r\n      text: e.target.value\r\n    });\r\n\r\n  }\r\n\r\n\r\n  onSubmitSuccess = () => {\r\n\r\n    const { dispatch } = this.props;\r\n    dispatch({\r\n      type: 'NEW_TOPIC_CLEAR',\r\n      text: ''\r\n    });\r\n\r\n    if (this.props.onSubmitSuccess) {\r\n      this.props.onSubmitSuccess();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { sections, newTopic } = this.props;\r\n\r\n    let groupsElem = [];\r\n    for (let forum in sections.tree) {\r\n      groupsElem.push(<option key={forum} value={forum.toLowerCase()}>{forum}</option>);\r\n    }\r\n\r\n    let votingOptions = [];\r\n\r\n    if (newTopic.isVoting) {\r\n      votingOptions.push(<div key=\"p\">Варианты:</div>);\r\n      for (let i = 1; i <= 10; i++) {\r\n        votingOptions.push(\r\n          <InputGroup key={i} size=\"sm\" style={{ marginBottom: \"3px\", width: \"100%\" }}>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text\r\n                style={{ width: \"40px\" }} className='input'>\r\n                {`${i}.`}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"text\"\r\n              maxLength=\"50\"\r\n              ref={`vote${i}`}\r\n              className='input'\r\n            />\r\n          </InputGroup>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <form className=\"new-topic-container\" onSubmit={this.onSubmit}>\r\n        <div id=\"newtopic_form\" className=\"new-topic-text\">\r\n          <div><b>Новая тема:</b></div>\r\n          {newTopic.error && <ErrorElem text={newTopic.error} />}\r\n          <div className=\"flex-row\" style={{ marginBottom: \"3px\" }}>\r\n            <Form.Control as=\"select\"\r\n              size=\"sm\"\r\n              readOnly={true}\r\n              value={newTopic.forum}\r\n              style={{ flex: \"0 1 90px\" }}\r\n              className='input'\r\n            >\r\n              {groupsElem}\r\n            </Form.Control>\r\n            <SectionSelect\r\n              defaultValue=\"Секция\"\r\n              id=\"target_section\"\r\n              size=\"sm\"\r\n              style={{ flex: \"1 1 auto\" }}\r\n              onChange={this.onSectionChange}\r\n            />\r\n          </div>\r\n          <Form.Control\r\n            type=\"text\"\r\n            size=\"sm\"\r\n            value={newTopic.subject}\r\n            onChange={this.onSubjectChange}\r\n            style={{ marginBottom: \"3px\" }}\r\n            className='input'\r\n            placeholder=\"Тема\"\r\n            maxLength=\"90\"\r\n          />\r\n          <TextEditor\r\n            placeholder=\"Сообщение\"\r\n            showVoting={true}\r\n            isVoting={newTopic.isVoting}\r\n            text={newTopic.text}\r\n            isFetching={newTopic.isFetching}\r\n            formName=\"NEW_TOPIC\"\r\n          />\r\n        </div>\r\n        <FormGroup className=\"new-topic-voting\">\r\n          {votingOptions}\r\n        </FormGroup>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    sections: state.sections,\r\n    newTopic: state.newTopic\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(NewTopic): any );","\r\nfunction highlight(text) {\r\n\r\n  const keywords = new Set(\r\n    \"|if|если|then|тогда|elsif|иначеесли|else|иначе|endif|конецесли|do|цикл|for|для|to|по|each|каждого|in|из|while|пока|enddo|конеццикла|procedure|процедура|endprocedure|конецпроцедуры|function|функция|endfunction|конецфункции|var|перем|export|экспорт|goto|перейти|and|и|or|или|not|не|val|знач|break|прервать|continue|продолжить|return|возврат|try|попытка|except|исключение|endtry|конецпопытки|raise|вызватьисключение|false|ложь|true|истина|undefined|неопределено|null|new|новый|execute|выполнить|\"\r\n      .split('|')\r\n  );\r\n\r\n  const Спецсиволы = new Set(\"():;.,=+-*<>?[]%/\".split(''));\r\n  const НачалоТега = \"<span class=\";\r\n  const КонецТега = \"</span>\";\r\n\r\n  const мЦветФона = \"bg>\";\r\n  const мЦветЧисла = \"num>\";\r\n  const мЦветСтроки = \"str>\";\r\n  //const мЦветПараметра = \"par>\";\r\n  const мЦветКомментария = \"com>\";\r\n  const мЦветСпецСимвола = \"sp>\";\r\n  const мЦветПрепроцессора = \"pr>\";\r\n  const мЦветКлючевогоСлова1 = \"key>\";\r\n\r\n\r\n  let СтрокаРезультат;\r\n  let УстановленЦвет;\r\n  let ПоследнийЦвет;\r\n\r\n  let ВСтроке = false;\r\n  let Токен = \"\";\r\n\r\n  function ПустаяСтрока(Строка) {\r\n    return Строка.trim() === '';\r\n  }\r\n\r\n  function Сред(Строка, Нач, Длина) {\r\n    return Строка.substr(Нач - 1, Длина);\r\n  }\r\n\r\n  function Прав(Строка, Длина) {\r\n    return Строка.substr(-Длина);\r\n  }\r\n\r\n  function isKeyword(token) {\r\n    return keywords.has(token.toLowerCase().trim());\r\n  }\r\n\r\n  function ДобавитьЧастьСтроки1С(Часть, Цвет) {\r\n\r\n    if (Часть === \" \" || ПоследнийЦвет === Цвет) {\r\n      СтрокаРезультат = СтрокаРезультат + Часть;\r\n    } else {\r\n      if (УстановленЦвет) {\r\n        СтрокаРезультат = СтрокаРезультат + КонецТега;\r\n        УстановленЦвет = false;\r\n      };\r\n\r\n      СтрокаРезультат = СтрокаРезультат + НачалоТега + Цвет + Часть;\r\n      УстановленЦвет = true;\r\n      ПоследнийЦвет = Цвет;\r\n    };\r\n  }\r\n\r\n  function РазукраситьСтроку(СтрокаКода) {\r\n\r\n    //  https://infostart.ru/profile/34707/public/\r\n    let ВСтрокеСкобка = false;\r\n    let ВСтрокеТильда = false;\r\n    let НачалоСтроки = 1;\r\n    let ТокенДоТочки = true;\r\n    // Заменяем 8 символьную табуляцию на 4 символьную пробелами\r\n\r\n    // Последовательно перебираются все символы строки кода\r\n    let Поз = 1;\r\n    for (Поз = 1; Поз <= СтрокаКода.length; Поз++) {\r\n\r\n      let ТекущийСимвол = СтрокаКода.charAt(Поз - 1);\r\n      if (ВСтроке) {\r\n\r\n        // Операции встрече символа \"кавычка\"\r\n        if (ТекущийСимвол === '\"') {\r\n          // Нашли парную кавычку - окрашиваем как строку\r\n          ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\r\n          ВСтроке = false;\r\n          Токен = \"\";\r\n          ТокенДоТочки = true;\r\n        } else {\r\n          Токен = Токен + ТекущийСимвол;\r\n        };\r\n\r\n      } else if (ВСтрокеСкобка) {\r\n\r\n        // Операции встрече символа \"кавычка\" литерал\r\n        if (ТекущийСимвол === \"'\") {\r\n          // Нашли парную скобку - окрашиваем как комментарий\r\n          ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\r\n          ВСтрокеСкобка = false;\r\n          Токен = \"\";\r\n          ТокенДоТочки = true;\r\n        } else {\r\n          Токен = Токен + ТекущийСимвол;\r\n        };\r\n\r\n      } else if (ТекущийСимвол === \" \") {\r\n        // Операции при встрече символа табуляции или пробела\r\n        if (!ПустаяСтрока(Токен)) {\r\n          // Пробел после токена, значит\r\n          // токен - ключевое слово...\r\n          if (ВСтрокеТильда) {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветСтроки);\r\n            ВСтрокеТильда = false;\r\n\r\n          } else if (isKeyword(Токен.trim())) {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветКлючевогоСлова1);\r\n\r\n          } else if (!isNaN(parseInt(Токен, 10))) {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветЧисла);\r\n\r\n          } else {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветФона);\r\n          };\r\n          Токен = \"\";\r\n        } else {\r\n          СтрокаРезультат = СтрокаРезультат + \" \";\r\n        };\r\n        ТокенДоТочки = true;\r\n\r\n      } else if (Спецсиволы.has(ТекущийСимвол)) {\r\n\r\n        // Встретился один из специальных символов\r\n        if (!ПустаяСтрока(Токен)) {\r\n          // Чтобы избежать окраски метода объекта с совпадающим именем\r\n          // с одним из ключевых слов, проверяем текущий символ на \".\"\r\n          if (ВСтрокеТильда) {\r\n\r\n            ДобавитьЧастьСтроки1С(Токен, мЦветСтроки);\r\n            ВСтрокеТильда = false;\r\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\r\n\r\n          } else if (ТокенДоТочки && isKeyword(Токен)) {\r\n            ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\r\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\r\n\r\n          } else {\r\n            // Не ключевое слово - значит число\r\n            if (!isNaN(parseInt(Токен, 10))) {\r\n              ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\r\n\r\n            } else {\r\n              ДобавитьЧастьСтроки1С(Токен, мЦветФона);\r\n            };\r\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\r\n          };\r\n          Токен = \"\";\r\n        };\r\n        // Один из специальных символов\r\n        if (ТекущийСимвол === \".\" && ПоследнийЦвет === мЦветЧисла) {\r\n          // Продолжение числа\r\n          ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветЧисла);\r\n          continue;\r\n\r\n        } else if (ТекущийСимвол === \"=\" && Сред(СтрокаКода, Поз - 1, 1) === \"<\") {\r\n          // Знак \"меньше или равно\" - вторая ошибка движка Инфостарт\r\n          ПоследнийЦвет = undefined;\r\n\r\n        } else if (ТекущийСимвол === \"/\" && Сред(СтрокаКода, Поз + 1, 1) === \"/\") {\r\n          // Проверяется на комментарий\r\n          ДобавитьЧастьСтроки1С(Прав(СтрокаКода, СтрокаКода.length - Поз + 1), мЦветКомментария);\r\n          return;\r\n        };\r\n        ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветСпецСимвола);\r\n\r\n      } else if (ТекущийСимвол === '\"' || ТекущийСимвол === \"|\") {\r\n\r\n        // Операции встрече символа \"кавычка\"\r\n        // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\r\n        if (ПустаяСтрока(Токен)) {\r\n          НачалоСтроки = Поз;\r\n          ВСтроке = true;\r\n        } else {\r\n          // Ошибка синтаксиса\r\n          ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\r\n          Токен = \"\";\r\n        };\r\n        ТокенДоТочки = true;\r\n\r\n      } else if (ТекущийСимвол === \"'\") {\r\n\r\n        // Операции встрече символа \"кавычка\" литерал\r\n        // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\r\n        if (ПустаяСтрока(Токен)) {\r\n          НачалоСтроки = Поз;\r\n          ВСтрокеСкобка = true;\r\n        } else {\r\n          // Ошибка синтаксиса\r\n          ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\r\n          Токен = \"\";\r\n        };\r\n        ТокенДоТочки = true;\r\n\r\n      } else if (ТекущийСимвол === \"#\" || (ТекущийСимвол === \"&\" && ПустаяСтрока(СтрокаРезультат))) {\r\n\r\n        // Встретился символ препроцессора\r\n        ДобавитьЧастьСтроки1С(Прав(СтрокаКода, СтрокаКода.length - Поз + 1), мЦветПрепроцессора);\r\n        Поз = СтрокаКода.length;\r\n        break;\r\n\r\n      } else if (ТекущийСимвол === \"~\") {\r\n        Токен = Токен + ТекущийСимвол;\r\n        ВСтрокеТильда = true;\r\n      } else {\r\n        // Остальные символы\r\n        Токен = Токен + ТекущийСимвол;\r\n      }\r\n    }\r\n\r\n    if (ВСтроке) {\r\n\r\n      // Многострочная строка\r\n      ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\r\n\r\n    } else if (ВСтрокеСкобка) {\r\n\r\n      // Незавершенный литерал\r\n      ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\r\n\r\n    } else if (!ПустаяСтрока(Токен)) {\r\n\r\n      // Анализируем последний токен строки кода\r\n      if (isKeyword(Токен)) {\r\n        ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\r\n\r\n      } else if (!isNaN(parseInt(Токен, 10))) {\r\n        ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\r\n\r\n      } else {\r\n        ДобавитьЧастьСтроки1С(Токен, мЦветФона);\r\n      };\r\n\r\n    };\r\n\r\n  }\r\n\r\n  ВСтроке = false;\r\n  Токен = \"\";\r\n  УстановленЦвет = false;\r\n  ПоследнийЦвет = undefined;\r\n  СтрокаРезультат = '';\r\n\r\n  let result = [];\r\n\r\n  for (let СтрокаКода of text.split('\\n')) {\r\n\r\n    if (ПустаяСтрока(СтрокаКода)) {\r\n      result.push('');\r\n      continue;\r\n    }\r\n\r\n    СтрокаРезультат = '';\r\n    РазукраситьСтроку(СтрокаКода);\r\n    if (УстановленЦвет && !ВСтроке) {\r\n      СтрокаРезультат += '</span>';\r\n      УстановленЦвет = false;\r\n      ПоследнийЦвет = '';\r\n      Токен = '';\r\n    } else if (!ВСтроке) {\r\n      ПоследнийЦвет = '';\r\n      Токен = '';\r\n    }\r\n\r\n    result.push(СтрокаРезультат);\r\n  }\r\n\r\n  return result.join('\\n');\r\n}\r\n\r\nexport default highlight;","//@flow\r\nimport React, { Component } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Form, FormControl, Button } from 'react-bootstrap'\r\n\r\nimport RadioOption from './radio_option'\r\nimport StringOption from './string_option'\r\n\r\nimport { saveOptions } from 'src/data/options/actions'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { OptionsState } from 'src/data/options/reducer'\r\nimport { defaultOptionsState } from 'src/data/options/reducer'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\nimport './options.css'\r\n\r\ntype Props = OptionsState & DefaultProps;\r\n\r\nexport const withNavigate = (Component: any) => {\r\n  return (props: any) => {\r\n    const navigate = useNavigate();\r\n    return <Component navigate={navigate} {...props} />;\r\n  };\r\n};\r\n\r\nclass Options extends Component<Props> {\r\n\r\n  optionsParams: any;\r\n  state: any;\r\n  form: any;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: props.options.items\r\n    };\r\n\r\n    this.optionsParams = {\r\n      'theme': {\r\n        type: 'radio',\r\n        label: 'Цветовая палитра:',\r\n        oneLine: true,\r\n        values: [\r\n          { name: 'yellow', descr: 'Золотая' },\r\n          { name: 'lightgray', descr: 'Серая' },\r\n          { name: 'dark', descr: 'Темная' }\r\n        ]\r\n      },\r\n      'topicsPerPage': {\r\n        type: 'number',\r\n        label: 'Тем на странице (max 99):',\r\n        min: 1,\r\n        max: 99\r\n      },\r\n      'autoRefreshTopicsList': {\r\n        type: 'checkbox',\r\n        label: 'Автообновление списка тем'\r\n      },\r\n      'autoRefreshTopicsListInterval': {\r\n        type: 'number',\r\n        label: '',\r\n        min: 60,\r\n        max: 1000000,\r\n        postfix: 'сек'\r\n      },\r\n      'autoRefreshTopic': {\r\n        type: 'checkbox',\r\n        label: 'Автообновление темы'\r\n      },\r\n      'autoRefreshTopicInterval': {\r\n        type: 'number',\r\n        label: '',\r\n        min: 60,\r\n        max: 1000000,\r\n        postfix: 'сек'\r\n      },\r\n      //Tooltips   \r\n      'showTooltips': {\r\n        type: 'checkbox',\r\n        label: 'Показывать тултипы, задержка'\r\n      },\r\n      'tooltipDelay': {\r\n        type: 'number',\r\n        max: 1000000,\r\n        label: '',\r\n        postfix: 'мс'\r\n      },\r\n      'showTooltipOnTopicsList': {\r\n        type: 'checkbox',\r\n        label: 'Показывать тултипы на главной странице, при наведении на кол-во ответов'\r\n      },\r\n      'showTooltipOnPostLink': {\r\n        type: 'checkbox',\r\n        label: 'Показывать тултип ссыки на другую ветку'\r\n      },\r\n      //links   \r\n      'showYoutubeVideoTitle': {\r\n        type: 'checkbox',\r\n        label: 'Показывать наименования роликов youtube'\r\n      },\r\n      'replaceCatalogMista': {\r\n        type: 'checkbox',\r\n        label: 'Обратно заменять catalog.mista.ru на infostart.ru'\r\n      },\r\n      'fixBrokenLinks': {\r\n        type: 'checkbox',\r\n        label: 'Чинить поломанные ссылки (с русскими символами)'\r\n      },\r\n    }\r\n\r\n    this.form = [\r\n      {\r\n        tabName: 'Общие',\r\n        rows: [\r\n          ['theme'],\r\n          ['topicsPerPage'],\r\n          ['autoRefreshTopicsList', 'autoRefreshTopicsListInterval'],\r\n          ['autoRefreshTopic', 'autoRefreshTopicInterval'],\r\n        ]\r\n      },\r\n      {\r\n        tabName: 'Тултипы',\r\n        rows: [\r\n          ['showTooltips', 'tooltipDelay'],\r\n          ['showTooltipOnTopicsList'],\r\n          ['showTooltipOnPostLink']\r\n        ]\r\n      },\r\n      {\r\n        tabName: 'Ссылки',\r\n        rows: [\r\n          ['showYoutubeVideoTitle'],\r\n          ['replaceCatalogMista'],\r\n          ['fixBrokenLinks'],\r\n        ]\r\n      }\r\n    ]\r\n\r\n  }\r\n\r\n  closeForm = () => {\r\n    const { navigate } = this.props;\r\n    navigate('/' + window.hash);\r\n  }\r\n\r\n  resetOptions = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      items: Object.assign({}, defaultOptionsState.items)\r\n    })\r\n  }\r\n\r\n  applyOptions = () => {\r\n\r\n    const { dispatch } = this.props;\r\n    dispatch(saveOptions(this.state.items));\r\n    this.closeForm();\r\n  }\r\n\r\n  onTabClick = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      activeTab: e.target.textContent\r\n    });\r\n  }\r\n\r\n  onChange = (e, name, value) => {\r\n\r\n    let items = Object.assign({}, this.state.items);\r\n    items[name] = value;\r\n    this.setState({\r\n      ...this.state,\r\n      items\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    let tabs = [];\r\n    for (let tab of this.form) {\r\n\r\n      let rows = [];\r\n      for (let i in tab.rows) {\r\n\r\n        const row = tab.rows[i];\r\n        let rowElem = [];\r\n        for (let name of row) {\r\n\r\n          const item = this.optionsParams[name];\r\n          if (!item) continue;\r\n\r\n          const value = this.state.items[name];\r\n\r\n          if (item.type === 'radio') {\r\n            rowElem.push(\r\n              <RadioOption\r\n                key={name}\r\n                name={name}\r\n                label={item.label}\r\n                values={item.values}\r\n                value={value}\r\n                oneLine={item.oneLine}\r\n                onChange={this.onChange}\r\n              />\r\n            );\r\n          } else if (item.type === 'number') {\r\n\r\n            if (item.label)\r\n              rowElem.push(\r\n                <label\r\n                  htmlFor={name}\r\n                  key={name + '_label'}\r\n                  style={{ fontWeight: \"inherit\" }}>\r\n                  {item.label}\r\n                </label>\r\n              );\r\n\r\n            rowElem.push(\r\n              <FormControl\r\n                key={name}\r\n                type=\"number\"\r\n                min={item.min}\r\n                max={item.max}\r\n                value={value}\r\n                onChange={(e) => this.onChange(e, name, e.target.value)}\r\n                style={{ flex: \"0 0 100px\", marginLeft: \"5px\" }}\r\n                className='input'\r\n                size=\"sm\"\r\n              >\r\n              </FormControl>\r\n            );\r\n\r\n            if (item.postfix) {\r\n              rowElem.push(\r\n                <span key={name + '_postfix'} style={{ marginLeft: \"5px\", flex: \"0 0 auto\", }}>{item.postfix}</span>\r\n              )\r\n            };\r\n\r\n          } else if (item.type === 'string') {\r\n            rowElem.push(\r\n              <StringOption\r\n                key={name}\r\n                name={name}\r\n                label={item.label}\r\n                postfix={item.postfix}\r\n                value={value}\r\n                onChange={this.onChange}\r\n              />\r\n            );\r\n          } else if (item.type === 'checkbox') {\r\n            rowElem.push(\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label={item.label}\r\n                key={name}\r\n                name={name}\r\n                checked={String(value) === 'true'}\r\n                onChange={(e) => this.onChange(e, name, e.target.checked)}\r\n                style={{ flex: \"0 0 auto\", margin: \"0px\", width: \"100%\" }}\r\n              />\r\n            );\r\n          }\r\n        }\r\n\r\n        rows.push(\r\n          <div key={i} className=\"options-row\">\r\n            {rowElem}\r\n          </div>\r\n        );\r\n\r\n      }\r\n\r\n      tabs.push(\r\n        <div key={tab.tabName}>\r\n          <div className=\"tab-header\">\r\n            {tab.tabName}\r\n          </div>\r\n          <div className=\"tab-content\">\r\n            {rows}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"options-form\">\r\n        <div className=\"options-header\" style={{ cursor: \"default\" }}>\r\n          <b>Настройки</b>\r\n        </div>\r\n        {tabs}\r\n        <div className=\"button-row\">\r\n          <Button\r\n            id=\"applyOptions\"\r\n            size=\"sm\"\r\n            variant=\"light\"\r\n            style={{ margin: \"5px\" }}\r\n            className='button'\r\n            onClick={this.applyOptions}>\r\n            OK\r\n                        </Button>\r\n          <Button\r\n            id=\"cancelOptions\"\r\n            size=\"sm\"\r\n            variant=\"light\"\r\n            style={{ margin: \"5px\", float: \"left\" }}\r\n            className='button'\r\n            onClick={this.closeForm}>\r\n            Отмена\r\n                        </Button>\r\n          <Button\r\n            id=\"defaultOptions\"\r\n            size=\"sm\"\r\n            variant=\"light\"\r\n            style={{ margin: \"5px\", float: \"right\" }}\r\n            className='button'\r\n            onClick={this.resetOptions}>\r\n            Сбросить настройки\r\n                        </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n\r\n  return {\r\n    options: state.options\r\n  };\r\n\r\n}\r\n\r\nexport default (connect(mapStateToProps)(withNavigate(Options)): any );","import React, { Component } from 'react'\r\nimport { childrenToText } from 'src/utils'\r\nimport highlight from './code_highlight'\r\nimport './code1c.css'\r\n\r\nclass Code extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onShowClick = this.onShowClick.bind(this);\r\n    this.state = { hidden: true };\r\n\r\n    const { children } = props;\r\n    if (children) {\r\n\r\n      const textArr = childrenToText(children);\r\n      this.text = textArr.join('');\r\n\r\n      // replace double new-lines\r\n      this.text = this.text\r\n        .replace(/\\n<br>/g, '\\n')\r\n        .replace(/<br>\\n/g, '\\n')\r\n        .replace(/\\r<br>/g, '\\n')\r\n        .replace(/<br>\\r/g, '\\n')\r\n        .replace(/<br>/g, '\\n');\r\n\r\n      // remove all leading|ending new-lines\r\n      while (this.text[0] === '\\n') {\r\n        this.text = this.text.substr(1);\r\n      }\r\n\r\n      while (this.text.substr(-1) === '\\n') {\r\n        this.text = this.text.substr(0, this.text.length - 1);\r\n      }\r\n\r\n      this.text = highlight(this.text);\r\n    }\r\n  }\r\n\r\n  onShowClick() {\r\n    this.setState({\r\n      hidden: !this.state.hidden\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    let buttonText;\r\n    let linesCount = 0;\r\n    if (this.text)\r\n      linesCount = this.text.split(\"\\n\").length;\r\n\r\n    if (this.state.hidden)\r\n      buttonText = `Показать: ${linesCount} строк`;\r\n    else\r\n      buttonText = 'Скрыть';\r\n\r\n    let buttonShow;\r\n    if (linesCount > 7)\r\n      buttonShow = (\r\n        <div className=\"expand-button-div\">\r\n          <span className=\"expand-button-span\" onClick={this.onShowClick}>{buttonText}</span>\r\n        </div>\r\n      );\r\n\r\n    let preStyle = {\r\n    }\r\n\r\n    if (this.state.hidden && linesCount > 7) {\r\n      preStyle.overflow = \"hidden\";\r\n      preStyle.height = \"135px\";\r\n    } else {\r\n      preStyle.overflow = \"auto\";\r\n      preStyle.height = \"auto\";\r\n    }\r\n\r\n    return (\r\n      <div style={{ marginTop: \"5px\" }}>\r\n        <pre className=\"code-pre\" style={preStyle} dangerouslySetInnerHTML={{ __html: this.text }}>\r\n        </pre>\r\n        {buttonShow}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Code;","//@flow\r\nimport React, { Component } from 'react'\r\n\r\ntype LinkToUserProps = {\r\n  href: string,\r\n  children: any\r\n}\r\n\r\nclass LinkToUser extends Component<LinkToUserProps> {\r\n\r\n  render() {\r\n    const { href, children } = this.props;\r\n    return <a href={href} className=\"registered-user\">{children}</a>\r\n  }\r\n}\r\n\r\nexport default (LinkToUser: any);","//@flow\r\nimport React, { Component } from 'react'\r\nimport queryString from 'query-string'\r\n\r\ntype YoutubeLinkProps = {\r\n  href: string,\r\n}\r\n\r\nclass YoutubeLink extends Component<YoutubeLinkProps> {\r\n\r\n  state: any;\r\n\r\n  constructor(props: YoutubeLinkProps) {\r\n    super(props);\r\n    this.state = { hrefName: props.href, title: '' };\r\n  }\r\n\r\n  getVideoId(href: string): ?string {\r\n\r\n    if (href.search(/youtube/) !== -1) {\r\n      let arr = href.split('?');\r\n      return queryString.parse(arr[1]).v;\r\n    }\r\n\r\n    if (href.search(/youtu\\.be/) !== -1) {\r\n      let arr = href.match(/e\\/(.+?)(&|\\?|$)/);\r\n\r\n      if (arr && arr.length > 1)\r\n        return arr[1];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  async getVideoParams(videoId: string): any {\r\n\r\n    const apiKey = localStorage.getItem('youtubeApiKey') || 'AIzaSyCztN2QW4Fxw_1YuAHBTOZdYLbzigPz25g';\r\n    let apiUrl = `https://www.googleapis.com/youtube/v3/videos?key=${apiKey}&fields=items(snippet(title))&part=snippet&id=${videoId}`;\r\n    const response = await fetch(apiUrl);\r\n    const json = await response.json();\r\n\r\n    let title = json.items[0].snippet.title;\r\n    let hrefName = title;\r\n    let maxLength = 50;\r\n    if (title.length > maxLength + 5)\r\n      hrefName = hrefName.substring(0, maxLength) + '...'\r\n\r\n    return {\r\n      hrefName,\r\n      title\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    const { href } = this.props;\r\n    const videoId = this.getVideoId(href);\r\n    if (!videoId)\r\n      return;\r\n\r\n    try {\r\n      const params = await this.getVideoParams(videoId);\r\n      this.setState({\r\n        ...params\r\n      });\r\n\r\n    } catch (e) {\r\n      console.error('youtube', e.message);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let prefix = 'youtube';\r\n    return <a href={this.props.href} title={this.state.title}>{`${prefix}: ${this.state.hrefName}`}</a>\r\n  }\r\n}\r\n\r\nexport default (YoutubeLink: any);","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport URL from 'url-parse'\r\n\r\nimport LinkToPost from './link_to_post'\r\nimport LinkToUser from './link_to_user'\r\nimport YoutubeLink from './youtube_link'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\n\r\nimport { childrenToText } from 'src/utils'\r\n\r\ntype CustomLinkProps = {\r\n  href: string,\r\n  parentText: string,\r\n  target: string,\r\n  class: string,\r\n  rel: string,\r\n  showTooltipOnPostLink: string,\r\n  showYoutubeVideoTitle: string,\r\n  replaceCatalogMista: string,\r\n  fixBrokenLinks: string,\r\n}\r\n\r\ntype Props = CustomLinkProps & DefaultProps;\r\n\r\nclass CustomLink extends Component<Props> {\r\n\r\n  fixBrokenLink(href: string, parentText: string): string {\r\n    let escapedHref = href\r\n      .replace(/\\[/g, '\\\\[')\r\n      .replace(/\\]/g, '\\\\]')\r\n      .replace(/\\./g, '\\\\.')\r\n      .replace(/\\./g, '.')\r\n      .replace(/\\*/g, '\\\\*')\r\n      .replace(/\\+/g, '\\\\+')\r\n      .replace(/\\(/g, '\\\\(')\r\n      .replace(/\\)/g, '\\\\)')\r\n      .replace(/\\?/g, '\\\\?')\r\n      .replace(/\\//g, '\\\\/');\r\n\r\n    try {\r\n      let regExp = new RegExp(escapedHref + '<\\\\/a>(\\\\)|[а-яёА-ЯЁ0-9#\\\\-\\\\+\\\\_\\\\%\\\\?=]*)');\r\n      let arr = parentText.match(regExp);\r\n      if (arr && arr.length > 1) {\r\n        if (arr[1] === ')' && href.search('\\\\(') === -1) {\r\n          return href;\r\n        }\r\n        href = href + arr[1];\r\n        return href;\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    return href;\r\n  }\r\n\r\n  render() {\r\n\r\n    const { href, children, parentText,\r\n      showTooltipOnPostLink, showYoutubeVideoTitle, replaceCatalogMista, fixBrokenLinks } = this.props;\r\n\r\n    try {\r\n      var url = new URL(href, true);\r\n    } catch (error) {\r\n      console.error(error.message, href);\r\n      return <a href={href}>{href}</a>;\r\n    }\r\n\r\n\r\n    let newHref = href;\r\n    if (newHref.startsWith('/')) {\r\n      url.set('protocol', 'https')\r\n      url.set('hostname', 'forum.mista.ru')\r\n      newHref = url.href;\r\n    }\r\n\r\n    if (showTooltipOnPostLink === 'true') {\r\n      if (url.hostname.search(/forum\\.mista.ru/) !== -1) {\r\n\r\n        if (url.pathname === '/topic.php') {\r\n          return (\r\n            <LinkToPost topicId={url.query.id} number={url.hash.replace('#', '') || \"0\"}>\r\n              {childrenToText(children)}\r\n            </LinkToPost>\r\n          )\r\n        } else if (url.pathname === '/users.php') {\r\n          return (\r\n            <LinkToUser href={url.href} >\r\n              {children}\r\n            </LinkToUser>\r\n          )\r\n        }\r\n      }\r\n\r\n      if (url.hostname === 'a-sitnikov.github.io' &&\r\n        url.pathname === '/react.mista/') {\r\n\r\n        if (Object.keys(url.query).length === 0) {\r\n\r\n          url = new URL(href.replace(/#\\//, ''), true);\r\n          if (url.pathname === '/react.mista/topic.php')\r\n            return (\r\n              <LinkToPost topicId={url.query.id} number={url.hash.replace('#', '') || \"0\"}>\r\n                {childrenToText(children)}\r\n              </LinkToPost>\r\n            )\r\n        }\r\n      }\r\n    }\r\n\r\n    if (showYoutubeVideoTitle === 'true')\r\n      if (url.hostname.search(/youtube/) !== -1\r\n        || url.hostname.search(/youtu\\.be/) !== -1) {\r\n        return <YoutubeLink href={href} />\r\n      }\r\n\r\n    if (replaceCatalogMista === 'true')\r\n      if (url.hostname.search(/catalog\\.mista/) !== -1) {\r\n        url.set('hostname', 'infostart.ru')\r\n\r\n        return (\r\n          <a target={this.props.target}\r\n            className={this.props.class}\r\n            rel={this.props.rel}\r\n            href={url.href} >{url.href} </a>\r\n        )\r\n      }\r\n\r\n    if (fixBrokenLinks === 'true' && parentText) {\r\n      newHref = this.fixBrokenLink(newHref, parentText);\r\n    }\r\n\r\n    return (\r\n      <a target={this.props.target}\r\n        className={this.props.class}\r\n        rel={this.props.rel}\r\n        href={newHref} >{children}</a>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  const {\r\n    showTooltipOnPostLink,\r\n    showYoutubeVideoTitle,\r\n    replaceCatalogMista,\r\n    fixBrokenLinks\r\n  } = state.options.items;\r\n\r\n  return {\r\n    showTooltipOnPostLink,\r\n    showYoutubeVideoTitle,\r\n    replaceCatalogMista,\r\n    fixBrokenLinks\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(CustomLink): any );","//@flow\r\nimport React from 'react'\r\nimport { domain } from 'src/api'\r\n\r\nimport type { ResponseVoteItem } from 'src/api'\r\n\r\ntype Props = {\r\n  topicId: string,\r\n  data: ResponseVoteItem,\r\n  colors: Array<string>,\r\n  total: number,\r\n  n: number\r\n}\r\n\r\nconst VoteItem = (props: Props) => {\r\n\r\n  const { topicId, data, total, n, colors } = props;\r\n\r\n  const img = `${domain}/css/voting${n}.png`;\r\n\r\n  let percent = 0;\r\n\r\n  if (total) {\r\n    percent = Math.round(100 * data.result / total);\r\n  }\r\n\r\n  const imgStyle = { maxWwidth: \"500px\", width: \"100%\", height: \"15px\" };\r\n\r\n  return (\r\n    <div className=\"voting-item\">\r\n      <div className=\"voting-title\">\r\n        <a rel=\"nofollow\" style={{ textDecoration: \"none\" }} href={`${window.hash}/topic.php?id=${topicId}&sel=${n}`}>\r\n          <b><span style={{ color: colors[n - 1] }}>{`${n}. ${data.select}`}</span></b>\r\n        </a>\r\n      </div>\r\n      <div className=\"voting-percentage\">\r\n        {/*<div className=\"div-va-middle\">*/}\r\n        <b><span style={{ color: colors[n - 1] }}>{`${percent}% (${data.result})`}</span></b>\r\n        {/*</div>*/}\r\n      </div>\r\n      <div className=\"voting-bar\">\r\n        <div style={{ width: `${percent}%` }}>\r\n          <a href={img}>\r\n            <img src={img} style={imgStyle} alt={`п${n}`} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default (VoteItem: any);","//@flow\r\nimport React from 'react'\r\nimport VoteItem from './vote_item'\r\nimport type { ResponseVoteItem } from 'src/api'\r\n\r\ntype Props = {\r\n  items: Array<ResponseVoteItem>,\r\n  topicId: string,\r\n  colors: Array<string>\r\n}\r\n\r\nconst VoteChart = (props: Props) => {\r\n\r\n  const { items, topicId, colors } = props;\r\n\r\n  let total = items.reduce((sum, e) => sum + e.result, 0);\r\n\r\n  return (\r\n    <div style={{ marginBottom: \"10px\" }}>\r\n      {items.filter(val => val.select).map((data, i) => <VoteItem key={i} data={data} total={total} n={i + 1} topicId={topicId} colors={colors} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default (VoteChart: any);","import React, { Component } from 'react'\r\n\r\nclass Vote extends Component {\r\n\r\n  render() {\r\n    const { colors, info, vote } = this.props;\r\n\r\n    const voteOption = info[vote - 1];\r\n    return (\r\n      <div style={{ marginTop: \"5px\" }}>\r\n        <b><span style={{ color: colors[vote - 1] }}>{`${vote}. ${voteOption.select}`}</span></b>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Vote;","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport activeHtml from 'react-active-html';\r\n\r\nimport Code from 'src/components/extensions/code1c'\r\nimport LinkToPost from 'src/components/extensions/link_to_post'\r\nimport CustomLink from 'src/components/extensions/custom_link'\r\n\r\nimport VoteChart from './vote_chart'\r\nimport Vote from './vote'\r\n\r\nimport type { ResponseInfo, ResponseMessage } from 'src/api'\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { State } from 'src/reducers'\r\n\r\ntype MsgTextProps = {\r\n  topicId: string,\r\n  n: string,\r\n  html: string,\r\n  vote: number,\r\n  data: ResponseMessage,\r\n  style: {}\r\n}\r\n\r\ntype StateProps = {\r\n  info: ResponseInfo,\r\n  showTooltips: string,\r\n  voteColors?: Array<string>\r\n}\r\n\r\ntype Props = MsgTextProps & StateProps & DefaultProps;\r\n\r\nclass MsgText extends Component<Props> {\r\n\r\n  processLinksToPosts(text: string): string {\r\n\r\n    const { topicId } = this.props;\r\n\r\n    const regexp = /(\\()(\\d+)(\\))/gi; // (12)\r\n    return text.replace(regexp, (res, ...segments) => {\r\n      const number = segments[1];\r\n      return `(<link data-topicid='${topicId}' data-number='${number}' ></link>)`\r\n    });\r\n  }\r\n\r\n  processCode1C(text: string): string {\r\n\r\n    const regexp = /(\\[1[CС]\\])((.|\\n|\\r)*?)(\\[\\/1[CС]\\])/gi; // [1C] text [/1C]\r\n    return text.replace(regexp, (res, ...segments) => {\r\n      let txt = segments[1];\r\n\r\n      //remove first <br>\r\n      if (txt.substr(0, 4) === \"<br>\")\r\n        txt = txt.substr(4);\r\n      return `<code>${txt}</code>`\r\n    });\r\n  }\r\n\r\n  processText(text: ?string): ?string {\r\n\r\n    if (!text)\r\n      return text;\r\n\r\n    const { showTooltips } = this.props;\r\n\r\n    text = this.processCode1C(text);\r\n\r\n    if (showTooltips === 'true')\r\n      text = this.processLinksToPosts(text);\r\n\r\n    return text;\r\n  }\r\n\r\n  render() {\r\n    const { topicId, n, html, vote, info, style, voteColors } = this.props;\r\n\r\n    let voteElement;\r\n    if (vote && info.voting && topicId === info.id) {\r\n      let voteOption = info.voting[vote - 1];\r\n      if (voteOption)\r\n        voteElement = <Vote info={info.voting} vote={vote} colors={voteColors} />\r\n    }\r\n\r\n    let voteChart;\r\n    if (n === \"0\" && info.is_voting === 1 && info.voting) {\r\n      voteChart = <VoteChart items={info.voting} topicId={topicId} colors={voteColors} />\r\n    }\r\n\r\n    let processedHtml = this.processText(html);\r\n    const componentsMap = {\r\n      link: props => <LinkToPost topicId={props['data-topicid']} number={props['data-number']} key={props.key} />,\r\n      code: props => <Code {...props} />,\r\n      a: props => <CustomLink {...props} parentText={processedHtml} />\r\n    };\r\n    let textComponent = activeHtml(processedHtml, componentsMap);\r\n\r\n    return (\r\n      <div className=\"message\" style={{ ...style }}>\r\n        {voteChart}\r\n        <div>\r\n          {textComponent}\r\n        </div>\r\n        {voteElement}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  const { info } = state.topic;\r\n\r\n  return {\r\n    info,\r\n    voteColors: state.options.voteColors,\r\n    showTooltips: state.options.items['showTooltips']\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(MsgText): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport dateFormat from 'dateformat'\r\n\r\nimport './topic_preview.css'\r\n\r\ntype TopicPreviewProps = {\r\n    user: ?string,\r\n    utime: ?number,\r\n    topicId: string,\r\n    n: number,\r\n    onFirst: any,   \r\n    onLast: any,   \r\n    onPrev: any,   \r\n    onNext: any\r\n}\r\n\r\nclass PreviewHeader extends Component<TopicPreviewProps> {\r\n\r\n    render() {\r\n        const { user, utime, topicId, n } = this.props;\r\n\r\n        if (utime)\r\n            var date = new Date(utime*1000);\r\n\r\n        return (\r\n            <div>\r\n                <span className=\"plus-nav\" onClick={this.props.onFirst}>[← </span>\r\n                <span className=\"plus-nav\" onClick={this.props.onPrev}> « </span>\r\n                <Link className=\"plus-nav\" title={`Перейти к сообщению ${n}`} to={`/topic.php?id=${topicId}#${n}`}>{n}</Link>\r\n                <span className=\"plus-nav\" onClick={this.props.onNext}> » </span>\r\n                <span className=\"plus-nav\" onClick={this.props.onLast}> →]</span>\r\n                <b style={{margin: \"auto 5px\"}}>{user}</b>\r\n                <span className=\"agh\">{dateFormat(date, 'dd.mm.yy - HH:MM')}</span>\r\n            </div>\r\n        )    \r\n    }\r\n\r\n}\r\n\r\nexport default ( PreviewHeader: any );","//@flow\r\nimport React, { Component } from 'react'\r\n\r\nimport * as API from 'src/api'\r\n\r\nimport MsgText from 'src/components/topic/row/msg_text'\r\n\r\nimport PreviewHeader from './preview_header'\r\nimport './topic_preview.css'\r\n\r\ntype TopicPreviewProps = {\r\n    topicId: string,\r\n    n: number   \r\n}\r\n\r\ntype Props = TopicPreviewProps;\r\ntype State = {\r\n    n: number,\r\n    data: ?any,\r\n    error: ?string    \r\n}\r\n\r\nclass TopicPreview extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            n: props.n,\r\n            data: null,\r\n            error: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.fetchData(this.state.n);\r\n    }\r\n\r\n    fetchData = async (n: number) => {\r\n        let data, error;\r\n        try {\r\n            data = await API.getMessage(this.props.topicId, n);\r\n            if (!data)\r\n                error = `Сообщение не найдено ${n}`;\r\n\r\n        } catch(e) {\r\n            error = e.message\r\n        };\r\n        this.setState({\r\n            n,\r\n            data,\r\n            error\r\n        })\r\n    }\r\n\r\n    onClickFirst = () => {\r\n        this.fetchData(0);\r\n    }\r\n    \r\n    onClickNext = () => {\r\n        this.fetchData(this.state.n + 1);\r\n    }\r\n\r\n    onClickPrev = () => {\r\n        if (this.state.n > 0)\r\n            this.fetchData(this.state.n - 1);\r\n    }\r\n\r\n    onClickLast = async () => {\r\n        const n = await API.getTopicMessagesCount(this.props.topicId);\r\n        this.fetchData(n);\r\n    }\r\n\r\n    render() {\r\n        const { topicId } = this.props;\r\n        const { data, error, n } = this.state;\r\n        if (!data && !error)\r\n            return null;\r\n\r\n        if (data)\r\n            var { user, utime } = data;\r\n\r\n        return (\r\n            <div className=\"topic-preview\">\r\n                <PreviewHeader \r\n                    user={user}\r\n                    utime={+utime}\r\n                    topicId={topicId}\r\n                    n={n}\r\n                    onFirst={this.onClickFirst}\r\n                    onLast={this.onClickLast}\r\n                    onNext={this.onClickNext}\r\n                    onPrev={this.onClickPrev}\r\n                />\r\n                {data && <MsgText \r\n                    data={data} \r\n                    html={data.text} \r\n                    topicId={topicId} \r\n                    style={{maxHeight: \"500px\", overflowY: \"auto\", overflowWrap: \"break-word\"}}\r\n                />}\r\n                {error && <p>{error}</p>}\r\n            </div>\r\n        )    \r\n    }\r\n\r\n}\r\n\r\nexport default ( TopicPreview: any );","import React, { Component, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { useLocation } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { DefaultProps, Location } from 'src/components'\r\n\r\nimport type { TopicsListState } from 'src/data/topicslist/reducer'\r\nimport type { SectionsState } from 'src/data/sections/reducer'\r\nimport type { LoginState } from 'src/data/login/reducer'\r\n\r\nimport { useAppDispatch } from 'src/data/store'\r\nimport { fetchTopicsListIfNeeded } from 'src/data/topicslist/actions'\r\n\r\nimport Header from './header'\r\nimport Row from './row'\r\nimport Pages from 'src/components/common/pages'\r\nimport NewTopic from './new_topic'\r\nimport Error from 'src/components/common/error'\r\n\r\nimport TopicPreview from 'src/components/preview/topic_preview'\r\n\r\nimport './topics_list.css'\r\n\r\ntype StateProps = {\r\n  topicsList: TopicsListState,\r\n  sections: SectionsState,\r\n  login: LoginState,\r\n  topicsPerPage: string,\r\n  autoRefreshTopicsList: string,\r\n  autoRefreshTopicsListInterval: string\r\n}\r\n\r\ntype Props = {\r\n  fetchTopicsListIfNeeded: any\r\n} & DefaultProps & StateProps;\r\n\r\nconst TopicsList = (props) => {\r\n\r\n  const dispatch = useAppDispatch()\r\n  const location = useLocation();\r\n  const locationParams = queryString.parse(location.search);\r\n\r\n  const updateTopicsList = () => {\r\n    dispatch(fetchTopicsListIfNeeded(locationParams));\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = 'React.Mista';\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateTopicsList();\r\n  }, [location.search]);\r\n\r\n  const { topicsList, sections } = props;\r\n\r\n  let rows = [];\r\n  for (let item of topicsList.items) {\r\n\r\n    rows.push(<Row key={item.id} data={item} />);\r\n    if (item.showPreview)\r\n      rows.push(\r\n        <div key={`preview${String(item.id)}`} className=\"preview-container\">\r\n          <TopicPreview topicId={String(item.id)} n={0} />\r\n        </div>\r\n      )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {topicsList.error && (<Error text={topicsList.error} />)}\r\n      <div className=\"table\">\r\n        <div className=\"th\" style={{ position: \"sticky\", top: \"39px\" }}>\r\n          <div style={{ letterSpacing: \"-1px\" }}>Раздел</div>\r\n          <div>Re</div>\r\n          <div></div>\r\n          <div>Тема</div>\r\n          <div>Автор</div>\r\n          <div><span style={{ cursor: \"pointer\" }} title=\"Обновить список\" onClick={updateTopicsList}>{topicsList.isFetching ? \"Обновляется\" : \"Обновлено\"}</span></div>\r\n        </div>\r\n        {rows}\r\n        <div className=\"tf\">\r\n          <Pages baseUrl='index.php' locationParams={locationParams} maxPage={10} />\r\n        </div>\r\n      </div>\r\n      <div id=\"F\" className=\"newtopic\" style={{ marginBottom: \"10px\", marginTop: \"5px\", position: 'relative' }}>\r\n        <NewTopic \r\n          sections={sections.items} \r\n          locationParams={locationParams} \r\n          onSubmitSuccess={updateTopicsList}\r\n          />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    topicsList: state.topicsList,\r\n    sections: state.sections,\r\n    login: state.login,\r\n    topicsPerPage: state.options.items.topicsPerPage,\r\n    autoRefreshTopicsList: state.options.items.autoRefreshTopicsList,\r\n    autoRefreshTopicsListInterval: state.options.items.autoRefreshTopicsListInterval,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchTopicsListIfNeeded: (...params) => dispatch(fetchTopicsListIfNeeded(...params)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicsList);","// @flow\r\nimport * as React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Login from '../login'\r\n\r\ntype Props = {\r\n  info: { forum: string }\r\n}\r\n\r\nclass Header extends React.Component<Props> {\r\n\r\n  render() {\r\n\r\n    const { info } = this.props;\r\n\r\n    const forums = {\r\n      '1c': '1С:Предприятие',\r\n      'life': 'О жизни',\r\n      'it': 'Информационные технологии',\r\n      'job': 'Работа'\r\n    };\r\n\r\n    return (\r\n\r\n      <div className=\"flex-row\">\r\n        <div className=\"user-td\">\r\n          <Login />\r\n        </div>\r\n        <div className=\"section-td\">\r\n          <span id=\"forum_string\" className=\"bold120\">\r\n            <a rel=\"nofollow\" href={`${window.hash}/index.php?forum=${info.forum}`} style={{ textDecoration: \"none\" }}>{forums[info.forum]}</a>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n  const {\r\n    info\r\n  } = state.topic || {\r\n    info: {\r\n      forum: ''\r\n    }\r\n  }\r\n\r\n  return {\r\n    info\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(Header): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { defaultTopicState } from 'src/data/topic/reducer'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { ResponseInfo } from 'src/api'\r\nimport { domain, urlTopicInfo, urlTopicMessages } from 'src/api'\r\n\r\ntype StateProps = {\r\n  info: ResponseInfo\r\n}\r\n\r\nclass TopicInfo extends Component<StateProps> {\r\n\r\n  render() {\r\n\r\n    const { info } = this.props;\r\n\r\n    let yandexUrl = \"https://www.yandex.ru/yandsearch?rpt=rad&text=\" + encodeURIComponent(info.text);\r\n\r\n    return (\r\n      <div className=\"topic-row\">\r\n        <div className=\"cell-userinfo\">\r\n          <div className=\"topic-tools\">\r\n            <a title=\"API.info\" href={`${domain}/${urlTopicInfo}?id=${info.id}`} className=\"agh\" style={{ display: \"block\", lineHeight: \"1em\" }}>i</a>\r\n            <a title=\"API.messages\" href={`${domain}/${urlTopicMessages}?id=${info.id}&from=0&to=20`} className=\"agh\" style={{ display: \"block\", lineHeight: \"1em\" }}>m</a>\r\n            {/*<a href=\"add_voting.php?topic_id=815217\" title=\"Добавить голосование\">vote</a> &nbsp;&nbsp;*/}\r\n          </div>\r\n        </div>\r\n        <div className=\"cell-message\">\r\n          <div className=\"flex-row\">\r\n            <div style={{ flex: 1, textAlign: \"center\" }}>\r\n              <a href={`${domain}/topic.php?id=${info.id}`}>\r\n                <h1 className=\"topic-title\" dangerouslySetInnerHTML={{ __html: info.text }}></h1>\r\n              </a>\r\n              <div className=\"moder-action\"></div>\r\n            </div>\r\n            <div style={{ flex: \"0 0 20px\", position: \"relative\" }}>\r\n              <div className=\"div-va-middle\">\r\n                <a rel=\"noopener noreferrer\" href={yandexUrl} title=\"Искать в Яндексе\" target=\"_blank\" className=\"yandex\">Я</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  const {\r\n    info\r\n  } = state.topic || defaultTopicState;\r\n\r\n  return {\r\n    info\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(TopicInfo): any );","//@flow\r\nimport * as API from '../api'\r\nimport type { RequestNewMessage } from 'src/api'\r\n\r\nexport type POST_NEW_MESSAGE_START = {\r\n  type: 'POST_NEW_MESSAGE_START'\r\n}\r\n\r\nexport type POST_NEW_MESSAGE_COMPLETE = {\r\n  type: 'POST_NEW_MESSAGE_COMPLETE'\r\n}\r\n\r\nexport type NEW_MESSAGE_TEXT = {\r\n  type: 'NEW_MESSAGE_TEXT',\r\n  text: string\r\n}\r\n\r\nexport type ADD_MESSAGE_TEXT = {\r\n  type: 'ADD_MESSAGE_TEXT',\r\n  text: string\r\n}\r\n\r\n\r\nexport type NewMessageAction = POST_NEW_MESSAGE_START | POST_NEW_MESSAGE_COMPLETE | NEW_MESSAGE_TEXT | ADD_MESSAGE_TEXT;\r\n\r\nexport type PostNewmessageParams = {\r\n  text: string,\r\n  topicId: string,\r\n  voting_select?: number,\r\n  onSuccess?: () => void\r\n}\r\n\r\nexport const postNewMessage = (params: PostNewmessageParams): any => async (dispatch: any) => {\r\n\r\n  dispatch({\r\n    type: 'POST_NEW_MESSAGE_START'\r\n  });\r\n\r\n  let fetchParams: RequestNewMessage = {\r\n    message_text: encodeURIComponent(params.text),\r\n    action: \"new\",\r\n    topic_id: params.topicId,\r\n    rnd: Math.round(Math.random() * 10000000000)\r\n  };\r\n\r\n  if (params.voting_select)\r\n    fetchParams.voting_select = params.voting_select;\r\n\r\n  try {\r\n    await API.postNewMessage(fetchParams);\r\n    await dispatch({\r\n      type: 'POST_NEW_MESSAGE_COMPLETE'\r\n    });\r\n    if (params.onSuccess)\r\n      params.onSuccess();\r\n\r\n  } catch (err) {\r\n    console.error(\"Failed to post new message: \" + err);\r\n  }\r\n}\r\n\r\nexport const addMessageText = (text: string): any => (dispatch: any) => {\r\n  dispatch({\r\n    type: 'ADD_MESSAGE_TEXT',\r\n    text\r\n  })\r\n}","//@flow\r\nimport React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport dateFormat from 'dateformat'\r\nimport classNames from 'classnames'\r\nimport { domain } from 'src/api'\r\n\r\nimport { addMessageText } from 'src/actions/new_message'\r\n\r\nimport type { ResponseMessage } from 'src/api'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype UserInfoProps = {\r\n  data: ResponseMessage,\r\n  isAuthor: boolean,\r\n  isYou?: boolean,\r\n  isTooltip?: boolean\r\n}\r\n\r\ntype Props = UserInfoProps & DefaultProps;\r\n\r\nclass UserInfo extends Component<Props> {\r\n\r\n  onClick = () => {\r\n    const { dispatch, data } = this.props;\r\n    dispatch(addMessageText(`(${data.n})`));\r\n\r\n    let elem = document.getElementById('message_text');\r\n    if (elem)\r\n      window.scrollTo(0, elem.offsetTop);\r\n  }\r\n\r\n  onImageLoad = (event) => {\r\n    event.target.style.display = 'inline';\r\n  }\r\n\r\n  render() {\r\n    const { data, isAuthor, isYou, isTooltip } = this.props;\r\n    const href = `${domain}/users.php?id=${data.userId}`;\r\n    let dataStr;\r\n    if (!data) {\r\n      dataStr = '';\r\n    } else if (data.n === \"0\") {\r\n      dataStr = dateFormat(new Date(+data.utime * 1000), 'dd.mm.yy - HH:MM');\r\n    } else {\r\n      dataStr = (\r\n        <Fragment>\r\n          <span className=\"message-number\">{data.n}</span>{' - ' + dateFormat(new Date(+data.utime * 1000), 'dd.mm.yy - HH:MM')}\r\n        </Fragment>\r\n      )\r\n    }\r\n\r\n    const userClassNames = classNames(\"registered-user\", {\r\n      \"is-author\": isAuthor,\r\n      \"is-you\": isYou\r\n    });\r\n\r\n    let imgElem;\r\n    if (window.innerWidth > 768)\r\n    imgElem = <img src={`${domain}/css/user_icons/${data.userId}_16x16.png`} \r\n              onLoad={this.onImageLoad} \r\n              style={{display:\"none\", marginBottom:\"4px\", marginRight:\"1px\"}}/>\r\n\r\n    let timeElem;  \r\n    if (isTooltip) {\r\n      timeElem = <div className=\"ah\" style={{display:\"inline-block\", marginLeft:\"5px\"}}>{dataStr}</div>;\r\n    } else {\r\n      timeElem =\r\n        <div className=\"message-time\">\r\n          <span className=\"ah\" >{dataStr}</span>\r\n          <button className=\"button ah\" onClick={this.onClick}>{dataStr}</button>\r\n        </div>\r\n    }  \r\n\r\n    return (\r\n      <div className=\"user-info\">\r\n        {imgElem}\r\n        <a className={userClassNames} href={href}>{data.user}</a>\r\n        {timeElem}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default (connect()(UserInfo): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport UserInfo from './user_info'\r\nimport MsgText from './msg_text'\r\n\r\nimport type { ResponseMessage } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\nimport type { LoginState } from 'src/data/login/reducer'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype RowProps = {\r\n    data: ResponseMessage\r\n}\r\n\r\ntype StateProps = {\r\n    topicId: string,\r\n    author: string,\r\n    login: LoginState\r\n}\r\n\r\ntype Props = RowProps & StateProps & DefaultProps;\r\n\r\nclass Row extends Component<Props> {\r\n\r\n    render() {\r\n        const { data, author, topicId, login } = this.props;\r\n\r\n        if (!data)\r\n            return null;\r\n\r\n        return (\r\n            <div className=\"topic-row\" id={data.n}>\r\n                <div className=\"cell-userinfo\">\r\n                    <UserInfo data={data} isAuthor={data.user === author} isYou={data.user === login.username}/>\r\n                </div>\r\n                <div className=\"cell-message\">\r\n                    <MsgText data={data} html={data.text} topicId={topicId} n={data.n} vote={+data.vote}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n    const {\r\n        info,\r\n        item0,\r\n    } = state.topic || {\r\n        info: {},\r\n        item0: {},\r\n    }\r\n\r\n    return {\r\n        topicId: info.id,\r\n        author: item0 ? item0.user : '',\r\n        login: state.login\r\n    }\r\n}\r\n\r\nexport default ( connect(mapStateToProps)(Row): any );","//@flow\r\nimport * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport { fetchNewMessagesIfNeeded } from 'src/data/topic/actions'\r\nimport { getMaxPage } from 'src/utils'\r\n\r\ntype FooterProps = {\r\n  info: any,\r\n  dispatch: any,\r\n  bookmark: any,\r\n  isFetching: boolean,\r\n  params: any\r\n}\r\n\r\nclass Footer extends React.Component<FooterProps> {\r\n\r\n  onBookmarkClick = () => {\r\n    const { info, dispatch } = this.props;\r\n    //dispatch(addBookmark(info));\r\n  }\r\n\r\n  onRefreshClick = () => {\r\n\r\n    const { info, dispatch } = this.props;\r\n\r\n    dispatch(fetchNewMessagesIfNeeded({\r\n      id: info.id,\r\n      last: parseInt(info.answers_count, 10)\r\n    }));\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { info, bookmark, isFetching, params } = this.props;\r\n    const maxPage = getMaxPage(info.answers_count);\r\n\r\n    let updateButton;\r\n    let page = params.page || 1;\r\n    if (page === 'last20' || page === maxPage)\r\n      updateButton =\r\n        <Button\r\n          onClick={this.onRefreshClick}\r\n          disabled={bookmark.isFetching}\r\n          size=\"sm\"\r\n          className='button'\r\n          variant=\"light\">\r\n          {isFetching ? 'Обновляется' : 'Обновить ветку'}\r\n        </Button>\r\n\r\n    return (\r\n      <div className=\"flex-row\" id=\"F\">\r\n        <div className=\"ta-left va-top\" style={{ width: \"50%\" }}>\r\n          <Button\r\n            onClick={this.onBookmarkClick}\r\n            disabled={bookmark.isFetching}\r\n            size=\"sm\"\r\n            className='button'\r\n            variant=\"light\">\r\n            {bookmark.isFetching ? 'Подождите...' : 'Закладка'}\r\n          </Button>\r\n        </div>\r\n        <div className=\"ta-right va-middle\" style={{ marginLeft: \"auto\" }}>\r\n          {updateButton}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n  const {\r\n    isFetching,\r\n    lastUpdated,\r\n    info,\r\n  } = state.topic || {\r\n    isFetching: true,\r\n    info: {},\r\n  }\r\n\r\n  return {\r\n    info,\r\n    isFetching,\r\n    lastUpdated,\r\n    bookmark: state.bookmark || {}\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(Footer): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FormGroup, Form } from 'react-bootstrap'\r\n\r\nimport TextEditor from 'src/components/common/text_editor'\r\nimport { postNewMessage } from 'src/actions/new_message'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { NewMessageState } from 'src/reducers/new_message'\r\n\r\nimport type { ResponseInfo } from 'src/api'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype NewMessageProps = {\r\n  onSubmitSuccess?: () => void\r\n}\r\n\r\ntype StateProps = {\r\n  info: ResponseInfo,\r\n  newMessage: NewMessageState\r\n}\r\n\r\ntype Props = NewMessageProps & StateProps & DefaultProps;\r\ntype ComponentState = {\r\n  voting?: number\r\n}\r\n\r\nclass NewMessage extends Component<Props, ComponentState> {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { voting: undefined };\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    const { dispatch, info, newMessage } = this.props;\r\n\r\n    let params = {\r\n      text: newMessage.text,\r\n      topicId: info.id,\r\n      onSuccess: this.onSubmitSuccess,\r\n      voting_select: undefined\r\n    };\r\n\r\n    if (this.state.voting) {\r\n      params.voting_select = this.state.voting;\r\n    }\r\n\r\n    dispatch(postNewMessage(params));\r\n  }\r\n\r\n  onSubmitSuccess = () => {\r\n\r\n    const { dispatch } = this.props;\r\n\r\n    dispatch({\r\n      type: 'NEW_MESSAGE_TEXT',\r\n      text: ''\r\n    });\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      voting: undefined\r\n    });\r\n\r\n    if (this.props.onSubmitSuccess) {\r\n      this.props.onSubmitSuccess();\r\n    }\r\n  }\r\n\r\n  clearVoting = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      voting: undefined\r\n    })\r\n\r\n  }\r\n\r\n  setVotingOption = (i) => {\r\n    this.setState({\r\n      ...this.state,\r\n      voting: i\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { info, newMessage } = this.props;\r\n\r\n    let votingElem;\r\n    if (info.is_voting && info.voting) {\r\n\r\n      let votingOptions = [];\r\n      for (let i = 1; i <= info.voting.length; i++) {\r\n\r\n        const item = info.voting[i - 1];\r\n        if (!item.select)\r\n          continue;\r\n\r\n        votingOptions.push(\r\n          <Form.Check\r\n            type=\"radio\"\r\n            key={i}\r\n            name=\"voting\"\r\n            checked={this.state.voting === i}\r\n            onChange={() => this.setVotingOption(i)}\r\n            label={`${i}. ${item.select}`}\r\n          />\r\n        );\r\n      }\r\n\r\n\r\n      votingElem = (\r\n        <FormGroup>\r\n          <legend>\r\n            <small>Ваш выбор:\r\n              <span href=\"\" id=\"voting_clear\" style={{ marginLeft: \"5px\", cursor: \"pointer\" }} onClick={this.clearVoting}>очистить</span>\r\n            </small>\r\n          </legend>\r\n          {votingOptions}\r\n          Обоснуйте свой выбор!\r\n        </FormGroup>\r\n      );\r\n\r\n    }\r\n\r\n    return (\r\n      <form style={{ marginTop: \"5px\" }} onSubmit={this.onSubmit}>\r\n        <div className=\"bold\">Добавить сообщение в тему:</div>\r\n        <div className=\"new-message-container\">\r\n          <div className=\"new-message-text\">\r\n            <TextEditor\r\n              isFetching={newMessage.isFetching}\r\n              text={newMessage.text}\r\n              placeholder=\"Сообщение\"\r\n              formName=\"NEW_MESSAGE\"\r\n            />\r\n          </div>\r\n          <div className=\"new-message-voting\">\r\n            {votingElem}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    info: state.topic.info,\r\n    newMessage: state.newMessage\r\n  };\r\n\r\n}\r\n\r\nexport default (connect(mapStateToProps)(NewMessage): any );","//@flow\r\nimport React, { Component, useEffect } from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport queryString from 'query-string'\r\nimport { fetchTopicIfNeeded, fetchNewMessagesIfNeeded, clearTopicMessages } from 'src/data/topic/actions'\r\n\r\nimport type { DefaultProps, Location } from 'src/components'\r\nimport type { ResponseInfo, ResponseMessage, ResponseMessages } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\nimport type { LoginState } from 'src/data/login/reducer'\r\nimport type { OptionsItems } from 'src/data/options/reducer'\r\n\r\nimport Error from 'src/components/common/error'\r\nimport Pages from 'src/components/common/pages'\r\nimport Header from './header'\r\nimport TopicInfo from './topic_info'\r\nimport Row from './row'\r\nimport Footer from './footer'\r\nimport NewMessage from './new_message';\r\nimport { getMaxPage } from 'src/utils';\r\n\r\nimport './topic.css'\r\n\r\ntype TopicLocationParams = {\r\n  id: string,\r\n  page?: string,\r\n  hash?: string\r\n}\r\n\r\ntype StateProps = {\r\n  login: LoginState,\r\n  info: ResponseInfo,\r\n  item0?: ?ResponseMessage,\r\n  items: ResponseMessages,\r\n  error?: any,\r\n  options: OptionsItems\r\n}\r\n\r\ntype Props = {\r\n  fetchTopicIfNeeded: any,\r\n  fetchNewMessagesIfNeeded: any,\r\n  closeTopic: any,\r\n  clearText: any\r\n} & DefaultProps & StateProps\r\n\r\nconst Topic = (props) => {\r\n  \r\n  const dispatch = useDispatch()\r\n  const location = useLocation();\r\n\r\n  let locationParams = queryString.parse(location.search);\r\n  if (!locationParams.page)\r\n    locationParams.page = 1;\r\n\r\n  const updateTopic = () => {\r\n\r\n    let { fetchTopicIfNeeded, item0 } = props;\r\n\r\n    if (locationParams.page !== 'last20') {\r\n      locationParams.page = +locationParams.page;\r\n      if (isNaN(locationParams.page))\r\n        locationParams.page = 1;\r\n    }\r\n\r\n    if (locationParams.id !== locationParams.id)\r\n      item0 = null;\r\n\r\n    fetchTopicIfNeeded(locationParams, null);\r\n  }\r\n\r\n  const onPostNewMessageSuccess = () => {\r\n\r\n    const { fetchNewMessagesIfNeeded, info } = props;\r\n\r\n    const isLastPage = (locationParams.page === 'last20' || locationParams.page === getMaxPage(+info.answers_count));\r\n\r\n    if (isLastPage)\r\n      fetchNewMessagesIfNeeded({\r\n        id: info.id,\r\n        last: parseInt(info.answers_count, 10)\r\n      });\r\n\r\n  }\r\n  \r\n  const { login, items, item0, info, error } = props;\r\n  const maxPage = getMaxPage(+info.answers_count);\r\n\r\n  useEffect(() => {\r\n    updateTopic();\r\n  }, [dispatch, location.search]);\r\n  \r\n  useEffect(() => {\r\n    const clearStore = () => {\r\n      dispatch(clearTopicMessages());\r\n    }\r\n    return clearStore;\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div style={{ marginBottom: \"5px\" }}>\r\n      {error && <Error text={error.message} />}\r\n      <Header currentPage={locationParams.page} />\r\n      <div className=\"topic-table\">\r\n        <TopicInfo />\r\n        <Row key='0' data={item0} />\r\n        {items.map((item, i) => (\r\n          <Row key={item.n} data={item} />\r\n        ))}\r\n        {(maxPage > 1 || locationParams.page === \"last20\") &&\r\n          <div className=\"tf\">\r\n            <Pages baseUrl='topic.php' locationParams={locationParams} maxPage={maxPage} last20 />\r\n          </div>\r\n        }\r\n      </div>\r\n      <Footer params={locationParams} />\r\n      {login.logged &&\r\n        <NewMessage onSubmitSuccess={onPostNewMessageSuccess} />\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nclass Topic1 extends Component<Props> {\r\n\r\n  locationParams: TopicLocationParams;\r\n  location: Location;\r\n  timer: any;\r\n  scrolledToHash: boolean;\r\n  nodeF: any;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.locationParams = { id: '' };\r\n    this.scrolledToHash = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.location = this.props.location;\r\n    this.updateTopic();\r\n\r\n    if (this.props.options.autoRefreshTopic === 'true') {\r\n\r\n      let autoRefreshTopicInterval = +this.props.options.autoRefreshTopicInterval;\r\n      if (autoRefreshTopicInterval < 60) autoRefreshTopicInterval = 60;\r\n\r\n      this.timer = setInterval(this.autoUpdate, autoRefreshTopicInterval * 1000);\r\n    }\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    \r\n    const { location, items, info } = this.props;\r\n    if (!this.scrolledToHash &&\r\n      location.hash &&\r\n      items.length > 0) {\r\n\r\n      this.scrolledToHash = true;\r\n      let nodeHash = document.getElementById(location.hash.slice(1));\r\n      if (nodeHash)\r\n        setTimeout(() => window.scrollTo(0, nodeHash.offsetTop), 1);\r\n    }\r\n\r\n    let title = info.text;\r\n    if (title && document.title !== title) {\r\n      \r\n      const parser = new DOMParser();\r\n      const floatingElement = parser.parseFromString(title, 'text/html');\r\n      title = floatingElement.firstChild.innerText;\r\n\r\n      document.title = title;\r\n    }\r\n    \r\n    if (this.location.search !== location.search) {\r\n      this.location = location;\r\n      this.updateTopic();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n    const { closeTopic, clearText } = this.props;\r\n\r\n    clearInterval(this.timer);\r\n    closeTopic();\r\n    clearText();\r\n  }\r\n\r\n  autoUpdate = () => {\r\n    const { info, fetchNewMessagesIfNeeded } = this.props;\r\n    const isLastPage = (this.locationParams.page === 'last20' || this.locationParams.page === getMaxPage(+info.answers_count));\r\n\r\n    if (isLastPage)\r\n      fetchNewMessagesIfNeeded({\r\n        id: info.id,\r\n        last: parseInt(info.answers_count, 10)\r\n      })\r\n  }\r\n\r\n  updateTopic = () => {\r\n\r\n    let { fetchTopicIfNeeded, item0 } = this.props;\r\n    let locationParams = queryString.parse(this.location.search);\r\n\r\n    if (!locationParams.page)\r\n      locationParams.page = 1;\r\n\r\n    else if (locationParams.page !== 'last20') {\r\n      locationParams.page = +locationParams.page;\r\n      if (isNaN(locationParams.page))\r\n        locationParams.page = 1;\r\n    }\r\n\r\n    if (locationParams.id !== this.locationParams.id)\r\n      item0 = null;\r\n\r\n    this.locationParams = locationParams;\r\n    fetchTopicIfNeeded(this.locationParams, item0);\r\n  }\r\n\r\n  onPostNewMessageSuccess = () => {\r\n\r\n    const { fetchNewMessagesIfNeeded, info } = this.props;\r\n\r\n    const isLastPage = (this.locationParams.page === 'last20' || this.locationParams.page === getMaxPage(+info.answers_count));\r\n\r\n    if (isLastPage)\r\n      fetchNewMessagesIfNeeded({\r\n        id: info.id,\r\n        last: parseInt(info.answers_count, 10)\r\n      });\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { login, items, item0, info, error } = this.props;\r\n    const maxPage = getMaxPage(+info.answers_count);\r\n\r\n    return (\r\n      <div style={{ marginBottom: \"5px\" }}>\r\n        {error && <Error text={error.message} />}\r\n        <Header currentPage={this.locationParams.page} />\r\n        <div className=\"topic-table\">\r\n          <TopicInfo />\r\n          <Row key='0' data={item0} />\r\n          {items.map((item, i) => (\r\n            <Row key={item.n} data={item} />\r\n          ))}\r\n          {(maxPage > 1 || this.locationParams.page === \"last20\") &&\r\n            <div className=\"tf\">\r\n              <Pages baseUrl='topic.php' locationParams={this.locationParams} maxPage={maxPage} last20 />\r\n            </div>\r\n          }\r\n        </div>\r\n        <Footer params={this.locationParams} />\r\n        {login.logged &&\r\n          <NewMessage onSubmitSuccess={this.onPostNewMessageSuccess} />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  const {\r\n    isFetching,\r\n    lastUpdated,\r\n    info,\r\n    item0,\r\n    items,\r\n    error\r\n  } = state.topic;\r\n\r\n  return {\r\n    login: state.login,\r\n    info,\r\n    item0,\r\n    items,\r\n    isFetching,\r\n    lastUpdated,\r\n    error,\r\n    options: state.options.items\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchTopicIfNeeded: (...params) => dispatch(fetchTopicIfNeeded(...params)),\r\n  fetchNewMessagesIfNeeded: (...params) => dispatch(fetchNewMessagesIfNeeded(...params)),\r\n  closeTopic: (...params) => dispatch(closeTopic(...params)),\r\n  clearText: () => dispatch({ type: 'NEW_MESSAGE_TEXT', text: '' })\r\n})\r\n\r\nexport default (connect(mapStateToProps, mapDispatchToProps)(Topic): any );","//@flow\r\nimport React, { Component } from 'react'\r\n\r\ntype RadioOptionProps = {\r\n  name: string,\r\n  label: string,\r\n  value: string,\r\n  values: Array<{ name: string, descr: string }>,\r\n  onChange: any,\r\n  oneLine: boolean\r\n}\r\n\r\nclass RadioOption extends Component<RadioOptionProps> {\r\n\r\n  onChange = (e: any) => {\r\n    const { name } = this.props;\r\n    this.props.onChange(e, name, e.target.value);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { name, label, values, oneLine } = this.props;\r\n\r\n    let valuesElem = [];\r\n    for (let i = 0; i < values.length; i++) {\r\n      let item = values[i];\r\n      valuesElem.push(\r\n        <label key={i} htmlFor={item.name} style={{ marginRight: \"5px\" }}>\r\n          <input type=\"radio\" name={name} value={item.name} checked={item.name === this.props.value} onChange={this.onChange} />\r\n          {item.descr}\r\n        </label>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <span>\r\n        <span style={{ marginRight: \"5px\" }}>{label}</span>\r\n        {oneLine ? null : <br />}\r\n        {valuesElem}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (RadioOption: any);","//@flow\r\nimport React, { Component } from 'react'\r\n\r\ntype StringOptionProps = {\r\n  name: string,\r\n  label: string,\r\n  value: string,\r\n  onChange: any,\r\n  postfix: ?string\r\n}\r\n\r\nclass StringOption extends Component<StringOptionProps> {\r\n\r\n  onChange = (e: any) => {\r\n    const { name } = this.props;\r\n    this.props.onChange(e, name, e.target.value);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { name, value, label, postfix } = this.props;\r\n\r\n    return (\r\n      <label htmlFor={name} style={{ marginRight: \"5px\" }}>\r\n        <span style={{ marginRight: \"5px\" }}>{label}</span>\r\n        <input type=\"string\" name={name} value={value} onChange={this.onChange} className='input' />\r\n        {postfix !== undefined ?\r\n          <span style={{ marginLeft: \"5px\" }}>{postfix}</span>\r\n          : null}\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (StringOption: any);","//@flow\r\nimport { HashRouter, Routes, Route } from 'react-router-dom'\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport TopicsList from './topics_list'\r\nimport Topic from './topic'\r\nimport Options from './options'\r\nimport { clearTooltipsIfNeeded } from 'src/data/tooltips/actions'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\n\r\nclass Container extends Component<DefaultProps> {\r\n\r\n  onClick = (e: SyntheticEvent<HTMLElement>) => {\r\n    const { dispatch } = this.props;\r\n    dispatch(clearTooltipsIfNeeded());\r\n  }\r\n\r\n  render() {\r\n\r\n    const routes =\r\n      <Routes>\r\n        <Route path='/' element={<TopicsList />} />\r\n        <Route path='/index.php' element={<TopicsList />} />\r\n        <Route path='/topic.php' element={<Topic />} />\r\n        <Route path='/options.php' element={<Options />} />   \r\n      </Routes>\r\n\r\n    if (window.hash)\r\n\r\n      return (\r\n        <div onClick={this.onClick} style={{ flex: \"auto\" }}>\r\n          <div className=\"container\" >\r\n              {routes}\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n    else\r\n      return (\r\n        <div onClick={this.onClick} style={{ flex: \"auto\" }}>\r\n          <div className=\"container\">\r\n            {routes}\r\n          </div>\r\n        </div>\r\n      )\r\n  }\r\n\r\n}\r\n\r\nexport default ( connect()(Container): any );","import React from 'react'\r\nimport { domain } from 'src/api'\r\n\r\nconst NavBarFooter = (props) => {\r\n\r\n    return (\r\n        <footer className=\"flex-row navbar-footer\">\r\n            <a href={`${domain}/rules.php`}>Правила</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/about.php`}>Описание</a>\r\n            <span className=\"separator\">|</span>\r\n            <b><a href={`${domain}/ad.php`}>Реклама на сайте</a>  </b>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/find.php`}>Поиск</a>\r\n            <span className=\"separator\">|</span>\r\n            <a rel=\"nofollow\" href={`${domain}/sections_list.php`}>Секции</a>\r\n            <span className=\"separator\">|</span>\r\n            <a rel=\"nofollow\" href={`${domain}/rating.php`}>Рейтинг</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href=\"http://kb.mista.ru\">Книга знаний</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href=\"http://wiki.mista.ru\">Вики-миста (КЗ2)</a>\r\n            <span className=\"separator\">|</span>\r\n            <a rel=\"nofollow\" href=\"http://m.mista.ru/\">Мобильная</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/archive.php`}>Архив</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/moders.php`}>Модераторы</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/users_gallery.php`}>Галерея</a>\r\n            <span className=\"separator\">|</span>\r\n            <span>18+</span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default NavBarFooter;","import React from 'react'\r\n\r\nconst TooltipHeader = ({children, closeWindow}) => {\r\n    return (\r\n        <div className=\"tooltip-header\">\r\n            {children}\r\n            <div className=\"tooltip-close\" onClick={closeWindow} onTouchEnd={closeWindow}>\r\n                <span className=\"tooltip-close-x\">x</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TooltipHeader;","import React from 'react'\r\n\r\nconst TooltipBody = ({children, onScroll}) => {\r\n    \r\n    var startX = 0;\r\n\r\n    function onTouchStart(e) {\r\n        startX = e.nativeEvent.changedTouches[0].clientX;\r\n    }\r\n    \r\n    function onTouchEnd(e) {\r\n        let endX = e.nativeEvent.changedTouches[0].clientX;\r\n        if (Math.abs(endX - startX) > 100)\r\n            onScroll(-endX + startX);\r\n    }\r\n\r\n    return (\r\n        <div className=\"tooltip-text\" onTouchStart={onTouchStart} onTouchEnd={onTouchEnd}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TooltipBody;","//@flow\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nimport TooltipHeader from './tooltip_header'\r\nimport TooltipBody from './tooltip_body'\r\n\r\nimport './tooltip.css'\r\n\r\nimport { closeTooltip } from 'src/data/tooltips/actions'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { TooltipItemState } from 'src/data/tooltips/reducer'\r\n\r\ntype TooltipProps = {\r\n  tooltip: TooltipItemState,\r\n  onScroll: (delta: any) => void\r\n}\r\n\r\ntype Props = TooltipProps & DefaultProps;\r\n\r\nclass TooltipWindow extends Component<Props> {\r\n\r\n  onCloseClick = () => {\r\n    const { dispatch, tooltip } = this.props;\r\n    dispatch(closeTooltip(tooltip.keys));\r\n  }\r\n\r\n  onWheel = (e) => {\r\n    e.preventDefault();\r\n    this.props.onScroll(-e.nativeEvent.deltaY);\r\n  }\r\n\r\n  render() {\r\n    const { coords, i } = this.props.tooltip;\r\n\r\n    let axis;\r\n    let position;\r\n    if (window.innerWidth <= 768) {\r\n      axis = \"y\";\r\n      position = { top: coords.y, left: 5 };\r\n    } else {\r\n      axis = \"both\";\r\n      position = { top: coords.y, left: Math.min(coords.x, window.innerWidth - 670) }\r\n    }\r\n\r\n    let [header, body] = React.Children.toArray(this.props.children);\r\n\r\n    return (\r\n      <Draggable\r\n        axis={axis}\r\n        handle=\".tooltip-header\"\r\n        defaultClassNameDragging=\"dragging\"\r\n        key={i}>\r\n\r\n        <div className=\"tooltip-window\" style={{ ...position }} onWheelCapture={this.onWheel}>\r\n          <TooltipHeader closeWindow={this.onCloseClick}>\r\n            {header.props.children}\r\n          </TooltipHeader>\r\n          <TooltipBody onScroll={this.props.onScroll}>\r\n            {body.props.children}\r\n          </TooltipBody>\r\n        </div>\r\n      </Draggable>\r\n    )\r\n  }\r\n}\r\n\r\nexport default (connect()(TooltipWindow): any );","//@flow\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as API from 'src/api'\r\n\r\nimport MsgText from '../topic/row/msg_text'\r\nimport UserInfo from '../topic/row/user_info';\r\n\r\nimport TooltipWindow from './tooltip_window'\r\nimport TooltipHeader from './tooltip_header'\r\nimport TooltipBody from './tooltip_body'\r\nimport './tooltip.css'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { TooltipItemState } from 'src/data/tooltips/reducer'\r\nimport type { TooltipKeys } from 'src/data/tooltips/actions'\r\n\r\ntype TooltipProps = {\r\n  tooltip: TooltipItemState,\r\n  info: any,\r\n  items: any,\r\n  item0: any\r\n}\r\n\r\ntype Props = TooltipProps & DefaultProps;\r\ntype State = {\r\n  data: any,\r\n  text: string,\r\n  number: number\r\n}\r\n\r\nclass Tooltip extends Component<Props, State> {\r\n\r\n  data: any;\r\n  text: string;\r\n  fetchData: any;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { tooltip, info, items, item0 } = props;\r\n    const { keys } = tooltip;\r\n\r\n    let text = '';\r\n    let data;\r\n    if (keys.topicId === info.id) {\r\n      if (keys.number === 0)\r\n        data = item0;\r\n      else\r\n        data = items.find(item => item.n === String(keys.number));\r\n\r\n      if (data)\r\n        text = data.text;\r\n    }\r\n\r\n    this.state = {\r\n      data,\r\n      text,\r\n      number: keys.number\r\n    }\r\n  }\r\n\r\n  fetchData = async (number: number) => {\r\n\r\n    if (number < 0) return;\r\n\r\n    let data;\r\n    let text = '';\r\n    const topicId = this.props.tooltip.keys.topicId;\r\n\r\n    try {\r\n      data = await API.getMessage(topicId, number);\r\n      if (data)\r\n        text = data.text;\r\n      else\r\n        text = `Сообщение не найдено ${number}`;\r\n\r\n    } catch (e) {\r\n      text = e.message;\r\n    }\r\n\r\n    this.setState({ data, text, number });\r\n  }\r\n\r\n  onScroll = (delta) => {\r\n\r\n    const { keys } = this.props.tooltip;\r\n    if (keys.type !== 'TOPIC_PREVIEW') return;\r\n    if (delta > 0) {\r\n      this.fetchData(this.state.number + 1)\r\n    } else {\r\n      this.fetchData(this.state.number - 1)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.state.data)\r\n      this.fetchData(this.state.number);\r\n\r\n  }\r\n\r\n  render() {\r\n    const { keys } = this.props.tooltip;\r\n\r\n    if (!this.state.text)\r\n      return null;\r\n\r\n    let header;\r\n    if (!this.state.data) {\r\n      header = <b>Заголовок</b>\r\n    } else {\r\n      header = <UserInfo data={this.state.data} isAuthor={false} isTooltip={true}/>\r\n    }\r\n\r\n    if (keys.type === 'TOPIC' || keys.type === 'TOPIC_PREVIEW')\r\n      return (\r\n        <TooltipWindow tooltip={this.props.tooltip} onScroll={this.onScroll}>\r\n          <TooltipHeader>\r\n            {header}\r\n          </TooltipHeader>\r\n          <TooltipBody>\r\n            <MsgText\r\n              data={this.state.data}\r\n              html={this.state.text}\r\n              topicId={keys.topicId}\r\n              style={{ maxHeight: \"min(550px, 80vh)\", overflowY: \"auto\" }}\r\n            />\r\n          </TooltipBody>\r\n        </TooltipWindow>\r\n      )\r\n    else\r\n      return null;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n  const {\r\n    info,\r\n    items,\r\n    item0\r\n  } = state.topic;\r\n\r\n  return {\r\n    info,\r\n    items,\r\n    item0\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(Tooltip): any );","//@flow\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport Tooltip from './tooltip'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { TooltipItemState } from 'src/data/tooltips/reducer'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype StateProps = {\r\n    items: Array<TooltipItemState>\r\n}\r\n\r\ntype Props = StateProps & DefaultProps;\r\n\r\nclass TooltipsList extends Component<Props> {\r\n\r\n    render() {\r\n\r\n        const { items } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {items.map((item, i) => {\r\n                    return (\r\n                        <Tooltip key={item.hash} tooltip={item} keys={item.keys}>\r\n                        </Tooltip>\r\n                    )}\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n    const {\r\n        items\r\n    } = state.tooltips\r\n\r\n    return {\r\n        items,\r\n    }\r\n}\r\n\r\nexport default ( connect(mapStateToProps)(TooltipsList): any );","//@flow\r\nimport React, { Component, Fragment, useEffect } from 'react';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\nimport NavBar from './components/nav_bar';\r\nimport Container from './components/container';\r\nimport NavBarFooter from './components/nav_bar_footer';\r\nimport TooltipsList from './components/tooltips/tooltips_list';\r\n\r\nimport { readOptions } from 'src/data/options/actions'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype StateProps = {\r\n  theme: string\r\n}\r\n\r\ntype Props = StateProps & DefaultProps\r\n\r\nfunction App(props): Props {\r\n\r\n  useEffect(() => {\r\n    document.body.setAttribute('theme', props.theme);\r\n  })\r\n\r\n  return (\r\n    <HashRouter>\r\n      <NavBar />\r\n      <Container />\r\n      <NavBarFooter />\r\n      <TooltipsList />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    theme: state.options.items.theme\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","//@flow\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux'\r\n\r\nimport reducer from './reducers'\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from 'src/data/store'\r\n\r\nconst Root = ({ store }) => (\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n)\r\n\r\n// for github pages\r\nwindow.hash = \"#\";\r\n\r\nReactDOM.render(<Root store={store} />,\r\n    document.getElementById('root'));\r\n\r\n//registerServiceWorker();\r\n"],"sourceRoot":""}