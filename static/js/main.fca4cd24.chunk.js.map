{"version":3,"sources":["components/common/search.tsx","utils.ts","api/index.ts","api/topicslist.ts","data/topicslist/actions.ts","components/navigation/nav_bar.tsx","data/topicslist/reducer.ts","data/topicslist/index.ts","data/topic/index.ts","api/topicinfo.ts","api/topicMessages.ts","data/topic/actions.ts","data/topic/reducer.ts","api/sections.ts","data/sections/actions.ts","data/sections/reducer.ts","data/sections/index.ts","data/options/index.ts","data/options/actions.ts","data/options/reducer.ts","api/cookies.ts","api/login.ts","data/login/actions.ts","data/login/reducer.ts","data/login/index.ts","data/tooltips/actions.ts","data/tooltips/reducer.ts","data/tooltips/index.ts","api/newtopic.ts","data/newtopic/actions.ts","data/newtopic/reducer.ts","data/newtopic/index.ts","api/newmessage.ts","data/newmessage/actions.ts","data/store.ts","data/newmessage/reducer.ts","data/newmessage/index.ts","components/login/logged_user.tsx","components/login/login_form.tsx","components/common/error.tsx","components/login/index.tsx","components/topics_list/sections.tsx","components/topics_list/header.tsx","components/topics_list/row/pages.tsx","components/topics_list/row/topic_name_cell.tsx","components/topics_list/row/preview_link.tsx","components/topics_list/row/index.tsx","components/common/pages.tsx","components/common/text_editor.tsx","components/topics_list/new_topic.tsx","components/preview/preview_buttons.tsx","components/extensions/code_highlight.ts","components/topic/index.tsx","components/extensions/code1c.tsx","components/extensions/link_to_post.tsx","components/extensions/link_to_user.tsx","components/extensions/youtube_link.tsx","components/extensions/custom_link.tsx","components/topic/row/vote_item.tsx","components/topic/row/vote_chart.tsx","components/topic/row/vote.tsx","components/topic/row/msg_text.tsx","components/topic/row/user_info.tsx","components/preview/preview_content.tsx","components/preview/topic_preview.tsx","components/topics_list/index.tsx","components/topic/header.tsx","components/topic/topic_info.tsx","components/topic/row/index.tsx","components/topic/footer.tsx","components/topic/new_message.tsx","components/options/radio_option.tsx","components/options/string_option.tsx","components/options/formscheme.ts","components/options/tab.tsx","components/options/index.tsx","components/approutes.tsx","components/navigation/nav_bar_footer.tsx","components/tooltips/tooltip_header.tsx","components/tooltips/tooltip_body.tsx","components/tooltips/tooltip_window.tsx","components/tooltips/tooltip.tsx","components/tooltips/tooltips_list.tsx","App.tsx","index.tsx"],"names":["Search","useState","searchEngine","setSearchEngine","text","setText","doSearch","url","window","open","InputGroup","size","DropdownButton","id","title","style","marginRight","className","variant","onSelect","eventKey","Dropdown","Item","FormControl","type","placeholder","paddingRight","onKeyPress","e","key","onChange","target","value","Text","marginLeft","marginTop","marginBottom","cursor","onClick","zIndex","parseJSON","JSON","parse","replace","console","error","message","log","getMaxPage","count","Math","min","ceil","childrenToText","children","map","displayName","props","number","domain","localStorage","getItem","urlTopicsList","urlTopicInfo","urlTopicMessages","urlLogin","urlLogout","urlCookies","urlSections","urlNewMessage","urlNewTopic","paramsToString","paramsPrefix","params","searchParams","URLSearchParams","Reflect","get","undefined","append","str","toString","length","fetchJsonpAndGetJson","a","fullUrl","fetchJsonp","response","json","responseJson","utils","fetchAndGetJson","options","fetch","convertResponse","forum","section","sect1","sectionCode","sect2","author","user0","lastUser","user","created","updated","utime","answ","closed","down","pinned","isVoting","is_voting","showPreview","fetchTopicsList","list","requestTopicsList","createAction","receiveTopicsList","payload","receiveTopicsListFailed","clearTopicsList","togglePreview","msgNumber","getTopicsListIfNeeded","dispatch","getState","state","topicsList","isFetching","shouldGetTopicsList","page","reqestParams","topicsPerPage","items","topicsCount","topics","section_short_name","user_id","mytopics","API","data","slice","getTopicsList","NavBar","location","useLocation","useDispatch","search","Navbar","bg","expand","fixed","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","name","link","item","i","active","href","Form","reducer","createReducer","builder","addCase","action","lastUpdated","Date","getTime","ind","findIndex","Object","assign","previewMsgNumber","defaultInfo","initialState","info","voting","x","select","result","parseInt","sectionId","authorId","user_name","updated_name","answers_count","deleted","fetchTopicInfo","n","userId","time","vote","fetchTopicMessages","fetchTopicMessage","from","find","requestTopic","receiveTopic","item0","receiveTopicFailed","clearTopicMessages","requestNewMessages","receiveNewMessages","receiveNewMessagesFailed","shouldFetch","topic","getTopicIfNeeded","topicId","_item0","first","_items","last","getTopic","getNewMessagesIfNeeded","getNewMessages","concat","code","shortn","fulln","fetchSections","requestSections","receiveSections","receiveSectionsFailed","getSectionsIfNeeded","sections","shouldGetSections","tree","getKey","reduce","previous","currentItem","group","push","defaultOptionsState","voteColors","theme","autoRefreshTopicsList","autoRefreshTopicsListInterval","autoRefreshTopic","autoRefreshTopicInterval","showTooltips","tooltipDelay","showYoutubeVideoTitle","replaceCatalogMista","fixBrokenLinks","readOptions","saveOptions","readOption","defaultValue","readAllOptions","String","setItem","session","Number","userName","userHash","user_hash","lastError","last_error","fetchCookies","fetchLogin","method","body","username","user_password","password","mode","credentials","headers","redirect","fetchLogout","loginStart","loginComplete","loginFailed","logoutStart","logoutComplete","checkLoginStart","shouldLogin","login","checkLogin","trim","doLoginIfNeeded","doLogin","logged","createTooltip","keys","coords","closeTooltip","clearTooltips","hash","stringify","index","filter","val","fetchNewTopic","postNewTopicStart","postNewTopicComplete","postNewTopicError","newTopicText","newTopicClear","newTopicSubject","newTopicSection","newTopicShowVoting","show","postNewTopic","fetchParams","message_text","topic_text","subject","target_section","target_forum","toLowerCase","rnd","round","random","votingItems","onSuccess","fetchNewMessage","topic_id","postNewMessageStart","postNewMessageComplete","newMessageText","addMessageText","tooltips","newTopic","newMessage","store","configureStore","devTools","process","useAppDispatch","useSelector","CustomToggle","React","forwardRef","ref","preventDefault","LoggedUser","onLogout","event","float","Menu","Divider","connector","connect","setUsername","setPassword","flexWrap","flex","maxLength","autoComplete","Button","margin","rel","ErrorElem","dangerouslySetInnerHTML","__html","elem","useEffect","selected","sectionsElem","label","Select","currentTarget","arr","Header","navigate","useNavigate","queryString","Pages","pages","maxPage","classes","classNames","sectionHref","substring","aria-hidden","overflowWrap","PreviewLink","expanded","setTime","updateTime","useCallback","msg","timeF","date","td","d","getDate","getMonth","getFullYear","today","dateFormat","display","color","width","textAlign","currentPage","locationParams","baseUrl","last20","set","Pagination","TextEditor","formName","showVoting","textAreaRef","useRef","cols","rows","ctrlKey","parent","parentElement","tagName","toUpperCase","dispatchEvent","Event","cancelable","bubbles","ButtonGroup","textAreaNode","current","start","selectionStart","end","selectionEnd","oldText","len","replacement","newText","disabled","Check","checked","onSubmitSuccess","currentSection","setSection","Array","fill","votes","setVotes","onVoteTextChange","votesCopy","this_onSubmitSuccess","groupsElem","votingOptions","Control","onSubmit","shouldPostNewTopic","postNewTopicIfNeeded","FormGroup","PreviewButtons","onFirst","onPrev","onNext","onLast","highlight","scrolledToHash","СтрокаРезультат","УстановленЦвет","ПоследнийЦвет","keywords","Set","split","Спецсиволы","мЦветФона","мЦветЧисла","мЦветСтроки","мЦветКлючевогоСлова1","ВСтроке","Токен","ПустаяСтрока","Строка","Сред","Нач","Длина","Прав","isKeyword","token","has","ДобавитьЧастьСтроки1С","Часть","Цвет","РазукраситьСтроку","СтрокаКода","ВСтрокеСкобка","ВСтрокеТильда","НачалоСтроки","ТокенДоТочки","Поз","ТекущийСимвол","charAt","isNaN","join","Code","hidden","setHidden","newtext","prepareText","buttonText","linesCount","buttonShow","preStyle","overflow","height","timer","onMouseOver","persist","setTimeout","showToolTip","stopPropagation","clearTimeout","onMouseOut","showTooltip","pageX","y","pageY","this","setState","startsWith","then","pageParam","Component","LinkToUser","getVideoId","fullHref","URL","hostname","pathname","getVideoParams","videoId","apiKey","apiUrl","snippet","hrefName","YoutubeLink","run","parentText","newHref","query","isMistaCatalog","class","escapedHref","regExp","RegExp","match","fixBrokenLink","VoteItem","total","colors","img","percent","textDecoration","src","maxWwidth","alt","VoteChart","max","Vote","html","_voteText","voteText","setVoteText","getVoteText","_info","voteChart","showVote","processedHtml","res","txt","substr","processCode1C","processLinksToPosts","processText","componentsMap","textComponent","activeHtml","UserInfo","imgDisplay","setImgDisplay","isAuthor","isYou","isTooltip","dataStr","imgElem","timeElem","userClassNames","innerWidth","onLoad","onError","document","getElementById","scrollTo","offsetTop","PreviewContent","loggedUserId","onDataLoaded","setData","setError","_data","getData","overflowY","TopicPreview","initialMsgNumber","deltaX","setDeltaX","setDispaly","onClickLast","swipeable","useSwipeable","onSwiping","eventData","abs","onSwiped","dir","delta","transform","flexDirection","order","updateTopicsList","position","top","letterSpacing","yandexUrl","encodeURIComponent","lineHeight","showUpdateButton","votingElem","setVoting","afterSubmit","setVotingOption","voting_select","postNewMessage","locationPage","updateTopic","updateNewMessages","htmltext","DOMParser","parseFromString","firstChild","innerText","setInterval","clearInterval","nodeHash","RadioOption","values","oneLine","onChangeValue","descr","inline","StringOption","postfix","htmlFor","formTabs","tabName","formParams","Tab","closeForm","tabs","tab","row","rowElem","fontWeight","AppRoutes","Container","path","element","NavBarFooter","TooltipHeader","closeWindow","onTouchEnd","TooltipBody","onScroll","startX","onTouchStart","nativeEvent","changedTouches","clientX","endX","TooltipWindow","axis","tooltip","left","Children","toArray","header","handle","defaultClassNameDragging","fetchData","maxHeight","setAttribute","Root","ReactDOM","render"],"mappings":"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","file":"static/js/main.fca4cd24.chunk.js","sourcesContent":["import React, { ReactElement, useState } from 'react'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n\r\nimport './search.css'\r\n\r\nconst Search = (): ReactElement => {\r\n\r\n  const [searchEngine, setSearchEngine] = useState('Яндекс');\r\n  const [text, setText] = useState('');\r\n\r\n  const onKeyPress = (e: any) => {\r\n    if (e.key === 'Enter') {\r\n      doSearch();\r\n    }\r\n  }\r\n\r\n  const doSearch = () => {\r\n\r\n    let url: string;\r\n    if (searchEngine === 'Яндекс') \r\n      url = `https://www.yandex.ru/search/?text=${text}&site=forum.mista.ru`;\r\n\r\n    else if (searchEngine === 'Google') \r\n      url = `https://www.google.ru/search?q=${text}+site:forum.mista.ru`\r\n\r\n    window.open(url);\r\n    setText('');\r\n  }\r\n\r\n  return (\r\n    <InputGroup size=\"sm\">\r\n      <DropdownButton \r\n        id=\"search-engine\" \r\n        title=\"\" \r\n        size=\"sm\" \r\n        style={{ marginRight: \"2px\" }} \r\n        className='button' \r\n        variant=\"light\"\r\n        onSelect={eventKey => setSearchEngine(eventKey)}\r\n        >\r\n        <Dropdown.Item eventKey=\"Яндекс\">Яндекс</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"Google\">Google</Dropdown.Item>\r\n      </DropdownButton>\r\n      <FormControl\r\n        type=\"text\"\r\n        placeholder={`${searchEngine}: поиск`}\r\n        style={{ marginRight: \"4px\", paddingRight: \"27px\" }}\r\n        className='input'\r\n        onKeyPress={onKeyPress}\r\n        onChange={e => setText(e.target.value)}\r\n        value={text}\r\n      />\r\n      <InputGroup.Text style={{ marginLeft: \"-35px\", marginTop: \"auto\", marginBottom: \"auto\", cursor: \"pointer\" }} onClick={doSearch}>\r\n        <i className=\"fa fa-search input\" style={{ zIndex: 1000 }} />\r\n      </InputGroup.Text>\r\n    </InputGroup>\r\n  )\r\n\r\n}\r\n\r\nexport default Search;","\r\nexport function today(td: Date): boolean {\r\n  var d = new Date();\r\n  return td.getDate() === d.getDate() && td.getMonth() === d.getMonth() && td.getFullYear() === d.getFullYear();\r\n}\r\n\r\nexport const groupBy = <T, K extends keyof any>(list: T[], getKey: (item: T) => K) =>\r\n  list.reduce((previous, currentItem) => {\r\n    const group = getKey(currentItem);\r\n    if (!previous[group]) previous[group] = [];\r\n    previous[group].push(currentItem);\r\n    return previous;\r\n  }, {} as Record<K, T[]>)\r\n\r\nexport const parseJSON = (text: string): {} => {\r\n\r\n  try {\r\n    return JSON.parse(text);\r\n  } catch (e) {\r\n\r\n  }\r\n\r\n  try {\r\n    text = text\r\n      .replace(/\\\\</g, '<')\r\n      .replace(/\\\\>/g, '>')\r\n      .replace(/\\\\&/g, '&')\r\n      .replace(/\\\\'/g, \"'\")\r\n      .replace(/\\\\\"/g, \"\")\r\n      .replace(/ \"/g, ' \\\\\"')\r\n      .replace(/\"\"/g, '\\\\\"\"')\r\n      .replace(/\\t/g, '\\\\t')\r\n      .replace(/\"(\\.| |\\?)/g, '\\\\\"$1')\r\n\r\n    //           console.log(text);\r\n    return JSON.parse(text);\r\n\r\n    //return eval(text);\r\n  } catch (e) {\r\n    console.error(e.message);\r\n    console.log(text);\r\n\r\n    return {};\r\n  }\r\n}\r\n\r\nexport const getMaxPage = (count: number): number => Math.min(Math.ceil(count / 100), 10) || 1;\r\n\r\nexport const childrenToText = (children: any): string[]=> {\r\n\r\n  if (!children) return children;\r\n\r\n  return children.map(value => {\r\n    if (typeof (value) === 'string') {\r\n      return value;\r\n    } else if (value.type === 'br') {\r\n      return '<br>'\r\n    } else if (value.type.displayName === 'Connect(LinkToPost)' || value.type.displayName === 'Connect(t)') {\r\n      return value.props.number;\r\n    } else {\r\n      console.log(value);\r\n      return value;\r\n    }\r\n  })\r\n}\r\n\r\nexport const extractTextFromHTML = (htmltext: string): string => {\r\n  const parser = new DOMParser();\r\n  const floatingElement = parser.parseFromString(htmltext, 'text/html');\r\n  return (floatingElement.firstChild as HTMLElement).innerText;\r\n}","import fetchJsonp from 'fetch-jsonp'\r\nimport * as utils from 'src/utils'\r\n\r\nexport const domain: string = localStorage.getItem('domain') || 'https://forum.mista.ru';\r\n//export const domain = 'https://dev.mista.ru';\r\nexport const urlTopicsList: string = localStorage.getItem('urlTopicsList') || 'api/topic.php';\r\nexport const urlTopicInfo: string = localStorage.getItem('urlTopicInfo') || 'ajax_gettopic.php';\r\nexport const urlTopicMessages: string = localStorage.getItem('urlTopicMessages') || 'api/message.php';\r\nexport const urlLogin: string = localStorage.getItem('urlLogin') || 'users.php?action=do_enter';\r\nexport const urlLogout: string = localStorage.getItem('urlLogout') || 'users.php?action=exit';\r\nexport const urlCookies: string = localStorage.getItem('urlCookies') || 'ajax_cookie.php';\r\nexport const urlSections: string = localStorage.getItem('urlSections') || 'ajax_getsectionslist.php';\r\nexport const urlNewMessage: string = localStorage.getItem('urlNewMessage') || 'topic.php?id=:id&page=1';\r\nexport const urlNewTopic: string = localStorage.getItem('urlNewTopic') || 'index.php';\r\nexport const urlAddBookmark: string = localStorage.getItem('urlAddBookmark') || 'ajax_addbookmark.php';\r\nexport const urlSearch: string = localStorage.getItem('urlSearch') || 'ajax_find.php';\r\n\r\n//Bookmark\r\nexport type RequestBookmark = {\r\n  id: string\r\n}\r\n\r\nexport const postBookmark = async (params: RequestBookmark) => {\r\n\r\n  await fetch(`${domain}/${urlAddBookmark}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n  });\r\n}\r\n\r\nexport const paramsToString = (paramsPrefix: string, params?: {}): string => {\r\n  if (!params)\r\n    return '';\r\n\r\n  let searchParams = new URLSearchParams();\r\n  for (let key in params) {\r\n    const value = Reflect.get(params, key)\r\n    if (value !== undefined)\r\n      searchParams.append(key, value)\r\n  }\r\n\r\n  let str = searchParams.toString();\r\n  if (str.length > 0)\r\n    return paramsPrefix + str;\r\n  else\r\n    return '';\r\n}\r\n\r\nexport const fetchJsonpAndGetJson = async (url: string, params?: {}): Promise<any> => {\r\n\r\n  let fullUrl = `${domain}/${url}${paramsToString('?', params)}`;\r\n  const response = await fetchJsonp(fullUrl);\r\n  let responseJson = await response.json();\r\n  let json;\r\n  if (typeof (responseJson) === 'string') {\r\n\r\n    try {\r\n      json = JSON.parse(responseJson)\r\n    } catch (e) {\r\n      json = utils.parseJSON(responseJson);\r\n    }\r\n  } else {\r\n    json = responseJson;\r\n  }\r\n  return json;\r\n}\r\n\r\nexport const fetchAndGetJson = async (url: string, params?: {}, options?: {}): Promise<any> => {\r\n\r\n  let fullUrl = `${domain}/${url}${paramsToString('?', params)}`;\r\n  const response = await fetch(fullUrl, options);\r\n  return await response.json();\r\n  \r\n}","import { fetchAndGetJson, urlTopicsList } from '.'\r\n\r\nimport type { ITopicsList, ITopicsListItem } from 'src/data/topicslist'\r\n\r\nexport interface IRequest {\r\n  itemsPerPage?: number | null,\r\n  page?: number | null,\r\n  beforeTime?: string | null,\r\n  forum?: string | null,\r\n  section?: string | null,\r\n  user_id?: string | null,\r\n  myTopics?: string | null\r\n}\r\n\r\ninterface IAPIResponse {\r\n  id: number,\r\n  forum: string,\r\n  sect1: string,\r\n  sect2: string,\r\n  v8: string,\r\n  closed: number,\r\n  down: number,\r\n  paid: number,\r\n  text: string,\r\n  message: string,\r\n  created: number,\r\n  utime: number,\r\n  user: string,\r\n  user0: string,\r\n  is_voting: number,\r\n  answ: number\r\n}\r\n\r\nfunction convertResponse(response: IAPIResponse): ITopicsListItem {\r\n\r\n  return ({\r\n    id: response.id,\r\n    forum: response.forum,\r\n    section: response.sect1,\r\n    sectionCode: response.sect2,\r\n    author: response.user0,\r\n    lastUser: response.user,\r\n    created: response.created * 1000,\r\n    updated: response.utime * 1000,\r\n    count: response.answ,\r\n    text: response.text,\r\n    closed: response.closed === 1,\r\n    down: response.down === 1,\r\n    pinned: response.utime === 2147483648,\r\n    isVoting: response.is_voting === 1,\r\n    showPreview: false\r\n  })\r\n\r\n}\r\n\r\nasync function fetchTopicsList(params?: IRequest): Promise<ITopicsList> {\r\n\r\n  //const request = convertRequest(params);\r\n\r\n  const list = await fetchAndGetJson(urlTopicsList, params);\r\n  return list.map(convertResponse);\r\n\r\n}\r\n\r\nexport { fetchTopicsList }","import { createAction } from '@reduxjs/toolkit'\r\n\r\nimport * as API from 'src/api/topicslist'\r\nimport { domain, urlTopicsList } from 'src/api/index';\r\n\r\nimport { RootState } from '../store';\r\n\r\nexport const requestTopicsList = createAction('REQUEST_TOPICS_LIST');\r\nexport const receiveTopicsList = createAction('RECEIVE_TOPICS_LIST', list => ({\r\n  payload: {\r\n    list\r\n  },\r\n  error: false\r\n}));\r\nexport const receiveTopicsListFailed = createAction('RECEIVE_TOPICS_LIST', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\nexport const clearTopicsList = createAction('CLEAR_TOPICS_LIST');\r\nexport const togglePreview = createAction('TOGGLE_PREVIEW', (id, msgNumber) => ({\r\n  payload : {\r\n    id,\r\n    msgNumber\r\n  }\r\n}));\r\n\r\nconst getTopicsList = (params: any) => async (dispatch: any, getState: any) => {\r\n\r\n  dispatch(requestTopicsList())\r\n\r\n  const page = params.page || 1;\r\n  let reqestParams: any = {};\r\n\r\n  let topicsPerPage = +getState().options.items.topicsPerPage;\r\n  if (topicsPerPage > 99) topicsPerPage = 99;\r\n\r\n  let topicsCount = page * topicsPerPage;\r\n  reqestParams.topics = topicsCount;\r\n\r\n  if (params.section)\r\n    reqestParams.section_short_name = params.section;\r\n\r\n  if (params.forum)\r\n    reqestParams.forum = params.forum;\r\n\r\n  if (params.user_id)\r\n    reqestParams.user_id = params.user_id;\r\n\r\n  if (params.mytopics)\r\n    reqestParams.mytopics = params.mytopics;\r\n\r\n  try {\r\n    const json = await API.fetchTopicsList(reqestParams);\r\n\r\n    let data = json.slice(-topicsPerPage);\r\n    dispatch(receiveTopicsList(data));\r\n\r\n  } catch (e) {\r\n\r\n    dispatch(receiveTopicsListFailed(`${e.message} ${domain}/${urlTopicsList}`));\r\n    console.error(e.message);\r\n\r\n  }\r\n\r\n}\r\n\r\nconst shouldGetTopicsList = (state: RootState) => {\r\n  const topicsList = state.topicsList;\r\n  if (!topicsList) {\r\n    return true\r\n  }\r\n  if (topicsList.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const getTopicsListIfNeeded = (params: any): any => (dispatch: any, getState: any) => {\r\n  if (shouldGetTopicsList(getState())) {\r\n    return dispatch(getTopicsList(params));\r\n  }\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nimport Search from 'src/components/common/search'\r\nimport { getTopicsListIfNeeded } from 'src/data/topicslist/actions'\r\n\r\nimport './nav_bar.css'\r\n\r\nconst NavBar = (): ReactElement => {\r\n\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const locationParams = new URLSearchParams(location.search);\r\n  const forum = locationParams.get('forum');\r\n\r\n  const onClick = () => {\r\n    dispatch(getTopicsListIfNeeded({}));\r\n  }\r\n\r\n  const internalLinks = [\r\n    { name: '1C', link: `/index.php?forum=1C` },\r\n    { name: 'IT', link: `/index.php?forum=IT` },\r\n    { name: 'JOB', link: `/index.php?forum=JOB` },\r\n    { name: 'LIFE', link: `/index.php?forum=LIFE` },\r\n  ];\r\n\r\n  const externalLinks = [\r\n    { name: 'Wiki', link: 'https://wiki.mista.ru' },\r\n    { name: 'Книга знаний', link: 'https://kb.mista.ru' },\r\n  ];\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" fixed=\"top\">\r\n      <Navbar.Brand\r\n        as={Link}\r\n        to={`/`}\r\n        onClick={onClick}>\r\n        React.Mista\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse>\r\n        <Nav className=\"me-auto\">\r\n          {internalLinks.map((item, i) =>\r\n            <Nav.Item key={'i'+ i}>\r\n              <Nav.Link to={item.link} active={item.name === forum} as={Link}>\r\n                {item.name}\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          )}\r\n          {externalLinks.map((item, i) =>\r\n            <Nav.Item key={'e'+ i}>\r\n              <Nav.Link href={item.link}>\r\n                {item.name}\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          )}          \r\n        </Nav>\r\n        <Form className=\"d-flex\">\r\n          <Search />\r\n        </Form>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default NavBar;","import { createReducer } from '@reduxjs/toolkit'\r\nimport { initialState } from '.'\r\nimport { requestTopicsList, receiveTopicsList, clearTopicsList, togglePreview } from './actions'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(requestTopicsList, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveTopicsList, (state, action) => {\r\n\r\n      if (action.error) {\r\n        state.error = action.payload.toString();\r\n      } else {\r\n        state.items = action.payload.list;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(clearTopicsList, (state) => {\r\n      state.items = [];\r\n      state.isFetching = false;\r\n      delete state.error;\r\n      delete state.lastUpdated;\r\n    })\r\n    .addCase(togglePreview, (state, action) => {\r\n      let items = state.items.slice();\r\n      const ind = items.findIndex(item => item.id === action.payload.id);\r\n\r\n      let item = Object.assign({}, items[ind]);\r\n      item.showPreview = !item.showPreview;\r\n      item.previewMsgNumber = action.payload.msgNumber;\r\n      items[ind] = item;\r\n      state.items = items;\r\n    })    \r\n})\r\n\r\nexport default reducer;\r\n","export interface ITopicsListItem {\r\n  id: number,\r\n  author: string,\r\n  lastUser: string,\r\n  forum: string,\r\n  sectionCode: string,\r\n  section: string,\r\n  count: number,\r\n  text: string,\r\n  created: number,\r\n  updated: number,\r\n  closed: boolean,\r\n  down: boolean,\r\n  pinned: boolean\r\n  isVoting: boolean,\r\n  showPreview: boolean,\r\n  previewMsgNumber?: number\r\n}\r\n\r\nexport interface ITopicsList extends Array<ITopicsListItem> { }\r\n\r\nexport interface ITopicsListState {\r\n  isFetching: boolean;\r\n  items: ITopicsList,\r\n  error?: string,\r\n  lastUpdated?: number\r\n}\r\n\r\nexport const initialState: ITopicsListState = {\r\n  isFetching: false,\r\n  items: []\r\n}","export interface IVotingItem {\r\n  text: string,\r\n  count: number\r\n}\r\n\r\nexport interface ITopicInfo {\r\n    id: number,\r\n    title: string,\r\n    forum?: string,\r\n    sectionId?: string,\r\n    created?: number,\r\n    authorId?: string,\r\n    author?: string,\r\n    updated?: number,\r\n    lastUser?: string,\r\n    count?: number,\r\n    down?: number,\r\n    closed?: number,\r\n    deleted?: number,\r\n    isVoting?: number,\r\n    voting?: IVotingItem[]\r\n  }\r\n\r\nexport interface ITopicMessage {\r\n  id: number,\r\n  n: number,\r\n  user: string,\r\n  userId: number,\r\n  text: string,\r\n  time: number,\r\n  vote: number\r\n}\r\n\r\nexport interface ITopicMessagesList extends Array<ITopicMessage> {}\r\n\r\nexport interface ITopicState {\r\n  isFetching: boolean;\r\n  items: ITopicMessagesList,\r\n  item0?: ITopicMessage,\r\n  info?: ITopicInfo,\r\n  error?: string,\r\n  lastUpdated?: number\r\n}\r\n\r\nexport const defaultInfo: ITopicInfo = {\r\n  id: 0,\r\n  title: \"\",\r\n  count: 0\r\n}\r\n\r\nexport const initialState: ITopicState = {\r\n  isFetching: false,\r\n  items: [],\r\n  info: defaultInfo\r\n}\r\n\r\n","import { fetchAndGetJson, urlTopicInfo } from '.'\r\nimport type { ITopicInfo } from 'src/data/topic'\r\n\r\ninterface IAPIResponse {\r\n  id: string,\r\n  text: string,\r\n  forum: string,\r\n  section: string,\r\n  created: string,\r\n  user_id: string,\r\n  user_name: string,\r\n  updated: string,\r\n  updated_name: string,\r\n  answers_count: string,\r\n  down: number,\r\n  closed: number,\r\n  deleted: number,\r\n  is_voting: number,\r\n  voting: {\r\n    select: string,\r\n    result: number\r\n  }[]\r\n}\r\n\r\nfunction convertResponse(response: IAPIResponse): ITopicInfo {\r\n\r\n  let voting = [];\r\n  if (response.voting)\r\n    voting = response.voting.map(x => ({\r\n      text: x.select,\r\n      count: x.result\r\n    }));\r\n    \r\n  return ({\r\n    id: parseInt(response.id),\r\n    title: response.text,\r\n    forum: response.forum,\r\n    sectionId: response.section,\r\n    created: parseInt(response.created) * 1000,\r\n    authorId: response.user_id,\r\n    author: response.user_name,\r\n    updated: parseInt(response.updated) * 1000,\r\n    lastUser: response.updated_name,\r\n    count: parseInt(response.answers_count),\r\n    down: response.down,\r\n    closed: response.closed,\r\n    deleted: response.deleted,\r\n    isVoting: response.is_voting,\r\n    voting\r\n  })\r\n\r\n}\r\n\r\nasync function fetchTopicInfo(id: number): Promise<ITopicInfo> {\r\n\r\n  const info = await fetchAndGetJson(urlTopicInfo, { id });\r\n  return convertResponse(info);\r\n\r\n}\r\n\r\nexport { fetchTopicInfo }","\r\nimport { fetchAndGetJson, urlTopicMessages } from '.'\r\nimport type { ITopicMessage, ITopicMessagesList } from 'src/data/topic'\r\n\r\ninterface IAPIRequest {\r\n  id: number,\r\n  from?: number,\r\n  to?: number\r\n}\r\n\r\nexport interface IRequest extends IAPIRequest {}\r\n\r\ninterface IAPIResponse {\r\n  id: string,\r\n  n: string,\r\n  user: string,\r\n  userId: string,\r\n  text: string,\r\n  utime: string,\r\n  vote: number\r\n}  \r\n\r\nfunction convertResponse(response: IAPIResponse): ITopicMessage {\r\n\r\n  return ({\r\n    id: parseInt(response.id),\r\n    n: parseInt(response.n),\r\n    user: response.user,\r\n    userId: parseInt(response.userId),\r\n    text: response.text,\r\n    time: parseInt(response.utime) * 1000,\r\n    vote: response.vote\r\n  })\r\n\r\n}\r\n\r\nasync function fetchTopicMessages(params?: IRequest): Promise<ITopicMessagesList> {\r\n\r\n  const list = await fetchAndGetJson(urlTopicMessages, params);\r\n  return list.map(convertResponse);\r\n\r\n}\r\n\r\nasync function fetchTopicMessage(id: number, n: number): Promise<ITopicMessage> {\r\n\r\n  const to = (n === 0) ? n+1 : n;\r\n\r\n  const list = await fetchAndGetJson(urlTopicMessages, {id, from: n, to});\r\n  return list.map(convertResponse).find((item: ITopicMessage) => item.n === n);\r\n\r\n}\r\n\r\nexport { fetchTopicMessages, fetchTopicMessage }","import { createAction } from '@reduxjs/toolkit'\r\n\r\nimport { fetchTopicInfo } from 'src/api/topicinfo'\r\nimport { fetchTopicMessage, fetchTopicMessages } from 'src/api/topicMessages'\r\nimport { ITopicInfo, ITopicMessage } from '.';\r\n\r\nexport const requestTopic = createAction('REQUEST_TOPIC');\r\nexport const receiveTopic = createAction('RECEIVE_TOPIC', (info, item0, list) => ({\r\n  payload: {\r\n    info,\r\n    item0,\r\n    list\r\n  },\r\n  error: false\r\n}));\r\nexport const receiveTopicFailed = createAction('RECEIVE_TOPIC', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\nexport const clearTopicMessages = createAction('CLEAR_TOPIC_MESSAGES');\r\n\r\nexport const requestNewMessages = createAction('REQUEST_NEW_MESSAGES');\r\nexport const receiveNewMessages = createAction('RECEIVE_NEW_MESSAGES', (list) => ({\r\n  payload: {\r\n    list\r\n  },\r\n  error: false\r\n}));\r\nexport const receiveNewMessagesFailed = createAction('RECEIVE_NEW_MESSAGES', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\n\r\nexport const getTopic = (topicId: number, page: number | string, item0: ITopicMessage) => async (dispatch: any) => {\r\n\r\n  dispatch(requestTopic())\r\n\r\n  let info: ITopicInfo;\r\n  try {\r\n    info = await fetchTopicInfo(topicId);\r\n  } catch (e) {\r\n    console.error(e);\r\n    info = {\r\n      id: topicId,\r\n      title: '',\r\n      count: 0\r\n    };\r\n  }\r\n  try {\r\n    let _item0 = item0;\r\n    let _items;\r\n    if (page === 'last20') {\r\n\r\n      if (info.count > 21) {\r\n\r\n        if (!_item0) {\r\n          _item0 = await fetchTopicMessage(topicId, 0);\r\n        }\r\n\r\n        let first = info.count - 20;\r\n        _items = await fetchTopicMessages({\r\n          id: topicId,\r\n          from: first,\r\n          to: 1010\r\n        });\r\n\r\n      } else {\r\n        let items = await fetchTopicMessages({\r\n          id: topicId,\r\n          from: 0,\r\n          to: 1010\r\n        });\r\n        _item0 = items[0];\r\n        _items = items.slice(1);\r\n      }\r\n\r\n    } else {\r\n\r\n      page = +page;\r\n      let first = 0;\r\n      let last = page * 100 - 1;\r\n\r\n      if (page > 1) {\r\n\r\n        first = (page - 1) * 100;\r\n        if (!_item0) {\r\n          _item0 = await fetchTopicMessage(topicId, 0);\r\n        }\r\n\r\n        _items = await fetchTopicMessages({\r\n          id: topicId,\r\n          from: first,\r\n          to: last\r\n        });\r\n\r\n      } else {\r\n        if (_item0)\r\n          first = 1;\r\n        else\r\n          first = 0;\r\n\r\n        let items = await fetchTopicMessages({\r\n          id: topicId,\r\n          from: first,\r\n          to: last\r\n        });\r\n\r\n        if (_item0) {\r\n          _items = items;\r\n        } else {\r\n          _item0 = items[0];\r\n          _items = items.slice(1);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    if (info.count === 0 && _items.length > 0)\r\n      info.count = _items[_items.length - 1].n;\r\n\r\n    if (page === 'last20' && _items.length > 20) {\r\n      _items = _items.slice(-20);\r\n    }\r\n\r\n    dispatch(receiveTopic(info, _item0, _items));\r\n\r\n  } catch (error) {\r\n\r\n    console.error('Failed to fetch topic:', error);\r\n    dispatch(receiveTopicFailed(error));\r\n\r\n  }\r\n}\r\n\r\nconst shouldFetch = (state) => {\r\n  const topic = state.topic;\r\n  if (!topic) {\r\n    return true\r\n  }\r\n  if (topic.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const getTopicIfNeeded = (topicId: number, page: number |string, item0: any): any => (dispatch: any, getState: any) => {\r\n  if (shouldFetch(getState())) {\r\n    return dispatch(getTopic(topicId, page, item0));\r\n  }\r\n}\r\n\r\nexport type FetchNewMessageseParams = {\r\n  id: number | string,\r\n  last: number\r\n}\r\n\r\nexport const getNewMessages = (id: number, count: number) => async (dispatch: any) => {\r\n\r\n  dispatch(requestNewMessages());\r\n\r\n  try {\r\n    const list = await fetchTopicMessages({\r\n      id: id,\r\n      from: count + 1,\r\n      to: 1050\r\n    });\r\n    dispatch(receiveNewMessages(list));\r\n\r\n  } catch (e) {\r\n    console.error('Failed to fetch new messages:', (e as Error).message);\r\n    dispatch(receiveNewMessagesFailed((e as Error).message));\r\n  }\r\n\r\n}\r\n\r\nexport const getNewMessagesIfNeeded = () => (dispatch: any, getState: any) => {\r\n  const state = getState();\r\n  const { id, count } = state.topic.info;\r\n  if (shouldFetch(state)) {\r\n    return dispatch(getNewMessages(id, count));\r\n  }\r\n}","import { createReducer } from '@reduxjs/toolkit'\r\nimport { defaultInfo, initialState } from '.';\r\n\r\nimport { requestTopic, receiveTopic, clearTopicMessages, requestNewMessages, receiveNewMessages } from './actions'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(requestTopic, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveTopic, (state, action) => {\r\n\r\n      if (action.error) {\r\n        state.error = action.error.toString();\r\n      } else {\r\n        state.items = action.payload.list;\r\n        state.item0 = action.payload.item0;\r\n        state.info = action.payload.info;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(clearTopicMessages, (state) => {\r\n      state.items = [];\r\n      state.info = defaultInfo;\r\n      delete state.item0;\r\n      delete state.error;\r\n    })\r\n    .addCase(requestNewMessages, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveNewMessages, (state, action) => {\r\n      if (action.error) {\r\n        state.error = action.payload.toString();\r\n      } else {\r\n        state.isFetching = false;\r\n        if (action.payload.list.length > 0) {\r\n          state.items = state.items.concat(action.payload.list);\r\n          state.info.count = state.items[state.items.length - 1].n;\r\n        }  \r\n      }\r\n    })\r\n})\r\n\r\nexport default reducer;","import { fetchJsonpAndGetJson, urlSections } from '.'\r\nimport type { ISectionsList, ISectionItem } from 'src/data/sections'\r\n\r\ninterface IAPIResponse {\r\n  id: number,\r\n  forum: string,\r\n  shortn: string,\r\n  fulln: string\r\n}\r\n\r\nfunction convertResponse(response: IAPIResponse): ISectionItem {\r\n\r\n  return ({\r\n    id: response.id,\r\n    forum: response.forum,\r\n    code: response.shortn,\r\n    name: response.fulln,\r\n  })\r\n\r\n}\r\n\r\nexport const fetchSections = async (): Promise<ISectionsList> => {\r\n  const list = await fetchJsonpAndGetJson(urlSections);\r\n  return list.map(convertResponse);\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nimport { fetchSections } from 'src/api/sections'\r\nimport { RootState } from '../store';\r\n\r\nexport const requestSections = createAction('REQUEST_SECTIONS');\r\nexport const receiveSections = createAction('RECEIVE_SECTIONS', list => ({\r\n  payload: {\r\n    list,\r\n  },\r\n  error: false\r\n}));\r\n\r\nexport const receiveSectionsFailed = createAction('RECEIVE_SECTIONS', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\n\r\nexport const getSections = () => async (dispatch: any) => {\r\n\r\n  dispatch(requestSections());\r\n\r\n  try {\r\n    \r\n    const list = await fetchSections();\r\n    dispatch(receiveSections(list));\r\n\r\n  } catch (e) {\r\n\r\n    dispatch(receiveSectionsFailed(e.message));\r\n    console.error(e);\r\n\r\n  }\r\n\r\n}\r\n\r\nconst shouldGetSections = (state: RootState): boolean => {\r\n\r\n  const sections = state.sections;\r\n\r\n  if (!sections)\r\n    return true\r\n\r\n  if (sections.isFetching)\r\n    return false\r\n\r\n  if (sections.items.length > 0)\r\n    return false;\r\n\r\n  return true\r\n}\r\n\r\nexport const getSectionsIfNeeded = (): any => (dispatch: any, getState: any) => {\r\n  if (shouldGetSections(getState())) {\r\n    return dispatch(getSections());\r\n  }\r\n}","import { createReducer } from '@reduxjs/toolkit'\r\n\r\nimport { requestSections, receiveSections } from './actions'\r\nimport { groupBy } from 'src/utils'\r\nimport { initialState } from '.'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(requestSections, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveSections, (state, action) => {\r\n\r\n      if (action.error) {\r\n        state.error = action.payload.toString();\r\n      } else {\r\n        state.items = action.payload.list;\r\n        state.tree = groupBy(state.items, item => item.forum);\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n})\r\n\r\nexport default reducer;\r\n","export interface ISectionItem {\r\n  id: number;\r\n  forum: string,\r\n  code: string,\r\n  name: string,\r\n}\r\n\r\nexport interface ISectionsList extends Array<ISectionItem> {}\r\n\r\nexport interface ISectionsTree{\r\n  [key: string]: ISectionItem[]\r\n}\r\n\r\nexport interface ISectionsListState {\r\n  isFetching: boolean;\r\n  items: ISectionsList,\r\n  tree?: {},\r\n  error?: string,\r\n  lastUpdated?: number\r\n}\r\n\r\nexport const initialState: ISectionsListState = {\r\n  isFetching: false,\r\n  items: [],\r\n  tree: {}\r\n}\r\n","export interface IOptionsItems {\r\n  theme: 'yellow' | 'lightgray' | 'dark',\r\n  topicsPerPage: string,\r\n  autoRefreshTopicsList: string,\r\n  autoRefreshTopicsListInterval: string,\r\n  autoRefreshTopic: string,\r\n  autoRefreshTopicInterval: string,\r\n  tooltipDelay: string,\r\n  showTooltips: string,\r\n  showYoutubeVideoTitle: string,\r\n  replaceCatalogMista: string,\r\n  fixBrokenLinks: string\r\n}\r\n\r\nexport interface IOptionsState {\r\n  voteColors: Array<string>,\r\n  items: IOptionsItems,\r\n  show?: boolean\r\n};\r\n\r\nexport const defaultOptionsState: IOptionsState = {\r\n  voteColors: [\r\n    \"#FF1616\", //1\r\n    \"#1A861A\", //2\r\n    \"#0023FF\", //3\r\n    \"#FF6B18\", //4\r\n    \"#9B3A6E\", //5\r\n    \"#567655\", //6\r\n    \"#233345\", //7\r\n    \"#CC0000\", //8\r\n    \"#00CCCC\", //9\r\n    \"#0000CC\", //10\r\n  ],\r\n  items: {\r\n    theme: 'lightgray',\r\n    topicsPerPage: '20',\r\n    autoRefreshTopicsList: 'false',\r\n    autoRefreshTopicsListInterval: '60',\r\n    autoRefreshTopic: 'true',\r\n    autoRefreshTopicInterval: '60',\r\n    //tooltips\r\n    showTooltips: 'true',\r\n    tooltipDelay: '500',\r\n    //links\r\n    showYoutubeVideoTitle: 'true',\r\n    replaceCatalogMista: 'true',\r\n    fixBrokenLinks: 'true',\r\n  }\r\n}","import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport const readOptions = createAction('READ_OPTIONS');\r\nexport const saveOptions = createAction('SAVE_OPTIONS', options => ({\r\n  payload: {\r\n    options,\r\n  }\r\n}));\r\n","import { createReducer } from '@reduxjs/toolkit'\r\nimport { defaultOptionsState, IOptionsState } from '.';\r\nimport { readOptions, saveOptions } from './actions'\r\n\r\n\r\nconst readOption = (name: string, defaultValue: string): string => {\r\n  return window.localStorage.getItem(name) || defaultValue;\r\n}\r\n\r\nconst readAllOptions = (): IOptionsState => {\r\n  \r\n  let state: IOptionsState = defaultOptionsState;\r\n  for (let key in state.items) {\r\n    state.items[key] = readOption(key, state.items[key]);\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nconst reducer = createReducer(readAllOptions(), (builder) => {\r\n  builder\r\n    .addCase(readOptions, (state) => {\r\n      let items = Object.assign({}, defaultOptionsState.items);\r\n      for (let key in items) {\r\n        items[key] = readOption(key, defaultOptionsState.items[key]);\r\n      }\r\n      state.items = items;\r\n    })\r\n    .addCase(saveOptions, (state, action) => {\r\n      for (let key in action.payload.options) {\r\n        const value = String(action.payload.options[key]); \r\n        window.localStorage.setItem(key, value);\r\n        state.items[key] = value;\r\n      }\r\n    })\r\n  })\r\n\r\nexport default reducer;","import { fetchJsonpAndGetJson, urlCookies } from '.'\r\nimport { ILogin } from 'src/data/login';\r\n\r\nexport type IAPIResponse = {\r\n  cookie: {\r\n    entr_id: string,\r\n    entr_key: string,\r\n    entr_hash: string,\r\n    musthave: string,\r\n    hotlog: string\r\n  },\r\n  session: {\r\n    entered: number,\r\n    user_id: string,\r\n    user_name: string,\r\n    user_hash: string,\r\n    is_moderator: number,\r\n    light_moderator: number,\r\n    section: string,\r\n    show_moderator_tools: number,\r\n    kb: string,\r\n    registered_unixtime: string,\r\n    guid: string,\r\n    last_error?: string,\r\n    user: {\r\n      id: string,\r\n      name: string,\r\n      is_moderator: boolean,\r\n      light_moderator: boolean,\r\n      kb: boolean,\r\n      section_owner: boolean,\r\n      section: string,\r\n      registered_unixtime: string,\r\n      balance: number\r\n    }\r\n  }\r\n}\r\n\r\nfunction convertResponse(response: IAPIResponse): ILogin {\r\n\r\n  const { session } = response;\r\n\r\n  return ({\r\n    userId: Number(session?.user_id),\r\n    userName: session?.user_name,\r\n    userHash: session?.user_hash,\r\n    lastError: session?.last_error\r\n  })\r\n\r\n}\r\n\r\nasync function fetchCookies(): Promise<ILogin| undefined>  {\r\n\r\n  const response = await fetchJsonpAndGetJson(urlCookies);\r\n  return convertResponse(response);\r\n\r\n}\r\n\r\nexport { fetchCookies }","import { domain, urlLogin, urlLogout, paramsToString } from '.'\r\n\r\nexport interface IRequest {\r\n  username: string,\r\n  password: string,\r\n}\r\n\r\nexport const fetchLogin = async (params: IRequest): Promise<void> => {\r\n  await fetch(`${domain}/${urlLogin}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', {user_name: params.username, user_password: params.password}),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Accept': 'text/html,application/xhtml+xml,application/xml',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: 'follow'\r\n  });\r\n}\r\n\r\nexport const fetchLogout = async (): Promise<void> => {\r\n  const fullUrl = `${domain}/${urlLogout}`;\r\n  await fetch(fullUrl, {\r\n    mode: 'no-cors',\r\n    credentials: 'include'\r\n  });\r\n}","import { createAction } from '@reduxjs/toolkit'\r\n\r\nimport { fetchCookies } from 'src/api/cookies';\r\nimport { fetchLogin, fetchLogout } from 'src/api/login'\r\nimport { RootState } from '../store';\r\n\r\nexport const loginStart = createAction('LOGIN_START');\r\nexport const loginComplete = createAction('LOGIN_COMPLETE', (userId, userName, userHash) => ({\r\n  payload: {\r\n    userId,\r\n    userName,\r\n    userHash,\r\n  },\r\n  error: false\r\n}));\r\nexport const loginFailed = createAction('LOGIN_COMPLETE', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\n\r\nexport const logoutStart = createAction('LOGOUT_START');\r\nexport const logoutComplete = createAction('LOGOUT_COMPLETE');\r\n\r\nexport const checkLoginStart = createAction('CHECK_LOGIN_START');\r\n\r\nconst shouldLogin = (state: RootState): boolean => {\r\n  const { login } = state;\r\n  if (!login) {\r\n    return true\r\n  }\r\n  if (login.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const checkLogin = () => async (dispatch: any) => {\r\n\r\n  dispatch(checkLoginStart());\r\n\r\n  let json;\r\n  try {\r\n    json = await fetchCookies();\r\n  } catch (e) {\r\n    dispatch(loginFailed(e));\r\n    return;\r\n  }\r\n \r\n  if (json && json.userId){\r\n\r\n    let error = (json.lastError || '').trim();\r\n    if (error === 'Не указано сообщение.') error = '';\r\n    dispatch(loginComplete(\r\n      json.userId,\r\n      json.userName,\r\n      json.userHash\r\n    ));\r\n  } else\r\n    dispatch(loginFailed(''));\r\n}\r\n\r\nexport const checkLoginIfNeeded = () => (dispatch: any, getState: any) => {\r\n  if (shouldLogin(getState())) {\r\n    return dispatch(checkLogin())\r\n  }\r\n}\r\n\r\nexport const doLogout = () => async (dispatch: any) => {\r\n\r\n  dispatch(logoutStart());\r\n\r\n  try {\r\n    await fetchLogout();\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  \r\n  dispatch(logoutComplete());\r\n  dispatch(checkLogin());\r\n\r\n}\r\n\r\nexport const doLogin = (username: string, password: string): any => async (dispatch: any) => {\r\n\r\n  dispatch(loginStart());\r\n  try {\r\n\r\n    await fetchLogin({\r\n      username: username,\r\n      password: password\r\n    })\r\n\r\n    dispatch(checkLogin());\r\n\r\n  } catch (err) {\r\n    console.error('Login error :', err);\r\n    dispatch(loginFailed(err.message));\r\n  }\r\n\r\n}\r\n\r\nexport const doLoginIfNeeded = (username: string, password: string): any => (dispatch: any, getState: any) => {\r\n  if (shouldLogin(getState())) {\r\n    return dispatch(doLogin(username, password))\r\n  }\r\n}","import { createReducer } from '@reduxjs/toolkit'\r\nimport { initialState } from '.';\r\nimport { loginStart, loginComplete, logoutStart, logoutComplete, checkLoginStart } from './actions'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(loginStart, (state) => {\r\n      state.isFetching = true;\r\n    })\r\n    .addCase(checkLoginStart, (state) => {\r\n      state.isFetching = true;\r\n    })    \r\n    .addCase(loginComplete, (state, action) => {\r\n      if (action.error) {\r\n        state.logged = false;\r\n        state.error = action.payload.toString();\r\n      } else {\r\n\r\n        state.userId = action.payload.userId;\r\n        state.userName = action.payload.userName;\r\n        state.userHash = action.payload.userHash;\r\n        state.logged = true;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(logoutStart, (state) => {\r\n      state.isFetching = true;\r\n    })\r\n    .addCase(logoutComplete, (state) => {\r\n      state.isFetching = false;\r\n      state.logged = false;\r\n      delete state.userId;\r\n      delete state.userName;\r\n      delete state.userHash;\r\n      delete state.error;\r\n    })    \r\n})\r\n\r\nexport default reducer;\r\n","export interface ILogin {\r\n  userId?: number;\r\n  userName?: string,\r\n  userHash?: string,\r\n  lastError?: string,\r\n}\r\n\r\nexport interface ILoginState {\r\n  logged?: boolean,\r\n  userId?: number,\r\n  userName?: string,\r\n  userHash?: string,\r\n  lastError?: string,\r\n  error?: string,\r\n  lastUpdated?: number,\r\n  isFetching: boolean,\r\n}\r\n\r\nexport const initialState: ILoginState = {\r\n  isFetching: false\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport { ICoords, ITooltipKeys } from '.';\r\nimport { RootState } from '../store'\r\n\r\nexport const createTooltip = createAction('CREATE_TOOLTIP', (keys, coords) => ({\r\n  payload: {\r\n    keys,\r\n    coords\r\n  },\r\n}));\r\nexport const closeTooltip = createAction('CLOSE_TOOLTIP', keys => ({\r\n  payload: {\r\n    keys\r\n  },\r\n}));\r\nexport const clearTooltips = createAction('CLEAR_TOOLTIPS');\r\n\r\nexport const showTooltip = (keys: ITooltipKeys, coords: ICoords): any => async (dispatch: any) => {\r\n  dispatch(createTooltip(keys, coords));\r\n}\r\n\r\nexport const clearTooltipsIfNeeded = (): any => (dispatch: any, getState: any) => {\r\n  const state: RootState = getState();\r\n  if (state.tooltips.items.length > 0) {\r\n    dispatch(clearTooltips());;\r\n  }\r\n}","import { createReducer } from '@reduxjs/toolkit'\r\nimport { initialState } from '.';\r\nimport { createTooltip, closeTooltip, clearTooltips } from './actions'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(createTooltip, (state, action) => {\r\n      const hash = JSON.stringify(action.payload.keys);\r\n      const index = state.items.findIndex(item => item.hash === hash);\r\n      let zIndex = 0;\r\n      if (state.items.length)\r\n        zIndex = state.items[state.items.length - 1].zIndex + 1;\r\n      if (index === - 1)\r\n        state.items.push({\r\n          keys: action.payload.keys,\r\n          coords: action.payload.coords,\r\n          hash,\r\n          zIndex \r\n        })\r\n      else {\r\n        //state.list = moveToEnd(state.list, index);\r\n        state.items[state.items.length - 1].zIndex = zIndex;\r\n      }  \r\n    })\r\n    .addCase(closeTooltip, (state, action) => {\r\n      let hash = JSON.stringify(action.payload.keys);\r\n      state.items = state.items.filter(val => val.hash !== hash);\r\n    })\r\n    .addCase(clearTooltips, (state) => {\r\n      state.items = [];\r\n    })    \r\n})\r\n\r\nexport default reducer;\r\n","export interface ITooltipKeys {\r\n  topicId: number,\r\n  number: number\r\n}\r\n\r\nexport interface ICoords {\r\n  x: number,\r\n  y: number\r\n}\r\n\r\nexport interface ITooltipItem {\r\n  hash: string,\r\n  keys: ITooltipKeys,\r\n  coords: ICoords,\r\n  zIndex: number\r\n}\r\n\r\nexport interface ITooltipsList extends Array<ITooltipItem> {}\r\n\r\nexport interface ITooltipsState {\r\n  items: ITooltipsList,\r\n}\r\n\r\nexport const initialState: ITooltipsState = {\r\n  items: []\r\n}","import { domain, paramsToString, urlNewTopic } from \".\";\r\n\r\nexport interface IRequest {\r\n  action: \"new\",\r\n  rnd: number,\r\n  topic_text: string,\r\n  message_text: string,\r\n  target_section: string,\r\n  target_forum: string,\r\n  voting: number,\r\n  select1?: string,\r\n  select2?: string,\r\n  select3?: string,\r\n  select4?: string,\r\n  select5?: string,\r\n  select6?: string,\r\n  select7?: string,\r\n  select8?: string,\r\n  select9?: string,\r\n  select10?: string\r\n}\r\n\r\nexport const fetchNewTopic = async (params: IRequest): Promise<any> => {\r\n\r\n  await fetch(`${domain}/${urlNewTopic}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    }\r\n  });\r\n}","import { createAction } from '@reduxjs/toolkit'\r\n\r\nimport { fetchNewTopic, IRequest } from 'src/api/newtopic';\r\nimport { RootState } from '../store';\r\n\r\nexport type postNewTopicParams = {\r\n  subject: string,\r\n  text: string,\r\n  section: number,\r\n  forum: string,\r\n  isVoting: boolean,\r\n  votingItems?: Array<string>,\r\n  onSuccess?: () => void\r\n};\r\n\r\nexport const postNewTopicStart = createAction('POST_NEW_TOPIC_START');\r\nexport const postNewTopicComplete = createAction('POST_NEW_TOPIC_COMPLETE');\r\nexport const postNewTopicError = createAction('POST_NEW_TOPIC_ERROR', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\nexport const newTopicText = createAction('NEW_TOPIC_TEXT', text => ({\r\n  payload: {\r\n    text\r\n  },\r\n  error: false\r\n}));\r\nexport const newTopicClear = createAction('NEW_TOPIC_CLEAR');\r\nexport const newTopicSubject = createAction('NEW_TOPIC_SUBJECT', text => ({\r\n  payload: {\r\n    text\r\n  },\r\n  error: false\r\n}));\r\nexport const newTopicSection = createAction('NEW_TOPIC_SECTION', section => ({\r\n  payload: {\r\n    section\r\n  },\r\n  error: false\r\n}));\r\nexport const newTopicShowVoting = createAction('SHOW_VOTING', show => ({\r\n  payload: {\r\n    show\r\n  },\r\n  error: false\r\n}));\r\n\r\nexport const shouldPostNewTopic = (state: RootState): boolean => {\r\n  const newTopic = state.newTopic;\r\n  if (!newTopic) {\r\n    return false\r\n  }\r\n  if (newTopic.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const postNewTopicIfNeeded = (params: postNewTopicParams): any => (dispatch: any, getState: any) => {\r\n  if (shouldPostNewTopic(getState())) {\r\n    return dispatch(postNewTopic(params));\r\n  }\r\n}\r\n\r\nconst postNewTopic = (params: postNewTopicParams) => async (dispatch: any) => {\r\n\r\n  dispatch(postNewTopicStart());\r\n\r\n  let fetchParams: IRequest = {\r\n    message_text: params.text,\r\n    topic_text: params.subject,\r\n    target_section: String(params.section),\r\n    target_forum: params.forum.toLowerCase(),\r\n    action: 'new',\r\n    rnd: Math.round(Math.random() * 10000000000),\r\n    voting: params.isVoting ? 1 : 0\r\n  };\r\n\r\n  if (params.votingItems)\r\n    for (let i = 0; i < params.votingItems.length; i++) {\r\n      fetchParams[`section${i + 1}`] = params.votingItems[i];\r\n    }\r\n\r\n  await fetchNewTopic(fetchParams);\r\n\r\n  dispatch(postNewTopicComplete());\r\n\r\n  if (params.onSuccess)\r\n    params.onSuccess();\r\n}","import { createReducer } from '@reduxjs/toolkit'\r\n\r\nimport { postNewTopicStart, postNewTopicComplete, postNewTopicError, newTopicText, \r\n  newTopicClear, newTopicSubject, newTopicSection, newTopicShowVoting} from './actions'\r\n\r\nimport { initialState } from '.'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(postNewTopicStart, (state) => {\r\n      state.isFetching = true;\r\n      delete state.error;\r\n    })\r\n    .addCase(postNewTopicComplete, (state) => {\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(postNewTopicError, (state, action) => {\r\n      state.isFetching = false;\r\n      state.error = action.payload;\r\n    })\r\n    .addCase(newTopicText, (state, action) => {\r\n      state.text = action.payload.text;\r\n    })    \r\n    .addCase(newTopicClear, (state) => {\r\n      state.text = '';\r\n      state.subject = '';\r\n      state.isVoting = false;\r\n    })    \r\n    .addCase(newTopicSubject, (state, action) => {\r\n      state.subject = action.payload.text;\r\n    })    \r\n    .addCase(newTopicShowVoting, (state, action) => {\r\n      state.isVoting = action.payload.show;\r\n    })   \r\n    .addCase(newTopicSection, (state, action) => {\r\n      state.section = action.payload.section;\r\n      state.forum = action.payload.section == null ? '' : action.payload.section.forum.toLowerCase()\r\n    })   \r\n  })\r\n\r\nexport default reducer;","import { ISectionItem } from \"../sections\";\r\n\r\nexport type NewTopicState = {\r\n  isFetching: boolean,\r\n  section: ISectionItem,\r\n  text: string,\r\n  subject: string,\r\n  forum: string,\r\n  isVoting: boolean,\r\n  error?: string\r\n};\r\n\r\nexport const initialState: NewTopicState = {\r\n  isFetching: false,\r\n  section: null,\r\n  text: '',\r\n  subject: '',\r\n  forum: '1C',\r\n  isVoting: false\r\n}","import { domain, paramsToString, urlNewMessage } from \".\";\r\n\r\n// New message\r\nexport interface IRequest {\r\n  message_text: string,\r\n  action: \"new\",\r\n  topic_id: string,\r\n  rnd: number,\r\n  voting_select?: number,\r\n  as_admin?: boolean\r\n}\r\n\r\nexport const fetchNewMessage = async (params: IRequest): Promise<any> => {\r\n  \r\n  const url = urlNewMessage.replace(':id', params.topic_id);\r\n\r\n  const options: RequestInit = {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Accept': 'text/html,application/xhtml+xml,application/xml',\r\n      'Content-Type': 'application/x-www-form-urlencoded'  \r\n    },\r\n    redirect: 'follow'\r\n  }\r\n\r\n  const result = await fetch(`${domain}/${url}`, options);\r\n  return result;\r\n}","import { createAction } from '@reduxjs/toolkit'\r\nimport { fetchNewMessage, IRequest } from 'src/api/newmessage'\r\n\r\nexport const postNewMessageStart = createAction('POST_NEW_MESSAGE_START');\r\nexport const postNewMessageComplete = createAction('POST_NEW_MESSAGE_COMPLETE');\r\nexport const newMessageText = createAction('NEW_MESSAGE_TEXT', text => ({\r\n  payload: {\r\n    text,\r\n  }\r\n}));\r\nexport const addMessageText = createAction('ADD_MESSAGE_TEXT', text => ({\r\n  payload: {\r\n    text,\r\n  }\r\n}));\r\n\r\nexport type PostNewmessageParams = {\r\n  text: string,\r\n  topicId: string,\r\n  voting_select?: number,\r\n  onSuccess?: () => void\r\n}\r\n\r\nexport const postNewMessage = (params: PostNewmessageParams): any => async (dispatch: any) => {\r\n\r\n  dispatch(postNewMessageStart());\r\n\r\n  let fetchParams: IRequest = {\r\n    message_text: params.text,\r\n    action: \"new\",\r\n    topic_id: params.topicId,\r\n    rnd: Math.round(Math.random() * 10000000000)\r\n  };\r\n\r\n  if (params.voting_select)\r\n    fetchParams.voting_select = params.voting_select;\r\n\r\n  try {\r\n    await fetchNewMessage(fetchParams);\r\n    await dispatch(postNewMessageComplete());\r\n    if (params.onSuccess)\r\n      params.onSuccess();\r\n\r\n  } catch (err) {\r\n    console.error(\"Failed to post new message: \" + err);\r\n  }\r\n}\r\n","import { configureStore  } from '@reduxjs/toolkit'\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport logger from 'redux-logger' // eslint-disable-line @typescript-eslint/no-unused-vars\r\n\r\nimport topicsList from './topicslist/reducer'\r\nimport topic from './topic/reducer'\r\nimport sections from './sections/reducer'\r\nimport options from './options/reducer'\r\nimport login from './login/reducer'\r\nimport tooltips from './tooltips/reducer'\r\nimport newTopic from './newtopic/reducer'\r\nimport newMessage from './newmessage/reducer'\r\n\r\nconst reducer = {\r\n  topicsList,\r\n  topic,\r\n  sections,\r\n  options,\r\n  login,\r\n  tooltips,\r\n  newTopic,\r\n  newMessage\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  //middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n  devTools: process.env.NODE_ENV !== 'production'\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n\r\nexport default store","import { createReducer } from '@reduxjs/toolkit'\r\nimport { initialState } from '.';\r\nimport { addMessageText, newMessageText, postNewMessageComplete, postNewMessageStart } from './actions'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(postNewMessageStart, (state) => {\r\n      state.isFetching = true;\r\n    })\r\n    .addCase(postNewMessageComplete, (state) => {\r\n      state.isFetching = false;\r\n    })  \r\n    .addCase(newMessageText, (state, action) => {\r\n      state.text = action.payload.text;\r\n    })  \r\n    .addCase(addMessageText, (state, action) => {\r\n      state.text += action.payload.text;\r\n    })            \r\n  })\r\n\r\nexport default reducer;","\r\nexport type INewMessageState = {\r\n  isFetching: boolean;\r\n  text: string\r\n};\r\n\r\nexport const initialState: INewMessageState = {\r\n  isFetching: false,\r\n  text: ''\r\n}","import React, { FC, ReactElement } from 'react'\r\nimport { Dropdown } from 'react-bootstrap'\r\n\r\nimport { doLogout } from 'src/data/login/actions'\r\nimport { domain } from 'src/api'\r\n\r\nimport { useAppDispatch } from 'src/data/store'\r\n\r\ntype IProps = {\r\n  userId: number,\r\n  userName: string\r\n}\r\n\r\ntype HTMLProps = React.HTMLProps<HTMLSpanElement>\r\nconst CustomToggle = React.forwardRef<HTMLSpanElement, HTMLProps>(({ children, onClick }, ref) => (\r\n  <span\r\n    ref={ref}\r\n    style={{ cursor: \"pointer\" }}\r\n    className='link'\r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n  >\r\n    {children}\r\n  </span>\r\n));\r\n\r\nconst LoggedUser: FC<IProps> = ({ userId, userName }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onLogout = (event: any) => {\r\n    event.preventDefault();\r\n    dispatch(doLogout());\r\n  }\r\n\r\n  const onMenuSelect = (eventKey: any, event: any): any => {\r\n    if (eventKey === 'exit') {\r\n      onLogout(event);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ float: \"left\" }}>\r\n      <Dropdown id=\"dropdown-custom-menu\" onSelect={onMenuSelect}>\r\n        <span>Привет, </span>\r\n        <Dropdown.Toggle as={CustomToggle}>{userName} ▼</Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item eventKey=\"profile\" href={`${domain}/users.php?id=${userId}`}>Профиль</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"myTopics\" href={`#/index.php?user_id=${userId}`}>Мои темы</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item eventKey=\"options\" href={`#/options.php`}>Настройки</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item eventKey=\"exit\">Выход</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoggedUser;","import React, { FC, ReactElement, useState } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { FormControl, Button } from 'react-bootstrap'\r\n\r\nimport { doLoginIfNeeded } from 'src/data/login/actions'\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\n\r\nconst mapState = (state: RootState) => {\r\n  return state.login;\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst LoginForm: FC<ConnectedProps<typeof connector>> = (props): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onLogin = (event) => {\r\n    event.preventDefault();\r\n    dispatch(doLoginIfNeeded(username, password));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form name=\"enterform\" className=\"flex-row\" style={{ flexWrap: \"wrap\" }}>\r\n        <FormControl\r\n          type=\"text\"\r\n          placeholder=\"Имя\"\r\n          value={username}\r\n          onChange={e => setUsername(e.target.value)}\r\n          size=\"sm\"\r\n          className='input'\r\n          style={{ marginRight: \"5px\", flex: \"0 1 300px\" }}\r\n        />\r\n        <FormControl\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          maxLength={20}\r\n          autoComplete=\"off\"\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n          size=\"sm\"\r\n          className='input'\r\n          style={{ marginRight: \"5px\", flex: \"0 1 300px\" }}\r\n        />\r\n        <Button\r\n          size=\"sm\"\r\n          variant=\"light\"\r\n          className='button'          \r\n          onClick={onLogin}\r\n        >Войти</Button>\r\n      </form>\r\n      <p style={{ margin: \"0px\" }}>Войти можно на сайте <a href=\"https://forum.mista.ru/\">forum.mista.ru</a></p>\r\n      <a rel=\"nofollow\" href=\"https://forum.mista.ru/user_registration.php\">Регистрация</a>\r\n      <span style={{ margin: \"5px\" }}>|</span>\r\n      <a rel=\"nofollow\" href=\"https://forum.mista.ru/remember_password.php\">Забыли пароль?</a>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default connector(LoginForm);","import React, { FC, ReactElement } from 'react'\r\n\r\nimport './error.css'\r\n\r\ntype IProps = {\r\n  text: string\r\n}\r\n\r\nconst ErrorElem: FC<IProps> = ({ text }): ReactElement | null => {\r\n  if (!text)\r\n    return null;\r\n\r\n  return (\r\n    <div className=\"error\" dangerouslySetInnerHTML={{ __html: text }}></div>\r\n  )\r\n}\r\n\r\nexport default ErrorElem;","import React, { FC, ReactElement, useEffect } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport LoggedUser from './logged_user'\r\nimport LoginForm from './login_form'\r\nimport ErrorElem from '../common/error'\r\n\r\nimport { checkLoginIfNeeded } from 'src/data/login/actions'\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\n\r\nconst mapState = (state: RootState) => {\r\n  return state.login;\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst Login: FC<ConnectedProps<typeof connector>> = ({ logged, userId, userName, error }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(checkLoginIfNeeded());\r\n  }, [dispatch]);\r\n\r\n  let elem: ReactElement;\r\n  if (logged === true)\r\n    elem = <LoggedUser userId={userId} userName={userName} />\r\n  else if (logged === false)\r\n    elem = <LoginForm />\r\n  else\r\n    elem = null;\r\n\r\n  return (\r\n    <>\r\n      {elem}\r\n      {error && <ErrorElem text={error} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connector(Login);","import React, { FC, ReactElement, useEffect } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nimport { getSectionsIfNeeded } from 'src/data/sections/actions'\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\nimport type { ISectionItem } from 'src/data/sections'\r\n\r\ntype IProps = {\r\n  id: string,\r\n  defaultValue: string,\r\n  selected?: string,\r\n  style?: {},\r\n  size?: 'sm' | 'lg',\r\n  onChange: (e: any, value: ISectionItem) => void\r\n}\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const { items, tree } = state.sections;\r\n\r\n  return {\r\n    items,\r\n    tree\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst Sections: FC<ConnectedProps<typeof connector> & IProps> = (props): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getSectionsIfNeeded());\r\n  }, [dispatch]);\r\n\r\n  const onSelect: (e: React.ChangeEvent<HTMLElement>) => void = (e: any) => {\r\n\r\n    const { items, onChange } = props;\r\n\r\n    if (onChange) {\r\n      const code = e.currentTarget.value;\r\n      const arr = items.filter(item => item.code === code);\r\n      if (arr.length > 0)\r\n        onChange(e, arr[0]);\r\n      else\r\n        onChange(e, null);\r\n    }\r\n  }\r\n\r\n  const { id, tree, defaultValue, selected, style, size } = props;\r\n\r\n  let sectionsElem = [];\r\n  for (let forum in tree) {\r\n\r\n    let group =\r\n      <optgroup key={forum} label={forum}>\r\n        {tree[forum].map((item) => (\r\n          <option key={item.id} value={item.code}>\r\n            {item.name}\r\n          </option>\r\n        ))}\r\n      </optgroup>\r\n\r\n    sectionsElem.push(group);\r\n  }\r\n\r\n  return (\r\n    <Form.Select\r\n      onChange={onSelect}\r\n      value={selected}\r\n      style={style}\r\n      className='input'\r\n      size={size}\r\n      id={id}\r\n    >\r\n      <option value=\"\">{defaultValue}</option>\r\n      {sectionsElem}\r\n    </Form.Select>\r\n  )\r\n}\r\n\r\nexport { Sections };\r\nexport default connector(Sections);","import React, { ReactElement, useEffect } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport queryString from 'query-string'\r\n\r\nimport Login from '../login'\r\nimport Sections from './sections'\r\nimport { getSectionsIfNeeded } from 'src/data/sections/actions'\r\n\r\nconst Header = (): ReactElement => {\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate()\r\n  const location = useLocation();\r\n  const params = queryString.parse(location.search);\r\n\r\n  useEffect(() => {\r\n    dispatch(getSectionsIfNeeded());\r\n  }, [dispatch]);  \r\n\r\n  const onSectionChange = (e, value) => {\r\n    if (value)\r\n      navigate(`/index.php?section=${value.code}`);\r\n    else\r\n      navigate(`/`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div className=\"header-left\">\r\n        <Login />\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <Sections\r\n          id=\"sect\"\r\n          defaultValue=\"--Все секции--\"\r\n          selected={String(params.section) || \"\"}\r\n          onChange={onSectionChange}\r\n          size=\"sm\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Header;","import React, { FC, ReactElement } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { getMaxPage } from 'src/utils'\r\n\r\ntype IProps = {\r\n  count: number,\r\n  topicId: number\r\n}\r\n\r\nconst Pages: FC<IProps> = ({ count, topicId }): ReactElement => {\r\n\r\n  let pages = [];\r\n  if (count > 100) {\r\n    let maxPage = getMaxPage(count);\r\n    for (let i = 1; i <= maxPage; i++) {\r\n      let href = `/topic.php?id=${topicId}&page=${i}`;\r\n      let text: string;\r\n      if (i > 3 && i < maxPage)\r\n        text = '•';\r\n      else\r\n        text = String(i);\r\n      pages.push(<Link key={i} className=\"agh\" style={{ margin: \"3px\" }} to={href}>{text}</Link>);\r\n    }\r\n  }\r\n\r\n  if (count > 20) {\r\n    let href = `/topic.php?id=${topicId}&page=last20#F`;\r\n    pages.push(<Link key=\"last20\" className=\"agh\" style={{ margin: \"3px\" }} to={href}>»</Link>);\r\n  }\r\n\r\n  return (\r\n    <span className=\"topic-pages\">\r\n      {pages}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default Pages;","import React, { FC, ReactElement } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Pages from './pages';\r\nimport { ITopicsListItem } from 'src/data/topicslist';\r\nimport { RootState } from 'src/data/store';\r\n\r\ntype IProps = {\r\n  data: ITopicsListItem\r\n};\r\n\r\nconst mapState = (state: RootState) => {\r\n  return {\r\n    login: state.login\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst TopicNameCell: FC<ConnectedProps<typeof connector> & IProps> = ({ data, login }): ReactElement => {\r\n\r\n  let href = `/topic.php?id=${data.id}`;\r\n  let classes = classNames('agb', 'mr5', {\r\n    'bold': data.count >= 100,\r\n    'mytopics': data.author === login.userName,\r\n    'pinned': data.pinned\r\n  });\r\n\r\n  let isVoting;\r\n  if (data.isVoting) {\r\n    isVoting = <span className=\"agh separator\">[±]</span>\r\n  }\r\n\r\n  let sectionHref = `/index.php?section=${data.sectionCode}`;\r\n  let section;\r\n\r\n  if (data.section) {\r\n    section = (\r\n      <span className=\"topic-section\">\r\n        <span className=\"agh\" style={{ margin: \"0px 5px\" }}>/</span>\r\n        <Link key=\"1\" rel=\"nofollow\" className=\"agh\" to={sectionHref} >{data.section}</Link>\r\n      </span>\r\n    )\r\n  }\r\n\r\n  let closed;\r\n  let down;\r\n  let text = data.text;\r\n  if (data.closed)\r\n    closed = <span className=\"agh\">Ø</span>\r\n\r\n  if (data.down)\r\n    down = <span className=\"agh\">↓</span>\r\n\r\n  if (data.sectionCode === 'job' && text.substring(0, 3) !== 'JOB')\r\n    text = 'JOB: ' + text;\r\n\r\n  else if (data.forum === 'life' && text.substring(0, 3) !== 'OFF')\r\n    text = 'OFF: ' + text;\r\n\r\n  else if (data.sectionCode === 'v7' && text.substring(0, 2) !== 'v7')\r\n    text = 'v7: ' + text;\r\n\r\n  return (\r\n    <div className=\"cell-title\">\r\n      {data.pinned && <i className=\"fa fa-thumb-tack agh\" aria-hidden=\"true\" style={{marginRight: \"5px\"}}></i>}\r\n      <Link to={href} className={classes} dangerouslySetInnerHTML={{ __html: text }} style={{ overflowWrap: \"anywhere\" }}></Link>\r\n      {isVoting}\r\n      <Pages count={data.count} topicId={data.id} />\r\n      {closed}\r\n      {down}\r\n      {section}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default connector(TopicNameCell);","import React, { FC, ReactElement } from 'react'\r\n\r\nimport { useAppDispatch } from 'src/data/store';\r\nimport { togglePreview } from 'src/data/topicslist/actions';\r\n\r\ntype IProps = {\r\n  topicId: number,\r\n  expanded: boolean\r\n};\r\n\r\nconst PreviewLink: FC<IProps> = ({ topicId, expanded }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onClick = () => {\r\n    dispatch(togglePreview(topicId, 0));\r\n  }\r\n\r\n  const text = expanded \r\n    ? <i className=\"fa fa-minus-square-o agh\" aria-hidden=\"true\"></i> \r\n    : <i className=\"fa fa-plus-square-o agh\" aria-hidden=\"true\"></i>;\r\n  return (\r\n    <div className=\"cell-preview-link\" onClick={onClick}>\r\n      <span>{text}</span>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default PreviewLink;","import { FC, ReactElement, useCallback, useEffect, useState } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport dateFormat from 'dateformat'\r\n\r\nimport TopicNameCell from './topic_name_cell';\r\nimport PreviewLink from './preview_link'\r\n\r\nimport { today } from 'src/utils'\r\nimport { RootState, useAppDispatch } from 'src/data/store';\r\nimport { ITopicsListItem } from 'src/data/topicslist';\r\nimport { fetchTopicMessage } from 'src/api/topicMessages';\r\nimport { togglePreview } from 'src/data/topicslist/actions';\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  return {\r\n    login: state.login\r\n  }\r\n}\r\nconst connector = connect(mapState);\r\n\r\ntype IProps = {\r\n  data: ITopicsListItem,\r\n  topicId: number\r\n}\r\n\r\nconst Row: FC<ConnectedProps<typeof connector> & IProps> = ({ data, topicId }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [time, setTime] = useState(data.updated);\r\n  const updateTime = useCallback(async () => {\r\n    const msg = await fetchTopicMessage(topicId, data.count);\r\n    setTime(msg.time);\r\n  }, [topicId, data.count])\r\n  \r\n  useEffect(() => {\r\n    if (data.pinned)\r\n      updateTime();\r\n  }, [data.pinned, updateTime])\r\n\r\n  const countOnClick = () => {\r\n    dispatch(togglePreview(topicId, data.count));\r\n  }\r\n\r\n  let date = new Date(time);\r\n  let timeF: string;\r\n  if (time === 2147483648000) {\r\n    timeF = '';\r\n  } else if (today(date)) {\r\n    timeF = dateFormat(time, 'HH:MM')\r\n  } else {\r\n    timeF = dateFormat(time, 'dd.mm.yy');\r\n  }\r\n  return (\r\n    <div className=\"topics-list-row\">\r\n      <div className=\"cell-forum\">\r\n        {data.forum}\r\n      </div>\r\n      <div className=\"cell-section\">\r\n        {data.section}\r\n      </div>\r\n      <div className=\"cell-answ\" onClick={countOnClick}>\r\n        <i className=\"fa fa-comments-o\" aria-hidden=\"true\" style={{marginRight: \"3px\"}}></i>\r\n        <span>{data.count}</span>\r\n      </div>\r\n      <PreviewLink topicId={data.id} expanded={data.showPreview} />\r\n      <TopicNameCell data={data}/>\r\n      <div className=\"cell-author\">\r\n        <i aria-hidden=\"true\" className=\"fa fa-user-circle\" style={{marginRight: \"3px\"}}></i>\r\n        {data.author}\r\n      </div>\r\n      <div className=\"cell-lastuser\">\r\n        <div style={{ display: \"flex\" }}>\r\n          <span className=\"cell-lastuser-time\">{timeF}</span>\r\n          <span className=\"cell-lastuser-user\">{data.lastUser}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"cell-last20\">\r\n        <Link to={`/topic.php?id=${String(data.id)}&page=last20#F`} style={{ color: \"inherit\", display: \"block\", width: \"100%\", textAlign: \"center\" }}>\r\n          <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default connector(Row);","import { FC, ReactElement } from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\n\r\nimport './pages.css'\r\n\r\ntype IProps = {\r\n  locationParams: URLSearchParams,\r\n  baseUrl: string,\r\n  maxPage: number,\r\n  last20?: boolean\r\n}\r\n\r\nconst Pages: FC<IProps> = ({ locationParams, baseUrl, maxPage, last20 }): ReactElement => {\r\n\r\n  let currentPage: number | string;\r\n  const page = locationParams.get('page');\r\n  if (!page)\r\n    currentPage = 1;\r\n  else if (page === \"last20\")\r\n    currentPage = \"last20\";\r\n  else\r\n    currentPage = parseInt(page, 10) || 1;\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= maxPage; i++) {\r\n    locationParams.set('page', String(i));\r\n    let href = '#/' + baseUrl + '?' + locationParams.toString();\r\n\r\n    pages.push(\r\n      <Pagination.Item active={currentPage === i} key={i} href={href}>\r\n        {i}\r\n      </Pagination.Item>);\r\n  }\r\n\r\n  if (last20 === true) {\r\n    locationParams.set(\"page\", \"last20\");\r\n    let href = '#/' + baseUrl + '?' + locationParams.toString();\r\n    pages.push(<Pagination.Item active={currentPage === \"last20\"} key=\"last20\" href={href}>»</Pagination.Item>);\r\n  }\r\n\r\n  return (\r\n    <Pagination style={{ margin: \"0px\" }}>\r\n      {pages}\r\n    </Pagination>\r\n  )\r\n\r\n}\r\n\r\nexport default Pages;","import React, { FC, ReactElement, useRef } from 'react'\r\nimport { FormControl, Button, ButtonGroup, Form } from 'react-bootstrap'\r\n\r\nimport './text_editor.css'\r\nimport { useAppDispatch } from 'src/data/store'\r\nimport { newTopicShowVoting } from 'src/data/newtopic/actions'\r\n\r\ntype IProps = {\r\n  placeholder: string,\r\n  showVoting?: boolean,\r\n  isVoting?: boolean,\r\n  text: string,\r\n  isFetching: boolean,\r\n  formName: string,\r\n}\r\n\r\nconst TextEditor: FC<IProps> = ({ formName, placeholder, showVoting, isVoting, isFetching, text }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n  const textAreaRef = useRef() as React.MutableRefObject<HTMLTextAreaElement>;\r\n\r\n  const onButtonCode1c = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n\r\n    e.preventDefault();\r\n\r\n    const openTag = '[1C]\\n';\r\n    const closeTag = '\\n[/1C]';\r\n\r\n    const textAreaNode = textAreaRef.current;\r\n\r\n    const start = textAreaNode.selectionStart;\r\n    const end = textAreaNode.selectionEnd;\r\n\r\n    const oldText = textAreaNode.value;\r\n    const len = oldText.length;\r\n    const selectedText = oldText.substring(start, end);\r\n    const replacement = openTag + selectedText + closeTag;\r\n    let newText = oldText.substring(0, start) + replacement + oldText.substring(end, len);\r\n\r\n    dispatch({\r\n      type: formName + '_TEXT',\r\n      payload: {\r\n        text: newText\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  const onVotingChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(newTopicShowVoting(e.currentTarget.checked))\r\n  }\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    dispatch({\r\n      type: formName + '_TEXT',\r\n      payload: {\r\n        text: e.currentTarget.value\r\n      }\r\n    })\r\n  }\r\n\r\n  const onKeyPress = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n\r\n    if (e.key === 'Enter' && e.ctrlKey) {\r\n      let parent = e.currentTarget.parentElement;\r\n      while (parent && parent.tagName.toUpperCase() !== \"FORM\") {\r\n        parent = parent.parentElement;\r\n      }\r\n      if (parent)\r\n        parent.dispatchEvent(new Event(\"submit\", { cancelable: true, bubbles: true }));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <FormControl\r\n        as=\"textarea\"\r\n        placeholder={placeholder}\r\n        cols={70} rows={3}\r\n        value={text}\r\n        onChange={onChange}\r\n        onKeyPress={onKeyPress}\r\n        ref={textAreaRef}\r\n        className=\"text-editor input\"\r\n      />\r\n      <div className=\"flex-row\">\r\n        <ButtonGroup>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"light\"\r\n            onClick={onButtonCode1c}\r\n            style={{ marginRight: \"5px\" }}\r\n            className='button'\r\n          >Код 1С</Button>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"light\"\r\n            disabled={isFetching}\r\n            type=\"submit\"\r\n            className='button'\r\n          >\r\n            {isFetching ? 'Отправляется' : 'Отправить'}\r\n          </Button>\r\n        </ButtonGroup>\r\n        {showVoting &&\r\n          <Form.Check\r\n            id=\"show_voting\"\r\n            type=\"checkbox\"\r\n            checked={isVoting}\r\n            onChange={onVotingChange}\r\n            label=\"Голосование\"\r\n            style={{ margin: \"auto 0px auto auto\" }} />\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default TextEditor;","import React, { FC, ReactElement, useState } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FormGroup } from 'react-bootstrap'\r\n\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\nimport { newTopicClear, newTopicSection, newTopicSubject, postNewTopicError, postNewTopicIfNeeded } from 'src/data/newtopic/actions'\r\n\r\nimport Sections from './sections'\r\nimport TextEditor from '../common/text_editor'\r\nimport ErrorElem from '../common/error'\r\n\r\nimport './new_topic.css'\r\nimport { ISectionItem } from 'src/data/sections'\r\n\r\ntype IProps = {\r\n  onSubmitSuccess?: any\r\n};\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  return {\r\n    sections: state.sections,\r\n    newTopic: state.newTopic\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst NewTopic: FC<ConnectedProps<typeof connector> & IProps> = ({ sections, newTopic, onSubmitSuccess }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n  const [currentSection, setSection] = useState(null);\r\n\r\n  const [votes, setVotes] = useState(Array(10).fill(\"\"));\r\n\r\n  const onSectionChange = (e: any, section: ISectionItem) => {\r\n    setSection(section);\r\n    dispatch(newTopicSection(section));\r\n  }\r\n\r\n  const onVoteTextChange = (i: number) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    let votesCopy = votes.slice();\r\n    votesCopy[i] = e.target.value;\r\n    setVotes(votesCopy);\r\n  }\r\n\r\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n\r\n    e.preventDefault();\r\n\r\n    if (!currentSection) {\r\n      dispatch(postNewTopicError('Не выбрана секция'));\r\n      return;\r\n    }\r\n\r\n    let subject = newTopic.subject;\r\n    if (!subject) {\r\n      dispatch(postNewTopicError('Не указана тема'));\r\n      return;\r\n    }\r\n\r\n    if (!newTopic.text) {\r\n      dispatch(postNewTopicError('Не указано сообщение'));\r\n      return;\r\n\r\n    }\r\n\r\n    let params = {\r\n      subject,\r\n      text: newTopic.text,\r\n      section: currentSection.id,\r\n      forum: currentSection.forum,\r\n      isVoting: newTopic.isVoting,\r\n      votingItems: [],\r\n      onSuccess: this_onSubmitSuccess\r\n    };\r\n\r\n    if (newTopic.isVoting) {\r\n      params.votingItems = [];\r\n      for (let i = 1; i <= 10; i++) {\r\n        let val = votes[i - 1];\r\n        if (val) {\r\n          params.votingItems.push(val);\r\n        }\r\n      }\r\n    }\r\n\r\n    dispatch(postNewTopicIfNeeded(params));\r\n  }\r\n\r\n  const onSubjectChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(newTopicSubject(e.target.value));\r\n  }\r\n\r\n  const this_onSubmitSuccess = () => {\r\n\r\n    dispatch(newTopicClear());\r\n\r\n    if (onSubmitSuccess) {\r\n      onSubmitSuccess();\r\n    }\r\n  }\r\n  let groupsElem = [];\r\n  for (let forum in sections.tree) {\r\n    groupsElem.push(<option key={forum} value={forum.toLowerCase()}>{forum}</option>);\r\n  }\r\n\r\n  let votingOptions = [];\r\n\r\n  if (newTopic.isVoting) {\r\n    votingOptions.push(<div key=\"p\">Варианты:</div>);\r\n    for (let i = 1; i <= 10; i++) {\r\n      votingOptions.push(\r\n        <InputGroup key={i} size=\"sm\" style={{ marginBottom: \"3px\", width: \"100%\" }}>\r\n          <InputGroup.Text\r\n            style={{ width: \"40px\" }}\r\n            className='input'\r\n          >\r\n            {`${i}.`}\r\n          </InputGroup.Text>\r\n          <Form.Control\r\n            type=\"text\"\r\n            maxLength={50}\r\n            className='input'\r\n            value={votes[i - 1]}\r\n            onChange={onVoteTextChange(i - 1)}\r\n          />\r\n        </InputGroup>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className=\"new-topic-container\" onSubmit={onSubmit}>\r\n      <div id=\"newtopic_form\" className=\"new-topic-text\">\r\n        <div><b>Новая тема:</b></div>\r\n        {newTopic.error && <ErrorElem text={newTopic.error} />}\r\n        <div className=\"flex-row\" style={{ marginBottom: \"3px\" }}>\r\n          <Form.Select\r\n            disabled\r\n            size=\"sm\"\r\n            value={newTopic.forum}\r\n            style={{ flex: \"0 1 90px\" }}\r\n            className='input'\r\n          >\r\n            {groupsElem}\r\n          </Form.Select>\r\n          <Sections\r\n            id=\"target_section\"\r\n            defaultValue=\"Секция\"\r\n            selected={newTopic.section?.code}\r\n            size=\"sm\"\r\n            style={{ flex: \"1 1 auto\" }}\r\n            onChange={onSectionChange}\r\n          />\r\n        </div>\r\n        <Form.Control\r\n          type=\"text\"\r\n          size=\"sm\"\r\n          value={newTopic.subject}\r\n          onChange={onSubjectChange}\r\n          style={{ marginBottom: \"3px\" }}\r\n          className='input'\r\n          placeholder=\"Тема\"\r\n          maxLength={90}\r\n        />\r\n        <TextEditor\r\n          placeholder=\"Сообщение\"\r\n          showVoting={true}\r\n          isVoting={newTopic.isVoting}\r\n          text={newTopic.text}\r\n          isFetching={newTopic.isFetching}\r\n          formName=\"NEW_TOPIC\"\r\n        />\r\n      </div>\r\n      <FormGroup className=\"new-topic-voting\">\r\n        {votingOptions}\r\n      </FormGroup>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default connector(NewTopic);","import { FC, ReactElement } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAppDispatch } from 'src/data/store'\r\nimport { togglePreview } from 'src/data/topicslist/actions'\r\n\r\nimport './topic_preview.css'\r\n\r\ntype IProps = {\r\n  topicId: number,\r\n  onFirst: any,\r\n  onLast: any,\r\n  onPrev: any,\r\n  onNext: any\r\n}\r\n\r\nconst PreviewButtons: FC<IProps> = ({ topicId, onFirst, onPrev, onNext, onLast }): ReactElement => {\r\n \r\n  const dispatch = useAppDispatch()\r\n  const closePreview = () => {\r\n    dispatch(togglePreview(topicId, 0));\r\n  }\r\n\r\n  return (\r\n    <div className=\"topic-preview-rewind\">\r\n      <div className=\"topic-preview-button flex-small\" onClick={onFirst} title=\"К первому\">\r\n        <i className=\"fa fa-angle-double-left\" aria-hidden=\"true\"></i>\r\n      </div>\r\n      <div className=\"topic-preview-button flex-large\" onClick={onPrev} title=\"К предыдущему\">\r\n        <i className=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\r\n      </div>\r\n      <div className=\"topic-preview-button flex-large\" onClick={onNext} title=\"К следующему\">\r\n        <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n      </div>\r\n      <div className=\"topic-preview-button flex-small\" onClick={onLast} title=\"К последнему\"> \r\n        <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\r\n      </div>\r\n      <div className=\"topic-preview-button close-preview\" onClick={closePreview}> \r\n        <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n        <i className=\"fa fa-angle-left\" aria-hidden=\"true\" style={{marginLeft: \"-2px\"}}></i>\r\n      </div>\r\n      <div className=\"topic-preview-button edit-preview\"> \r\n        <Link to={`/topic.php?id=${topicId}&page=last20#F`}>\r\n          <i className=\"fa fa-pencil\" aria-hidden=\"true\" style={{color:\"var(--font-color)\"}}></i>\r\n        </Link>  \r\n      </div>      \r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default PreviewButtons;","\nfunction highlight(text: string): string {\n\n  const keywords = new Set(\n    (\"if|если|then|тогда|elsif|иначеесли|else|иначе|endif|конецесли\" +\n    \"|do|цикл|for|для|to|по|each|каждого|in|из|while|пока|enddo|конеццикла\" +\n    \"|procedure|процедура|endprocedure|конецпроцедуры|function|функция|endfunction\" +\n    \"|конецфункции|var|перем|export|экспорт|goto|перейти|and|и|or|или|not|не\" +\n    \"|val|знач|break|прервать|continue|продолжить|return|возврат|try|попытка|except|исключение\" +\n    \"|endtry|конецпопытки|raise|вызватьисключение|false|ложь|true|истина\" +\n    \"|undefined|неопределено|null|new|новый|execute|выполнить\" +\n    \"|асинх|async|ждать|wait\")\n      .split('|')\n  );\n\n  const Спецсиволы = new Set(\"():;.,=+-*<>?[]%/\".split(''));\n  const НачалоТега = \"<span class=\";\n  const КонецТега = \"</span>\";\n\n  const мЦветФона = \"bg>\";\n  const мЦветЧисла = \"num>\";\n  const мЦветСтроки = \"str>\";\n  //const мЦветПараметра = \"par>\";\n  const мЦветКомментария = \"com>\";\n  const мЦветСпецСимвола = \"sp>\";\n  const мЦветПрепроцессора = \"pr>\";\n  const мЦветКлючевогоСлова1 = \"key>\";\n\n\n  let СтрокаРезультат: string;\n  let УстановленЦвет: boolean;\n  let ПоследнийЦвет: string | undefined;\n\n  let ВСтроке = false;\n  let Токен = \"\";\n\n  function ПустаяСтрока(Строка: string) {\n    return Строка.trim() === '';\n  }\n\n  function Сред(Строка: string, Нач: number, Длина: number) {\n    return Строка.substring(Нач - 1, Нач -1 + Длина);\n  }\n\n  function Прав(Строка: string, Длина: number) {\n    return Строка.substring(Строка.length - Длина);\n  }\n\n  function isKeyword(token: string) {\n    return keywords.has(token.toLowerCase().trim());\n  }\n\n  function ДобавитьЧастьСтроки1С(Часть: string, Цвет: string) {\n\n    if (Часть === \" \" || ПоследнийЦвет === Цвет) {\n      СтрокаРезультат = СтрокаРезультат + Часть;\n    } else {\n      if (УстановленЦвет) {\n        СтрокаРезультат = СтрокаРезультат + КонецТега;\n        УстановленЦвет = false;\n      };\n\n      СтрокаРезультат = СтрокаРезультат + НачалоТега + Цвет + Часть;\n      УстановленЦвет = true;\n      ПоследнийЦвет = Цвет;\n    };\n  }\n\n  function РазукраситьСтроку(СтрокаКода: string) {\n\n    //  https://infostart.ru/profile/34707/public/\n    let ВСтрокеСкобка = false;\n    let ВСтрокеТильда = false;\n    let НачалоСтроки = 1;\n    let ТокенДоТочки = true;\n    // Заменяем 8 символьную табуляцию на 4 символьную пробелами\n\n    // Последовательно перебираются все символы строки кода\n    let Поз = 1;\n    for (Поз = 1; Поз <= СтрокаКода.length; Поз++) {\n\n      let ТекущийСимвол = СтрокаКода.charAt(Поз - 1);\n      if (ВСтроке) {\n\n        // Операции встрече символа \"кавычка\"\n        if (ТекущийСимвол === '\"') {\n          // Нашли парную кавычку - окрашиваем как строку\n          ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n          ВСтроке = false;\n          Токен = \"\";\n          ТокенДоТочки = true;\n        } else {\n          Токен = Токен + ТекущийСимвол;\n        };\n\n      } else if (ВСтрокеСкобка) {\n\n        // Операции встрече символа \"кавычка\" литерал\n        if (ТекущийСимвол === \"'\") {\n          // Нашли парную скобку - окрашиваем как комментарий\n          ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n          ВСтрокеСкобка = false;\n          Токен = \"\";\n          ТокенДоТочки = true;\n        } else {\n          Токен = Токен + ТекущийСимвол;\n        };\n\n      } else if (ТекущийСимвол === \" \") {\n        // Операции при встрече символа табуляции или пробела\n        if (!ПустаяСтрока(Токен)) {\n          // Пробел после токена, значит\n          // токен - ключевое слово...\n          if (ВСтрокеТильда) {\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветСтроки);\n            ВСтрокеТильда = false;\n\n          } else if (isKeyword(Токен.trim())) {\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветКлючевогоСлова1);\n\n          } else if (!isNaN(parseInt(Токен, 10))) {\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветЧисла);\n\n          } else {\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветФона);\n          };\n          Токен = \"\";\n        } else {\n          СтрокаРезультат = СтрокаРезультат + \" \";\n        };\n        ТокенДоТочки = true;\n\n      } else if (Спецсиволы.has(ТекущийСимвол)) {\n\n        // Встретился один из специальных символов\n        if (!ПустаяСтрока(Токен)) {\n          // Чтобы избежать окраски метода объекта с совпадающим именем\n          // с одним из ключевых слов, проверяем текущий символ на \".\"\n          if (ВСтрокеТильда) {\n\n            ДобавитьЧастьСтроки1С(Токен, мЦветСтроки);\n            ВСтрокеТильда = false;\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\n\n          } else if (ТокенДоТочки && isKeyword(Токен)) {\n            ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\n\n          } else {\n            // Не ключевое слово - значит число\n            if (!isNaN(parseInt(Токен, 10))) {\n              ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\n\n            } else {\n              ДобавитьЧастьСтроки1С(Токен, мЦветФона);\n            };\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\n          };\n          Токен = \"\";\n        };\n        // Один из специальных символов\n        if (ТекущийСимвол === \".\" && ПоследнийЦвет === мЦветЧисла) {\n          // Продолжение числа\n          ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветЧисла);\n          continue;\n\n        } else if (ТекущийСимвол === \"=\" && Сред(СтрокаКода, Поз - 1, 1) === \"<\") {\n          // Знак \"меньше или равно\" - вторая ошибка движка Инфостарт\n          ПоследнийЦвет = undefined;\n\n        } else if (ТекущийСимвол === \"/\" && Сред(СтрокаКода, Поз + 1, 1) === \"/\") {\n          // Проверяется на комментарий\n          ДобавитьЧастьСтроки1С(Прав(СтрокаКода, СтрокаКода.length - Поз + 1), мЦветКомментария);\n          return;\n        };\n        ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветСпецСимвола);\n\n      } else if (ТекущийСимвол === '\"' || ТекущийСимвол === \"|\") {\n\n        // Операции встрече символа \"кавычка\"\n        // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\n        if (ПустаяСтрока(Токен)) {\n          НачалоСтроки = Поз;\n          ВСтроке = true;\n        } else {\n          // Ошибка синтаксиса\n          ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\n          Токен = \"\";\n        };\n        ТокенДоТочки = true;\n\n      } else if (ТекущийСимвол === \"'\") {\n\n        // Операции встрече символа \"кавычка\" литерал\n        // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\n        if (ПустаяСтрока(Токен)) {\n          НачалоСтроки = Поз;\n          ВСтрокеСкобка = true;\n        } else {\n          // Ошибка синтаксиса\n          ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\n          Токен = \"\";\n        };\n        ТокенДоТочки = true;\n\n      } else if (ТекущийСимвол === \"#\" || (ТекущийСимвол === \"&\" && ПустаяСтрока(СтрокаРезультат))) {\n\n        // Встретился символ препроцессора\n        ДобавитьЧастьСтроки1С(Прав(СтрокаКода, СтрокаКода.length - Поз + 1), мЦветПрепроцессора);\n        Поз = СтрокаКода.length;\n        break;\n\n      } else if (ТекущийСимвол === \"~\") {\n        Токен = Токен + ТекущийСимвол;\n        ВСтрокеТильда = true;\n      } else {\n        // Остальные символы\n        Токен = Токен + ТекущийСимвол;\n      }\n    }\n\n    if (ВСтроке) {\n\n      // Многострочная строка\n      ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n\n    } else if (ВСтрокеСкобка) {\n\n      // Незавершенный литерал\n      ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n\n    } else if (!ПустаяСтрока(Токен)) {\n\n      // Анализируем последний токен строки кода\n      if (isKeyword(Токен)) {\n        ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\n\n      } else if (!isNaN(parseInt(Токен, 10))) {\n        ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\n\n      } else {\n        ДобавитьЧастьСтроки1С(Токен, мЦветФона);\n      };\n\n    };\n\n  }\n\n  ВСтроке = false;\n  Токен = \"\";\n  УстановленЦвет = false;\n  ПоследнийЦвет = undefined;\n  СтрокаРезультат = '';\n\n  let result = [];\n\n  for (let СтрокаКода of text.split('\\n')) {\n\n    if (ПустаяСтрока(СтрокаКода)) {\n      result.push('');\n      continue;\n    }\n\n    СтрокаРезультат = '';\n    РазукраситьСтроку(СтрокаКода);\n    if (УстановленЦвет && !ВСтроке) {\n      СтрокаРезультат += '</span>';\n      УстановленЦвет = false;\n      ПоследнийЦвет = '';\n      Токен = '';\n    } else if (!ВСтроке) {\n      ПоследнийЦвет = '';\n      Токен = '';\n    }\n\n    result.push(СтрокаРезультат);\n  }\n\n  return result.join('\\n');\n}\n\nexport default highlight;","import React, { FC, ReactElement, useCallback, useEffect } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getTopicIfNeeded, getNewMessagesIfNeeded, clearTopicMessages } from 'src/data/topic/actions'\r\nimport { newMessageText } from 'src/data/newmessage/actions'\r\n\r\nimport Error from 'src/components/common/error'\r\nimport Pages from 'src/components/common/pages'\r\nimport Header from './header'\r\nimport TopicInfo from './topic_info'\r\nimport Row from './row'\r\nimport Footer from './footer'\r\nimport NewMessage from './new_message';\r\nimport { getMaxPage, extractTextFromHTML } from 'src/utils';\r\nimport { RootState, useAppDispatch } from 'src/data/store';\r\n\r\nimport './topic.css'\r\n\r\nvar scrolledToHash: boolean;\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const {\r\n    isFetching,\r\n    lastUpdated,\r\n    info,\r\n    item0,\r\n    items,\r\n    error\r\n  } = state.topic;\r\n\r\n  return {\r\n    login: state.login,\r\n    info,\r\n    item0,\r\n    items,\r\n    isFetching,\r\n    lastUpdated,\r\n    error,\r\n    options: state.options.items\r\n  }\r\n}\r\n\r\nconst getPageNumber = (locationPage: string | string[]): number | \"last20\" => {\r\n  if (!locationPage) return 1;\r\n  if (locationPage === \"last20\") return \"last20\";\r\n  if (isNaN(+locationPage)) return 1;\r\n  return +locationPage;\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst Topic: FC<ConnectedProps<typeof connector>> = ({ login, items, item0, info, error }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch()\r\n  const location = useLocation();\r\n\r\n  let locationParams = new URLSearchParams(location.search);\r\n  const topicId = +locationParams.get('id');\r\n  const page = getPageNumber(locationParams.get('page'));\r\n  const maxPage = getMaxPage(info.count);\r\n\r\n  const updateTopic = useCallback(() => {\r\n    let _item0 = item0;\r\n    if (topicId !== info.id)\r\n      _item0 = null\r\n\r\n    dispatch(getTopicIfNeeded(topicId, page, _item0));\r\n  }, [dispatch, topicId, page])\r\n\r\n\r\n  const updateNewMessages = useCallback(() => {\r\n    const isLastPage = (page === 'last20' || page === maxPage);\r\n    if (isLastPage)\r\n      dispatch(getNewMessagesIfNeeded());\r\n  }, [dispatch, page])\r\n\r\n  const onPostNewMessageSuccess = () => {\r\n    updateNewMessages();\r\n    dispatch(newMessageText(''));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (info.title)\r\n      document.title = extractTextFromHTML(info.title);\r\n  }, [info.title]);\r\n\r\n  useEffect(() => {\r\n    updateTopic();\r\n  }, [updateTopic, topicId, page]);\r\n\r\n  useEffect(() => {\r\n\r\n    const timer = window.setInterval(updateNewMessages, 60 * 1000);\r\n\r\n    const clearStore = () => {\r\n      dispatch(clearTopicMessages());\r\n      scrolledToHash = undefined;\r\n      if (timer) clearInterval(timer);\r\n    }\r\n    return clearStore;\r\n\r\n  }, [dispatch, updateNewMessages]);\r\n\r\n  useEffect(() => {\r\n    if (!scrolledToHash &&\r\n      location.hash &&\r\n      items.length > 0) {\r\n      let nodeHash = document.getElementById(location.hash.slice(1));\r\n      if (nodeHash)\r\n        setTimeout(() => window.scrollTo(0, nodeHash.offsetTop), 1);\r\n      scrolledToHash = true;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div style={{ marginBottom: \"5px\" }}>\r\n      {error && <Error text={error} />}\r\n      <Header />\r\n      <div className=\"topic-table\">\r\n        <TopicInfo />\r\n        <Row key='0' data={item0} />\r\n        {items.map((item, i) => (\r\n          <Row key={item.n} data={item} />\r\n        ))}\r\n        {(maxPage > 1 || page === \"last20\") &&\r\n          <div className=\"tf\">\r\n            <Pages baseUrl='topic.php' locationParams={locationParams} maxPage={maxPage} last20 />\r\n          </div>\r\n        }\r\n      </div>\r\n      <Footer page={page} />\r\n      {login.logged &&\r\n        <NewMessage onSubmitSuccess={onPostNewMessageSuccess} />\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default connector(Topic);","import { FC, ReactElement, useState } from 'react'\r\nimport { childrenToText } from 'src/utils'\r\nimport highlight from './code_highlight'\r\nimport './code1c.css'\r\n\r\nconst prepareText = (text: string): string => {\r\n\r\n  // replace double new-lines\r\n  let newtext = text\r\n    .replace(/\\n<br>/g, '\\n')\r\n    .replace(/<br>\\n/g, '\\n')\r\n    .replace(/\\r<br>/g, '\\n')\r\n    .replace(/<br>\\r/g, '\\n')\r\n    .replace(/<br>/g, '\\n');\r\n\r\n  // remove all leading|ending new-lines\r\n  while (newtext[0] === '\\n') {\r\n    newtext = newtext.substring(1);\r\n  }\r\n\r\n  while (newtext.substring(newtext.length - 1) === '\\n') {\r\n    newtext = newtext.substring(0, newtext.length - 1);\r\n  }\r\n\r\n  return highlight(newtext);\r\n}\r\n\r\nconst Code: FC = ({ children }): ReactElement => {\r\n\r\n  const [hidden, setHidden] = useState(true);\r\n\r\n  let text: string = \"\";\r\n  if (children) {\r\n\r\n    const textArr = childrenToText(children);\r\n    text = textArr.join('');\r\n\r\n    text = prepareText(text);\r\n  }\r\n\r\n  const onShowClick = () => {\r\n    setHidden(!hidden);\r\n  }\r\n\r\n  let buttonText: string;\r\n  let linesCount = 0;\r\n  if (text)\r\n    linesCount = text.split(\"\\n\").length;\r\n\r\n  if (hidden)\r\n    buttonText = `Показать: ${linesCount} строк`;\r\n  else\r\n    buttonText = 'Скрыть';\r\n\r\n  let buttonShow: ReactElement | null = null;\r\n  if (linesCount > 7)\r\n    buttonShow = (\r\n      <div className=\"expand-button-div\">\r\n        <span className=\"expand-button-span\" onClick={onShowClick}>{buttonText}</span>\r\n      </div>\r\n    );\r\n\r\n  let preStyle: React.CSSProperties = {\r\n  }\r\n\r\n  if (hidden && linesCount > 7) {\r\n    preStyle.overflow = \"hidden\";\r\n    preStyle.height = \"135px\";\r\n  } else {\r\n    preStyle.overflow = \"auto\";\r\n    preStyle.height = \"auto\";\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: \"5px\" }}>\r\n      <pre className=\"code-pre\" style={preStyle} dangerouslySetInnerHTML={{ __html: text }}>\r\n      </pre>\r\n      {buttonShow}\r\n    </div>\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default Code;","//TODO: Refactor\r\nimport React, { Component } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\n\r\nimport { showTooltip } from '../../data/tooltips/actions'\r\n\r\nimport { getMaxPage, childrenToText } from 'src/utils';\r\nimport { fetchTopicInfo } from 'src/api/topicinfo'\r\nimport { RootState } from 'src/data/store';\r\nimport { ITooltipKeys } from 'src/data/tooltips';\r\n\r\ntype IProps = {\r\n  topicId: string,\r\n  number: number,\r\n  style: {}\r\n}\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const {\r\n    items, info\r\n  } = state.topic;\r\n\r\n  return {\r\n    items,\r\n    info,\r\n    tooltipDelay: state.options.items['tooltipDelay']\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\nclass LinkToPost extends Component<ConnectedProps<typeof connector> & IProps, { text: string }> {\r\n\r\n  timer: number;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { children, number } = this.props;\r\n    if (children)\r\n      this.state = { text: childrenToText(children).join('') };\r\n    else\r\n      this.state = { text: String(number) };\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    if (!props.children) {\r\n      this.setState({ text: String(props.number) });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    if (this.state.text.startsWith(\"http\")) {\r\n\r\n      const { topicId } = this.props;\r\n      fetchTopicInfo(+topicId)\r\n        .then(response => {\r\n          this.setState({\r\n            text: response.title\r\n          })\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  onMouseOver = (e: React.MouseEvent<HTMLElement>) => {\r\n    e.persist();\r\n    const { tooltipDelay } = this.props;\r\n    this.timer = window.setTimeout(() => this.showToolTip(e), +tooltipDelay);\r\n  }\r\n\r\n  onClick = (e: React.MouseEvent<HTMLElement>) => {\r\n    e.stopPropagation();\r\n    clearTimeout(this.timer);\r\n    this.showToolTip(e);\r\n  }\r\n\r\n  onMouseOut = () => {\r\n    clearTimeout(this.timer);\r\n  }\r\n\r\n  showToolTip = (e: React.MouseEvent<HTMLElement>) => {\r\n    const { topicId, number, dispatch } = this.props;\r\n\r\n    const coords = {\r\n      x: e.pageX,\r\n      y: e.pageY - 50 // remove navbar margin-top\r\n    }\r\n\r\n    const keys: ITooltipKeys = {\r\n      topicId: +topicId,\r\n      number: +number\r\n    }\r\n    dispatch(showTooltip(\r\n      keys,\r\n      coords\r\n    ));\r\n  }\r\n\r\n  render() {\r\n\r\n    const { topicId, number, style, info } = this.props;\r\n    const page = getMaxPage(number);\r\n\r\n    let pageParam = '';\r\n    if (page > 1)\r\n      pageParam = `&page=${page}`;\r\n\r\n    let a;\r\n    if ((info && (+topicId === info.id)) || !isNaN(+this.state.text))\r\n      a = (\r\n        <span\r\n          onMouseOver={this.onMouseOver}\r\n          onMouseOut={this.onMouseOut}\r\n          onClick={this.onClick}\r\n          className='link'\r\n          style={{ ...style }}\r\n        >{this.state.text}</span>\r\n      )\r\n    else\r\n      a = (\r\n        <span>\r\n          <a href={`#/topic.php?id=${topicId}${pageParam}#${number}`}\r\n            style={{ ...style }}\r\n          >{this.state.text}</a>{' '}\r\n                    (<span onMouseOver={this.onMouseOver}\r\n            onMouseOut={this.onMouseOut}\r\n            onClick={this.onClick}\r\n            className='link'\r\n          >{number}</span>)\r\n        </span>\r\n      )\r\n\r\n    return a;\r\n  }\r\n}\r\n\r\nexport default connector(LinkToPost);","import React, { FC, ReactElement } from 'react'\r\n\r\ntype IProps = {\r\n  href: string\r\n}\r\n\r\nconst LinkToUser: FC<IProps> = ({ href, children }): ReactElement => {\r\n  return <a href={href} className=\"registered-user\">{children}</a>\r\n}\r\n\r\nexport default LinkToUser;","import React, { FC, ReactElement, useEffect, useState } from 'react';\r\n\r\ntype IProps = {\r\n  href: string,\r\n}\r\n\r\nconst getVideoId = (href: string): string | null => {\r\n\r\n  let fullHref = href;\r\n  if (href.search(/http/) === -1) fullHref = 'http://' + fullHref;\r\n\r\n  try {\r\n    var url = new URL(fullHref);\r\n  } catch (e)  {\r\n    return null;\r\n  }\r\n\r\n  if (url.hostname.search(/youtube/) !== -1) {\r\n    return url.searchParams.get('v');\r\n\r\n  } else if (url.hostname.search(/youtu\\.be/) !== -1) {\r\n    return url.pathname.substring(1)\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nconst getVideoParams = async (videoId: string): Promise<{ hrefName: string, title: string }> => {\r\n\r\n  const apiKey = localStorage.getItem('youtubeApiKey') || 'AIzaSyCztN2QW4Fxw_1YuAHBTOZdYLbzigPz25g';\r\n  let apiUrl = `https://www.googleapis.com/youtube/v3/videos?key=${apiKey}&fields=items(snippet(title))&part=snippet&id=${videoId}`;\r\n  const response = await fetch(apiUrl);\r\n  const json = await response.json();\r\n\r\n  let title = json.items[0].snippet.title;\r\n  let hrefName = title;\r\n  let maxLength = 50;\r\n  if (title.length > maxLength + 5)\r\n    hrefName = hrefName.substring(0, maxLength) + '...'\r\n\r\n  return {\r\n    hrefName,\r\n    title\r\n  }\r\n}\r\n\r\nconst YoutubeLink: FC<IProps> = ({ href }): ReactElement => {\r\n\r\n  let [state, setState] = useState({\r\n    hrefName: href,\r\n    title: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    const run = async () => {\r\n\r\n      const videoId = getVideoId(href);\r\n      if (!videoId)\r\n        return;\r\n\r\n      try {\r\n        const params = await getVideoParams(videoId);\r\n        setState({\r\n          ...params\r\n        });\r\n\r\n      } catch (e) {\r\n        console.error('youtube', e.message);\r\n      }\r\n    }\r\n\r\n    run();\r\n  }, [href])\r\n\r\n  const prefix = 'youtube';\r\n  return (\r\n    <a href={href} title={state.title}>{`${prefix}: ${state.hrefName}`}</a>\r\n  )\r\n}\r\n\r\nexport default YoutubeLink;","import { FC, ReactElement } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport URL from 'url-parse'\r\n\r\nimport LinkToPost from './link_to_post'\r\nimport LinkToUser from './link_to_user'\r\nimport YoutubeLink from './youtube_link'\r\n\r\nimport { childrenToText } from 'src/utils'\r\nimport { RootState } from 'src/data/store'\r\n\r\ntype IProps = {\r\n  href: string,\r\n  parentText: string,\r\n  target: string,\r\n  class: string,\r\n  rel: string,\r\n  showTooltipOnPostLink: string,\r\n  showYoutubeVideoTitle: string,\r\n  replaceCatalogMista: string,\r\n  fixBrokenLinks: string,\r\n}\r\n\r\nconst fixBrokenLink = (href: string, parentText: string): string => {\r\n  let escapedHref = href\r\n    .replace(/\\[/g, '\\\\[')\r\n    .replace(/\\]/g, '\\\\]')\r\n    .replace(/\\./g, '\\\\.')\r\n    .replace(/\\./g, '.')\r\n    .replace(/\\*/g, '\\\\*')\r\n    .replace(/\\+/g, '\\\\+')\r\n    .replace(/\\(/g, '\\\\(')\r\n    .replace(/\\)/g, '\\\\)')\r\n    .replace(/\\?/g, '\\\\?')\r\n    .replace(/\\//g, '\\\\/');\r\n\r\n  try {\r\n    let regExp = new RegExp(escapedHref + '<\\\\/a>(\\\\)|[а-яёА-ЯЁ0-9#\\\\-\\\\+\\\\_\\\\%\\\\?=]*)');\r\n    let arr = parentText.match(regExp);\r\n    if (arr && arr.length > 1) {\r\n      if (arr[1] === ')' && href.search('\\\\(') === -1) {\r\n        return href;\r\n      }\r\n      href = href + arr[1];\r\n      return href;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  return href;\r\n}\r\n\r\nconst isYoutube = (hostname: string): boolean => {\r\n  if (hostname.search(/youtube/) !== -1\r\n    || hostname.search(/youtu\\.be/) !== -1)\r\n    return true;\r\n  else\r\n    return false\r\n}\r\n\r\nconst isMistaCatalog = (hostname: string): boolean => {\r\n  if (hostname.search(/catalog\\.mista/) !== -1)\r\n    return true;\r\n  else\r\n    return false\r\n}\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const {\r\n    showYoutubeVideoTitle,\r\n    replaceCatalogMista,\r\n    fixBrokenLinks\r\n  } = state.options.items;\r\n\r\n  return {\r\n    showYoutubeVideoTitle,\r\n    replaceCatalogMista,\r\n    fixBrokenLinks\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst CustomLink: FC<ConnectedProps<typeof connector> & IProps> = (props): ReactElement => {\r\n\r\n  const { href, children, parentText,\r\n    showYoutubeVideoTitle, replaceCatalogMista, fixBrokenLinks } = props;\r\n\r\n  try {\r\n    var url = new URL(href, true);\r\n  } catch (e) {\r\n    console.error((e as Error).message, href);\r\n    return <a href={href}>{href}</a>;\r\n  }\r\n\r\n  let newHref = href;\r\n  if (newHref.startsWith('/')) {\r\n    url.set('protocol', 'https')\r\n    url.set('hostname', 'forum.mista.ru')\r\n    newHref = url.href;\r\n  }\r\n\r\n  if (url.hostname.search(/forum\\.mista.ru/) !== -1) {\r\n\r\n    if (url.pathname === '/topic.php') {\r\n      return (\r\n        <LinkToPost topicId={url.query.id} number={url.hash.replace('#', '') || \"0\"}>\r\n          {childrenToText(children)}\r\n        </LinkToPost>\r\n      )\r\n    } else if (url.pathname === '/users.php') {\r\n      return (\r\n        <LinkToUser href={url.href} >\r\n          {children}\r\n        </LinkToUser>\r\n      )\r\n    }\r\n\r\n    if (url.hostname === 'a-sitnikov.github.io' &&\r\n      url.pathname === '/react.mista/') {\r\n\r\n      if (Object.keys(url.query).length === 0) {\r\n\r\n        url = new URL(href.replace(/#\\//, ''), true);\r\n        if (url.pathname === '/react.mista/topic.php')\r\n          return (\r\n            <LinkToPost topicId={url.query.id} number={url.hash.replace('#', '') || \"0\"}>\r\n              {childrenToText(children)}\r\n            </LinkToPost>\r\n          )\r\n      }\r\n    }\r\n  }\r\n\r\n  if (showYoutubeVideoTitle === 'true')\r\n    if (isYoutube(url.hostname)) \r\n      return <YoutubeLink href={href} />\r\n\r\n  if (replaceCatalogMista === 'true')\r\n    if (isMistaCatalog(url.hostname)) {\r\n      url.set('hostname', 'infostart.ru')\r\n\r\n      return (\r\n        <a target={props.target}\r\n          className={props.class}\r\n          rel={props.rel}\r\n          href={url.href} >{url.href} </a>\r\n      )\r\n    }\r\n\r\n  if (fixBrokenLinks === 'true' && parentText) {\r\n    newHref = fixBrokenLink(newHref, parentText);\r\n  }\r\n\r\n  return (\r\n    <a target={props.target}\r\n      className={props.class}\r\n      rel={props.rel}\r\n      href={newHref} >{children}</a>\r\n  )\r\n}\r\n\r\nexport default connector(CustomLink);","import React, { FC, ReactElement } from 'react'\r\nimport { domain } from 'src/api'\r\n\r\nimport { IVotingItem } from 'src/data/topic'\r\n\r\ntype IProps = {\r\n  topicId: number,\r\n  data: IVotingItem,\r\n  colors: string[],\r\n  total: number,\r\n  n: number\r\n}\r\n\r\nconst VoteItem: FC<IProps> = ({ topicId, data, total, n, colors }): ReactElement => {\r\n\r\n  const img = `${domain}/css/voting${n}.png`;\r\n\r\n  let percent = 0;\r\n\r\n  if (total) {\r\n    percent = Math.round(100 * data.count / total);\r\n  }\r\n\r\n  const imgStyle = { maxWwidth: \"500px\", width: \"100%\", height: \"15px\" };\r\n\r\n  return (\r\n    <div className=\"voting-item\">\r\n      <div className=\"voting-title\">\r\n        <a rel=\"nofollow\" style={{ textDecoration: \"none\" }} href={`#/topic.php?id=${topicId}&sel=${n}`}>\r\n          <b><span style={{ color: colors[n - 1] }}>{`${n}. ${data.text}`}</span></b>\r\n        </a>\r\n      </div>\r\n      <div className=\"voting-percentage\">\r\n        {/*<div className=\"div-va-middle\">*/}\r\n        <b><span style={{ color: colors[n - 1] }}>{`${percent}% (${data.count})`}</span></b>\r\n        {/*</div>*/}\r\n      </div>\r\n      <div className=\"voting-bar\">\r\n        <div style={{ width: `${percent}%` }}>\r\n          <a href={img}>\r\n            <img src={img} style={imgStyle} alt={`п${n}`} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VoteItem;","import { FC, ReactElement } from 'react'\r\nimport VoteItem from './vote_item'\r\nimport { IVotingItem } from 'src/data/topic'\r\n\r\ntype IProps = {\r\n  items: IVotingItem[],\r\n  topicId: number,\r\n  colors: string[]\r\n}\r\n\r\nconst VoteChart: FC<IProps> = ({ items, topicId, colors }): ReactElement => {\r\n\r\n  let total = Math.max(...items.map(item => item.count));\r\n\r\n  return (\r\n    <div style={{ marginBottom: \"10px\" }}>\r\n      {items.filter(item => item.text).map((data, i) => <VoteItem key={i} data={data} total={total} n={i + 1} topicId={topicId} colors={colors} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VoteChart;","import React, { FC, ReactElement } from 'react'\r\n\r\ntype IProps = {\r\n  colors: string[],\r\n  n: number,\r\n  text: string\r\n}\r\n\r\nconst Vote: FC<IProps> = ({ colors, n, text }): ReactElement => {\r\n\r\n  return (\r\n    <div style={{ marginTop: \"5px\" }}>\r\n      <b><span style={{ color: colors[n - 1] }}>{`${n}. ${text}`}</span></b>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Vote;","import { FC, ReactElement, useEffect, useState } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport activeHtml from 'react-active-html';\r\n\r\nimport Code from 'src/components/extensions/code1c'\r\nimport LinkToPost from 'src/components/extensions/link_to_post'\r\nimport CustomLink from 'src/components/extensions/custom_link'\r\n\r\nimport VoteChart from './vote_chart'\r\nimport Vote from './vote'\r\nimport { ITopicMessage } from 'src/data/topic';\r\nimport { RootState } from 'src/data/store';\r\nimport { fetchTopicInfo } from 'src/api/topicinfo';\r\n\r\ntype IProps = {\r\n  topicId: number,\r\n  n: number,\r\n  html: string,\r\n  vote: number,\r\n  data: ITopicMessage,\r\n  style?: {}\r\n}\r\n\r\nconst processLinksToPosts = (text: string, topicId: number): string => {\r\n\r\n  const regexp = /(\\()(\\d+)(\\))/gi; // (12)\r\n  return text.replace(regexp, (res, ...segments) => {\r\n    const number = segments[1];\r\n    return `(<link data-topicid='${topicId}' data-number='${number}' ></link>)`\r\n  });\r\n}\r\n\r\nconst processCode1C = (text: string): string => {\r\n\r\n  const regexp = /(\\[1[CС]\\])((.|\\n|\\r)*?)(\\[\\/1[CС]\\])/gi; // [1C] text [/1C]\r\n  return text.replace(regexp, (res, ...segments) => {\r\n    let txt = segments[1];\r\n\r\n    //remove first <br>\r\n    if (txt.substr(0, 4) === \"<br>\")\r\n      txt = txt.substr(4);\r\n    return `<code>${txt}</code>`\r\n  });\r\n}\r\n\r\nconst processText = (text: string, topicId: number): string | undefined => {\r\n\r\n  if (!text)\r\n    return text;\r\n\r\n  let newtext = processCode1C(text);\r\n  newtext = processLinksToPosts(newtext, topicId);\r\n\r\n  return newtext;\r\n}\r\n\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const { info } = state.topic;\r\n\r\n  return {\r\n    info,\r\n    voteColors: state.options.voteColors,\r\n    showTooltips: state.options.items['showTooltips']\r\n  }\r\n}\r\nconst connector = connect(mapState);\r\nconst MsgText: FC<ConnectedProps<typeof connector> & IProps> =\r\n  ({ topicId, n, html, vote, info, style, voteColors }): ReactElement => {\r\n\r\n    if (vote && info.voting && topicId === info.id)\r\n      var _voteText = info.voting[vote - 1].text;\r\n    else\r\n      _voteText = null;\r\n\r\n    const [voteText, setVoteText] = useState(_voteText);\r\n\r\n    const getVoteText = async () => {\r\n      try {\r\n        const _info = await fetchTopicInfo(topicId);\r\n        setVoteText(_info.voting[vote - 1].text);\r\n      } catch (e) {\r\n        console.error(e.message);\r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n      if (vote) {\r\n        if (!(_voteText))\r\n          getVoteText();\r\n      } else {\r\n        if (voteText)\r\n          setVoteText(null)\r\n      }\r\n    }, [vote]);\r\n\r\n    const showVote = (vote !== 0) && (voteText !== null);\r\n    let voteChart: ReactElement;\r\n    if (n === 0 && info.isVoting && info.voting) {\r\n      voteChart = <VoteChart items={info.voting} topicId={topicId} colors={voteColors} />\r\n    }\r\n\r\n    let processedHtml = processText(html, topicId);\r\n    const componentsMap = {\r\n      link: (props: any) => <LinkToPost topicId={props['data-topicid']} number={props['data-number']} key={props.key} />,\r\n      code: (props: any) => <Code {...props} />,\r\n      a: (props: any) => <CustomLink {...props} parentText={processedHtml} />\r\n    };\r\n    const textComponent = activeHtml(processedHtml, componentsMap);\r\n\r\n    return (\r\n      <div className=\"message\" style={style}>\r\n        {voteChart}\r\n        <div>\r\n          {textComponent}\r\n        </div>\r\n        {showVote && <Vote text={voteText} n={vote} colors={voteColors} />}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default connector(MsgText);","import React, { FC, ReactElement, useEffect, useState } from 'react'\r\nimport dateFormat from 'dateformat'\r\nimport classNames from 'classnames'\r\nimport { domain } from 'src/api'\r\n\r\nimport { addMessageText } from 'src/data/newmessage/actions'\r\nimport { useAppDispatch } from 'src/data/store'\r\nimport { ITopicMessage } from 'src/data/topic'\r\n\r\ntype IProps = {\r\n  data: ITopicMessage,\r\n  isAuthor: boolean,\r\n  isYou: boolean,\r\n  isTooltip?: boolean\r\n}\r\n\r\nconst UserInfo: FC<IProps> = (props): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [imgDisplay, setImgDisplay] = useState('none');\r\n\r\n  const onClick = () => {\r\n    const { data } = props;\r\n    dispatch(addMessageText(`(${data.n})`));\r\n\r\n    let elem = document.getElementById('message_text');\r\n    if (elem)\r\n      window.scrollTo(0, elem.offsetTop);\r\n  }\r\n\r\n  const onImageLoad = () => {\r\n    setImgDisplay('inline');\r\n  }\r\n\r\n  const onImageError = () => {\r\n    setImgDisplay('none');\r\n  }\r\n\r\n  const { data, isAuthor, isYou, isTooltip } = props;\r\n  useEffect(() => {\r\n    setImgDisplay('none');\r\n  }, [data.n]);\r\n\r\n  const href = `${domain}/users.php?id=${data.userId}`;\r\n  let dataStr;\r\n  if (!data) {\r\n    dataStr = '';\r\n  } else if (data.n === 0) {\r\n    dataStr = dateFormat(new Date(data.time), 'dd.mm.yy - HH:MM');\r\n  } else {\r\n    dataStr = (\r\n      <>\r\n        <span className=\"message-number\">{data.n}</span>{' - ' + dateFormat(new Date(data.time), 'dd.mm.yy - HH:MM')}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const userClassNames = classNames(\"registered-user\", {\r\n    \"is-author\": isAuthor,\r\n    \"is-you\": isYou\r\n  });\r\n\r\n  let imgElem;\r\n  if (window.innerWidth > 7680000)\r\n    imgElem = <img src={`${domain}/css/user_icons/${data.userId}_16x16.png`}\r\n      alt=\"user ico\"\r\n      onLoad={onImageLoad}\r\n      onError={onImageError}\r\n      style={{ display: imgDisplay, marginBottom: \"4px\", marginRight: \"1px\" }} />\r\n\r\n  let timeElem;\r\n  if (isTooltip) {\r\n    timeElem = <div className=\"ah\" style={{ display: \"inline-block\", marginLeft: \"5px\" }}>{dataStr}</div>;\r\n  } else {\r\n    timeElem =\r\n      <div className=\"message-time\">\r\n        <span className=\"ah\" >{dataStr}</span>\r\n        <button className=\"button ah\" onClick={onClick}>{dataStr}</button>\r\n      </div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-info\">\r\n      {imgElem}\r\n      <a className={userClassNames} href={href}>{data.user}</a>\r\n      {timeElem}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default UserInfo;","import { FC, ReactElement, useState, useEffect } from 'react'\r\n\r\nimport { fetchTopicMessage } from 'src/api/topicMessages'\r\n\r\nimport MsgText from 'src/components/topic/row/msg_text'\r\nimport { ITopicMessage } from 'src/data/topic'\r\nimport UserInfo from '../topic/row/user_info'\r\n\r\nimport './topic_preview.css'\r\n\r\ntype IProps = {\r\n  topicId: number,\r\n  n: number,\r\n  author: string,\r\n  loggedUserId: number,\r\n  onDataLoaded?: () => void\r\n}\r\n\r\nconst PreviewContent: FC<IProps> = ({ topicId, n, author, loggedUserId, onDataLoaded }): ReactElement => {\r\n\r\n  const [data, setData] = useState<ITopicMessage | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n\r\n    const getData = async () => {\r\n      try {\r\n        const _data = await fetchTopicMessage(topicId, n);\r\n        if (_data) {\r\n          setData(_data);\r\n          setError(null);\r\n          if (onDataLoaded) onDataLoaded();\r\n        } else {\r\n          setData(null);\r\n          setError(`Не найдено сообщение ${n}`);\r\n        }  \r\n      } catch (e) {\r\n        setData(null);\r\n        setError((e as Error).message);\r\n      }\r\n\r\n    }\r\n\r\n    getData();\r\n\r\n  }, [topicId, n, onDataLoaded])\r\n\r\n  if (!data && !error)\r\n    return null;\r\n\r\n  return (\r\n    <>\r\n      {data &&\r\n        <div className='preview-content'>\r\n          <div className='topic-preview-userinfo'>\r\n            <UserInfo data={data} isAuthor={data.user === author} isYou={data.userId === loggedUserId} isTooltip />\r\n          </div>\r\n          <MsgText\r\n            topicId={topicId}\r\n            n={n}\r\n            data={data}\r\n            html={data.text}\r\n            vote={data.vote}\r\n            style={{ overflowY: \"auto\", overflowWrap: \"break-word\" }}\r\n          />\r\n        </div>}\r\n      {error && <span>{error}</span>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PreviewContent;","import React, { FC, ReactElement, useState } from 'react'\r\nimport { SwipeEventData, useSwipeable } from 'react-swipeable'\r\nimport { fetchTopicInfo } from 'src/api/topicinfo'\r\n\r\nimport PreviewButtons from './preview_buttons'\r\nimport PreviewContent from './preview_content'\r\nimport './topic_preview.css'\r\n\r\ntype IProps = {\r\n  topicId: number,\r\n  initialMsgNumber: number,\r\n  author: string,\r\n  loggedUserId: number\r\n}\r\n\r\nconst TopicPreview: FC<IProps> = ({ topicId, initialMsgNumber, author, loggedUserId }): ReactElement => {\r\n\r\n  const [deltaX, setDeltaX] = useState(0);\r\n  const [display, setDispaly] = useState('none');\r\n  const [state, setState] = useState({\r\n    msgNumber: initialMsgNumber,\r\n    key: 0\r\n  })\r\n\r\n  const onClickFirst = () => {\r\n    setState({\r\n      msgNumber: 0,\r\n      key: state.key\r\n    });\r\n  }\r\n\r\n  const onClickNext = () => {\r\n    setState({\r\n      msgNumber: state.msgNumber + 1,\r\n      key: state.key\r\n    });\r\n  }\r\n\r\n  const onClickPrev = () => {\r\n    if (state.msgNumber > 0)\r\n      setState({\r\n        msgNumber: state.msgNumber - 1,\r\n        key: state.key\r\n      });\r\n  }\r\n\r\n  const onClickLast = async () => {\r\n    const info = await fetchTopicInfo(topicId);\r\n    setState({\r\n      msgNumber: info.count,\r\n      key: state.key\r\n    });    \r\n  }\r\n\r\n  const onSwiping = (eventData: SwipeEventData) => {\r\n    if (Math.abs(eventData.deltaX) < 35)\r\n      setDeltaX(0);\r\n    else\r\n      setDeltaX(eventData.deltaX);\r\n  }\r\n\r\n  const onSwiped = (eventData: SwipeEventData) => {\r\n\r\n    if (Math.abs(eventData.deltaX) > 150) {\r\n      if (eventData.dir === \"Left\") {\r\n        setState({\r\n          msgNumber: state.msgNumber + 1,\r\n          key: state.key + 1\r\n        });         \r\n      } else if (eventData.dir === \"Right\" && state.msgNumber > 0) {\r\n        setState({\r\n          msgNumber: state.msgNumber - 1,\r\n          key: state.key + 1\r\n        });           \r\n      }\r\n    }\r\n    setDeltaX(0);\r\n  }\r\n\r\n  const swipeable = useSwipeable({\r\n    onSwiping,\r\n    onSwiped,\r\n    delta: 15\r\n  });\r\n\r\n  const onContentLoaded = () => {\r\n    setDispaly('block');\r\n  }\r\n\r\n  let items = [state.msgNumber];\r\n\r\n  if (deltaX < 0)\r\n    items.push(state.msgNumber + 1);\r\n  else if (deltaX > 0 && state.msgNumber > 0)\r\n    items.push(state.msgNumber - 1);\r\n\r\n  const style: React.CSSProperties = {\r\n    transform: `translate3d(${deltaX}px, 0px, 0px)`,\r\n    flexDirection: deltaX > 0 ? 'row-reverse' : 'row'\r\n  }\r\n\r\n  return (\r\n    <div className=\"preview-container\" style={{ display }}>\r\n      <div className=\"topic-preview\">\r\n        <PreviewButtons\r\n          topicId={topicId}\r\n          onFirst={onClickFirst}\r\n          onLast={onClickLast}\r\n          onNext={onClickNext}\r\n          onPrev={onClickPrev}\r\n        />\r\n        <div className='preview-carousel' {...swipeable} style={style}>\r\n          <div className='preview-carousel-item' key={state.key} style={{ order: 0 }}>\r\n            <PreviewContent\r\n              topicId={topicId}\r\n              n={items[0]}\r\n              loggedUserId={loggedUserId}\r\n              author={author}\r\n              onDataLoaded={onContentLoaded}\r\n            />\r\n          </div>\r\n          {items.length > 1 &&\r\n            <div className='preview-carousel-item' key={state.key + 1} style={{ order: 1 }}>\r\n              <PreviewContent\r\n                topicId={topicId}\r\n                n={items[1]}\r\n                loggedUserId={loggedUserId}\r\n                author={author}\r\n              />\r\n            </div>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default TopicPreview;","import React, { FC, ReactElement, useCallback, useEffect } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { useLocation } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\n\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\nimport { getTopicsListIfNeeded } from 'src/data/topicslist/actions'\r\n\r\nimport Header from './header'\r\nimport Row from './row'\r\nimport Pages from 'src/components/common/pages'\r\nimport NewTopic from './new_topic'\r\nimport Error from 'src/components/common/error'\r\n\r\nimport TopicPreview from 'src/components/preview/topic_preview'\r\n\r\nimport './topics_list.css'\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  return {\r\n    topicsList: state.topicsList,\r\n    sections: state.sections,\r\n    login: state.login,\r\n    options: state.options\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst TopicsList: FC<ConnectedProps<typeof connector>> = ({ topicsList, sections, login }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch()\r\n  const location = useLocation();\r\n  const locationParams = new URLSearchParams(location.search);\r\n\r\n  const updateTopicsList = useCallback((locationParams) => {\r\n    dispatch(getTopicsListIfNeeded(locationParams));\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    document.title = 'React.Mista';\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const locationParams = queryString.parse(location.search);\r\n    updateTopicsList(locationParams);\r\n  }, [location.search, updateTopicsList]);\r\n\r\n  let rows = [];\r\n  for (let item of topicsList.items) {\r\n\r\n    rows.push(<Row key={item.id} data={item} topicId={item.id}/>);\r\n    if (item.showPreview)\r\n      rows.push(\r\n        <TopicPreview \r\n          key={`preview${item.id}`} \r\n          topicId={item.id} \r\n          initialMsgNumber={item.previewMsgNumber}\r\n          author={item.author}\r\n          loggedUserId={login.userId}\r\n          />\r\n      )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {topicsList.error && (<Error text={topicsList.error} />)}\r\n      <div className=\"topic-list-table\">\r\n        <div className=\"th\" style={{ position: \"sticky\", top: \"39px\" }}>\r\n          <div style={{ letterSpacing: \"-1px\" }}>Раздел</div>\r\n          <div></div>\r\n          <div>Тема</div>\r\n          <div>Re</div>\r\n          <div>Автор</div>\r\n          <div><span style={{ cursor: \"pointer\" }} title=\"Обновить список\" onClick={updateTopicsList}>{topicsList.isFetching ? \"Обновляется\" : \"Обновлено\"}</span></div>\r\n        </div>\r\n        {rows}\r\n        <div className=\"tf\">\r\n          <Pages baseUrl='index.php' locationParams={locationParams} maxPage={10} />\r\n        </div>\r\n      </div>\r\n      <div id=\"F\" className=\"newtopic\" style={{ marginBottom: \"10px\", marginTop: \"5px\", position: 'relative' }}>\r\n        <NewTopic \r\n          onSubmitSuccess={updateTopicsList}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connector(TopicsList);","import React, { FC, ReactElement } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux'\r\n\r\nimport { RootState } from 'src/data/store'\r\nimport Login from 'src/components/login'\r\n\r\nconst mapState = (state: RootState) => {\r\n  return {\r\n    info: state.topic.info,\r\n    login: state.login\r\n  }  \r\n}\r\nconst connector = connect(mapState);\r\n\r\nconst Header: FC<ConnectedProps<typeof connector>> =  ({ info, login }): ReactElement => {\r\n\r\n  const forums = {\r\n    '1c': '1С:Предприятие',\r\n    'life': 'О жизни',\r\n    'it': 'Информационные технологии',\r\n    'job': 'Работа'\r\n  };\r\n\r\n  return (\r\n\r\n    <div className=\"flex-row\">\r\n      <div className=\"header-left\">\r\n        <Login/>\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <span id=\"forum_string\" className=\"bold120\">\r\n          <a rel=\"nofollow\" href={`#/index.php?forum=${info.forum}`} style={{ textDecoration: \"none\" }}>{forums[info.forum]}</a>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connector(Header);","import React, { FC, ReactElement } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\n\r\nimport { RootState } from 'src/data/store'\r\n\r\nimport { domain, urlTopicInfo, urlTopicMessages } from 'src/api'\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const {\r\n    info\r\n  } = state.topic;\r\n\r\n  return {\r\n    info\r\n  }\r\n}\r\nconst connector = connect(mapState);\r\nconst TopicInfo: FC<ConnectedProps<typeof connector>> = ({ info }): ReactElement => {\r\n\r\n  let yandexUrl = \"https://www.yandex.ru/yandsearch?rpt=rad&text=\" + encodeURIComponent(info.title);\r\n\r\n  return (\r\n    <div className=\"topic-row\">\r\n      <div className=\"cell-userinfo\">\r\n        <div className=\"topic-tools\">\r\n          <a title=\"API.info\" href={`${domain}/${urlTopicInfo}?id=${info.id}`} className=\"agh\" style={{ display: \"block\", lineHeight: \"1em\" }}>i</a>\r\n          <a title=\"API.messages\" href={`${domain}/${urlTopicMessages}?id=${info.id}&from=0&to=20`} className=\"agh\" style={{ display: \"block\", lineHeight: \"1em\" }}>m</a>\r\n          {/*<a href=\"add_voting.php?topic_id=815217\" title=\"Добавить голосование\">vote</a> &nbsp;&nbsp;*/}\r\n        </div>\r\n      </div>\r\n      <div className=\"cell-message\">\r\n        <div className=\"flex-row\">\r\n          <div style={{ flex: 1, textAlign: \"center\" }}>\r\n            <a href={`${domain}/topic.php?id=${info.id}`}>\r\n              <h1 className=\"topic-title\" dangerouslySetInnerHTML={{ __html: info.title }}></h1>\r\n            </a>\r\n            <div className=\"moder-action\"></div>\r\n          </div>\r\n          <div style={{ flex: \"0 0 20px\", position: \"relative\" }}>\r\n            <div className=\"div-va-middle\">\r\n              <a rel=\"noopener noreferrer\" href={yandexUrl} title=\"Искать в Яндексе\" target=\"_blank\" className=\"yandex\">Я</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default connector(TopicInfo);","import React, { FC, ReactElement } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\n\r\nimport UserInfo from './user_info'\r\nimport MsgText from './msg_text'\r\nimport { RootState } from 'src/data/store'\r\nimport { ITopicMessage } from 'src/data/topic'\r\n\r\ntype IProps = {\r\n  data: ITopicMessage\r\n}\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const {\r\n    info,\r\n    item0,\r\n  } = state.topic || {\r\n    info: {},\r\n    item0: {},\r\n  }\r\n\r\n  return {\r\n    topicId: info.id,\r\n    author: item0 ? item0.user : '',\r\n    login: state.login\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst Row: FC<ConnectedProps<typeof connector> & IProps> = (props): ReactElement => {\r\n\r\n    const { data, author, topicId, login } = props;\r\n\r\n    if (!data)\r\n      return null;\r\n\r\n    return (\r\n      <div className=\"topic-row\" id={String(data.n)}>\r\n        <div className=\"cell-userinfo\">\r\n          <UserInfo data={data} isAuthor={data.user === author} isYou={data.user === login.userName} />\r\n        </div>\r\n        <div className=\"cell-message\">\r\n          <MsgText data={data} html={data.text} topicId={topicId} n={data.n} vote={data.vote} />\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default connector(Row);","import React, { FC, ReactElement } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport { getNewMessagesIfNeeded } from 'src/data/topic/actions'\r\nimport { getMaxPage } from 'src/utils'\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\nimport { defaultInfo } from 'src/data/topic';\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const {\r\n    isFetching,\r\n    lastUpdated,\r\n    info,\r\n  } = state.topic || {\r\n    isFetching: true,\r\n    info: defaultInfo,\r\n  }\r\n\r\n  return {\r\n    info,\r\n    isFetching,\r\n    lastUpdated\r\n  }\r\n}\r\nconst connector = connect(mapState);\r\ntype IProps = { page?: number | string };\r\n\r\nconst Footer: FC<ConnectedProps<typeof connector> & IProps> = ({ info, isFetching, page }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onBookmarkClick = () => {\r\n    //dispatch(addBookmark(info));\r\n  }\r\n\r\n  const onRefreshClick = () => {\r\n    dispatch(getNewMessagesIfNeeded());\r\n  }\r\n\r\n  const maxPage = getMaxPage(info.count);\r\n\r\n  let showUpdateButton = false;\r\n  if (page === 'last20' || page === maxPage)\r\n    showUpdateButton = true;\r\n\r\n  return (\r\n    <div className=\"flex-row\" id=\"F\">\r\n      <div className=\"ta-left va-top\" style={{ width: \"50%\" }}>\r\n        <Button\r\n          onClick={onBookmarkClick}\r\n          disabled={false}\r\n          size=\"sm\"\r\n          className='button'\r\n          variant=\"light\">\r\n          {'Закладка'}\r\n        </Button>\r\n      </div>\r\n      <div className=\"ta-right va-middle\" style={{ marginLeft: \"auto\" }}>\r\n        {showUpdateButton &&\r\n          <Button\r\n            onClick={onRefreshClick}\r\n            disabled={isFetching}\r\n            size=\"sm\"\r\n            className='button'\r\n            variant=\"light\">\r\n            {isFetching ? 'Обновляется' : 'Обновить ветку'}\r\n          </Button>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connector(Footer);","import React, { FC, ReactElement, useState } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { FormGroup, Form } from 'react-bootstrap'\r\n\r\nimport TextEditor from 'src/components/common/text_editor'\r\nimport { newMessageText, postNewMessage } from 'src/data/newmessage/actions'\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\n\r\nimport { PostNewmessageParams } from 'src/data/newmessage/actions'\r\n\r\ntype IProps = {\r\n  onSubmitSuccess?: () => void\r\n}\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  return {\r\n    info: state.topic.info,\r\n    newMessage: state.newMessage\r\n  };\r\n\r\n}\r\n\r\nconst connector = connect(mapState);\r\n\r\nconst NewMessage: FC<ConnectedProps<typeof connector> & IProps> = ({ info, newMessage, onSubmitSuccess }): ReactElement => {\r\n\r\n  const [voting, setVoting] = useState<number | undefined>();\r\n  const dispatch = useAppDispatch()\r\n\r\n  const onSubmit = (e: any) => {\r\n\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let params: PostNewmessageParams = {\r\n      text: newMessage.text,\r\n      topicId: String(info?.id),\r\n      onSuccess: afterSubmit,\r\n      voting_select: undefined\r\n    };\r\n\r\n    if (voting) {\r\n      params.voting_select = voting;\r\n    }\r\n\r\n    dispatch(postNewMessage(params));\r\n  }\r\n\r\n  const afterSubmit = () => {\r\n\r\n    dispatch(newMessageText(''));\r\n\r\n    setVoting(undefined);\r\n\r\n    if (onSubmitSuccess) {\r\n      onSubmitSuccess();\r\n    }\r\n  }\r\n\r\n  const clearVoting = (e: React.MouseEvent<HTMLElement>) => {\r\n\r\n    e.preventDefault();\r\n    setVoting(undefined);\r\n\r\n  }\r\n\r\n  const setVotingOption = (i: number) => {\r\n    setVoting(i);\r\n  }\r\n\r\n  let votingElem;\r\n  if (info?.isVoting && info?.voting) {\r\n\r\n    let votingOptions = [];\r\n    for (let i = 1; i <= info.voting.length; i++) {\r\n\r\n      const item = info.voting[i - 1];\r\n      if (!item.text)\r\n        continue;\r\n\r\n      votingOptions.push(\r\n        <Form.Check\r\n          type=\"radio\"\r\n          key={i}\r\n          name=\"voting\"\r\n          checked={voting === i}\r\n          onChange={() => setVotingOption(i)}\r\n          label={`${i}. ${item.text}`}\r\n        />\r\n      );\r\n    }\r\n\r\n\r\n    votingElem = (\r\n      <FormGroup>\r\n        <legend>\r\n          <small>Ваш выбор:\r\n            <span id=\"voting_clear\" style={{ marginLeft: \"5px\", cursor: \"pointer\" }} onClick={clearVoting}>очистить</span>\r\n          </small>\r\n        </legend>\r\n        {votingOptions}\r\n        Обоснуйте свой выбор!\r\n      </FormGroup>\r\n    );\r\n\r\n  }\r\n\r\n  return (\r\n    <form style={{ marginTop: \"5px\" }} onSubmit={onSubmit}>\r\n      <div className=\"bold\">Добавить сообщение в тему:</div>\r\n      <div className=\"new-message-container\">\r\n        <div className=\"new-message-text\">\r\n          <TextEditor\r\n            isFetching={newMessage.isFetching}\r\n            text={newMessage.text}\r\n            placeholder=\"Сообщение\"\r\n            formName=\"NEW_MESSAGE\"\r\n          />\r\n        </div>\r\n        <div className=\"new-message-voting\">\r\n          {votingElem}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n}\r\n\r\nexport default connector(NewMessage);","import { FC, ReactElement } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\n\r\ntype IProps = {\r\n  name: string,\r\n  label: string,\r\n  value: string,\r\n  values: Array<{ name: string, descr: string }>,\r\n  onChange: any,\r\n  oneLine: boolean\r\n}\r\n\r\nconst RadioOption: FC<IProps> = ({ name, label, value, values, oneLine, onChange }): ReactElement => {\r\n\r\n  const onChangeValue = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    onChange(e, name, e.target.value);\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <span style={{ marginRight: \"5px\" }}> {label} </span>\r\n      {oneLine && <br/>}\r\n      {values.map((item, i) =>\r\n        <Form.Check key={i}\r\n          type=\"radio\"\r\n          id={item.name}\r\n          label={item.descr}\r\n          name={label}\r\n          checked={item.name === value}\r\n          value={item.name}\r\n          inline={oneLine}\r\n          onChange={onChangeValue}\r\n        >\r\n        </Form.Check>\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default RadioOption;","import React, { FC, ReactElement } from 'react'\r\n\r\ntype IProps = {\r\n  name: string,\r\n  label: string,\r\n  value: string,\r\n  onChange: any,\r\n  postfix?: string\r\n}\r\n\r\nconst StringOption: FC<IProps> = (props): ReactElement => {\r\n\r\n  const onChange = (e: any) => {\r\n    const { name } = props;\r\n    props.onChange(e, name, e.target.value);\r\n  }\r\n\r\n  const { name, value, label, postfix } = props;\r\n\r\n  return (\r\n    <label htmlFor={name} style={{ marginRight: \"5px\" }}>\r\n      <span style={{ marginRight: \"5px\" }}>{label}</span>\r\n      <input type=\"string\" name={name} value={value} onChange={onChange} className='input' />\r\n      {postfix !== undefined ?\r\n        <span style={{ marginLeft: \"5px\" }}>{postfix}</span>\r\n        : null}\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default StringOption;","export const formTabs = [\r\n  {\r\n    tabName: 'Общие',\r\n    rows: [\r\n      ['theme'],\r\n      ['topicsPerPage'],\r\n      ['autoRefreshTopicsList', 'autoRefreshTopicsListInterval'],\r\n      ['autoRefreshTopic', 'autoRefreshTopicInterval'],\r\n    ]\r\n  },\r\n  {\r\n    tabName: 'Тултипы',\r\n    rows: [\r\n      ['showTooltips', 'tooltipDelay'],\r\n      ['showTooltipOnPostLink']\r\n    ]\r\n  },\r\n  {\r\n    tabName: 'Ссылки',\r\n    rows: [\r\n      ['showYoutubeVideoTitle'],\r\n      ['replaceCatalogMista'],\r\n      ['fixBrokenLinks'],\r\n    ]\r\n  }\r\n];\r\n\r\nexport const formParams = {\r\n  'theme': {\r\n    type: 'radio',\r\n    label: 'Цветовая палитра:',\r\n    oneLine: true,\r\n    values: [\r\n      { name: 'yellow', descr: 'Золотая' },\r\n      { name: 'lightgray', descr: 'Серая' },\r\n      { name: 'dark', descr: 'Темная' }\r\n    ]\r\n  },\r\n  'topicsPerPage': {\r\n    type: 'number',\r\n    label: 'Тем на странице (max 99):',\r\n    min: 1,\r\n    max: 99\r\n  },\r\n  'autoRefreshTopicsList': {\r\n    type: 'checkbox',\r\n    label: 'Автообновление списка тем'\r\n  },\r\n  'autoRefreshTopicsListInterval': {\r\n    type: 'number',\r\n    label: '',\r\n    min: 60,\r\n    max: 1000000,\r\n    postfix: 'сек'\r\n  },\r\n  'autoRefreshTopic': {\r\n    type: 'checkbox',\r\n    label: 'Автообновление темы'\r\n  },\r\n  'autoRefreshTopicInterval': {\r\n    type: 'number',\r\n    label: '',\r\n    min: 60,\r\n    max: 1000000,\r\n    postfix: 'сек'\r\n  },\r\n  //Tooltips   \r\n  'showTooltips': {\r\n    type: 'checkbox',\r\n    label: 'Показывать тултипы, задержка'\r\n  },\r\n  'tooltipDelay': {\r\n    type: 'number',\r\n    max: 1000000,\r\n    label: '',\r\n    postfix: 'мс'\r\n  },\r\n  'showTooltipOnPostLink': {\r\n    type: 'checkbox',\r\n    label: 'Показывать тултип ссыки на другую ветку'\r\n  },\r\n  //links   \r\n  'showYoutubeVideoTitle': {\r\n    type: 'checkbox',\r\n    label: 'Показывать наименования роликов youtube'\r\n  },\r\n  'replaceCatalogMista': {\r\n    type: 'checkbox',\r\n    label: 'Обратно заменять catalog.mista.ru на infostart.ru'\r\n  },\r\n  'fixBrokenLinks': {\r\n    type: 'checkbox',\r\n    label: 'Чинить поломанные ссылки (с русскими символами)'\r\n  },\r\n}","import { FC, ReactElement } from \"react\";\r\n\r\ntype IProps = {\r\n  name: string\r\n}\r\n\r\nconst Tab: FC<IProps> = ({ name, children }): ReactElement => {\r\n  return (\r\n    <div>\r\n      <div className=\"tab-header\">\r\n        {name}\r\n      </div>\r\n      <div className=\"tab-content\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tab;","import { FC, ReactElement, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { Form, FormControl, Button } from 'react-bootstrap'\r\n\r\nimport RadioOption from './radio_option'\r\nimport StringOption from './string_option'\r\n\r\nimport { saveOptions } from 'src/data/options/actions'\r\n\r\nimport { defaultOptionsState } from 'src/data/options'\r\nimport { formTabs, formParams } from './formscheme'\r\nimport Tab from './tab'\r\n\r\nimport './options.css'\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\n\r\nconst mapState = (state: RootState) => {\r\n  return {\r\n    options: state.options\r\n  };\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst Options: FC<ConnectedProps<typeof connector>> = (props): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [state, setState] = useState({\r\n    items: props.options.items\r\n  })\r\n\r\n  const closeForm = () => {\r\n    navigate('/#');\r\n  }\r\n\r\n  const resetOptions = () => {\r\n    setState({\r\n      ...state,\r\n      items: Object.assign({}, defaultOptionsState.items)\r\n    })\r\n  }\r\n\r\n  const applyOptions = () => {\r\n\r\n    dispatch(saveOptions(state.items));\r\n    closeForm();\r\n  }\r\n\r\n  const onChange = (e, name, value) => {\r\n\r\n    let items = Object.assign({}, state.items);\r\n    items[name] = value;\r\n    setState({\r\n      ...state,\r\n      items\r\n    })\r\n  }\r\n\r\n  let tabs = [];\r\n  for (let tab of formTabs) {\r\n\r\n    let rows = [];\r\n    for (let i in tab.rows) {\r\n\r\n      const row = tab.rows[i];\r\n      let rowElem = [];\r\n      for (let name of row) {\r\n\r\n        const item = formParams[name];\r\n        if (!item) continue;\r\n\r\n        const value = state.items[name];\r\n\r\n        if (item.type === 'radio') {\r\n          rowElem.push(\r\n            <RadioOption\r\n              key={name}\r\n              name={name}\r\n              label={item.label}\r\n              values={item.values}\r\n              value={value}\r\n              oneLine={item.oneLine}\r\n              onChange={onChange}\r\n            />\r\n          );\r\n        } else if (item.type === 'number') {\r\n\r\n          if (item.label)\r\n            rowElem.push(\r\n              <label\r\n                htmlFor={name}\r\n                key={name + '_label'}\r\n                style={{ fontWeight: \"inherit\" }}>\r\n                {item.label}\r\n              </label>\r\n            );\r\n\r\n          rowElem.push(\r\n            <div className='options-number' key={name}>\r\n              <FormControl\r\n                type=\"number\"\r\n                min={item.min}\r\n                max={item.max}\r\n                value={value}\r\n                onChange={(e) => onChange(e, name, e.target.value)}\r\n                \r\n                className='input'\r\n                size=\"sm\"\r\n              >\r\n              </FormControl>\r\n              {item.postfix &&\r\n                <span key={name + '_postfix'} style={{ marginLeft: \"5px\", flex: \"0 0 auto\", }}>{item.postfix}</span>}\r\n            </div>\r\n          );\r\n\r\n        } else if (item.type === 'string') {\r\n          rowElem.push(\r\n            <StringOption\r\n              key={name}\r\n              name={name}\r\n              label={item.label}\r\n              postfix={item.postfix}\r\n              value={value}\r\n              onChange={onChange}\r\n            />\r\n          );\r\n        } else if (item.type === 'checkbox') {\r\n          rowElem.push(\r\n            <Form.Check\r\n              id={name}\r\n              type=\"checkbox\"\r\n              label={item.label}\r\n              key={name}\r\n              name={name}\r\n              checked={String(value) === 'true'}\r\n              onChange={(e) => onChange(e, name, e.target.checked)}\r\n              style={{ flex: \"0 0 auto\", margin: \"0px\" }}\r\n            />\r\n          );\r\n        }\r\n      }\r\n\r\n      rows.push(\r\n        <div key={i} className=\"options-row\">\r\n          {rowElem}\r\n        </div>\r\n      );\r\n\r\n    }\r\n\r\n    tabs.push(\r\n      <Tab key={tab.tabName} name={tab.tabName}>\r\n        {rows}\r\n      </Tab>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"options-form\">\r\n      <div className=\"options-header\" style={{ cursor: \"default\" }}>\r\n        <b>Настройки</b>\r\n      </div>\r\n      {tabs}\r\n      <div className=\"button-row\">\r\n        <Button\r\n          id=\"applyOptions\"\r\n          size=\"sm\"\r\n          variant=\"light\"\r\n          style={{ margin: \"5px\" }}\r\n          className='button'\r\n          onClick={applyOptions}>\r\n          OK\r\n        </Button>\r\n        <Button\r\n          id=\"cancelOptions\"\r\n          size=\"sm\"\r\n          variant=\"light\"\r\n          style={{ margin: \"5px\", float: \"left\" }}\r\n          className='button'\r\n          onClick={closeForm}>\r\n          Отмена\r\n        </Button>\r\n        <Button\r\n          id=\"defaultOptions\"\r\n          size=\"sm\"\r\n          variant=\"light\"\r\n          style={{ margin: \"5px\", float: \"right\" }}\r\n          className='button'\r\n          onClick={resetOptions}>\r\n          Сбросить настройки\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connector(Options);","import React, { ReactElement } from 'react';\r\nimport { Routes, Route } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap';\r\n\r\nimport TopicsList from './topics_list'\r\nimport Topic from './topic'\r\nimport Options from './options'\r\nimport { clearTooltipsIfNeeded } from 'src/data/tooltips/actions'\r\n\r\nimport { useAppDispatch } from 'src/data/store';\r\n\r\nconst AppRoutes = (): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onClick = () => {\r\n    dispatch(clearTooltipsIfNeeded());\r\n  }\r\n\r\n  return (\r\n    <div onClick={onClick} style={{ flex: \"auto\" }}>\r\n      <Container>\r\n        <Routes>\r\n          <Route path='/' element={<TopicsList />} />\r\n          <Route path='/index.php' element={<TopicsList />} />\r\n          <Route path='/topic.php' element={<Topic />} />\r\n          <Route path='/options.php' element={<Options />} />\r\n        </Routes>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppRoutes;","import React, { ReactElement } from 'react'\r\nimport { domain } from 'src/api'\r\n\r\nconst NavBarFooter = (): ReactElement => {\r\n\r\n    return (\r\n        <footer className=\"flex-row navbar-footer\">\r\n            <a href={`${domain}/rules.php`}>Правила</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/about.php`}>Описание</a>\r\n            <span className=\"separator\">|</span>\r\n            <b><a href={`${domain}/ad.php`}>Реклама на сайте</a>  </b>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/find.php`}>Поиск</a>\r\n            <span className=\"separator\">|</span>\r\n            <a rel=\"nofollow\" href={`${domain}/sections_list.php`}>Секции</a>\r\n            <span className=\"separator\">|</span>\r\n            <a rel=\"nofollow\" href={`${domain}/rating.php`}>Рейтинг</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href=\"http://kb.mista.ru\">Книга знаний</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href=\"http://wiki.mista.ru\">Вики-миста (КЗ2)</a>\r\n            <span className=\"separator\">|</span>\r\n            <a rel=\"nofollow\" href=\"http://m.mista.ru/\">Мобильная</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/archive.php`}>Архив</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/moders.php`}>Модераторы</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/users_gallery.php`}>Галерея</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/ban_list.php`}>Баны</a>\r\n            <span className=\"separator\">|</span>\r\n            <span>18+</span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default NavBarFooter;","import { FC, ReactElement } from 'react'\r\n\r\ntype IProps = {\r\n  closeWindow?: (e: any) => any\r\n}\r\n\r\nconst TooltipHeader: FC<IProps> = ({ children, closeWindow }): ReactElement => {\r\n  return (\r\n    <div className=\"tooltip-header\">\r\n      {children}\r\n      <div className=\"tooltip-close\" onClick={closeWindow} onTouchEnd={closeWindow}>\r\n        <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n        <i className=\"fa fa-angle-left\" aria-hidden=\"true\" style={{ marginLeft: \"-2px\" }}></i>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TooltipHeader;","import React, { FC, ReactElement } from 'react'\r\n\r\ntype IProps = {\r\n  onScroll?: (e: any) => any\r\n}\r\n\r\nconst TooltipBody: FC<IProps> = ({ children, onScroll }): ReactElement => {\r\n\r\n  let startX = 0;\r\n\r\n  const onTouchStart = (e: React.TouchEvent<HTMLElement>) => {\r\n    startX = e.nativeEvent.changedTouches[0].clientX;\r\n  }\r\n\r\n  const onTouchEnd = (e: React.TouchEvent<HTMLElement>) => {\r\n\r\n    if (!onScroll) return;\r\n\r\n    let endX = e.nativeEvent.changedTouches[0].clientX;\r\n    if (Math.abs(endX - startX) > 100)\r\n      onScroll(-endX + startX);\r\n  }\r\n\r\n  return (\r\n    <div className=\"tooltip-text\" onTouchStart={onTouchStart} onTouchEnd={onTouchEnd}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TooltipBody;","import React, { FC, ReactElement } from 'react'\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nimport TooltipHeader from './tooltip_header'\r\nimport TooltipBody from './tooltip_body'\r\n\r\nimport './tooltip.css'\r\n\r\nimport { closeTooltip } from 'src/data/tooltips/actions'\r\nimport { useAppDispatch } from 'src/data/store';\r\nimport { ITooltipItem } from 'src/data/tooltips';\r\n\r\ntype IProps = {\r\n  tooltip: ITooltipItem,\r\n  zIndex?: number,\r\n}\r\n\r\nconst TooltipWindow: FC<IProps> = ({ tooltip, zIndex, children }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onCloseClick = () => {\r\n    dispatch(closeTooltip(tooltip.keys));\r\n  }\r\n\r\n  const { coords } = tooltip;\r\n\r\n  let axis: \"both\" | \"x\" | \"y\" | \"none\";;\r\n  let position: {\r\n    top: number,\r\n    left: number\r\n  };\r\n\r\n  if (window.innerWidth <= 768) {\r\n    axis = \"y\";\r\n    position = { top: coords.y, left: 5 };\r\n  } else {\r\n    axis = \"both\";\r\n    position = { top: coords.y, left: Math.min(coords.x, window.innerWidth - 670) }\r\n  }\r\n\r\n  let [header, body] = React.Children.toArray(children);\r\n\r\n  return (\r\n    <Draggable\r\n      axis={axis}\r\n      handle=\".tooltip-header\"\r\n      defaultClassNameDragging=\"dragging\"\r\n      key={zIndex}>\r\n\r\n      <div className=\"tooltip-window\" style={{ ...position }}>\r\n        <TooltipHeader closeWindow={onCloseClick}>\r\n          {(header as ReactElement).props.children}\r\n        </TooltipHeader>\r\n        <TooltipBody>\r\n          {(body as ReactElement).props.children}\r\n        </TooltipBody>\r\n      </div>\r\n    </Draggable>\r\n  )\r\n\r\n}\r\n\r\nexport default TooltipWindow;","import React, { FC, ReactElement, useCallback, useEffect, useState } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux'\r\n\r\nimport { fetchTopicMessage } from 'src/api/topicMessages';\r\n\r\nimport MsgText from '../topic/row/msg_text'\r\nimport UserInfo from '../topic/row/user_info';\r\n\r\nimport TooltipWindow from './tooltip_window'\r\nimport TooltipHeader from './tooltip_header'\r\nimport TooltipBody from './tooltip_body'\r\nimport { ITooltipItem } from 'src/data/tooltips';\r\n\r\nimport './tooltip.css'\r\nimport { RootState } from 'src/data/store';\r\nimport { ITopicMessage } from 'src/data/topic';\r\n\r\ntype IProps = {\r\n  tooltip: ITooltipItem,\r\n  info: any,\r\n  items: any,\r\n  item0: any\r\n}\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const {\r\n    info,\r\n    items,\r\n    item0\r\n  } = state.topic;\r\n\r\n  return {\r\n    info,\r\n    items,\r\n    item0\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst Tooltip: FC<ConnectedProps<typeof connector> & IProps> = (props): ReactElement | null => {\r\n\r\n  const { tooltip, info, items, item0 } = props;\r\n  const { keys } = tooltip;\r\n\r\n  let text = '';\r\n  let data: ITopicMessage | undefined;\r\n  if (keys.topicId === info.id) {\r\n    if (keys.number === 0)\r\n      data = item0;\r\n    else\r\n      data = items.find((item: ITopicMessage) => item.n === keys.number);\r\n\r\n    if (data)\r\n      text = data.text;\r\n  }\r\n\r\n  const [state, setState] = useState({\r\n    data,\r\n    text\r\n  })\r\n\r\n  const fetchData = useCallback(async () => {\r\n\r\n    if (state.data) return;\r\n\r\n    let data: ITopicMessage;\r\n    let text = '';\r\n\r\n    try {\r\n      data = await fetchTopicMessage(keys.topicId, keys.number);\r\n      if (data)\r\n        text = data.text;\r\n      else\r\n        text = `Сообщение не найдено ${keys.number}`;\r\n\r\n    } catch (e) {\r\n      text = (e as Error).message;\r\n    }\r\n\r\n    setState({ data, text });\r\n  }, [keys.topicId, keys.number, state.data])\r\n\r\n  useEffect(() => {\r\n      fetchData();\r\n  }, [fetchData])\r\n\r\n  if (!state.text)\r\n    return null;\r\n\r\n  let header: ReactElement;\r\n  if (!state.data) {\r\n    header = <b>Заголовок</b>\r\n  } else {\r\n    header = <UserInfo data={state.data} isAuthor={false} isYou={false} isTooltip={true} />\r\n  }\r\n\r\n  return (\r\n    <TooltipWindow tooltip={props.tooltip}>\r\n      <TooltipHeader>\r\n        {header}\r\n      </TooltipHeader>\r\n      <TooltipBody>\r\n        <MsgText\r\n          data={state.data}\r\n          n={state.data?.n}\r\n          vote={state.data?.vote}\r\n          html={state.text}\r\n          topicId={keys.topicId}\r\n          style={{ maxHeight: \"min(550px, 80vh)\", overflowY: \"auto\" }}\r\n        />\r\n      </TooltipBody>\r\n    </TooltipWindow>\r\n  )\r\n\r\n}\r\n\r\nexport default connector(Tooltip);","import React, { FC, ReactElement } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\n\r\nimport { RootState } from 'src/data/store'\r\nimport Tooltip from './tooltip'\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const {\r\n    items\r\n  } = state.tooltips\r\n\r\n  return {\r\n    items,\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst TooltipsList: FC<ConnectedProps<typeof connector>> = ({ items }): ReactElement => {\r\n\r\n  return (\r\n    <>\r\n      {items.map((item) => {\r\n        return (\r\n          <Tooltip key={item.hash} tooltip={item}>\r\n          </Tooltip>\r\n        )\r\n      }\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connector(TooltipsList);","import React, { FC, ReactElement, useEffect } from 'react';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport NavBar from './components/navigation/nav_bar';\r\nimport AppRoutes from './components/approutes';\r\nimport NavBarFooter from './components/navigation/nav_bar_footer';\r\nimport TooltipsList from './components/tooltips/tooltips_list';\r\nimport { RootState } from './data/store';\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  return {\r\n    theme: state.options.items.theme\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst App: FC<ConnectedProps<typeof connector>> = ({theme}): ReactElement => {\r\n\r\n  useEffect(() => {\r\n    document.body.setAttribute('theme', theme);\r\n  }, [theme])\r\n\r\n  return (\r\n    <HashRouter>\r\n      <NavBar />\r\n      <AppRoutes />\r\n      <NavBarFooter />\r\n      <TooltipsList />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default connector(App);\r\n","import React, { ReactElement } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from 'src/data/store'\r\n\r\nconst Root = ({ store }): ReactElement => (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n)\r\n\r\nReactDOM.render(<Root store={store} />,\r\n  document.getElementById('root'));"],"sourceRoot":""}