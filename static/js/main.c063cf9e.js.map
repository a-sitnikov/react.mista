{"version":3,"file":"static/js/main.c063cf9e.js","mappings":"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","sources":["components/common/search.tsx","utils.ts","api/api-utils.ts","api/cookies.ts","api/sections.ts","api/topic_info.ts","api/topic_messages.ts","api/topics_list.ts","api/index.ts","store/query-hooks/use-sections.ts","store/query-hooks/types.ts","store/hooks.ts","store/query-hooks/use-topics-list.ts","store/slices/login.ts","api/login.ts","store/slices/new_topic.ts","api/newtopic.ts","store/slices/options.ts","store/slices/tooltips.ts","store/slices/topic.ts","store/slices/new_message.ts","api/new_message.ts","store/query-hooks/use-topic-messages.ts","components/navigation/nav_bar.tsx","store/root.ts","components/login/logged_user.tsx","components/login/login_form.tsx","components/common/error.tsx","components/login/index.tsx","pages/topics_list/sections.tsx","pages/topics_list/header.tsx","pages/topics_list/table_header.tsx","pages/topics_list/row/author-cell.tsx","pages/topics_list/row/count-cell.tsx","pages/topics_list/row/forum-cell.tsx","pages/topics_list/row/last20-cell.tsx","pages/topics_list/row/last-user-cell.tsx","pages/topics_list/row/show_preview_button.tsx","pages/topics_list/row/pages.tsx","pages/topics_list/row/topic_name_cell.tsx","components/preview/preview_buttons.tsx","components/extensions/code_highlight.ts","components/extensions/code1c.tsx","components/extensions/link_to_post.tsx","components/extensions/link_to_user.tsx","components/extensions/youtube_link.tsx","components/extensions/custom_link.tsx","pages/topic/row/vote_item.tsx","pages/topic/row/vote_chart.tsx","pages/topic/row/vote.tsx","components/extensions/internal-image.tsx","pages/topic/row/msg_text.tsx","pages/topic/row/user_info.tsx","components/preview/preview_content.tsx","components/preview/topic_preview.tsx","pages/topics_list/row/index.tsx","components/common/pages.tsx","components/common/text_editor.tsx","pages/topics_list/new_topic.tsx","pages/topics_list/index.tsx","pages/topic/header.tsx","pages/topic/topic_info.tsx","pages/topic/row/index.tsx","pages/topic/footer.tsx","pages/topic/new_message.tsx","pages/topic/index.tsx","pages/topic/hooks/use-enable-updater.ts","pages/options/radio_option.tsx","pages/options/string_option.tsx","pages/options/formscheme.ts","pages/options/tab.tsx","pages/options/index.tsx","pages/approutes.tsx","components/navigation/nav_bar_footer.tsx","components/tooltips/tooltip_header.tsx","components/tooltips/tooltip_body.tsx","components/tooltips/tooltip_window.tsx","components/tooltips/tooltip.tsx","store/query-hooks/use-message-data.ts","components/tooltips/tooltips_container.tsx","App.tsx","index.tsx","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\n\r\nimport \"./search.css\";\r\nimport { useEventCallback } from \"usehooks-ts\";\r\n\r\nconst Search = (): React.ReactElement => {\r\n  const [searchEngine, setSearchEngine] = useState(\"Яндекс\");\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleTextChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setText(e.target.value);\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleKeyDown = useEventCallback(\r\n    (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.key === \"Enter\") {\r\n        doSearch();\r\n      }\r\n    }\r\n  );\r\n\r\n  const doSearch = useEventCallback(() => {\r\n    let url: string;\r\n    switch (searchEngine) {\r\n      case \"Яндекс\":\r\n        url = `https://www.yandex.ru/search/?text=${text}&site=forum.mista.ru`;\r\n        break;\r\n      case \"Google\":\r\n        url = `https://www.google.ru/search?q=${text}+site:forum.mista.ru`;\r\n        break;\r\n    }\r\n\r\n    window.open(url);\r\n    setText(\"\");\r\n  });\r\n\r\n  return (\r\n    <InputGroup size=\"sm\">\r\n      <DropdownButton\r\n        id=\"search-engine\"\r\n        title=\"\"\r\n        size=\"sm\"\r\n        variant=\"light\"\r\n        onSelect={setSearchEngine}\r\n      >\r\n        <Dropdown.Item eventKey=\"Яндекс\">Яндекс</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"Google\">Google</Dropdown.Item>\r\n      </DropdownButton>\r\n      <FormControl\r\n        type=\"text\"\r\n        placeholder={`${searchEngine}: поиск`}\r\n        className=\"search-input input\"\r\n        onKeyDown={handleKeyDown}\r\n        onChange={handleTextChange}\r\n        value={text}\r\n      />\r\n      <InputGroup.Text className=\"search-button\" onClick={doSearch}>\r\n        <i className=\"fa fa-search input\" style={{ zIndex: 1000 }} />\r\n      </InputGroup.Text>\r\n    </InputGroup>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import dayjs from \"dayjs\";\r\n\r\nexport const toNumber = (\r\n  str: string | number | undefined | null,\r\n  defaultValue = 0\r\n) => {\r\n  if (!str) return defaultValue;\r\n  if (typeof str === \"number\") return str;\r\n\r\n  const number = parseInt(str, 10);\r\n  if (isNaN(number)) return defaultValue;\r\n  return number;\r\n};\r\n\r\nexport const groupBy = <T, K extends keyof any>(\r\n  list: T[],\r\n  getKey: (item: T) => K\r\n) =>\r\n  list.reduce((previous, currentItem) => {\r\n    const group = getKey(currentItem);\r\n    if (!previous[group]) previous[group] = [];\r\n    previous[group].push(currentItem);\r\n    return previous;\r\n  }, {} as Record<K, T[]>);\r\n\r\nexport const parseJSON = (text: string): {} => {\r\n  try {\r\n    return JSON.parse(text);\r\n  } catch (e) {}\r\n\r\n  try {\r\n    text = text\r\n      .replace(/\\\\</g, \"<\")\r\n      .replace(/\\\\>/g, \">\")\r\n      .replace(/\\\\&/g, \"&\")\r\n      .replace(/\\\\'/g, \"'\")\r\n      .replace(/\\\\\"/g, \"\")\r\n      .replace(/ \"/g, ' \\\\\"')\r\n      .replace(/\"\"/g, '\\\\\"\"')\r\n      .replace(/\\t/g, \"\\\\t\")\r\n      .replace(/\"(\\.| |\\?)/g, '\\\\\"$1');\r\n\r\n    //           console.log(text);\r\n    return JSON.parse(text);\r\n\r\n    //return eval(text);\r\n  } catch (e) {\r\n    console.error(e.message);\r\n    console.log(text);\r\n\r\n    return {};\r\n  }\r\n};\r\n\r\nexport const getPageNumber = (locationPage: string): number | \"last20\" => {\r\n  if (locationPage === \"last20\") return \"last20\";\r\n  return toNumber(locationPage, 1);\r\n};\r\n\r\nexport const getMaxPage = (count: number): number => {\r\n  if (count === -1 || count === undefined) return -1;\r\n  return Math.min(Math.ceil(count / 100), 10) || 1;\r\n};\r\n\r\nexport const childrenToText = (children: any): string[] => {\r\n  if (!children) return [\"\"];\r\n\r\n  return children.map((value) => {\r\n    if (typeof value === \"string\") {\r\n      return value;\r\n    } else if (value.type === \"br\") {\r\n      return \"<br>\";\r\n    } else if (\r\n      value.type.displayName === \"Connect(LinkToPost)\" ||\r\n      value.type.displayName === \"Connect(t)\"\r\n    ) {\r\n      return value.props.number;\r\n    } else {\r\n      console.log(value);\r\n      return value;\r\n    }\r\n  });\r\n};\r\n\r\nexport const extractTextFromHTML = (htmltext: string): string => {\r\n  const parser = new DOMParser();\r\n  const floatingElement = parser.parseFromString(htmltext, \"text/html\");\r\n  return (floatingElement.firstChild as HTMLElement).innerText;\r\n};\r\n\r\nexport function isToday(td: Date | number): boolean {\r\n  return dayjs(td).isSame(new Date(), \"day\");\r\n}\r\n\r\nexport const formattedTime = (time: number): string => {\r\n  if (time === 2147483648000) return \"\";\r\n\r\n  if (isToday(time)) {\r\n    return dayjs(time).format(\"HH:mm\");\r\n  } else {\r\n    return dayjs(time).format(\"DD.MM.YY\");\r\n  }\r\n};\r\n","import fetchJsonp from \"fetch-jsonp\";\r\nimport * as utils from \"src/utils\";\r\nimport { domain } from \".\";\r\n\r\nexport const paramsToString = (paramsPrefix: string, params?: {}): string => {\r\n  if (!params) return \"\";\r\n\r\n  let searchParams = new URLSearchParams();\r\n  for (let key in params) {\r\n    const value = params[key];\r\n    if (value !== undefined) searchParams.append(key, value);\r\n  }\r\n\r\n  let str = searchParams.toString();\r\n  if (str.length > 0) return paramsPrefix + str;\r\n  else return \"\";\r\n};\r\n\r\nexport const fetchJsonpAndGetJson = async (\r\n  url: string,\r\n  params?: {},\r\n  options?: {}\r\n): Promise<any> => {\r\n  let fullUrl = `${domain}/${url}${paramsToString(\"?\", params)}`;\r\n  const response = await fetchJsonp(fullUrl);\r\n  let responseJson = await response.json();\r\n  let json;\r\n  if (typeof responseJson === \"string\") {\r\n    try {\r\n      json = JSON.parse(responseJson);\r\n    } catch (e) {\r\n      json = utils.parseJSON(responseJson);\r\n    }\r\n  } else {\r\n    json = responseJson;\r\n  }\r\n  return json;\r\n};\r\n\r\nexport const fetchAndGetJson = async (\r\n  url: string,\r\n  params?: {},\r\n  init?: RequestInit\r\n): Promise<any> => {\r\n  let fullUrl = `${domain}/${url}${paramsToString(\"?\", params)}`;\r\n\r\n  if (!init)\r\n    init = {\r\n      mode: \"cors\",\r\n      credentials: \"same-origin\",\r\n    };\r\n\r\n  const response = await fetch(fullUrl, init);\r\n  return await response.json();\r\n};\r\n","import { urlCookies } from \".\";\r\nimport { fetchJsonpAndGetJson } from \"./api-utils\";\r\nimport { ILogin } from \"src/store\";\r\n\r\ntype IAPIResponse = {\r\n  cookie: {\r\n    entr_id: string;\r\n    entr_key: string;\r\n    entr_hash: string;\r\n    musthave: string;\r\n    hotlog: string;\r\n  };\r\n  session: {\r\n    entered: number;\r\n    user_id: string;\r\n    user_name: string;\r\n    user_hash: string;\r\n    is_moderator: number;\r\n    light_moderator: number;\r\n    section: string;\r\n    show_moderator_tools: number;\r\n    kb: string;\r\n    registered_unixtime: string;\r\n    guid: string;\r\n    last_error?: string;\r\n    user: {\r\n      id: string;\r\n      name: string;\r\n      is_moderator: boolean;\r\n      light_moderator: boolean;\r\n      kb: boolean;\r\n      section_owner: boolean;\r\n      section: string;\r\n      registered_unixtime: string;\r\n      balance: number;\r\n    };\r\n  };\r\n};\r\n\r\nfunction convertResponse(response: IAPIResponse): ILogin {\r\n  const { session } = response;\r\n\r\n  return {\r\n    userId: Number(session?.user_id),\r\n    userName: session?.user_name,\r\n    userHash: session?.user_hash,\r\n    lastError: session?.last_error,\r\n  };\r\n}\r\n\r\nasync function fetchCookies(): Promise<ILogin | undefined> {\r\n  const response = await fetchJsonpAndGetJson(urlCookies);\r\n  return convertResponse(response);\r\n}\r\n\r\nexport { fetchCookies };\r\n","import { groupBy } from \"src/utils\";\r\nimport { urlSections } from \".\";\r\nimport { fetchJsonpAndGetJson } from \"./api-utils\";\r\nimport type { ISectionItem } from \"src/store\";\r\n\r\ninterface IAPIResponse {\r\n  id: number;\r\n  forum: string;\r\n  shortn: string;\r\n  fulln: string;\r\n}\r\n\r\nfunction convertResponse(response: IAPIResponse): ISectionItem {\r\n  return {\r\n    id: response.id,\r\n    forum: response.forum,\r\n    code: response.shortn,\r\n    name: response.fulln,\r\n  };\r\n}\r\n\r\nexport const fetchSections = async (): Promise<{\r\n  items: ISectionItem[];\r\n  tree: { [key: string]: ISectionItem[] };\r\n}> => {\r\n  const list = await fetchJsonpAndGetJson(urlSections);\r\n  const items = list.map(convertResponse);\r\n  return {\r\n    items,\r\n    tree: groupBy(items, (item) => item.forum),\r\n  };\r\n};\r\n","import { urlTopicInfo } from \".\";\r\nimport { fetchAndGetJson } from \"./api-utils\";\r\nimport type { ITopicInfo } from \"src/store\";\r\n\r\ninterface IAPIResponse {\r\n  id: string;\r\n  text: string;\r\n  forum: string;\r\n  section: string;\r\n  created: string;\r\n  user_id: string;\r\n  user_name: string;\r\n  updated: string;\r\n  updated_name: string;\r\n  answers_count: string;\r\n  down: number;\r\n  closed: number;\r\n  deleted: number;\r\n  is_voting: number;\r\n  voting: {\r\n    select: string;\r\n    result: number;\r\n  }[];\r\n}\r\n\r\nfunction convertResponse(response: IAPIResponse): ITopicInfo {\r\n  let voting = [];\r\n  if (response.voting)\r\n    voting = response.voting.map((x) => ({\r\n      text: x.select,\r\n      count: x.result,\r\n    }));\r\n\r\n  return {\r\n    id: parseInt(response.id),\r\n    title: response.text,\r\n    forum: response.forum,\r\n    sectionId: response.section,\r\n    created: parseInt(response.created) * 1000,\r\n    authorId: response.user_id,\r\n    author: response.user_name,\r\n    updated: parseInt(response.updated) * 1000,\r\n    lastUser: response.updated_name,\r\n    count: parseInt(response.answers_count),\r\n    down: response.down,\r\n    closed: response.closed,\r\n    deleted: response.deleted,\r\n    isVoting: response.is_voting,\r\n    voting,\r\n  };\r\n}\r\n\r\nasync function fetchTopicInfo(id: number): Promise<ITopicInfo> {\r\n  const info = await fetchAndGetJson(urlTopicInfo, { id });\r\n  return convertResponse(info);\r\n}\r\n\r\nexport { fetchTopicInfo };\r\n","import { urlTopicMessages } from \".\";\r\nimport { fetchAndGetJson } from \"./api-utils\";\r\nimport type { ITopicMessage, ITopicMessagesList } from \"src/store\";\r\n\r\ninterface IAPIRequest {\r\n  id: number;\r\n  from?: number;\r\n  to?: number;\r\n}\r\n\r\nexport interface ITopicMessageRequest extends IAPIRequest {}\r\n\r\ninterface IAPIResponse {\r\n  id: string;\r\n  n: string;\r\n  user: string;\r\n  userId: string;\r\n  text: string;\r\n  utime: string;\r\n  vote: number;\r\n}\r\n\r\nfunction convertResponse(response: IAPIResponse): ITopicMessage {\r\n  return {\r\n    id: parseInt(response.id),\r\n    n: parseInt(response.n),\r\n    user: response.user,\r\n    userId: parseInt(response.userId),\r\n    text: response.text,\r\n    time: parseInt(response.utime) * 1000,\r\n    vote: response.vote,\r\n  };\r\n}\r\n\r\nasync function fetchTopicMessages(\r\n  params?: ITopicMessageRequest\r\n): Promise<ITopicMessagesList> {\r\n  const list = await fetchAndGetJson(urlTopicMessages, params);\r\n  return list.map(convertResponse);\r\n}\r\n\r\nasync function fetchTopicMessage(\r\n  id: number,\r\n  n: number\r\n): Promise<ITopicMessage> {\r\n  const to = n === 0 ? n + 1 : n;\r\n\r\n  const list = await fetchAndGetJson(urlTopicMessages, { id, from: n, to });\r\n  return list.map(convertResponse).find((item: ITopicMessage) => item.n === n);\r\n}\r\n\r\nexport { fetchTopicMessages, fetchTopicMessage };\r\n","import { toNumber } from \"src/utils\";\r\nimport { urlTopicsList } from \".\";\r\nimport { fetchAndGetJson } from \"./api-utils\";\r\n\r\nimport type { ITopicsList, ITopicsListItem } from \"src/store\";\r\n\r\nexport interface ITopicsListRequest {\r\n  itemsPerPage?: number | string | null;\r\n  page?: number | string | null;\r\n  beforeTime?: string | null;\r\n  forum?: string | null;\r\n  section?: string | null;\r\n  userId?: string | null;\r\n  myTopics?: string | null;\r\n}\r\n\r\ninterface IAPIRequest {\r\n  topics?: string;\r\n  section_short_name?: string;\r\n  forum?: string;\r\n  user_id?: string;\r\n  mytopics?: string;\r\n}\r\n\r\ninterface IAPIResponse {\r\n  id: number;\r\n  forum: string;\r\n  sect1: string;\r\n  sect2: string;\r\n  v8: string;\r\n  closed: number;\r\n  down: number;\r\n  paid: number;\r\n  text: string;\r\n  message: string;\r\n  created: number;\r\n  utime: number;\r\n  user: string;\r\n  user0: string;\r\n  is_voting: number;\r\n  answ: number;\r\n}\r\n\r\nfunction convertRequest(request: ITopicsListRequest): IAPIRequest {\r\n  const page = toNumber(request.page, 1);\r\n  const itemsCount = toNumber(request.itemsPerPage, 20) * page;\r\n\r\n  return {\r\n    topics: String(itemsCount),\r\n    section_short_name: request.section,\r\n    forum: request.forum,\r\n    user_id: request.userId,\r\n    mytopics: request.myTopics,\r\n  };\r\n}\r\n\r\nfunction convertResponse(response: IAPIResponse): ITopicsListItem {\r\n  return {\r\n    id: response.id,\r\n    forum: response.forum,\r\n    section: response.sect1,\r\n    sectionCode: response.sect2,\r\n    author: response.user0,\r\n    lastUser: response.user,\r\n    created: response.created * 1000,\r\n    updated: response.utime * 1000,\r\n    count: response.answ,\r\n    text: response.text,\r\n    closed: response.closed === 1,\r\n    down: response.down === 1,\r\n    pinned: response.utime === 2147483648,\r\n    isVoting: response.is_voting === 1,\r\n  };\r\n}\r\n\r\nasync function fetchTopicsList(\r\n  params?: ITopicsListRequest\r\n): Promise<ITopicsList> {\r\n  const request = convertRequest(params);\r\n\r\n  const itemsPerPage = toNumber(params?.itemsPerPage, 20);\r\n\r\n  const list = await fetchAndGetJson(urlTopicsList, request);\r\n  return list.map(convertResponse).slice(-itemsPerPage);\r\n}\r\n\r\nexport { fetchTopicsList };\r\n","export const domain: string =\r\n  localStorage.getItem(\"domain\") || \"https://dev.mista.ru\";\r\n//export const domain = 'https://dev.mista.ru';\r\nexport const urlTopicsList: string =\r\n  localStorage.getItem(\"urlTopicsList\") || \"api/topic.php\";\r\nexport const urlTopicInfo: string =\r\n  localStorage.getItem(\"urlTopicInfo\") || \"ajax_gettopic.php\";\r\nexport const urlTopicMessages: string =\r\n  localStorage.getItem(\"urlTopicMessages\") || \"api/message.php\";\r\nexport const urlLogin: string =\r\n  localStorage.getItem(\"urlLogin\") || \"users.php?action=do_enter\";\r\nexport const urlLogout: string =\r\n  localStorage.getItem(\"urlLogout\") || \"users.php?action=exit\";\r\nexport const urlCookies: string =\r\n  localStorage.getItem(\"urlCookies\") || \"ajax_cookie.php\";\r\nexport const urlSections: string =\r\n  localStorage.getItem(\"urlSections\") || \"ajax_getsectionslist.php\";\r\nexport const urlNewMessage: string =\r\n  localStorage.getItem(\"urlNewMessage\") || \"topic.php?id=:id&page=1\";\r\nexport const urlNewTopic: string =\r\n  localStorage.getItem(\"urlNewTopic\") || \"index.php\";\r\nexport const urlAddBookmark: string =\r\n  localStorage.getItem(\"urlAddBookmark\") || \"ajax_addbookmark.php\";\r\nexport const urlSearch: string =\r\n  localStorage.getItem(\"urlSearch\") || \"ajax_find.php\";\r\n\r\nexport * from \"./cookies\";\r\nexport * from \"./login\";\r\nexport * from \"./new_message\";\r\nexport * from \"./newtopic\";\r\nexport * from \"./sections\";\r\nexport * from \"./topic_info\";\r\nexport * from \"./topic_messages\";\r\nexport * from \"./topics_list\";\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { fetchSections } from \"src/api\";\r\n\r\nexport const useSections = () => {\r\n  return useQuery({\r\n    queryKey: [\"sections\"],\r\n    queryFn: fetchSections,\r\n    placeholderData: { items: [], tree: {} },\r\n    refetchOnWindowFocus: false,\r\n  });\r\n};\r\n","export enum QueryKeys {\r\n  Sections = \"sections\",\r\n  TopicsList = \"topics-list\",\r\n  TopicMessages = \"topic-messages\",\r\n  TopicMessageData = \"topic-message-data\",\r\n  UpdateTopicMessages = \"update-topic-messages\",\r\n}\r\n\r\nexport interface TOptions {\r\n  enabled?: boolean;\r\n  refetchInterval?: number;\r\n}\r\n","import { useMemo } from \"react\";\r\nimport { ActionCreatorsMapObject, bindActionCreators } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"./types\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport const useActionCreators = (actions: ActionCreatorsMapObject) => {\r\n  const dispatch = useAppDispatch();\r\n  return useMemo(\r\n    () => bindActionCreators(actions, dispatch),\r\n    [actions, dispatch]\r\n  );\r\n};\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport { fetchTopicsList } from \"src/api\";\r\nimport { QueryKeys, TOptions } from \"./types\";\r\nimport { useAppSelector } from \"../hooks\";\r\n\r\ninterface IProps {\r\n  searchParams: URLSearchParams;\r\n}\r\n\r\nexport const useTopicsList = ({ searchParams }: IProps, options?: TOptions) => {\r\n  const itemsPerPage = useAppSelector(\r\n    (state) => state.options.items.topicsPerPage\r\n  );\r\n\r\n  return useQuery({\r\n    queryKey: [QueryKeys.TopicsList, ...searchParams],\r\n    queryFn: () => {\r\n      const params = Object.fromEntries(searchParams);\r\n      return fetchTopicsList({ itemsPerPage, ...params });\r\n    },\r\n    placeholderData: (previousData) => previousData,\r\n    refetchOnWindowFocus: false,\r\n    ...options,\r\n  });\r\n};\r\n","import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nimport { fetchLogin, fetchLogout, ILoginRequest } from \"src/api\";\r\nimport { fetchCookies } from \"src/api\";\r\n\r\nimport { RootState } from \"../types\";\r\n\r\nexport interface ILogin {\r\n  userId?: number;\r\n  userName?: string;\r\n  userHash?: string;\r\n  lastError?: string;\r\n}\r\n\r\nexport interface LoginState {\r\n  status: \"init\" | \"loading\" | \"success\" | \"error\";\r\n  logged: boolean;\r\n  userId?: number;\r\n  userName?: string;\r\n  userHash?: string;\r\n  lastError?: string;\r\n  error?: string;\r\n  lastUpdated?: number;\r\n  isFetching?: boolean;\r\n}\r\n\r\nconst initialState: LoginState = {\r\n  status: \"init\",\r\n  logged: false,\r\n};\r\n\r\nexport const checkLogin = createAsyncThunk(\"login/check\", async () => {\r\n  return await fetchCookies();\r\n});\r\n\r\nexport const doLogin = createAsyncThunk(\r\n  \"login/login\",\r\n  async (params: ILoginRequest, { dispatch }) => {\r\n    await fetchLogin(params);\r\n    return fetchCookies();\r\n  }\r\n);\r\n\r\nexport const doLogout = createAsyncThunk(\"login/logout\", async () => {\r\n  return await fetchLogout();\r\n});\r\n\r\nconst shouldLogin = ({ login }: RootState): boolean => {\r\n  if (!login) return true;\r\n  if (login.status === \"loading\") return false;\r\n\r\n  return true;\r\n};\r\n\r\nexport const doLoginIfNeeded =\r\n  (username: string, password: string): any =>\r\n  (dispatch: any, getState: any) => {\r\n    if (shouldLogin(getState())) {\r\n      return dispatch(doLogin({ username, password }));\r\n    }\r\n  };\r\n\r\nexport const checkLoginIfNeeded = (): any => (dispatch: any, getState: any) => {\r\n  if (shouldLogin(getState())) {\r\n    return dispatch(checkLogin());\r\n  }\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"login\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(doLogin.pending, (state) => {\r\n        state.status = \"loading\";\r\n        delete state.error;\r\n      })\r\n      .addCase(\r\n        doLogin.fulfilled,\r\n        (state, { payload }: PayloadAction<ILogin>) => {\r\n          state.status = \"success\";\r\n          state.userId = payload.userId;\r\n          state.userName = payload.userName;\r\n          state.userHash = payload.userHash;\r\n          state.logged = true;\r\n          delete state.error;\r\n        }\r\n      )\r\n      .addCase(doLogin.rejected, (state, { error }) => {\r\n        state.status = \"error\";\r\n        state.error = error?.message;\r\n      })\r\n      // logout\r\n      .addCase(doLogout.pending, (state) => {\r\n        state.status = \"loading\";\r\n        delete state.error;\r\n      })\r\n      .addCase(doLogout.fulfilled, (state) => {\r\n        state.status = \"success\";\r\n        state.logged = false;\r\n\r\n        delete state.userId;\r\n        delete state.userName;\r\n        delete state.userHash;\r\n        delete state.error;\r\n      })\r\n      .addCase(doLogout.rejected, (state, { error }) => {\r\n        state.status = \"error\";\r\n        state.error = error?.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { actions: loginActions, reducer: login } = slice;\r\n","import { domain, urlLogin, urlLogout } from \".\";\r\nimport { paramsToString } from \"./api-utils\";\r\n\r\nexport interface ILoginRequest {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport const fetchLogin = async (params: ILoginRequest): Promise<void> => {\r\n  await fetch(`${domain}/${urlLogin}`, {\r\n    method: \"POST\",\r\n    body: paramsToString(\"\", {\r\n      user_name: params.username,\r\n      user_password: params.password,\r\n    }),\r\n    mode: \"no-cors\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      Accept: \"text/html,application/xhtml+xml,application/xml\",\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n    redirect: \"follow\",\r\n  });\r\n};\r\n\r\nexport const fetchLogout = async (): Promise<void> => {\r\n  const fullUrl = `${domain}/${urlLogout}`;\r\n  await fetch(fullUrl, {\r\n    mode: \"no-cors\",\r\n    credentials: \"include\",\r\n  });\r\n};\r\n","import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nimport { fetchNewTopic, INewTopicRequest } from \"src/api\";\r\nimport { RootState } from \"../types\";\r\n\r\nexport interface ISectionItem {\r\n  id: number;\r\n  forum: string;\r\n  code: string;\r\n  name: string;\r\n}\r\n\r\nexport type NewTopicState = {\r\n  status: \"init\" | \"loading\" | \"success\" | \"error\";\r\n  section: ISectionItem;\r\n  text: string;\r\n  subject: string;\r\n  forum: string;\r\n  isVoting: boolean;\r\n  error?: string;\r\n};\r\n\r\nconst initialState: NewTopicState = {\r\n  status: \"init\",\r\n  section: null,\r\n  text: \"\",\r\n  subject: \"\",\r\n  forum: \"1C\",\r\n  isVoting: false,\r\n};\r\n\r\nexport type postNewTopicParams = {\r\n  subject: string;\r\n  text: string;\r\n  section: number;\r\n  forum: string;\r\n  isVoting: boolean;\r\n  votingItems?: Array<string>;\r\n  onSuccess?: () => void;\r\n};\r\n\r\nexport const postNewTopic = createAsyncThunk(\r\n  \"newTopic/post\",\r\n  async (params: postNewTopicParams) => {\r\n    let fetchParams: INewTopicRequest = {\r\n      message_text: params.text,\r\n      topic_text: params.subject,\r\n      target_section: String(params.section),\r\n      target_forum: params.forum.toLowerCase(),\r\n      action: \"new\",\r\n      rnd: Math.round(Math.random() * 10000000000),\r\n      voting: params.isVoting ? 1 : 0,\r\n    };\r\n\r\n    if (params.votingItems)\r\n      for (let i = 0; i < params.votingItems.length; i++) {\r\n        fetchParams[`section${i + 1}`] = params.votingItems[i];\r\n      }\r\n\r\n    await fetchNewTopic(fetchParams);\r\n    // if (params.onSuccess)\r\n    // params.onSuccess();\r\n  }\r\n);\r\n\r\nexport const shouldPost = ({ newTopic }: RootState): boolean => {\r\n  if (!newTopic) return false;\r\n  if (newTopic.status === \"loading\") return false;\r\n\r\n  return true;\r\n};\r\n\r\nexport const postNewTopicIfNeeded =\r\n  (params: postNewTopicParams) => (dispatch: any, getState: any) => {\r\n    const state = getState();\r\n    if (shouldPost(state)) {\r\n      return dispatch(postNewTopic(params));\r\n    }\r\n  };\r\n\r\nconst clear = (state: NewTopicState) => {\r\n  state.status = \"init\";\r\n  state.text = \"\";\r\n  state.subject = \"\";\r\n  state.forum = \"\";\r\n  state.isVoting = false;\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"newTopic\",\r\n  initialState,\r\n  reducers: {\r\n    clear,\r\n    changeSubject: (state, { payload }: PayloadAction<string>) => {\r\n      state.subject = payload;\r\n    },\r\n    changeText: (state, { payload }: PayloadAction<string>) => {\r\n      state.text = payload;\r\n    },\r\n    changeSection: (state, { payload }: PayloadAction<ISectionItem>) => {\r\n      state.section = payload;\r\n      state.forum = payload?.forum.toLowerCase();\r\n    },\r\n    showVoting: (state, { payload }: PayloadAction<boolean>) => {\r\n      state.isVoting = payload;\r\n    },\r\n    setError: (state, { payload }: PayloadAction<string>) => {\r\n      state.error = payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postNewTopic.pending, (state) => {\r\n        state.status = \"loading\";\r\n        delete state.error;\r\n      })\r\n      .addCase(postNewTopic.fulfilled, (state) => {\r\n        clear(state);\r\n        delete state.error;\r\n      })\r\n      .addCase(postNewTopic.rejected, (state, { error }) => {\r\n        state.status = \"error\";\r\n        state.error = error?.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { actions: newTopicActions, reducer: newTopic } = slice;\r\n","import { domain, urlNewTopic } from \".\";\r\nimport { paramsToString } from \"./api-utils\";\r\n\r\nexport interface INewTopicRequest {\r\n  action: \"new\";\r\n  rnd: number;\r\n  topic_text: string;\r\n  message_text: string;\r\n  target_section: string;\r\n  target_forum: string;\r\n  voting: number;\r\n  select1?: string;\r\n  select2?: string;\r\n  select3?: string;\r\n  select4?: string;\r\n  select5?: string;\r\n  select6?: string;\r\n  select7?: string;\r\n  select8?: string;\r\n  select9?: string;\r\n  select10?: string;\r\n}\r\n\r\nexport const fetchNewTopic = async (params: INewTopicRequest): Promise<any> => {\r\n  await fetch(`${domain}/${urlNewTopic}`, {\r\n    method: \"POST\",\r\n    body: paramsToString(\"\", params),\r\n    mode: \"no-cors\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n  });\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface IOptionsItems {\r\n  theme: \"yellow\" | \"lightgray\" | \"dark\";\r\n  topicsPerPage: string;\r\n  autoRefreshTopicsList: string;\r\n  autoRefreshTopicsListInterval: string;\r\n  autoRefreshTopic: string;\r\n  autoRefreshTopicInterval: string;\r\n  tooltipDelay: string;\r\n  showTooltips: string;\r\n  showTooltipOnPostLink: string;\r\n  showYoutubeVideoTitle: string;\r\n  replaceCatalogMista: string;\r\n  fixBrokenLinks: string;\r\n}\r\n\r\nexport interface OptionsState {\r\n  voteColors: Array<string>;\r\n  items: IOptionsItems;\r\n  show?: boolean;\r\n}\r\n\r\nexport const defaultOptionsState: OptionsState = {\r\n  voteColors: [\r\n    \"#FF1616\", //1\r\n    \"#1A861A\", //2\r\n    \"#0023FF\", //3\r\n    \"#FF6B18\", //4\r\n    \"#9B3A6E\", //5\r\n    \"#567655\", //6\r\n    \"#233345\", //7\r\n    \"#CC0000\", //8\r\n    \"#00CCCC\", //9\r\n    \"#0000CC\", //10\r\n  ],\r\n  items: {\r\n    theme: \"lightgray\",\r\n    topicsPerPage: \"20\",\r\n    autoRefreshTopicsList: \"false\",\r\n    autoRefreshTopicsListInterval: \"60\",\r\n    autoRefreshTopic: \"true\",\r\n    autoRefreshTopicInterval: \"60\",\r\n    //tooltips\r\n    showTooltips: \"true\",\r\n    tooltipDelay: \"500\",\r\n    showTooltipOnPostLink: \"true\",\r\n    //links\r\n    showYoutubeVideoTitle: \"true\",\r\n    replaceCatalogMista: \"true\",\r\n    fixBrokenLinks: \"true\",\r\n  },\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"options\",\r\n  initialState: defaultOptionsState,\r\n  reducers: {\r\n    save: (state, { payload }: PayloadAction<IOptionsItems>) => {\r\n      for (let key in payload) {\r\n        const value = String(payload[key]);\r\n        state.items[key] = value;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { actions: optionsActions, reducer: options } = slice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface ITooltipKeys {\r\n  topicId: number;\r\n  number: number;\r\n}\r\n\r\nexport interface ICoords {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface ITooltipItem {\r\n  hash: string;\r\n  keys: ITooltipKeys;\r\n  coords: ICoords;\r\n  zIndex: number;\r\n}\r\n\r\nexport interface ITooltipsList extends Array<ITooltipItem> {}\r\n\r\nexport interface TooltipsState {\r\n  items: ITooltipsList;\r\n}\r\n\r\nconst initialState: TooltipsState = {\r\n  items: [],\r\n};\r\n\r\nconst show = (\r\n  state: TooltipsState,\r\n  { payload }: PayloadAction<{ keys: ITooltipKeys; coords: ICoords }>\r\n) => {\r\n  const hash = JSON.stringify(payload.keys);\r\n  const index = state.items.findIndex((item) => item.hash === hash);\r\n  let zIndex = 0;\r\n  if (state.items.length)\r\n    zIndex = state.items[state.items.length - 1].zIndex + 1;\r\n  if (index === -1)\r\n    state.items.push({\r\n      keys: payload.keys,\r\n      coords: payload.coords,\r\n      hash,\r\n      zIndex,\r\n    });\r\n  else {\r\n    //state.list = moveToEnd(state.list, index);\r\n    state.items[state.items.length - 1].zIndex = zIndex;\r\n  }\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"tooltips\",\r\n  initialState,\r\n  reducers: {\r\n    show,\r\n    close: (state, { payload }: PayloadAction<ITooltipKeys>) => {\r\n      const hash = JSON.stringify(payload);\r\n      state.items = state.items.filter((val) => val.hash !== hash);\r\n    },\r\n    closeAll: (state) => {\r\n      state.items = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { actions: tooltipsActions, reducer: tooltips } = slice;\r\n","import { fetchTopicMessage, fetchTopicMessages, fetchTopicInfo } from \"src/api\";\r\nimport { toNumber } from \"src/utils\";\r\n\r\nexport interface IVotingItem {\r\n  text: string;\r\n  count: number;\r\n}\r\n\r\nexport interface ITopicInfo {\r\n  id: number;\r\n  title: string;\r\n  forum?: string;\r\n  sectionId?: string;\r\n  created?: number;\r\n  authorId?: string;\r\n  author?: string;\r\n  updated?: number;\r\n  lastUser?: string;\r\n  count?: number;\r\n  down?: number;\r\n  closed?: number;\r\n  deleted?: number;\r\n  isVoting?: number;\r\n  voting?: IVotingItem[];\r\n}\r\n\r\nexport interface ITopicMessage {\r\n  id: number;\r\n  n: number;\r\n  user: string;\r\n  userId: number;\r\n  text: string;\r\n  time: number;\r\n  vote: number;\r\n}\r\n\r\nexport interface ITopicMessagesList extends Array<ITopicMessage> {}\r\n\r\nconst getFirstLastMessageNumber = (count: number, page: number | string) => {\r\n  if (page === \"last20\") {\r\n    if (count === -1) {\r\n      return [0, 1010];\r\n    } else {\r\n      return [Math.max(0, count - 19), count];\r\n    }\r\n  }\r\n\r\n  const pageNum = toNumber(page, 1) - 1;\r\n  return [pageNum * 100, pageNum * 100 + 99];\r\n};\r\n\r\nexport const fetchTopic = async ({\r\n  topicId,\r\n  page,\r\n  item0,\r\n}: {\r\n  topicId: number;\r\n  page: number | string;\r\n  item0?: ITopicMessage;\r\n}) => {\r\n  let info: ITopicInfo;\r\n  try {\r\n    info = await fetchTopicInfo(topicId);\r\n  } catch (e) {\r\n    console.error(e);\r\n    info = {\r\n      id: topicId,\r\n      title: \"\",\r\n      count: -1,\r\n    };\r\n  }\r\n\r\n  let [first, last] = getFirstLastMessageNumber(info.count, page);\r\n  if (first === 0 && !!item0) {\r\n    first = 1;\r\n  }\r\n\r\n  let items: ITopicMessagesList = await fetchTopicMessages({\r\n    id: topicId,\r\n    from: first,\r\n    to: last,\r\n  });\r\n\r\n  let _item0 = item0;\r\n  if (first === 0) {\r\n    _item0 = items.shift();\r\n  } else {\r\n    _item0 = await fetchTopicMessage(topicId, 0);\r\n  }\r\n\r\n  if (info.count === 0 && items.length > 0) {\r\n    info.count = items[items.length - 1].n;\r\n  }\r\n\r\n  if (page === \"last20\" && items.length > 20) {\r\n    items = items.slice(-20);\r\n  }\r\n\r\n  return {\r\n    info,\r\n    item0: _item0,\r\n    list: items,\r\n  };\r\n};\r\n","import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { INewMessageRequest, fetchNewMessage } from \"src/api\";\r\n\r\nexport type NewMessageState = {\r\n  status: \"init\" | \"loading\" | \"success\" | \"error\";\r\n  text: string;\r\n  error?: string;\r\n};\r\n\r\nconst initialState: NewMessageState = {\r\n  status: \"init\",\r\n  text: \"\",\r\n};\r\n\r\nexport type PostNewmessageParams = {\r\n  text: string;\r\n  topicId: string;\r\n  voting_select?: number;\r\n  onSuccess?: () => void;\r\n};\r\n\r\nexport const postNewMessage = createAsyncThunk(\r\n  \"newMessage/post\",\r\n  async (params: PostNewmessageParams) => {\r\n    let fetchParams: INewMessageRequest = {\r\n      message_text: params.text,\r\n      action: \"new\",\r\n      topic_id: params.topicId,\r\n      rnd: Math.round(Math.random() * 10000000000),\r\n    };\r\n\r\n    if (params.voting_select) fetchParams.voting_select = params.voting_select;\r\n\r\n    await fetchNewMessage(fetchParams);\r\n\r\n    // if (params.onSuccess)\r\n    //   params.onSuccess();\r\n  }\r\n);\r\n\r\nconst slice = createSlice({\r\n  name: \"newMessage\",\r\n  initialState,\r\n  reducers: {\r\n    changeText: (state, { payload }: PayloadAction<string>) => {\r\n      state.text = payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postNewMessage.pending, (state) => {\r\n        state.status = \"loading\";\r\n        delete state.error;\r\n      })\r\n      .addCase(postNewMessage.fulfilled, (state) => {\r\n        state.text = \"\";\r\n        delete state.error;\r\n      })\r\n      .addCase(postNewMessage.rejected, (state, { error }) => {\r\n        state.status = \"error\";\r\n        state.error = error?.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { actions: newMessageActions, reducer: newMessage } = slice;\r\n","import { domain, urlNewMessage } from \".\";\r\nimport { paramsToString } from \"./api-utils\";\r\n\r\n// New message\r\nexport interface INewMessageRequest {\r\n  message_text: string;\r\n  action: \"new\";\r\n  topic_id: string;\r\n  rnd: number;\r\n  voting_select?: number;\r\n  as_admin?: boolean;\r\n}\r\n\r\nexport const fetchNewMessage = async (\r\n  params: INewMessageRequest\r\n): Promise<any> => {\r\n  const url = urlNewMessage.replace(\":id\", params.topic_id);\r\n\r\n  const options: RequestInit = {\r\n    method: \"POST\",\r\n    body: paramsToString(\"\", params),\r\n    mode: \"no-cors\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      Accept: \"text/html,application/xhtml+xml,application/xml\",\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n    redirect: \"follow\",\r\n  };\r\n\r\n  const result = await fetch(`${domain}/${url}`, options);\r\n  return result;\r\n};\r\n","import { useSearchParams } from \"react-router-dom\";\r\nimport { fetchTopic } from \"../slices\";\r\nimport { QueryClient, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport { QueryKeys } from \"./types\";\r\nimport { fetchTopicMessages } from \"src/api\";\r\n\r\ninterface TOptions {\r\n  enabled?: boolean;\r\n  refetchInterval?: number;\r\n}\r\n\r\ninterface IProps {\r\n  topicId: number;\r\n}\r\n\r\nexport type TFetchTopicData =\r\n  | Awaited<ReturnType<typeof fetchTopic>>\r\n  | undefined;\r\n\r\nexport const useTopicMessages = ({ topicId }: IProps, options?: TOptions) => {\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const page = searchParams.get(\"page\");\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  return useQuery({\r\n    queryKey: [QueryKeys.TopicMessages, topicId, page],\r\n    queryFn: () => {\r\n      const cacheData = getCachedTopicData(queryClient, topicId);\r\n      return fetchTopic({ topicId, page, item0: cacheData?.item0 });\r\n    },\r\n    placeholderData: (previousData) => previousData,\r\n    refetchOnWindowFocus: false,\r\n    ...options,\r\n  });\r\n};\r\n\r\nexport const useUpdateMessages = ({ topicId }: IProps, options: TOptions) => {\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const page = searchParams.get(\"page\");\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  return useQuery({\r\n    queryKey: [QueryKeys.UpdateTopicMessages, topicId],\r\n    queryFn: async () => {\r\n      const cacheData = getCachedTopicData(queryClient, topicId);\r\n      if (!cacheData) return true;\r\n\r\n      const data = await fetchTopicMessages({\r\n        id: topicId,\r\n        from: cacheData.info.count + 1,\r\n        to: 1050,\r\n      });\r\n\r\n      if (data.length === 0) return true;\r\n\r\n      queryClient.setQueryData<TFetchTopicData>(\r\n        [QueryKeys.TopicMessages, topicId, page],\r\n        (prevData) => {\r\n          return {\r\n            info: {\r\n              ...prevData.info,\r\n              count: data.at(-1).n,\r\n            },\r\n            item0: prevData.item0,\r\n            list: [...prevData.list, ...data],\r\n          };\r\n        }\r\n      );\r\n\r\n      return true;\r\n    },\r\n    initialData: true,\r\n    refetchOnMount: false,\r\n    ...options,\r\n  });\r\n};\r\n\r\nexport const getCachedTopicData = (\r\n  queryClient: QueryClient,\r\n  topicId: number\r\n) => {\r\n  const topicQueries = queryClient.getQueriesData({\r\n    queryKey: [QueryKeys.TopicMessages, topicId],\r\n  });\r\n\r\n  if (topicQueries.length === 0) return undefined;\r\n\r\n  return topicQueries[0][1] as TFetchTopicData;\r\n};\r\n","import Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\r\n\r\nimport Search from \"src/components/common/search\";\r\n\r\nimport \"./nav_bar.css\";\r\nimport { useTopicsList } from \"src/store/query-hooks\";\r\n\r\nconst NavBar: React.FC = () => {\r\n  const location = useLocation();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const forum = searchParams.get(\"forum\");\r\n  const { refetch } = useTopicsList({ searchParams }, { enabled: false });\r\n\r\n  const onClick = (e: React.MouseEvent) => {\r\n    if (location.pathname === \"/\" && searchParams.size === 0) {\r\n      e.preventDefault();\r\n      refetch();\r\n    }\r\n  };\r\n\r\n  const internalLinks = [\r\n    { name: \"1C\", link: `/index.php?forum=1C` },\r\n    { name: \"IT\", link: `/index.php?forum=IT` },\r\n    { name: \"JOB\", link: `/index.php?forum=JOB` },\r\n    { name: \"LIFE\", link: `/index.php?forum=LIFE` },\r\n    { name: \"Настройки\", link: \"/options.php\" },\r\n  ];\r\n\r\n  const externalLinks = [\r\n    { name: \"Wiki\", link: \"https://wiki.mista.ru\" },\r\n    { name: \"Книга знаний\", link: \"https://kb.mista.ru\" },\r\n  ];\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" fixed=\"top\">\r\n      <Navbar.Brand as={Link} to={`/`} onClick={onClick}>\r\n        React.Mista\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse>\r\n        <Nav className=\"me-auto\">\r\n          {internalLinks.map((item, i) => (\r\n            <Nav.Item key={\"i\" + i}>\r\n              <Nav.Link to={item.link} active={item.name === forum} as={Link}>\r\n                {item.name}\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          ))}\r\n          {externalLinks.map((item, i) => (\r\n            <Nav.Item key={\"e\" + i}>\r\n              <Nav.Link href={item.link}>{item.name}</Nav.Link>\r\n            </Nav.Item>\r\n          ))}\r\n        </Nav>\r\n        <Form className=\"d-flex\">\r\n          <Search />\r\n        </Form>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport { options, login, tooltips, newTopic, newMessage } from \"./slices\";\r\n\r\nconst persistConfig = {\r\n  key: \"options\",\r\n  storage,\r\n};\r\n\r\nexport const reducer = combineReducers({\r\n  options: persistReducer(persistConfig, options),\r\n  login,\r\n  tooltips,\r\n  newTopic,\r\n  newMessage,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React, { FC, ReactElement } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\n\r\nimport { loginActions, useActionCreators } from \"src/store\";\r\nimport { domain } from \"src/api\";\r\n\r\ntype IProps = {\r\n  userId: number;\r\n  userName: string;\r\n};\r\n\r\ntype HTMLProps = React.HTMLProps<HTMLSpanElement>;\r\nconst CustomToggle = React.forwardRef<HTMLSpanElement, HTMLProps>(\r\n  ({ children, onClick }, ref) => (\r\n    <span\r\n      ref={ref}\r\n      style={{ cursor: \"pointer\" }}\r\n      className=\"link\"\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        onClick(e);\r\n      }}\r\n    >\r\n      {children}\r\n    </span>\r\n  )\r\n);\r\n\r\nconst LoggedUser: FC<IProps> = ({ userId, userName }): ReactElement => {\r\n  const actions = useActionCreators(loginActions);\r\n\r\n  const onLogout = (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n    actions.doLogout();\r\n  };\r\n\r\n  const onMenuSelect = (\r\n    eventKey: string,\r\n    event: React.SyntheticEvent\r\n  ): void => {\r\n    if (eventKey === \"exit\") {\r\n      onLogout(event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ float: \"left\" }}>\r\n      <Dropdown id=\"dropdown-custom-menu\" onSelect={onMenuSelect}>\r\n        <span>Привет, </span>\r\n        <Dropdown.Toggle as={CustomToggle}>{userName} ▼</Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item\r\n            eventKey=\"profile\"\r\n            href={`${domain}/users.php?id=${userId}`}\r\n          >\r\n            Профиль\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            eventKey=\"myTopics\"\r\n            href={`#/index.php?user_id=${userId}`}\r\n          >\r\n            Мои темы\r\n          </Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item eventKey=\"options\" href={`#/options.php`}>\r\n            Настройки\r\n          </Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item eventKey=\"exit\">Выход</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoggedUser;\r\n","import { FormEvent, ReactElement, useState } from \"react\";\r\nimport { FormControl, Button } from \"react-bootstrap\";\r\n\r\nimport { useAppDispatch } from \"src/store\";\r\nimport { doLoginIfNeeded } from \"src/store\";\r\n\r\nconst LoginForm = (): ReactElement => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onLogin = (event: FormEvent) => {\r\n    event.preventDefault();\r\n    dispatch(doLoginIfNeeded(username, password));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form name=\"enterform\" className=\"flex-row\" style={{ flexWrap: \"wrap\" }}>\r\n        <FormControl\r\n          id=\"username\"\r\n          type=\"text\"\r\n          placeholder=\"Имя\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          size=\"sm\"\r\n          className=\"input\"\r\n          style={{ marginRight: \"5px\", flex: \"0 1 300px\" }}\r\n        />\r\n        <FormControl\r\n          id=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          maxLength={20}\r\n          autoComplete=\"off\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          size=\"sm\"\r\n          className=\"input\"\r\n          style={{ marginRight: \"5px\", flex: \"0 1 300px\" }}\r\n        />\r\n        <Button size=\"sm\" variant=\"light\" className=\"button\" onClick={onLogin}>\r\n          Войти\r\n        </Button>\r\n      </form>\r\n      <p style={{ margin: \"0px\" }}>\r\n        Войти можно на сайте{\" \"}\r\n        <a href=\"https://forum.mista.ru/\">forum.mista.ru</a>\r\n      </p>\r\n      <a rel=\"nofollow\" href=\"https://forum.mista.ru/user_registration.php\">\r\n        Регистрация\r\n      </a>\r\n      <span style={{ margin: \"5px\" }}>|</span>\r\n      <a rel=\"nofollow\" href=\"https://forum.mista.ru/remember_password.php\">\r\n        Забыли пароль?\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { FC, ReactElement } from \"react\";\r\n\r\nimport \"./error.css\";\r\n\r\ntype IProps = {\r\n  text: string;\r\n};\r\n\r\nconst ErrorElem: FC<IProps> = ({ text }): ReactElement | null => {\r\n  if (!text) return null;\r\n\r\n  return (\r\n    <div className=\"error\" dangerouslySetInnerHTML={{ __html: text }}></div>\r\n  );\r\n};\r\n\r\nexport default ErrorElem;\r\n","import { ReactElement, useEffect } from \"react\";\r\nimport LoggedUser from \"./logged_user\";\r\nimport LoginForm from \"./login_form\";\r\nimport ErrorElem from \"../common/error\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"src/store\";\r\nimport { checkLoginIfNeeded } from \"src/store\";\r\n\r\nconst Login = (): ReactElement => {\r\n  const dispatch = useAppDispatch();\r\n  const logged = useAppSelector((state) => state.login.logged);\r\n  const userId = useAppSelector((state) => state.login.userId);\r\n  const userName = useAppSelector((state) => state.login.userName);\r\n  const error = useAppSelector((state) => state.login.error);\r\n\r\n  useEffect(() => {\r\n    dispatch(checkLoginIfNeeded());\r\n  }, [dispatch]);\r\n\r\n  let elem: ReactElement;\r\n  if (logged === true)\r\n    elem = <LoggedUser userId={userId} userName={userName} />;\r\n  else if (logged === false) elem = <LoginForm />;\r\n  else elem = null;\r\n\r\n  return (\r\n    <>\r\n      {elem}\r\n      {error && <ErrorElem text={error} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import CSS from \"csstype\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { ISectionItem } from \"src/store\";\r\nimport { useSections } from \"src/store/query-hooks\";\r\n\r\nexport type IProps = {\r\n  id: string;\r\n  defaultValue: string;\r\n  selected?: string;\r\n  style?: CSS.Properties;\r\n  size?: \"sm\" | \"lg\";\r\n  onChange?: (\r\n    e: React.ChangeEvent<HTMLElement>,\r\n    value: ISectionItem | undefined\r\n  ) => void;\r\n};\r\n\r\nconst Sections: React.FC<IProps> = ({\r\n  id,\r\n  defaultValue,\r\n  selected,\r\n  style,\r\n  size,\r\n  onChange,\r\n}) => {\r\n  const { data } = useSections();\r\n\r\n  const onSelect = (e: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    if (!onChange) return;\r\n\r\n    const code = e.currentTarget.value;\r\n    const item = data.items.find((item) => item.code === code);\r\n    onChange(e, item);\r\n  };\r\n\r\n  return (\r\n    <Form.Select\r\n      aria-label=\"Секция\"\r\n      onChange={onSelect}\r\n      value={selected}\r\n      style={style}\r\n      className=\"input\"\r\n      size={size}\r\n      id={id}\r\n    >\r\n      <option value=\"\">{defaultValue}</option>\r\n      {Object.keys(data.tree).map((forum) => (\r\n        <optgroup key={forum} label={forum}>\r\n          {data.tree[forum].map((item) => (\r\n            <option key={item.id} value={item.code}>\r\n              {item.name}\r\n            </option>\r\n          ))}\r\n        </optgroup>\r\n      ))}\r\n    </Form.Select>\r\n  );\r\n};\r\n\r\nexport default Sections;\r\n","import { ReactElement } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nimport Login from \"../../components/login\";\r\nimport Sections from \"./sections\";\r\nimport { ISectionItem } from \"src/store\";\r\n\r\nconst Header = (): ReactElement => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const onSectionChange = (e, value: ISectionItem | undefined) => {\r\n    setSearchParams((prevSearchParams) => {\r\n      const newSearchParams = new URLSearchParams(prevSearchParams);\r\n      if (value) {\r\n        newSearchParams.set(\"section\", value.code);\r\n      } else {\r\n        newSearchParams.delete(\"section\");\r\n      }\r\n      return newSearchParams;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div className=\"header-left\">\r\n        <Login />\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <Sections\r\n          id=\"sect\"\r\n          defaultValue=\"--Все секции--\"\r\n          selected={searchParams.get(\"section\") ?? \"\"}\r\n          onChange={onSectionChange}\r\n          size=\"sm\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { FC } from \"react\";\r\n\r\ntype IProps = {\r\n  onUpdateClick: () => void;\r\n  isLoading: boolean;\r\n};\r\n\r\nconst TableHeader: FC<IProps> = ({\r\n  isLoading,\r\n  onUpdateClick,\r\n}): React.ReactElement => {\r\n  return (\r\n    <div\r\n      className=\"table-header\" /* style={{ position: \"sticky\", top: \"39px\" }} */\r\n    >\r\n      <div style={{ letterSpacing: \"-1px\" }}>Раздел</div>\r\n      <div></div>\r\n      <div>Тема</div>\r\n      <div>Re</div>\r\n      <div>Автор</div>\r\n      <div>\r\n        <span\r\n          style={{ cursor: \"pointer\" }}\r\n          title=\"Обновить список\"\r\n          onClick={onUpdateClick}\r\n        >\r\n          {isLoading ? \"Обновляется\" : \"Обновлено\"}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableHeader;\r\n","import { ITopicsListItem } from \"src/store\";\r\n\r\ntype IProps = {\r\n  item: ITopicsListItem;\r\n};\r\n\r\nconst AuthorCell: React.FC<IProps> = ({ item }) => (\r\n  <div className=\"cell-author\">\r\n    <div className=\"cell-author--inner\">\r\n      <i\r\n        aria-hidden=\"true\"\r\n        className=\"fa fa-user-circle\"\r\n        style={{ marginRight: \"3px\" }}\r\n      ></i>\r\n      {item.author}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default AuthorCell;\r\n","import React from \"react\";\r\nimport { ITopicsListItem } from \"src/store\";\r\n\r\ntype IProps = {\r\n  item: ITopicsListItem;\r\n} & React.HTMLAttributes<HTMLDivElement>;\r\n\r\nconst CountCell: React.FC<IProps> = ({ item, onClick }) => (\r\n  <div className=\"cell-answ\" onClick={onClick}>\r\n    <div className=\"cell-answ--inner\">\r\n      <i\r\n        className=\"fa fa-comments-o\"\r\n        aria-hidden=\"true\"\r\n        style={{ marginRight: \"3px\" }}\r\n      ></i>\r\n      <span>{item.count}</span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default CountCell;\r\n","import { ITopicsListItem } from \"src/store\";\r\n\r\ntype IProps = {\r\n  item: ITopicsListItem;\r\n};\r\n\r\nconst ForumCell: React.FC<IProps> = ({ item }) => (\r\n  <div className=\"cell-forum\">\r\n    <div className=\"cell-forum--inner\">{item.forum}</div>\r\n  </div>\r\n);\r\n\r\nexport default ForumCell;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ITopicsListItem } from \"src/store\";\r\n\r\ntype IProps = {\r\n  item: ITopicsListItem;\r\n};\r\n\r\nconst Last20Cell: React.FC<IProps> = ({ item }) => (\r\n  <div className=\"cell-last20\">\r\n    <Link\r\n      to={`/topic.php?id=${item.id}&page=last20#F`}\r\n      style={{\r\n        color: \"inherit\",\r\n        display: \"block\",\r\n        width: \"100%\",\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n      <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n    </Link>\r\n  </div>\r\n);\r\n\r\nexport default Last20Cell;\r\n","import { useEffect, useState } from \"react\";\r\nimport { fetchTopicMessage } from \"src/api\";\r\nimport { ITopicsListItem } from \"src/store\";\r\nimport { formattedTime } from \"src/utils\";\r\n\r\ntype IProps = {\r\n  item: ITopicsListItem;\r\n};\r\n\r\nconst LastUserCell: React.FC<IProps> = ({ item }) => {\r\n  const [time, setTime] = useState(item.updated);\r\n\r\n  useEffect(() => {\r\n    if (!item.pinned) return;\r\n\r\n    const updateTime = async () => {\r\n      const msg = await fetchTopicMessage(item.id, item.count);\r\n      setTime(msg.time);\r\n    };\r\n\r\n    updateTime();\r\n  }, [item.pinned, item.id, item.count]);\r\n\r\n  useEffect(() => {\r\n    setTime(item.updated);\r\n  }, [item.updated]);\r\n\r\n  return (\r\n    <div className=\"cell-lastuser\">\r\n      <div className=\"cell-author--inner\">\r\n        <span className=\"cell-lastuser-time\">{formattedTime(time)}</span>\r\n        <span className=\"cell-lastuser-user\">{item.lastUser}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LastUserCell;\r\n","import { FC, ReactElement } from \"react\";\r\n\r\ntype IProps = {\r\n  expanded: boolean;\r\n  onClick: () => void;\r\n};\r\n\r\nconst ShowPreviewButton: FC<IProps> = ({ expanded, onClick }): ReactElement => {\r\n  return (\r\n    <div className=\"cell-preview-link\" onClick={onClick}>\r\n      <span>\r\n        {expanded ? (\r\n          <i className=\"fa fa-minus-square-o agh\" aria-hidden=\"true\"></i>\r\n        ) : (\r\n          <i className=\"fa fa-plus-square-o agh\" aria-hidden=\"true\"></i>\r\n        )}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowPreviewButton;\r\n","import { FC, ReactElement } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getMaxPage } from \"src/utils\";\r\n\r\ntype IProps = {\r\n  count: number;\r\n  topicId: number;\r\n};\r\n\r\nconst Pages: FC<IProps> = ({ count, topicId }): ReactElement => {\r\n  let pages = [];\r\n  if (count > 100) {\r\n    let maxPage = getMaxPage(count);\r\n    for (let i = 1; i <= maxPage; i++) {\r\n      let href = `/topic.php?id=${topicId}&page=${i}`;\r\n      let text: string;\r\n      if (i > 3 && i < maxPage) text = \"•\";\r\n      else text = String(i);\r\n      pages.push(\r\n        <Link key={i} className=\"agh\" style={{ margin: \"3px\" }} to={href}>\r\n          {text}\r\n        </Link>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (count > 20) {\r\n    let href = `/topic.php?id=${topicId}&page=last20#F`;\r\n    pages.push(\r\n      <Link key=\"last20\" className=\"agh\" style={{ margin: \"3px\" }} to={href}>\r\n        »\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return <span className=\"topic-pages\">{pages}</span>;\r\n};\r\n\r\nexport default Pages;\r\n","import { FC, ReactElement } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Pages from \"./pages\";\r\nimport { ITopicsListItem, useAppSelector } from \"src/store\";\r\n\r\ntype IProps = {\r\n  data: ITopicsListItem;\r\n};\r\n\r\nconst addPrefix = (\r\n  text: string,\r\n  forum: string,\r\n  sectionCode: string\r\n): string => {\r\n  if (forum === \"life\" && !text.startsWith(\"OFF\")) {\r\n    return \"OFF: \" + text;\r\n  } else if (sectionCode === \"job\" && !text.startsWith(\"JOB\")) {\r\n    return \"JOB: \" + text;\r\n  } else if (sectionCode === \"v7\" && !text.startsWith(\"v7\")) {\r\n    return \"v7: \" + text;\r\n  }\r\n  return text;\r\n};\r\n\r\nconst TopicNameCell: FC<IProps> = ({ data }): ReactElement => {\r\n  const loggedUserName = useAppSelector((state) => state.login.userName);\r\n\r\n  let href = `/topic.php?id=${data.id}`;\r\n  let classes = classNames(\"agb\", \"mr5\", {\r\n    bold: data.count >= 100,\r\n    mytopics: data.author === loggedUserName,\r\n    pinned: data.pinned,\r\n  });\r\n\r\n  let sectionHref = `/index.php?section=${data.sectionCode}`;\r\n  let section: ReactElement;\r\n  if (data.section) {\r\n    section = (\r\n      <span className=\"topic-section\">\r\n        <span className=\"agh\" style={{ margin: \"0px 5px\" }}>\r\n          /\r\n        </span>\r\n        <Link key=\"1\" rel=\"nofollow\" className=\"agh\" to={sectionHref}>\r\n          {data.section}\r\n        </Link>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let text = addPrefix(data.text, data.forum, data.sectionCode);\r\n\r\n  return (\r\n    <div className=\"cell-title\">\r\n      <div className=\"cell-title--inner\">\r\n        {data.pinned && (\r\n          <i\r\n            className=\"fa fa-thumb-tack agh\"\r\n            aria-hidden=\"true\"\r\n            style={{ marginRight: \"5px\" }}\r\n          ></i>\r\n        )}\r\n        <Link\r\n          to={href}\r\n          className={classes}\r\n          dangerouslySetInnerHTML={{ __html: text }}\r\n          style={{ overflowWrap: \"anywhere\" }}\r\n        ></Link>\r\n        {data.isVoting && <span className=\"agh separator\">[±]</span>}\r\n        <Pages count={data.count} topicId={data.id} />\r\n        {data.closed && <span className=\"agh\">Ø</span>}\r\n        {data.down && <span className=\"agh\">↓</span>}\r\n        {section}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopicNameCell;\r\n","import { FC, ReactElement } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./topic_preview.css\";\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n  onFirst: () => void;\r\n  onLast: () => void;\r\n  onPrev: () => void;\r\n  onNext: () => void;\r\n  close: () => void;\r\n};\r\n\r\nconst PreviewButtons: FC<IProps> = ({\r\n  topicId,\r\n  onFirst,\r\n  onPrev,\r\n  onNext,\r\n  onLast,\r\n  close,\r\n}): ReactElement => {\r\n  return (\r\n    <div className=\"topic-preview-rewind\">\r\n      <div\r\n        className=\"topic-preview-button flex-small\"\r\n        onClick={onFirst}\r\n        title=\"К первому\"\r\n      >\r\n        <i className=\"fa fa-angle-double-left\" aria-hidden=\"true\"></i>\r\n      </div>\r\n      <div\r\n        className=\"topic-preview-button flex-large\"\r\n        onClick={onPrev}\r\n        title=\"К предыдущему\"\r\n      >\r\n        <i className=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\r\n      </div>\r\n      <div\r\n        className=\"topic-preview-button flex-large\"\r\n        onClick={onNext}\r\n        title=\"К следующему\"\r\n      >\r\n        <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n      </div>\r\n      <div\r\n        className=\"topic-preview-button flex-small\"\r\n        onClick={onLast}\r\n        title=\"К последнему\"\r\n      >\r\n        <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\r\n      </div>\r\n      <div className=\"topic-preview-button close-preview\" onClick={close}>\r\n        <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n        <i\r\n          className=\"fa fa-angle-left\"\r\n          aria-hidden=\"true\"\r\n          style={{ marginLeft: \"-2px\" }}\r\n        ></i>\r\n      </div>\r\n      <div className=\"topic-preview-button edit-preview\">\r\n        <Link to={`/topic.php?id=${topicId}&page=last20#F`}>\r\n          <i\r\n            className=\"fa fa-pencil\"\r\n            aria-hidden=\"true\"\r\n            style={{ color: \"var(--font-color)\" }}\r\n          ></i>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewButtons;\r\n","function highlight(text: string): string {\r\n  const keywords = new Set(\r\n    (\r\n      \"if|если|then|тогда|elsif|иначеесли|else|иначе|endif|конецесли\" +\r\n      \"|do|цикл|for|для|to|по|each|каждого|in|из|while|пока|enddo|конеццикла\" +\r\n      \"|procedure|процедура|endprocedure|конецпроцедуры|function|функция|endfunction\" +\r\n      \"|конецфункции|var|перем|export|экспорт|goto|перейти|and|и|or|или|not|не\" +\r\n      \"|val|знач|break|прервать|continue|продолжить|return|возврат|try|попытка|except|исключение\" +\r\n      \"|endtry|конецпопытки|raise|вызватьисключение|false|ложь|true|истина\" +\r\n      \"|undefined|неопределено|null|new|новый|execute|выполнить\" +\r\n      \"|асинх|async|ждать|wait\"\r\n    ).split(\"|\")\r\n  );\r\n\r\n  const Спецсиволы = new Set(\"():;.,=+-*<>?[]%/\".split(\"\"));\r\n  const НачалоТега = \"<span class=\";\r\n  const КонецТега = \"</span>\";\r\n\r\n  const мЦветФона = \"bg>\";\r\n  const мЦветЧисла = \"num>\";\r\n  const мЦветСтроки = \"str>\";\r\n  //const мЦветПараметра = \"par>\";\r\n  const мЦветКомментария = \"com>\";\r\n  const мЦветСпецСимвола = \"sp>\";\r\n  const мЦветПрепроцессора = \"pr>\";\r\n  const мЦветКлючевогоСлова1 = \"key>\";\r\n\r\n  let СтрокаРезультат: string;\r\n  let УстановленЦвет: boolean;\r\n  let ПоследнийЦвет: string | undefined;\r\n\r\n  let ВСтроке = false;\r\n  let Токен = \"\";\r\n\r\n  function ПустаяСтрока(Строка: string) {\r\n    return Строка.trim() === \"\";\r\n  }\r\n\r\n  function Сред(Строка: string, Нач: number, Длина: number) {\r\n    return Строка.substring(Нач - 1, Нач - 1 + Длина);\r\n  }\r\n\r\n  function Прав(Строка: string, Длина: number) {\r\n    return Строка.substring(Строка.length - Длина);\r\n  }\r\n\r\n  function isKeyword(token: string) {\r\n    return keywords.has(token.toLowerCase().trim());\r\n  }\r\n\r\n  function ДобавитьЧастьСтроки1С(Часть: string, Цвет: string) {\r\n    if (Часть === \" \" || ПоследнийЦвет === Цвет) {\r\n      СтрокаРезультат = СтрокаРезультат + Часть;\r\n    } else {\r\n      if (УстановленЦвет) {\r\n        СтрокаРезультат = СтрокаРезультат + КонецТега;\r\n        УстановленЦвет = false;\r\n      }\r\n\r\n      СтрокаРезультат = СтрокаРезультат + НачалоТега + Цвет + Часть;\r\n      УстановленЦвет = true;\r\n      ПоследнийЦвет = Цвет;\r\n    }\r\n  }\r\n\r\n  function РазукраситьСтроку(СтрокаКода: string) {\r\n    //  https://infostart.ru/profile/34707/public/\r\n    let ВСтрокеСкобка = false;\r\n    let ВСтрокеТильда = false;\r\n    let НачалоСтроки = 1;\r\n    let ТокенДоТочки = true;\r\n    // Заменяем 8 символьную табуляцию на 4 символьную пробелами\r\n\r\n    // Последовательно перебираются все символы строки кода\r\n    let Поз = 1;\r\n    for (Поз = 1; Поз <= СтрокаКода.length; Поз++) {\r\n      let ТекущийСимвол = СтрокаКода.charAt(Поз - 1);\r\n      if (ВСтроке) {\r\n        // Операции встрече символа \"кавычка\"\r\n        if (ТекущийСимвол === '\"') {\r\n          // Нашли парную кавычку - окрашиваем как строку\r\n          ДобавитьЧастьСтроки1С(\r\n            Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1),\r\n            мЦветСтроки\r\n          );\r\n          ВСтроке = false;\r\n          Токен = \"\";\r\n          ТокенДоТочки = true;\r\n        } else {\r\n          Токен = Токен + ТекущийСимвол;\r\n        }\r\n      } else if (ВСтрокеСкобка) {\r\n        // Операции встрече символа \"кавычка\" литерал\r\n        if (ТекущийСимвол === \"'\") {\r\n          // Нашли парную скобку - окрашиваем как комментарий\r\n          ДобавитьЧастьСтроки1С(\r\n            Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1),\r\n            мЦветСтроки\r\n          );\r\n          ВСтрокеСкобка = false;\r\n          Токен = \"\";\r\n          ТокенДоТочки = true;\r\n        } else {\r\n          Токен = Токен + ТекущийСимвол;\r\n        }\r\n      } else if (ТекущийСимвол === \" \") {\r\n        // Операции при встрече символа табуляции или пробела\r\n        if (!ПустаяСтрока(Токен)) {\r\n          // Пробел после токена, значит\r\n          // токен - ключевое слово...\r\n          if (ВСтрокеТильда) {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветСтроки);\r\n            ВСтрокеТильда = false;\r\n          } else if (isKeyword(Токен.trim())) {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветКлючевогоСлова1);\r\n          } else if (!isNaN(parseInt(Токен, 10))) {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветЧисла);\r\n          } else {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветФона);\r\n          }\r\n          Токен = \"\";\r\n        } else {\r\n          СтрокаРезультат = СтрокаРезультат + \" \";\r\n        }\r\n        ТокенДоТочки = true;\r\n      } else if (Спецсиволы.has(ТекущийСимвол)) {\r\n        // Встретился один из специальных символов\r\n        if (!ПустаяСтрока(Токен)) {\r\n          // Чтобы избежать окраски метода объекта с совпадающим именем\r\n          // с одним из ключевых слов, проверяем текущий символ на \".\"\r\n          if (ВСтрокеТильда) {\r\n            ДобавитьЧастьСтроки1С(Токен, мЦветСтроки);\r\n            ВСтрокеТильда = false;\r\n            ТокенДоТочки = ТекущийСимвол !== \".\";\r\n          } else if (ТокенДоТочки && isKeyword(Токен)) {\r\n            ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\r\n            ТокенДоТочки = ТекущийСимвол !== \".\";\r\n          } else {\r\n            // Не ключевое слово - значит число\r\n            if (!isNaN(parseInt(Токен, 10))) {\r\n              ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\r\n            } else {\r\n              ДобавитьЧастьСтроки1С(Токен, мЦветФона);\r\n            }\r\n            ТокенДоТочки = ТекущийСимвол !== \".\";\r\n          }\r\n          Токен = \"\";\r\n        }\r\n        // Один из специальных символов\r\n        if (ТекущийСимвол === \".\" && ПоследнийЦвет === мЦветЧисла) {\r\n          // Продолжение числа\r\n          ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветЧисла);\r\n          continue;\r\n        } else if (\r\n          ТекущийСимвол === \"=\" &&\r\n          Сред(СтрокаКода, Поз - 1, 1) === \"<\"\r\n        ) {\r\n          // Знак \"меньше или равно\" - вторая ошибка движка Инфостарт\r\n          ПоследнийЦвет = undefined;\r\n        } else if (\r\n          ТекущийСимвол === \"/\" &&\r\n          Сред(СтрокаКода, Поз + 1, 1) === \"/\"\r\n        ) {\r\n          // Проверяется на комментарий\r\n          ДобавитьЧастьСтроки1С(\r\n            Прав(СтрокаКода, СтрокаКода.length - Поз + 1),\r\n            мЦветКомментария\r\n          );\r\n          return;\r\n        }\r\n        ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветСпецСимвола);\r\n      } else if (ТекущийСимвол === '\"' || ТекущийСимвол === \"|\") {\r\n        // Операции встрече символа \"кавычка\"\r\n        // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\r\n        if (ПустаяСтрока(Токен)) {\r\n          НачалоСтроки = Поз;\r\n          ВСтроке = true;\r\n        } else {\r\n          // Ошибка синтаксиса\r\n          ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\r\n          Токен = \"\";\r\n        }\r\n        ТокенДоТочки = true;\r\n      } else if (ТекущийСимвол === \"'\") {\r\n        // Операции встрече символа \"кавычка\" литерал\r\n        // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\r\n        if (ПустаяСтрока(Токен)) {\r\n          НачалоСтроки = Поз;\r\n          ВСтрокеСкобка = true;\r\n        } else {\r\n          // Ошибка синтаксиса\r\n          ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\r\n          Токен = \"\";\r\n        }\r\n        ТокенДоТочки = true;\r\n      } else if (\r\n        ТекущийСимвол === \"#\" ||\r\n        (ТекущийСимвол === \"&\" && ПустаяСтрока(СтрокаРезультат))\r\n      ) {\r\n        // Встретился символ препроцессора\r\n        ДобавитьЧастьСтроки1С(\r\n          Прав(СтрокаКода, СтрокаКода.length - Поз + 1),\r\n          мЦветПрепроцессора\r\n        );\r\n        Поз = СтрокаКода.length;\r\n        break;\r\n      } else if (ТекущийСимвол === \"~\") {\r\n        Токен = Токен + ТекущийСимвол;\r\n        ВСтрокеТильда = true;\r\n      } else {\r\n        // Остальные символы\r\n        Токен = Токен + ТекущийСимвол;\r\n      }\r\n    }\r\n\r\n    if (ВСтроке) {\r\n      // Многострочная строка\r\n      ДобавитьЧастьСтроки1С(\r\n        Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1),\r\n        мЦветСтроки\r\n      );\r\n    } else if (ВСтрокеСкобка) {\r\n      // Незавершенный литерал\r\n      ДобавитьЧастьСтроки1С(\r\n        Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1),\r\n        мЦветСтроки\r\n      );\r\n    } else if (!ПустаяСтрока(Токен)) {\r\n      // Анализируем последний токен строки кода\r\n      if (isKeyword(Токен)) {\r\n        ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\r\n      } else if (!isNaN(parseInt(Токен, 10))) {\r\n        ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\r\n      } else {\r\n        ДобавитьЧастьСтроки1С(Токен, мЦветФона);\r\n      }\r\n    }\r\n  }\r\n\r\n  ВСтроке = false;\r\n  Токен = \"\";\r\n  УстановленЦвет = false;\r\n  ПоследнийЦвет = undefined;\r\n  СтрокаРезультат = \"\";\r\n\r\n  let result = [];\r\n\r\n  for (let СтрокаКода of text.split(\"\\n\")) {\r\n    if (ПустаяСтрока(СтрокаКода)) {\r\n      result.push(\"\");\r\n      continue;\r\n    }\r\n\r\n    СтрокаРезультат = \"\";\r\n    РазукраситьСтроку(СтрокаКода);\r\n    if (УстановленЦвет && !ВСтроке) {\r\n      СтрокаРезультат += \"</span>\";\r\n      УстановленЦвет = false;\r\n      ПоследнийЦвет = \"\";\r\n      Токен = \"\";\r\n    } else if (!ВСтроке) {\r\n      ПоследнийЦвет = \"\";\r\n      Токен = \"\";\r\n    }\r\n\r\n    result.push(СтрокаРезультат);\r\n  }\r\n\r\n  return result.join(\"\\n\");\r\n}\r\n\r\nexport default highlight;\r\n","import { FC, ReactElement, useState } from \"react\";\r\nimport { childrenToText } from \"src/utils\";\r\nimport highlight from \"./code_highlight\";\r\nimport \"./code1c.css\";\r\n\r\nconst prepareText = (text: string): string => {\r\n  // replace double new-lines\r\n  let newtext = text\r\n    .replace(/\\n<br>/g, \"\\n\")\r\n    .replace(/<br>\\n/g, \"\\n\")\r\n    .replace(/\\r<br>/g, \"\\n\")\r\n    .replace(/<br>\\r/g, \"\\n\")\r\n    .replace(/<br>/g, \"\\n\")\r\n    .replace(/&/g, \"&amp;\")\r\n    .replace(/</g, \"&lt;\")    \r\n    .replace(/>/g, \"&gt\");    \r\n\r\n  // remove all leading|ending new-lines\r\n  while (newtext[0] === \"\\n\") {\r\n    newtext = newtext.substring(1);\r\n  }\r\n\r\n  while (newtext.substring(newtext.length - 1) === \"\\n\") {\r\n    newtext = newtext.substring(0, newtext.length - 1);\r\n  }\r\n\r\n  return highlight(newtext);\r\n};\r\n\r\nconst Code: FC<{ children?: React.ReactNode }> = ({\r\n  children,\r\n}): ReactElement => {\r\n  const [hidden, setHidden] = useState(true);\r\n\r\n  let text: string = \"\";\r\n  if (children) {\r\n    const textArr = childrenToText(children);\r\n    text = textArr.join(\"\");\r\n\r\n    text = prepareText(text);\r\n  }\r\n\r\n  const onShowClick = () => {\r\n    setHidden(!hidden);\r\n  };\r\n\r\n  let buttonText: string;\r\n  let linesCount = 0;\r\n  if (text) linesCount = text.split(\"\\n\").length;\r\n\r\n  if (hidden) buttonText = `Показать: ${linesCount} строк`;\r\n  else buttonText = \"Скрыть\";\r\n\r\n  let buttonShow: ReactElement | null = null;\r\n  if (linesCount > 7)\r\n    buttonShow = (\r\n      <div className=\"expand-button-div\">\r\n        <span className=\"expand-button-span\" onClick={onShowClick}>\r\n          {buttonText}\r\n        </span>\r\n      </div>\r\n    );\r\n\r\n  let preStyle: React.CSSProperties = {};\r\n\r\n  if (hidden && linesCount > 7) {\r\n    preStyle.overflow = \"hidden\";\r\n    preStyle.height = \"135px\";\r\n  } else {\r\n    preStyle.overflow = \"auto\";\r\n    preStyle.height = \"auto\";\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: \"5px\" }}>\r\n      <pre\r\n        className=\"code-pre\"\r\n        style={preStyle}\r\n        dangerouslySetInnerHTML={{ __html: text }}\r\n      ></pre>\r\n      {buttonShow}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Code;\r\n","import { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { getMaxPage, childrenToText, toNumber } from \"src/utils\";\r\nimport { fetchTopicInfo } from \"src/api\";\r\nimport { useActionCreators, useAppSelector } from \"src/store\";\r\nimport { ITooltipKeys, tooltipsActions } from \"src/store\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n  number: number;\r\n  style?: {};\r\n  children?: React.ReactNode;\r\n};\r\n\r\nconst LinkToPost: React.FC<IProps> = (props) => {\r\n  const timerRef = useRef(null);\r\n  const actions = useActionCreators(tooltipsActions);\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const currentTopicId = toNumber(searchParams.get(\"id\"), -1);\r\n\r\n  const tooltipDelay = useAppSelector(\r\n    (state) => +state.options.items.tooltipDelay\r\n  );\r\n\r\n  let initialText = \"\";\r\n  if (!props.children) initialText = String(props.number);\r\n  else initialText = childrenToText(props.children).join(\"\");\r\n\r\n  const [text, setText] = useState(initialText);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    if (!initialText.startsWith(\"http\")) {\r\n      setText(initialText);\r\n      return;\r\n    }\r\n\r\n    const run = async () => {\r\n      const { title } = await fetchTopicInfo(props.topicId);\r\n      if (isMounted) setText(title);\r\n    };\r\n\r\n    run();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [initialText, props.topicId]);\r\n\r\n  const onMouseOver = (e: React.MouseEvent<HTMLElement>) => {\r\n    e.persist();\r\n    timerRef.current = window.setTimeout(() => showToolTip(e), tooltipDelay);\r\n  };\r\n\r\n  const onMouseOut = () => {\r\n    if (timerRef.current) clearTimeout(timerRef.current);\r\n  };\r\n\r\n  const onClick = (e: React.MouseEvent<HTMLElement>) => {\r\n    e.stopPropagation();\r\n    if (timerRef.current) clearTimeout(timerRef.current);\r\n    showToolTip(e);\r\n  };\r\n\r\n  const showToolTip = (e: React.MouseEvent<HTMLElement>) => {\r\n    const { topicId, number } = props;\r\n\r\n    const coords = {\r\n      x: e.pageX,\r\n      y: e.pageY - 50, // remove navbar margin-top\r\n    };\r\n\r\n    const keys: ITooltipKeys = {\r\n      topicId: +topicId,\r\n      number: +number,\r\n    };\r\n\r\n    actions.show({ keys, coords });\r\n  };\r\n\r\n  if (props.topicId === currentTopicId || !isNaN(+text))\r\n    return (\r\n      <span\r\n        onMouseOver={onMouseOver}\r\n        onMouseOut={onMouseOut}\r\n        onClick={onClick}\r\n        className=\"link\"\r\n        style={{ ...props.style }}\r\n        role=\"button\"\r\n      >\r\n        {text}\r\n      </span>\r\n    );\r\n  else {\r\n    const page = getMaxPage(props.number);\r\n\r\n    let pageParam = \"\";\r\n    if (page > 1) pageParam = `&page=${page}`;\r\n\r\n    return (\r\n      <span>\r\n        <a\r\n          href={`#/topic.php?id=${props.topicId}${pageParam}#${props.number}`}\r\n          style={{ ...props.style }}\r\n        >\r\n          {text}\r\n        </a>{\" \"}\r\n        (\r\n        <span\r\n          onMouseOver={onMouseOver}\r\n          onMouseOut={onMouseOut}\r\n          onClick={onClick}\r\n          className=\"link\"\r\n          role=\"button\"\r\n        >\r\n          {props.number}\r\n        </span>\r\n        )\r\n      </span>\r\n    );\r\n  }\r\n};\r\n\r\nexport default LinkToPost;\r\n","import { FC, ReactElement } from \"react\";\r\n\r\ntype IProps = {\r\n  href: string;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nconst LinkToUser: FC<IProps> = ({ href, children }): ReactElement => {\r\n  return (\r\n    <a href={href} className=\"registered-user\">\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default LinkToUser;\r\n","import { FC, ReactElement, useEffect, useState } from \"react\";\r\n\r\ntype IProps = {\r\n  href: string;\r\n};\r\n\r\nconst getVideoId = (href: string): string | null => {\r\n  let fullHref = href;\r\n  if (href.search(/http/) === -1) fullHref = \"http://\" + fullHref;\r\n\r\n  try {\r\n    var url = new URL(fullHref);\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n\r\n  if (url.hostname.search(/youtube/) !== -1) {\r\n    return url.searchParams.get(\"v\");\r\n  } else if (url.hostname.search(/youtu\\.be/) !== -1) {\r\n    return url.pathname.substring(1);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\ntype HrefParams = {\r\n  hrefName: string;\r\n  title: string;\r\n  notFound: boolean;\r\n};\r\n\r\nconst getVideoParams = async (videoId: string): Promise<HrefParams> => {\r\n  const apiKey =\r\n    localStorage.getItem(\"youtubeApiKey\") ||\r\n    \"AIzaSyCztN2QW4Fxw_1YuAHBTOZdYLbzigPz25g\";\r\n  let apiUrl = `https://www.googleapis.com/youtube/v3/videos?key=${apiKey}&fields=items(snippet(title))&part=snippet&id=${videoId}`;\r\n  const response = await fetch(apiUrl);\r\n  const json = await response.json();\r\n\r\n  if (json.items.length === 0)\r\n    return {\r\n      hrefName: \"\",\r\n      title: \"\",\r\n      notFound: true,\r\n    };\r\n\r\n  const title = json.items[0].snippet.title;\r\n\r\n  let hrefName = title;\r\n  let maxLength = 50;\r\n  if (title.length > maxLength + 5)\r\n    hrefName = hrefName.substring(0, maxLength) + \"...\";\r\n\r\n  return {\r\n    hrefName,\r\n    title,\r\n    notFound: false,\r\n  };\r\n};\r\n\r\nconst YoutubeLink: FC<IProps> = ({ href }): ReactElement => {\r\n  let [hrefName, setHrefName] = useState(href);\r\n  let [title, setTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const run = async () => {\r\n      const videoId = getVideoId(href);\r\n      if (!videoId) return;\r\n\r\n      try {\r\n        const params = await getVideoParams(videoId);\r\n\r\n        if (isMounted) {\r\n          if (params.notFound) setHrefName(href + \" (видео не найдено)\");\r\n          else {\r\n            setHrefName(params.hrefName);\r\n            setTitle(params.title);\r\n          }\r\n        }\r\n      } catch (e) {\r\n        console.error(\"youtube\", videoId, e.message);\r\n      }\r\n    };\r\n\r\n    run();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [href]);\r\n\r\n  const prefix = \"youtube\";\r\n  return <a href={href} title={title}>{`${prefix}: ${hrefName}`}</a>;\r\n};\r\n\r\nexport default YoutubeLink;\r\n","import { FC, ReactElement } from \"react\";\r\nimport URL from \"url-parse\";\r\n\r\nimport LinkToPost from \"./link_to_post\";\r\nimport LinkToUser from \"./link_to_user\";\r\nimport YoutubeLink from \"./youtube_link\";\r\n\r\nimport { childrenToText } from \"src/utils\";\r\nimport { useAppSelector } from \"src/store\";\r\n\r\ntype IProps = {\r\n  href: string;\r\n  parentText?: string;\r\n  target?: string;\r\n  class?: string;\r\n  rel?: string;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nconst fixBrokenLink = (href: string, parentText: string): string => {\r\n  let escapedHref = href\r\n    .replace(/\\[/g, \"\\\\[\")\r\n    .replace(/\\]/g, \"\\\\]\")\r\n    .replace(/\\./g, \"\\\\.\")\r\n    .replace(/\\./g, \".\")\r\n    .replace(/\\*/g, \"\\\\*\")\r\n    .replace(/\\+/g, \"\\\\+\")\r\n    .replace(/\\(/g, \"\\\\(\")\r\n    .replace(/\\)/g, \"\\\\)\")\r\n    .replace(/\\?/g, \"\\\\?\")\r\n    .replace(/\\//g, \"\\\\/\");\r\n\r\n  try {\r\n    let regExp = new RegExp(\r\n      escapedHref + \"<\\\\/a>(\\\\)|[а-яёА-ЯЁ0-9#\\\\-\\\\+\\\\_\\\\%\\\\?=]*)\"\r\n    );\r\n    let arr = parentText.match(regExp);\r\n    if (arr && arr.length > 1) {\r\n      if (arr[1] === \")\" && href.search(\"\\\\(\") === -1) {\r\n        return href;\r\n      }\r\n      href = href + arr[1];\r\n      return href;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  return href;\r\n};\r\n\r\nconst isYoutube = (hostname: string): boolean => {\r\n  if (hostname.search(/youtube/) !== -1 || hostname.search(/youtu\\.be/) !== -1)\r\n    return true;\r\n  else return false;\r\n};\r\n\r\nconst isMistaCatalog = (hostname: string): boolean => {\r\n  if (hostname.search(/catalog\\.mista/) !== -1) return true;\r\n  else return false;\r\n};\r\n\r\nconst CustomLink: FC<IProps> = ({\r\n  href,\r\n  children,\r\n  parentText,\r\n  ...props\r\n}): ReactElement => {\r\n  const showYoutubeVideoTitle = useAppSelector(\r\n    (state) => state.options.items.showYoutubeVideoTitle === \"true\"\r\n  );\r\n  const replaceCatalogMista = useAppSelector(\r\n    (state) => state.options.items.replaceCatalogMista === \"true\"\r\n  );\r\n  const fixBrokenLinks = useAppSelector(\r\n    (state) => state.options.items.fixBrokenLinks === \"true\"\r\n  );\r\n\r\n  try {\r\n    var url = new URL(href, true);\r\n  } catch (e) {\r\n    console.error((e as Error).message, href);\r\n    return <a href={href}>{href}</a>;\r\n  }\r\n\r\n  let newHref = href;\r\n  if (newHref.startsWith(\"/\")) {\r\n    url.set(\"protocol\", \"https\");\r\n    url.set(\"hostname\", \"forum.mista.ru\");\r\n    newHref = url.href;\r\n  }\r\n\r\n  if (url.hostname.search(/forum\\.mista.ru/) !== -1) {\r\n    if (url.pathname === \"/topic.php\") {\r\n      return (\r\n        <LinkToPost\r\n          topicId={url.query.id}\r\n          number={url.hash.replace(\"#\", \"\") || \"0\"}\r\n        >\r\n          {childrenToText(children)}\r\n        </LinkToPost>\r\n      );\r\n    } else if (url.pathname === \"/users.php\") {\r\n      return <LinkToUser href={url.href}>{children}</LinkToUser>;\r\n    }\r\n  }\r\n\r\n  if (\r\n    url.hostname === \"a-sitnikov.github.io\" &&\r\n    url.pathname === \"/react.mista/\"\r\n  ) {\r\n    if (Object.keys(url.query).length === 0) {\r\n      url = new URL(href.replace(/#\\//, \"\"), true);\r\n      if (url.pathname === \"/react.mista/topic.php\")\r\n        return (\r\n          <LinkToPost\r\n            topicId={url.query.id}\r\n            number={url.hash.replace(\"#\", \"\") || \"0\"}\r\n          >\r\n            {childrenToText(children)}\r\n          </LinkToPost>\r\n        );\r\n    }\r\n  }\r\n\r\n  if (showYoutubeVideoTitle && isYoutube(url.hostname))\r\n    return <YoutubeLink href={href} />;\r\n\r\n  if (replaceCatalogMista && isMistaCatalog(url.hostname)) {\r\n    url.set(\"hostname\", \"infostart.ru\");\r\n\r\n    return (\r\n      <a\r\n        target={props?.target}\r\n        className={props?.class}\r\n        rel={props?.rel}\r\n        href={url.href}\r\n      >\r\n        {url.href}{\" \"}\r\n      </a>\r\n    );\r\n  }\r\n\r\n  if (fixBrokenLinks && parentText) {\r\n    newHref = fixBrokenLink(newHref, parentText);\r\n  }\r\n\r\n  return (\r\n    <a\r\n      target={props?.target}\r\n      className={props?.class}\r\n      rel={props?.rel}\r\n      href={newHref}\r\n    >\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default CustomLink;\r\n","import { FC, ReactElement } from \"react\";\r\nimport CSS from \"csstype\";\r\n\r\nimport { domain } from \"src/api\";\r\n\r\nimport { IVotingItem } from \"src/store\";\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n  data: IVotingItem;\r\n  colors: string[];\r\n  total: number;\r\n  n: number;\r\n};\r\n\r\nconst VoteItem: FC<IProps> = ({\r\n  topicId,\r\n  data,\r\n  total,\r\n  n,\r\n  colors,\r\n}): ReactElement => {\r\n  const img = `${domain}/css/voting${n}.png`;\r\n\r\n  let percent = 0;\r\n\r\n  if (total) {\r\n    percent = Math.round((100 * data.count) / total);\r\n  }\r\n\r\n  const imgStyle: CSS.Properties = {\r\n    maxWidth: \"500px\",\r\n    width: \"100%\",\r\n    height: \"15px\",\r\n  };\r\n\r\n  return (\r\n    <li className=\"voting-item\">\r\n      <div className=\"voting-title\">\r\n        <a\r\n          rel=\"nofollow\"\r\n          style={{ textDecoration: \"none\" }}\r\n          href={`#/topic.php?id=${topicId}&sel=${n}`}\r\n        >\r\n          <b>\r\n            <span style={{ color: colors[n - 1] }}>{`${n}. ${data.text}`}</span>\r\n          </b>\r\n        </a>\r\n      </div>\r\n      <div className=\"voting-percentage\">\r\n        <b>\r\n          <span\r\n            style={{ color: colors[n - 1] }}\r\n          >{`${percent}% (${data.count})`}</span>\r\n        </b>\r\n      </div>\r\n      <div className=\"voting-bar\">\r\n        <div style={{ width: `${percent}%` }}>\r\n          <a href={img}>\r\n            <img src={img} style={imgStyle} alt={`вариант ${n}`} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default VoteItem;\r\n","import { FC, ReactElement } from \"react\";\r\nimport VoteItem from \"./vote_item\";\r\nimport { IVotingItem } from \"src/store\";\r\n\r\ntype IProps = {\r\n  items: IVotingItem[];\r\n  topicId: number;\r\n  colors: string[];\r\n};\r\n\r\nconst VoteChart: FC<IProps> = ({ items, topicId, colors }): ReactElement => {\r\n  let total = Math.max(...items.map((item) => item.count));\r\n\r\n  return (\r\n    <ul style={{ paddingLeft: 0 }}>\r\n      {items\r\n        .filter((item) => item.text)\r\n        .map((data, i) => (\r\n          <VoteItem\r\n            key={i}\r\n            data={data}\r\n            total={total}\r\n            n={i + 1}\r\n            topicId={topicId}\r\n            colors={colors}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default VoteChart;\r\n","import { FC, ReactElement, memo } from \"react\";\r\n\r\ntype IProps = {\r\n  colors: string[];\r\n  n: number;\r\n  text: string;\r\n};\r\n\r\nconst Vote: FC<IProps> = memo(({ colors, n, text }): ReactElement => {\r\n  return (\r\n    <div style={{ marginTop: \"5px\" }}>\r\n      <b>\r\n        <span style={{ color: colors[n - 1] }}>{`${n}. ${text}`}</span>\r\n      </b>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Vote;\r\n","import dayjs from \"dayjs\";\r\nimport { FC, memo } from \"react\";\r\nimport { PhotoView } from \"react-photo-view\";\r\nimport 'react-photo-view/dist/react-photo-view.css';\r\n\r\ntype IProps = {\r\n  idx: string;\r\n  topicId: number;\r\n  topicDate: number;\r\n  messageNumber: number;\r\n}\r\n\r\nconst InternalImage: FC<IProps> = ({ idx, topicId, topicDate, messageNumber }) => {\r\n  const date = dayjs(topicDate).format('YYYY/MM/DD');\r\n  \r\n  //topics/files/2024/02/16/892137/2/1_preview.png\r\n  const filePath = `https://forum.mista.ru/topics/files/${date}/${topicId}/${messageNumber}`\r\n  const preview = `${filePath}/${idx}_preview.png`; \r\n  const full = `${filePath}/${idx}.png`; \r\n\r\n  return (\r\n    <PhotoView src={full}>\r\n      <img src={preview} alt=\"\" style={{maxWidth: '100%', cursor: 'pointer'}} />\r\n    </PhotoView>\r\n  )\r\n}\r\n\r\nexport default memo(InternalImage);","import { FC, ReactElement, useEffect, useState, memo } from \"react\";\r\nimport HtmlToReact from \"html-to-react\";\r\n\r\nimport Code from \"src/components/extensions/code1c\";\r\nimport LinkToPost from \"src/components/extensions/link_to_post\";\r\nimport CustomLink from \"src/components/extensions/custom_link\";\r\n\r\nimport VoteChart from \"./vote_chart\";\r\nimport Vote from \"./vote\";\r\nimport { useAppSelector } from \"src/store\";\r\nimport { fetchTopicInfo } from \"src/api\";\r\nimport InternalImage from \"src/components/extensions/internal-image\";\r\nimport { PhotoProvider } from \"react-photo-view\";\r\nimport { useTopicMessages } from \"src/store/query-hooks\";\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n  topicDate: number;\r\n  n: number;\r\n  html: string;\r\n  vote: number;\r\n  style?: {};\r\n};\r\n\r\nconst processLinksToPosts = (text: string, topicId: number): string => {\r\n  const regexp = /(\\()(\\d+)(\\))(?![^<>]*<\\/)/gi; // (12)\r\n  return text.replace(regexp, (res, ...segments) => {\r\n    const number = segments[1];\r\n    return `(<link data-topicid='${topicId}' data-number='${number}'></link>)`;\r\n  });\r\n};\r\n\r\nconst processCode1C = (text: string): string => {\r\n  return text\r\n    .replace(/\\[1[CС]\\]/gi, \"<code>\") //[1C]\r\n    .replace(/<1[CС]>/gi, \"<code>\") //<1C>\r\n    .replace(/\\[\\/1[CС]\\]/gi, \"</code>\") //[/1C]\r\n    .replace(/<\\/1[CС]>/gi, \"</code>\"); //</1C>\r\n};\r\n\r\nconst processImages = (\r\n  text: string,\r\n  topicId: number,\r\n  topicDate: number,\r\n  messageNumber: number\r\n): string | undefined => {\r\n  const regexp = /\\[IMG_(\\d*)\\]/gi; // ([IMG_1])\r\n\r\n  return text.replace(regexp, (res, ...segments) => {\r\n    const idx = segments[0];\r\n    return `<int_img idx='${idx}'></int_img>`;\r\n  });\r\n};\r\n\r\nconst processText = (\r\n  text: string,\r\n  topicId: number,\r\n  topicDate: number,\r\n  messageNumber: number\r\n): string | undefined => {\r\n  if (!text) return text;\r\n\r\n  let newtext = processCode1C(text);\r\n  newtext = processLinksToPosts(newtext, topicId);\r\n  newtext = processImages(newtext, topicId, topicDate, messageNumber);\r\n\r\n  return newtext;\r\n};\r\n\r\nconst htmlToReactParser = HtmlToReact.Parser();\r\nconst processNodeDefinitions = HtmlToReact.ProcessNodeDefinitions();\r\nconst isValidNode = () => true;\r\n\r\nconst linkToPostProcessor = {\r\n  shouldProcessNode: (node: any): boolean => {\r\n    return node?.name === \"link\";\r\n  },\r\n  processNode: (\r\n    node: any,\r\n    children: any,\r\n    index: number\r\n  ): React.ReactElement => {\r\n    const topicId = node.attribs[\"data-topicid\"];\r\n    const number = node.attribs[\"data-number\"];\r\n    return <LinkToPost key={index} topicId={topicId} number={number} />;\r\n  },\r\n};\r\n\r\nconst codeProcessor = {\r\n  shouldProcessNode: (node: any) => {\r\n    return node?.name === \"code\" || node?.name === \"pre\";\r\n  },\r\n  processNode: (node: any, children: any, index: number) => {\r\n    return <Code key={index}>{children}</Code>;\r\n  },\r\n};\r\n\r\nconst linkProcessor = (processedHtml: string) => ({\r\n  // <custom link>\r\n  shouldProcessNode: (node: any) => {\r\n    return node?.name === \"a\";\r\n  },\r\n  processNode: function (node: any, children: any, index: number) {\r\n    const href = node.attribs[\"href\"];\r\n    return (\r\n      <CustomLink key={index} href={href} parentText={processedHtml}>\r\n        {children}\r\n      </CustomLink>\r\n    );\r\n  },\r\n});\r\n\r\nconst internalImageProcesor = (\r\n  topicId: number,\r\n  topicDate: number,\r\n  messageNumber: number\r\n) => ({\r\n  shouldProcessNode: (node: any) => {\r\n    return node?.name === \"int_img\";\r\n  },\r\n  processNode: function (node: any, children: any, index: number) {\r\n    const idx = node.attribs[\"idx\"];\r\n    return (\r\n      <InternalImage\r\n        key={index}\r\n        topicId={topicId}\r\n        topicDate={topicDate}\r\n        messageNumber={messageNumber}\r\n        idx={idx}\r\n      />\r\n    );\r\n  },\r\n});\r\n\r\nconst ProcessedText: FC<{\r\n  html: string;\r\n  topicId: number;\r\n  topicDate: number;\r\n  messageNumber: number;\r\n}> = memo(({ html, topicId, topicDate, messageNumber }): ReactElement => {\r\n  const processedHtml = processText(html, topicId, topicDate, messageNumber);\r\n  const processingInstructions = [\r\n    linkToPostProcessor,\r\n    codeProcessor,\r\n    linkProcessor(processedHtml),\r\n    internalImageProcesor(topicId, topicDate, messageNumber),\r\n    {\r\n      // Anything else\r\n      shouldProcessNode: () => true,\r\n      processNode: processNodeDefinitions.processDefaultNode,\r\n    },\r\n  ];\r\n\r\n  const reactComponent = htmlToReactParser.parseWithInstructions(\r\n    processedHtml,\r\n    isValidNode,\r\n    processingInstructions\r\n  );\r\n\r\n  return <>{reactComponent}</>;\r\n});\r\n\r\nconst MsgText: FC<IProps> = ({\r\n  topicId,\r\n  topicDate,\r\n  n,\r\n  html,\r\n  vote,\r\n  style,\r\n}): ReactElement => {\r\n  const {\r\n    data: { info },\r\n  } = useTopicMessages({ topicId }, { enabled: false });\r\n  const voteColors = useAppSelector((state) => state.options.voteColors);\r\n\r\n  let initialVoteText: string = null;\r\n  if (vote && info.voting && topicId === info.id)\r\n    initialVoteText = info.voting[vote - 1].text;\r\n\r\n  const [voteText, setVoteText] = useState(initialVoteText);\r\n\r\n  useEffect(() => {\r\n    const getVoteText = async () => {\r\n      try {\r\n        const _info = await fetchTopicInfo(topicId);\r\n        setVoteText(_info.voting[vote - 1].text);\r\n      } catch (e) {\r\n        console.error(e.message);\r\n      }\r\n    };\r\n\r\n    if (vote && !initialVoteText) {\r\n      getVoteText();\r\n    }\r\n  }, [vote, initialVoteText, topicId]);\r\n\r\n  const showVote = vote !== 0 && voteText !== null;\r\n  let voteChart: ReactElement;\r\n  if (n === 0 && info.isVoting && info.voting) {\r\n    voteChart = (\r\n      <VoteChart items={info.voting} topicId={topicId} colors={voteColors} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"message\" style={style}>\r\n      {voteChart}\r\n      <div>\r\n        <PhotoProvider>\r\n          <ProcessedText\r\n            html={html}\r\n            topicId={topicId}\r\n            topicDate={topicDate}\r\n            messageNumber={n}\r\n          />\r\n        </PhotoProvider>\r\n      </div>\r\n      {showVote && <Vote text={voteText} n={vote} colors={voteColors} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MsgText;\r\n","import { FC, ReactElement, useEffect, useState } from \"react\";\r\nimport type { Property } from \"csstype\";\r\nimport dayjs from \"dayjs\";\r\nimport classNames from \"classnames\";\r\nimport { domain } from \"src/api\";\r\n\r\nimport { useActionCreators } from \"src/store\";\r\nimport type { ITopicMessage } from \"src/store\";\r\nimport { newMessageActions } from \"src/store\";\r\n\r\ntype IProps = {\r\n  data: ITopicMessage;\r\n  isAuthor: boolean;\r\n  isYou: boolean;\r\n  isTooltip?: boolean;\r\n};\r\n\r\nconst UserInfo: FC<IProps> = (props): ReactElement => {\r\n  const actions = useActionCreators(newMessageActions);\r\n\r\n  const [imgDisplay, setImgDisplay] = useState<Property.Display>(\"none\");\r\n\r\n  const onClick = () => {\r\n    const { data } = props;\r\n    actions.changeText(`(${data.n})`);\r\n\r\n    let elem = document.getElementById(\"message_text\");\r\n    if (elem) window.scrollTo(0, elem.offsetTop);\r\n  };\r\n\r\n  const onImageLoad = () => {\r\n    setImgDisplay(\"inline\");\r\n  };\r\n\r\n  const onImageError = () => {\r\n    setImgDisplay(\"none\");\r\n  };\r\n\r\n  const { data, isAuthor, isYou, isTooltip } = props;\r\n  useEffect(() => {\r\n    setImgDisplay(\"none\");\r\n  }, [data.n]);\r\n\r\n  const href = `${domain}/users.php?id=${data.userId}`;\r\n  let dataStr: ReactElement | string;\r\n  if (!data) {\r\n    dataStr = \"\";\r\n  } else if (data.n === 0) {\r\n    dataStr = dayjs(data.time).format(\"DD.MM.YY - HH:mm\");\r\n  } else {\r\n    dataStr = (\r\n      <>\r\n        <span className=\"message-number\">{data.n}</span>\r\n        {\" - \" + dayjs(data.time).format(\"DD.MM.YY - HH:mm\")}\r\n      </>\r\n    );\r\n  }\r\n\r\n  const userClassNames = classNames(\"registered-user\", {\r\n    \"is-author\": isAuthor,\r\n    \"is-you\": isYou,\r\n  });\r\n\r\n  let imgElem: ReactElement;\r\n  if (window.innerWidth > 768)\r\n    imgElem = (\r\n      <img\r\n        src={`${domain}/css/user_icons/${data.userId}_16x16.png`}\r\n        alt=\"user ico\"\r\n        onLoad={onImageLoad}\r\n        onError={onImageError}\r\n        style={{ display: imgDisplay, marginBottom: \"4px\", marginRight: \"1px\" }}\r\n      />\r\n    );\r\n\r\n  let timeElem: ReactElement;\r\n  if (isTooltip) {\r\n    timeElem = (\r\n      <div\r\n        className=\"ah\"\r\n        style={{ display: \"inline-block\", marginLeft: \"5px\" }}\r\n      >\r\n        {dataStr}\r\n      </div>\r\n    );\r\n  } else {\r\n    timeElem = (\r\n      <div className=\"message-time\">\r\n        <span className=\"ah\">{dataStr}</span>\r\n        <button className=\"button ah\" onClick={onClick}>\r\n          {dataStr}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"user-info\">\r\n      {imgElem}\r\n      <a className={userClassNames} href={href}>\r\n        {data.user}\r\n      </a>\r\n      {timeElem}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import { FC, ReactElement, useState, useEffect } from \"react\";\r\n\r\nimport { fetchTopicMessage } from \"src/api\";\r\n\r\nimport MsgText from \"src/pages/topic/row/msg_text\";\r\nimport UserInfo from \"src/pages/topic/row/user_info\";\r\n\r\nimport { ITopicMessage } from \"src/store\";\r\n\r\nimport \"./topic_preview.css\";\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n  n: number;\r\n  author: string;\r\n  loggedUserId: number;\r\n  onDataLoaded?: () => void;\r\n};\r\n\r\nconst PreviewContent: FC<IProps> = ({\r\n  topicId,\r\n  n,\r\n  author,\r\n  loggedUserId,\r\n  onDataLoaded,\r\n}): ReactElement => {\r\n  const [data, setData] = useState<ITopicMessage | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const _data = await fetchTopicMessage(topicId, n);\r\n        if (_data) {\r\n          setData(_data);\r\n          setError(null);\r\n          if (onDataLoaded) onDataLoaded();\r\n        } else {\r\n          setData(null);\r\n          setError(`Не найдено сообщение ${n}`);\r\n        }\r\n      } catch (e) {\r\n        setData(null);\r\n        setError((e as Error).message);\r\n      }\r\n    };\r\n\r\n    getData();\r\n  }, [topicId, n, onDataLoaded]);\r\n\r\n  if (!data && !error) return null;\r\n\r\n  return (\r\n    <>\r\n      {data && (\r\n        <div className=\"preview-content\">\r\n          <div className=\"topic-preview-userinfo\">\r\n            <UserInfo\r\n              data={data}\r\n              isAuthor={data.user === author}\r\n              isYou={data.userId === loggedUserId}\r\n              isTooltip\r\n            />\r\n          </div>\r\n          <MsgText\r\n            topicId={topicId}\r\n            topicDate={data.time}\r\n            n={n}\r\n            html={data.text}\r\n            vote={data.vote}\r\n            style={{ overflowY: \"auto\", overflowWrap: \"break-word\" }}\r\n          />\r\n        </div>\r\n      )}\r\n      {error && <span>{error}</span>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PreviewContent;\r\n","import { FC, ReactElement, useCallback, useState } from \"react\";\r\nimport { SwipeEventData, useSwipeable } from \"react-swipeable\";\r\nimport { fetchTopicInfo } from \"src/api\";\r\n\r\nimport PreviewButtons from \"./preview_buttons\";\r\nimport PreviewContent from \"./preview_content\";\r\nimport \"./topic_preview.css\";\r\nimport { useAppSelector } from \"src/store\";\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n  initialMsgNumber: number;\r\n  author: string;\r\n  close: () => void;\r\n};\r\n\r\nconst TopicPreview: FC<IProps> = ({\r\n  topicId,\r\n  initialMsgNumber,\r\n  author,\r\n  close,\r\n}): ReactElement => {\r\n  const loggedUserId = useAppSelector((state) => state.login.userId);\r\n\r\n  const [deltaX, setDeltaX] = useState(0);\r\n  const [display, setDispaly] = useState(\"none\");\r\n  const [state, setState] = useState({\r\n    msgNumber: initialMsgNumber,\r\n    key: 0,\r\n  });\r\n\r\n  const onClickFirst = () => {\r\n    setState({\r\n      msgNumber: 0,\r\n      key: state.key,\r\n    });\r\n  };\r\n\r\n  const onClickNext = () => {\r\n    setState({\r\n      msgNumber: state.msgNumber + 1,\r\n      key: state.key,\r\n    });\r\n  };\r\n\r\n  const onClickPrev = () => {\r\n    if (state.msgNumber > 0)\r\n      setState({\r\n        msgNumber: state.msgNumber - 1,\r\n        key: state.key,\r\n      });\r\n  };\r\n\r\n  const onClickLast = async () => {\r\n    const info = await fetchTopicInfo(topicId);\r\n    setState({\r\n      msgNumber: info.count,\r\n      key: state.key,\r\n    });\r\n  };\r\n\r\n  const onSwiping = (eventData: SwipeEventData) => {\r\n    if (Math.abs(eventData.deltaX) < 35) setDeltaX(0);\r\n    else setDeltaX(eventData.deltaX);\r\n  };\r\n\r\n  const onSwiped = (eventData: SwipeEventData) => {\r\n    if (Math.abs(eventData.deltaX) > 150) {\r\n      if (eventData.dir === \"Left\") {\r\n        setState({\r\n          msgNumber: state.msgNumber + 1,\r\n          key: state.key + 1,\r\n        });\r\n      } else if (eventData.dir === \"Right\" && state.msgNumber > 0) {\r\n        setState({\r\n          msgNumber: state.msgNumber - 1,\r\n          key: state.key + 1,\r\n        });\r\n      }\r\n    }\r\n    setDeltaX(0);\r\n  };\r\n\r\n  const swipeable = useSwipeable({\r\n    onSwiping,\r\n    onSwiped,\r\n    delta: 15,\r\n  });\r\n\r\n  const onContentLoaded = useCallback(() => {\r\n    setDispaly(\"block\");\r\n  }, []);\r\n\r\n  let items = [state.msgNumber];\r\n\r\n  if (deltaX < 0) items.push(state.msgNumber + 1);\r\n  else if (deltaX > 0 && state.msgNumber > 0) items.push(state.msgNumber - 1);\r\n\r\n  const style: React.CSSProperties = {\r\n    transform: `translate3d(${deltaX}px, 0px, 0px)`,\r\n    flexDirection: deltaX > 0 ? \"row-reverse\" : \"row\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"preview-container\" style={{ display }}>\r\n      <div className=\"topic-preview\">\r\n        <PreviewButtons\r\n          topicId={topicId}\r\n          onFirst={onClickFirst}\r\n          onLast={onClickLast}\r\n          onNext={onClickNext}\r\n          onPrev={onClickPrev}\r\n          close={close}\r\n        />\r\n        <div className=\"preview-carousel\" {...swipeable} style={style}>\r\n          <div\r\n            className=\"preview-carousel-item\"\r\n            key={state.key}\r\n            style={{ order: 0 }}\r\n          >\r\n            <PreviewContent\r\n              topicId={topicId}\r\n              n={items[0]}\r\n              loggedUserId={loggedUserId}\r\n              author={author}\r\n              onDataLoaded={onContentLoaded}\r\n            />\r\n          </div>\r\n          {items.length > 1 && (\r\n            <div\r\n              className=\"preview-carousel-item\"\r\n              key={state.key + 1}\r\n              style={{ order: 1 }}\r\n            >\r\n              <PreviewContent\r\n                topicId={topicId}\r\n                n={items[1]}\r\n                loggedUserId={loggedUserId}\r\n                author={author}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopicPreview;\r\n","import { useState } from \"react\";\r\n\r\nimport AuthorCell from \"./author-cell\";\r\nimport CountCell from \"./count-cell\";\r\nimport ForumCell from \"./forum-cell\";\r\nimport Last20Cell from \"./last20-cell\";\r\nimport LastUserCell from \"./last-user-cell\";\r\nimport ShowPreviewButton from \"./show_preview_button\";\r\nimport TopicNameCell from \"./topic_name_cell\";\r\nimport TopicPreview from \"src/components/preview/topic_preview\";\r\n\r\nimport { ITopicsListItem } from \"src/store\";\r\n\r\ninterface IProps {\r\n  item: ITopicsListItem;\r\n}\r\n\r\nconst Row: React.FC<IProps> = ({ item }) => {\r\n  const [previewNumber, setPreviewNumber] = useState<number>();\r\n\r\n  const previewShowFirst = () => {\r\n    if (previewNumber === undefined) {\r\n      setPreviewNumber(0);\r\n    } else {\r\n      setPreviewNumber(undefined);\r\n    }\r\n  };\r\n\r\n  const previewShowLast = () => {\r\n    if (previewNumber === undefined || previewNumber !== item.count) {\r\n      setPreviewNumber(item.count);\r\n    } else {\r\n      setPreviewNumber(undefined);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"topics-list-row\">\r\n        <ForumCell item={item} />\r\n        <div className=\"cell-section\">{item.section}</div>\r\n        <CountCell item={item} onClick={previewShowLast} />\r\n        <ShowPreviewButton\r\n          expanded={previewNumber !== undefined}\r\n          onClick={previewShowFirst}\r\n        />\r\n        <TopicNameCell data={item} />\r\n        <AuthorCell item={item} />\r\n        <LastUserCell item={item} />\r\n        <Last20Cell item={item} />\r\n      </div>\r\n      {previewNumber !== undefined && (\r\n        <TopicPreview\r\n          topicId={item.id}\r\n          initialMsgNumber={previewNumber}\r\n          author={item.author}\r\n          close={() => setPreviewNumber(undefined)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import { FC, ReactElement } from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport \"./pages.css\";\r\n\r\ntype IProps = {\r\n  maxPage: number;\r\n  last20?: boolean;\r\n};\r\n\r\nconst Pages: FC<IProps> = ({ maxPage, last20 }): ReactElement => {\r\n  const location = useLocation();\r\n  let pathName = location.pathname;\r\n  if (pathName === \"/\") pathName = \"/index.php\";\r\n\r\n  const locationParams = new URLSearchParams(location.search);\r\n\r\n  let currentPage: number | string;\r\n  const page = locationParams.get(\"page\");\r\n  if (!page) currentPage = 1;\r\n  else if (page === \"last20\") currentPage = \"last20\";\r\n  else currentPage = parseInt(page, 10) || 1;\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= maxPage; i++) {\r\n    locationParams.set(\"page\", String(i));\r\n    let href = \"#\" + pathName + \"?\" + locationParams.toString();\r\n\r\n    pages.push(\r\n      <Pagination.Item active={currentPage === i} key={i} href={href}>\r\n        {i}\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n\r\n  if (last20 === true) {\r\n    locationParams.set(\"page\", \"last20\");\r\n    let href = \"#\" + pathName + \"?\" + locationParams.toString();\r\n    pages.push(\r\n      <Pagination.Item\r\n        active={currentPage === \"last20\"}\r\n        key=\"last20\"\r\n        href={href}\r\n      >\r\n        »\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n\r\n  return <Pagination style={{ margin: \"0px\" }}>{pages}</Pagination>;\r\n};\r\n\r\nexport default Pages;\r\n","import { FC, ReactElement, useRef, RefObject, useCallback } from \"react\";\r\nimport { FormControl, Button, ButtonGroup, Form } from \"react-bootstrap\";\r\n\r\nimport \"./text_editor.css\";\r\n\r\ntype IProps = {\r\n  placeholder: string;\r\n  showVoting?: boolean;\r\n  isVoting?: boolean;\r\n  text: string;\r\n  isFetching: boolean;\r\n  formRef?: RefObject<HTMLFormElement>;\r\n  onChange?: (text: string) => void;\r\n  onShowVotingChange?: (show: boolean) => void;\r\n};\r\n\r\nconst TextEditor: FC<IProps> = ({\r\n  placeholder,\r\n  showVoting,\r\n  isVoting,\r\n  isFetching,\r\n  text,\r\n  formRef,\r\n  onChange,\r\n  onShowVotingChange,\r\n}): ReactElement => {\r\n  const textAreaRef = useRef() as React.MutableRefObject<HTMLTextAreaElement>;\r\n\r\n  const onButtonCode1c = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n\r\n    const openTag = \"[1C]\\n\";\r\n    const closeTag = \"\\n[/1C]\";\r\n\r\n    const textAreaNode = textAreaRef.current;\r\n\r\n    const start = textAreaNode.selectionStart;\r\n    const end = textAreaNode.selectionEnd;\r\n\r\n    const oldText = textAreaNode.value;\r\n    const len = oldText.length;\r\n    const selectedText = oldText.substring(start, end);\r\n    const replacement = openTag + selectedText + closeTag;\r\n    let newText =\r\n      oldText.substring(0, start) + replacement + oldText.substring(end, len);\r\n\r\n    if (onChange) onChange(newText);\r\n  };\r\n\r\n  const handleShowVotingChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (onShowVotingChange) onShowVotingChange(e.currentTarget.checked);\r\n    },\r\n    [onShowVotingChange]\r\n  );\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n      if (onChange) onChange(e.currentTarget.value);\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  const handleKeyUp = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (!formRef) return;\r\n    if (!formRef.current) return;\r\n\r\n    if (e.key === \"Enter\" && e.ctrlKey) {\r\n      formRef.current.dispatchEvent(\r\n        new Event(\"submit\", { cancelable: true, bubbles: true })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl\r\n        as=\"textarea\"\r\n        aria-label=\"Сообщение\"\r\n        placeholder={placeholder}\r\n        cols={70}\r\n        rows={3}\r\n        value={text}\r\n        onChange={handleChange}\r\n        onKeyUp={handleKeyUp}\r\n        ref={textAreaRef}\r\n        className=\"text-editor input\"\r\n        data-lpignore={true}\r\n      />\r\n      <div className=\"flex-row\">\r\n        <ButtonGroup>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"light\"\r\n            onClick={onButtonCode1c}\r\n            style={{ marginRight: \"5px\" }}\r\n            className=\"button\"\r\n          >\r\n            Код 1С\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"light\"\r\n            disabled={isFetching}\r\n            type=\"submit\"\r\n            className=\"button\"\r\n          >\r\n            {isFetching ? \"Отправляется\" : \"Отправить\"}\r\n          </Button>\r\n        </ButtonGroup>\r\n        {showVoting && (\r\n          <Form.Check\r\n            id=\"show_voting\"\r\n            type=\"checkbox\"\r\n            checked={isVoting}\r\n            onChange={handleShowVotingChange}\r\n            label=\"Голосование\"\r\n            style={{ margin: \"auto 0px auto auto\" }}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextEditor;\r\n","import { FC, ReactElement, useCallback, useState, useRef } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport { FormGroup } from \"react-bootstrap\";\r\n\r\nimport { useActionCreators, useAppDispatch, useAppSelector } from \"src/store\";\r\n\r\nimport Sections from \"./sections\";\r\nimport TextEditor from \"src/components/common/text_editor\";\r\nimport ErrorElem from \"src/components/common/error\";\r\n\r\nimport \"./new_topic.css\";\r\nimport { ISectionItem, newTopicActions, postNewTopicIfNeeded } from \"src/store\";\r\nimport { useEventCallback } from \"usehooks-ts\";\r\nimport { useSections } from \"src/store/query-hooks\";\r\n\r\ntype IProps = {\r\n  onSubmitSuccess?: any;\r\n};\r\n\r\nconst NewTopic: FC<IProps> = ({ onSubmitSuccess }): ReactElement => {\r\n  const { data: sections } = useSections();\r\n\r\n  const newTopic = useAppSelector((state) => state.newTopic);\r\n\r\n  const [currentSection, setSection] = useState(null);\r\n  const [votes, setVotes] = useState(Array(10).fill(\"\"));\r\n\r\n  const formRef = useRef(null);\r\n  const dispatch = useAppDispatch();\r\n  const actions = useActionCreators(newTopicActions);\r\n\r\n  const onSectionChange = useEventCallback(\r\n    (e: React.SyntheticEvent, section: ISectionItem) => {\r\n      setSection(section);\r\n      actions.changeSection(section);\r\n    }\r\n  );\r\n\r\n  const onVoteTextChange =\r\n    (i: number) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let votesCopy = votes.slice();\r\n      votesCopy[i] = e.target.value;\r\n      setVotes(votesCopy);\r\n    };\r\n\r\n  const onSubmit = useEventCallback((e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!currentSection) {\r\n      actions.setError(\"Не выбрана секция\");\r\n      return;\r\n    }\r\n\r\n    let subject = newTopic.subject;\r\n    if (!subject) {\r\n      actions.setError(\"Не указана тема\");\r\n      return;\r\n    }\r\n\r\n    if (!newTopic.text) {\r\n      actions.setError(\"Не указано сообщение\");\r\n      return;\r\n    }\r\n\r\n    let params = {\r\n      subject,\r\n      text: newTopic.text,\r\n      section: currentSection.id,\r\n      forum: currentSection.forum,\r\n      isVoting: newTopic.isVoting,\r\n      votingItems: [],\r\n      onSuccess: this_onSubmitSuccess,\r\n    };\r\n\r\n    if (newTopic.isVoting) {\r\n      params.votingItems = [];\r\n      for (let i = 1; i <= 10; i++) {\r\n        let val = votes[i - 1];\r\n        if (val) {\r\n          params.votingItems.push(val);\r\n        }\r\n      }\r\n    }\r\n\r\n    dispatch(postNewTopicIfNeeded(params));\r\n  });\r\n\r\n  const onSubjectChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      actions.changeSubject(e.target.value);\r\n    },\r\n    [actions]\r\n  );\r\n\r\n  const onTextChange = useCallback(\r\n    (text: string) => {\r\n      actions.changeText(text);\r\n    },\r\n    [actions]\r\n  );\r\n\r\n  const onShowVotingChange = useCallback(\r\n    (show: boolean) => {\r\n      actions.showVoting(show);\r\n    },\r\n    [actions]\r\n  );\r\n\r\n  const this_onSubmitSuccess = () => {\r\n    actions.clear();\r\n\r\n    if (onSubmitSuccess) {\r\n      onSubmitSuccess();\r\n    }\r\n  };\r\n  let groupsElem = [];\r\n  for (let forum in sections.tree) {\r\n    groupsElem.push(\r\n      <option key={forum} value={forum.toLowerCase()}>\r\n        {forum}\r\n      </option>\r\n    );\r\n  }\r\n\r\n  let votingOptions = [];\r\n\r\n  if (newTopic.isVoting) {\r\n    votingOptions.push(<div key=\"p\">Варианты:</div>);\r\n    for (let i = 1; i <= 10; i++) {\r\n      votingOptions.push(\r\n        <InputGroup\r\n          key={i}\r\n          size=\"sm\"\r\n          style={{ marginBottom: \"3px\", width: \"100%\" }}\r\n        >\r\n          <InputGroup.Text style={{ width: \"40px\" }} className=\"input\">\r\n            {`${i}.`}\r\n          </InputGroup.Text>\r\n          <Form.Control\r\n            type=\"text\"\r\n            aria-label={`Вариант ${i}`}\r\n            maxLength={50}\r\n            className=\"input\"\r\n            value={votes[i - 1]}\r\n            onChange={onVoteTextChange(i - 1)}\r\n          />\r\n        </InputGroup>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className=\"new-topic-container\" onSubmit={onSubmit} ref={formRef}>\r\n      <div id=\"newtopic_form\" className=\"new-topic-text\">\r\n        <div>\r\n          <b>Новая тема:</b>\r\n        </div>\r\n        {newTopic.error && <ErrorElem text={newTopic.error} />}\r\n        <div className=\"flex-row\" style={{ marginBottom: \"3px\" }}>\r\n          <Form.Select\r\n            disabled\r\n            size=\"sm\"\r\n            value={newTopic.forum}\r\n            style={{ flex: \"0 1 90px\" }}\r\n            className=\"input\"\r\n          >\r\n            {groupsElem}\r\n          </Form.Select>\r\n          <Sections\r\n            id=\"target_section\"\r\n            defaultValue=\"Секция\"\r\n            selected={newTopic.section?.code}\r\n            size=\"sm\"\r\n            style={{ flex: \"1 1 auto\" }}\r\n            onChange={onSectionChange}\r\n          />\r\n        </div>\r\n        <Form.Control\r\n          type=\"text\"\r\n          aria-label=\"Тема\"\r\n          placeholder=\"Тема\"\r\n          size=\"sm\"\r\n          value={newTopic.subject}\r\n          onChange={onSubjectChange}\r\n          style={{ marginBottom: \"3px\" }}\r\n          className=\"input\"\r\n          maxLength={90}\r\n        />\r\n        <TextEditor\r\n          placeholder=\"Сообщение\"\r\n          showVoting={true}\r\n          isVoting={newTopic.isVoting}\r\n          text={newTopic.text}\r\n          isFetching={newTopic.status === \"loading\"}\r\n          onChange={onTextChange}\r\n          onShowVotingChange={onShowVotingChange}\r\n          formRef={formRef}\r\n        />\r\n      </div>\r\n      <FormGroup className=\"new-topic-voting\">{votingOptions}</FormGroup>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewTopic;\r\n","import { useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nimport { useTopicsList } from \"src/store/query-hooks\";\r\n\r\nimport Header from \"./header\";\r\nimport TableHeader from \"./table_header\";\r\nimport Row from \"./row\";\r\nimport Pages from \"src/components/common/pages\";\r\nimport NewTopic from \"./new_topic\";\r\nimport Error from \"src/components/common/error\";\r\n\r\nimport \"./topics_list.css\";\r\n\r\nconst TopicsList: React.FC = () => {\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const {\r\n    isFetching,\r\n    data: items,\r\n    error,\r\n    refetch,\r\n  } = useTopicsList({ searchParams });\r\n\r\n  useEffect(() => {\r\n    document.title = \"React.Mista\";\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [searchParams]);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {error && <Error text={error.message} />}\r\n      <div className=\"topic-list-table\">\r\n        <TableHeader onUpdateClick={refetch} isLoading={isFetching} />\r\n        {(items ?? []).map((item) => (\r\n          <Row key={item.id} item={item} />\r\n        ))}\r\n        <div className=\"table-footer\">\r\n          <Pages maxPage={10} />\r\n        </div>\r\n      </div>\r\n      <div\r\n        id=\"F\"\r\n        className=\"newtopic\"\r\n        style={{ marginBottom: \"10px\", marginTop: \"5px\", position: \"relative\" }}\r\n      >\r\n        <NewTopic onSubmitSuccess={refetch} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopicsList;\r\n","import Login from \"src/components/login\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTopicMessages } from \"src/store/query-hooks\";\r\n\r\nconst forums = {\r\n  \"1c\": \"1С:Предприятие\",\r\n  life: \"О жизни\",\r\n  it: \"Информационные технологии\",\r\n  job: \"Работа\",\r\n};\r\n\r\ninterface IProps {\r\n  topicId: number;\r\n}\r\n\r\nconst Header: React.FC<IProps> = ({ topicId }) => {\r\n  const { data } = useTopicMessages({ topicId }, { enabled: false });\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div className=\"header-left\">\r\n        <Login />\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <span id=\"forum_string\" className=\"bold120\">\r\n          <Link\r\n            to={`/index.php?forum=${data?.info.forum}`}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            {forums[data?.info.forum]}\r\n          </Link>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { domain, urlTopicInfo, urlTopicMessages } from \"src/api\";\r\nimport { useTopicMessages } from \"src/store/query-hooks\";\r\n\r\ninterface IProps {\r\n  topicId: number;\r\n}\r\n\r\nconst TopicInfo: React.FC<IProps> = ({ topicId }) => {\r\n  const { data } = useTopicMessages({ topicId });\r\n\r\n  let yandexUrl =\r\n    \"https://www.yandex.ru/search/?text=\" +\r\n    encodeURIComponent(data?.info.title);\r\n\r\n  return (\r\n    <div className=\"topic-row\">\r\n      <div className=\"cell-userinfo\">\r\n        <div className=\"topic-tools\">\r\n          <a\r\n            title=\"API.info\"\r\n            href={`${domain}/${urlTopicInfo}?id=${topicId}`}\r\n            className=\"agh\"\r\n            style={{ display: \"block\", lineHeight: \"1em\" }}\r\n          >\r\n            i\r\n          </a>\r\n          <a\r\n            title=\"API.messages\"\r\n            href={`${domain}/${urlTopicMessages}?id=${topicId}&from=0&to=20`}\r\n            className=\"agh\"\r\n            style={{ display: \"block\", lineHeight: \"1em\" }}\r\n          >\r\n            m\r\n          </a>\r\n          {/*<a href=\"add_voting.php?topic_id=815217\" title=\"Добавить голосование\">vote</a> &nbsp;&nbsp;*/}\r\n        </div>\r\n      </div>\r\n      <div className=\"cell-message\">\r\n        <div className=\"flex-row\">\r\n          <div style={{ flex: 1, textAlign: \"center\" }}>\r\n            <a href={`https://forum.mista.ru/topic/${topicId}`}>\r\n              <h1\r\n                className=\"topic-title\"\r\n                dangerouslySetInnerHTML={{ __html: data?.info.title }}\r\n              ></h1>\r\n            </a>\r\n            <div className=\"moder-action\"></div>\r\n          </div>\r\n          <div style={{ flex: \"0 0 20px\", position: \"relative\" }}>\r\n            <div className=\"div-va-middle\">\r\n              <a\r\n                rel=\"noopener noreferrer\"\r\n                href={yandexUrl}\r\n                title=\"Искать в Яндексе\"\r\n                target=\"_blank\"\r\n                className=\"yandex\"\r\n              >\r\n                Я\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopicInfo;\r\n","import { FC, ReactElement } from \"react\";\r\n\r\nimport UserInfo from \"./user_info\";\r\nimport MsgText from \"./msg_text\";\r\nimport { useAppSelector } from \"src/store\";\r\nimport { ITopicMessage } from \"src/store\";\r\nimport { useTopicMessages } from \"src/store/query-hooks\";\r\n\r\ntype IProps = {\r\n  item: ITopicMessage;\r\n  topicId: number;\r\n};\r\n\r\nconst Row: FC<IProps> = ({ item, topicId }): ReactElement => {\r\n  const login = useAppSelector((state) => state.login);\r\n  const { data: topic } = useTopicMessages({ topicId }, { enabled: false });\r\n  const author = topic?.item0?.user || \"\";\r\n\r\n  if (!item) return null;\r\n\r\n  return (\r\n    <div className=\"topic-row\" id={String(item.n)}>\r\n      <div className=\"cell-userinfo\">\r\n        <UserInfo\r\n          data={item}\r\n          isAuthor={item.user === author}\r\n          isYou={item.user === login.userName}\r\n        />\r\n      </div>\r\n      <div className=\"cell-message\">\r\n        <MsgText\r\n          html={item.text}\r\n          topicId={topicId}\r\n          topicDate={item.time}\r\n          n={item.n}\r\n          vote={item.vote}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import { Button } from \"react-bootstrap\";\r\nimport { useUpdateMessages } from \"src/store/query-hooks\";\r\n\r\ninterface IProps {\r\n  topicId: number;\r\n  isLastPage: boolean;\r\n}\r\n\r\nconst Footer: React.FC<IProps> = ({ topicId, isLastPage }) => {\r\n  const { isFetching, refetch } = useUpdateMessages(\r\n    { topicId },\r\n    { enabled: false }\r\n  );\r\n\r\n  const onBookmarkClick = () => {\r\n    //dispatch(addBookmark(info));\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex-row\" id=\"F\">\r\n      <div className=\"ta-left va-top\" style={{ width: \"50%\" }}>\r\n        <Button\r\n          onClick={onBookmarkClick}\r\n          disabled={false}\r\n          size=\"sm\"\r\n          className=\"button\"\r\n          variant=\"light\"\r\n        >\r\n          {\"Закладка\"}\r\n        </Button>\r\n      </div>\r\n      <div className=\"ta-right va-middle\" style={{ marginLeft: \"auto\" }}>\r\n        {isLastPage && (\r\n          <Button\r\n            onClick={() => refetch()}\r\n            disabled={isFetching}\r\n            size=\"sm\"\r\n            className=\"button\"\r\n            variant=\"light\"\r\n          >\r\n            {isFetching ? \"Обновляется\" : \"Обновить ветку\"}\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { FC, ReactElement, useState, useCallback } from \"react\";\r\nimport { FormGroup, Form } from \"react-bootstrap\";\r\n\r\nimport TextEditor from \"src/components/common/text_editor\";\r\nimport { useActionCreators, useAppDispatch, useAppSelector } from \"src/store\";\r\nimport { newMessageActions, postNewMessage, newTopicActions } from \"src/store\";\r\n\r\nimport type { PostNewmessageParams } from \"src/store\";\r\nimport { useTopicMessages } from \"src/store/query-hooks\";\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n  onSubmitSuccess?: () => void;\r\n};\r\n\r\nconst NewMessage: FC<IProps> = ({ topicId, onSubmitSuccess }): ReactElement => {\r\n  const [voting, setVoting] = useState<number | undefined>();\r\n  const dispatch = useAppDispatch();\r\n  const actions = useActionCreators(newMessageActions);\r\n\r\n  const {\r\n    data: { info },\r\n  } = useTopicMessages({ topicId });\r\n  const newMessage = useAppSelector((state) => state.newMessage);\r\n\r\n  const onSubmit = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let params: PostNewmessageParams = {\r\n      text: newMessage.text,\r\n      topicId: String(info?.id),\r\n      onSuccess: afterSubmit,\r\n      voting_select: undefined,\r\n    };\r\n\r\n    if (voting) {\r\n      params.voting_select = voting;\r\n    }\r\n\r\n    dispatch(postNewMessage(params));\r\n  };\r\n\r\n  const afterSubmit = () => {\r\n    actions.changeText(\"\");\r\n    setVoting(undefined);\r\n\r\n    if (onSubmitSuccess) {\r\n      onSubmitSuccess();\r\n    }\r\n  };\r\n\r\n  const clearVoting = (e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n    setVoting(undefined);\r\n  };\r\n\r\n  const setVotingOption = (i: number) => {\r\n    setVoting(i);\r\n  };\r\n\r\n  const onTextChange = useCallback(\r\n    (text: string) => {\r\n      dispatch(newTopicActions.changeText(text));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  let votingElem: ReactElement;\r\n  if (info?.isVoting && info?.voting) {\r\n    let votingOptions = [];\r\n    for (let i = 1; i <= info.voting.length; i++) {\r\n      const item = info.voting[i - 1];\r\n      if (!item.text) continue;\r\n\r\n      votingOptions.push(\r\n        <Form.Check\r\n          type=\"radio\"\r\n          key={i}\r\n          name=\"voting\"\r\n          checked={voting === i}\r\n          onChange={() => setVotingOption(i)}\r\n          label={`${i}. ${item.text}`}\r\n        />\r\n      );\r\n    }\r\n\r\n    votingElem = (\r\n      <FormGroup>\r\n        <legend>\r\n          <small>\r\n            Ваш выбор:\r\n            <span\r\n              id=\"voting_clear\"\r\n              style={{ marginLeft: \"5px\", cursor: \"pointer\" }}\r\n              onClick={clearVoting}\r\n            >\r\n              очистить\r\n            </span>\r\n          </small>\r\n        </legend>\r\n        {votingOptions}\r\n        Обоснуйте свой выбор!\r\n      </FormGroup>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form style={{ marginTop: \"5px\" }} onSubmit={onSubmit}>\r\n      <div className=\"bold\">Добавить сообщение в тему:</div>\r\n      <div className=\"new-message-container\">\r\n        <div className=\"new-message-text\">\r\n          <TextEditor\r\n            isFetching={newMessage.status === \"loading\"}\r\n            text={newMessage.text}\r\n            placeholder=\"Сообщение\"\r\n            onChange={onTextChange}\r\n          />\r\n        </div>\r\n        <div className=\"new-message-voting\">{votingElem}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewMessage;\r\n","import { ReactElement, useEffect } from \"react\";\r\nimport { useLocation, useSearchParams } from \"react-router-dom\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"src/store\";\r\nimport { newMessageActions } from \"src/store\";\r\nimport { useTopicMessages, useUpdateMessages } from \"src/store/query-hooks\";\r\n\r\nimport Error from \"src/components/common/error\";\r\nimport Pages from \"src/components/common/pages\";\r\nimport Header from \"./header\";\r\nimport TopicInfo from \"./topic_info\";\r\nimport Row from \"../../pages/topic/row\";\r\nimport Footer from \"./footer\";\r\nimport NewMessage from \"./new_message\";\r\nimport {\r\n  getMaxPage,\r\n  extractTextFromHTML,\r\n  toNumber,\r\n  getPageNumber,\r\n} from \"src/utils\";\r\n\r\nimport \"./topic.css\";\r\nimport { useEnableUpdater } from \"./hooks/use-enable-updater\";\r\n\r\nconst Topic = (): ReactElement => {\r\n  const dispatch = useAppDispatch();\r\n  const { hash } = useLocation();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const topicId = toNumber(searchParams.get(\"id\"), -1);\r\n  const { data, error, isPending } = useTopicMessages({ topicId });\r\n\r\n  const { info, item0, list: items = [] } = data ?? {};\r\n\r\n  const login = useAppSelector((state) => state.login);\r\n\r\n  const page = getPageNumber(searchParams.get(\"page\"));\r\n  const maxPage = getMaxPage(info?.count);\r\n\r\n  const isLastPage = page === \"last20\" || page === maxPage;\r\n  const { enableUpdater, refreshInterval } = useEnableUpdater({ isLastPage });\r\n\r\n  const { refetch: updateMessages } = useUpdateMessages(\r\n    { topicId },\r\n    {\r\n      refetchInterval: refreshInterval,\r\n      enabled: enableUpdater,\r\n    }\r\n  );\r\n\r\n  const onPostNewMessageSuccess = () => {\r\n    updateMessages();\r\n    dispatch(newMessageActions.changeText(\"\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (info?.title) {\r\n      document.title = extractTextFromHTML(info.title);\r\n    }\r\n  }, [info?.title]);\r\n\r\n  useEffect(() => {\r\n    if (isPending) return;\r\n    if (!hash) return;\r\n\r\n    const nodeHash = document.getElementById(hash.slice(1));\r\n    if (nodeHash) {\r\n      window.scrollTo(0, nodeHash.offsetTop);\r\n    }\r\n  }, [isPending, hash]);\r\n\r\n  return (\r\n    <div style={{ marginBottom: \"5px\" }}>\r\n      <Header topicId={topicId} />\r\n      {error && <Error text={error.message} />}\r\n      <div className=\"topic-table\">\r\n        <TopicInfo topicId={topicId} />\r\n        <Row item={item0} topicId={topicId} />\r\n        {items.map((item, i) => (\r\n          <Row key={item.n} item={item} topicId={topicId} />\r\n        ))}\r\n        {(maxPage > 1 || page === \"last20\") && (\r\n          <div className=\"table-footer\">\r\n            <Pages maxPage={maxPage} last20 />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Footer topicId={topicId} isLastPage={isLastPage} />\r\n      {login.logged && (\r\n        <NewMessage\r\n          topicId={topicId}\r\n          onSubmitSuccess={onPostNewMessageSuccess}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Topic;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useAppSelector } from \"src/store\";\r\nimport { toNumber } from \"src/utils\";\r\n\r\ninterface IProps {\r\n  isLastPage: boolean;\r\n}\r\n\r\nexport const useEnableUpdater = ({ isLastPage }: IProps) => {\r\n  const [enableRefresh, refreshInterval] = useAppSelector((state) => [\r\n    state.options.items.autoRefreshTopic,\r\n    toNumber(state.options.items.autoRefreshTopicInterval, 60) * 1000,\r\n  ]);\r\n\r\n  const [enableUpdater, setEnableUpdater] = useState(false);\r\n  useEffect(() => {\r\n    if (enableRefresh === \"true\" && isLastPage) {\r\n      setTimeout(() => setEnableUpdater(true), refreshInterval);\r\n    }\r\n  }, [enableRefresh, refreshInterval, isLastPage]);\r\n\r\n  return {\r\n    enableUpdater,\r\n    refreshInterval,\r\n  };\r\n};\r\n","import { FC, ReactElement } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\ntype IProps = {\r\n  name: string;\r\n  label: string;\r\n  value: string;\r\n  values: Array<{ name: string; descr: string }>;\r\n  onChange: (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    name: string,\r\n    value: string\r\n  ) => void;\r\n  oneLine: boolean;\r\n};\r\n\r\nconst RadioOption: FC<IProps> = ({\r\n  name,\r\n  label,\r\n  value,\r\n  values,\r\n  oneLine,\r\n  onChange,\r\n}): ReactElement => {\r\n  const onChangeValue = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    onChange(e, name, e.target.value);\r\n  };\r\n\r\n  return (\r\n    <span>\r\n      <span style={{ marginRight: \"5px\" }}> {label} </span>\r\n      {oneLine && <br />}\r\n      {values.map((item, i) => (\r\n        <Form.Check\r\n          key={i}\r\n          type=\"radio\"\r\n          id={item.name}\r\n          label={item.descr}\r\n          name={label}\r\n          checked={item.name === value}\r\n          value={item.name}\r\n          inline={oneLine}\r\n          onChange={onChangeValue}\r\n        ></Form.Check>\r\n      ))}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default RadioOption;\r\n","import { FC } from \"react\";\r\n\r\ntype IProps = {\r\n  name: string;\r\n  label: string;\r\n  value: string;\r\n  onChange: (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    name: string,\r\n    value: string\r\n  ) => void;\r\n  postfix?: string;\r\n};\r\n\r\nconst StringOption: FC<IProps> = (props): React.ReactElement => {\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name } = props;\r\n    props.onChange(e, name, e.target.value);\r\n  };\r\n\r\n  const { name, value, label, postfix } = props;\r\n\r\n  return (\r\n    <label htmlFor={name} style={{ marginRight: \"5px\" }}>\r\n      <span style={{ marginRight: \"5px\" }}>{label}</span>\r\n      <input\r\n        type=\"string\"\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        className=\"input\"\r\n      />\r\n      {postfix !== undefined ? (\r\n        <span style={{ marginLeft: \"5px\" }}>{postfix}</span>\r\n      ) : null}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default StringOption;\r\n","export const formTabs = [\r\n  {\r\n    tabName: \"Общие\",\r\n    rows: [\r\n      [\"theme\"],\r\n      [\"topicsPerPage\"],\r\n      [\"autoRefreshTopicsList\", \"autoRefreshTopicsListInterval\"],\r\n      [\"autoRefreshTopic\", \"autoRefreshTopicInterval\"],\r\n    ],\r\n  },\r\n  {\r\n    tabName: \"Тултипы\",\r\n    rows: [[\"showTooltips\", \"tooltipDelay\"], [\"showTooltipOnPostLink\"]],\r\n  },\r\n  {\r\n    tabName: \"Ссылки\",\r\n    rows: [\r\n      [\"showYoutubeVideoTitle\"],\r\n      [\"replaceCatalogMista\"],\r\n      [\"fixBrokenLinks\"],\r\n    ],\r\n  },\r\n];\r\n\r\nexport const formParams = {\r\n  theme: {\r\n    type: \"radio\",\r\n    label: \"Цветовая палитра:\",\r\n    oneLine: true,\r\n    values: [\r\n      { name: \"yellow\", descr: \"Золотая\" },\r\n      { name: \"lightgray\", descr: \"Серая\" },\r\n      { name: \"dark\", descr: \"Темная\" },\r\n    ],\r\n  },\r\n  topicsPerPage: {\r\n    type: \"number\",\r\n    label: \"Тем на странице (max 99):\",\r\n    min: 1,\r\n    max: 99,\r\n  },\r\n  autoRefreshTopicsList: {\r\n    type: \"checkbox\",\r\n    label: \"Автообновление списка тем\",\r\n  },\r\n  autoRefreshTopicsListInterval: {\r\n    type: \"number\",\r\n    label: \"\",\r\n    min: 60,\r\n    max: 1000000,\r\n    postfix: \"сек\",\r\n  },\r\n  autoRefreshTopic: {\r\n    type: \"checkbox\",\r\n    label: \"Автообновление темы\",\r\n  },\r\n  autoRefreshTopicInterval: {\r\n    type: \"number\",\r\n    label: \"\",\r\n    min: 60,\r\n    max: 1000000,\r\n    postfix: \"сек\",\r\n  },\r\n  //Tooltips\r\n  showTooltips: {\r\n    type: \"checkbox\",\r\n    label: \"Показывать тултипы, задержка\",\r\n    disabled: true,\r\n  },\r\n  tooltipDelay: {\r\n    type: \"number\",\r\n    max: 1000000,\r\n    label: \"\",\r\n    postfix: \"мс\",\r\n    disabled: true,\r\n  },\r\n  showTooltipOnPostLink: {\r\n    type: \"checkbox\",\r\n    label: \"Показывать тултип ссыки на другую ветку\",\r\n    disabled: true,\r\n  },\r\n  //links\r\n  showYoutubeVideoTitle: {\r\n    type: \"checkbox\",\r\n    label: \"Показывать наименования роликов youtube\",\r\n  },\r\n  replaceCatalogMista: {\r\n    type: \"checkbox\",\r\n    label: \"Обратно заменять catalog.mista.ru на infostart.ru\",\r\n  },\r\n  fixBrokenLinks: {\r\n    type: \"checkbox\",\r\n    label: \"Чинить поломанные ссылки (с русскими символами)\",\r\n  },\r\n};\r\n","import { FC, ReactElement } from \"react\";\r\n\r\ntype IProps = {\r\n  name: string;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nconst Tab: FC<IProps> = ({ name, children }): ReactElement => {\r\n  return (\r\n    <div>\r\n      <div className=\"tab-header\">{name}</div>\r\n      <div className=\"tab-content\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tab;\r\n","import { ReactElement, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Form, FormControl, Button } from \"react-bootstrap\";\r\n\r\nimport RadioOption from \"./radio_option\";\r\nimport StringOption from \"./string_option\";\r\n\r\nimport { formTabs, formParams } from \"./formscheme\";\r\nimport Tab from \"./tab\";\r\n\r\nimport { IOptionsItems, useAppDispatch, useAppSelector } from \"src/store\";\r\nimport { defaultOptionsState, optionsActions } from \"src/store\";\r\n\r\nimport \"./options.css\";\r\n\r\nconst Options = (): ReactElement => {\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const options = useAppSelector((state) => state.options);\r\n\r\n  const [state, setState] = useState({\r\n    items: options.items,\r\n  });\r\n\r\n  const closeForm = () => {\r\n    navigate(\"/#\");\r\n  };\r\n\r\n  const resetOptions = () => {\r\n    setState({\r\n      ...state,\r\n      items: Object.assign({}, defaultOptionsState.items),\r\n    });\r\n  };\r\n\r\n  const applyOptions = () => {\r\n    dispatch(optionsActions.save(state.items));\r\n    closeForm();\r\n  };\r\n\r\n  const onChange = (\r\n    e: React.FormEvent<HTMLElement>,\r\n    name: string,\r\n    value: IOptionsItems[keyof IOptionsItems]\r\n  ) => {\r\n    let items = Object.assign({}, state.items);\r\n    items[name] = value;\r\n    setState({\r\n      ...state,\r\n      items,\r\n    });\r\n  };\r\n\r\n  let tabs = [];\r\n  for (let tab of formTabs) {\r\n    let rows = [];\r\n    for (let i in tab.rows) {\r\n      const row = tab.rows[i];\r\n      let rowElem = [];\r\n      for (let name of row) {\r\n        const item = formParams[name];\r\n        if (!item) continue;\r\n\r\n        const value = state.items[name];\r\n\r\n        if (item.type === \"radio\") {\r\n          rowElem.push(\r\n            <RadioOption\r\n              key={name}\r\n              name={name}\r\n              label={item.label}\r\n              values={item.values}\r\n              value={value}\r\n              oneLine={item.oneLine}\r\n              onChange={onChange}\r\n            />\r\n          );\r\n        } else if (item.type === \"number\") {\r\n          if (item.label)\r\n            rowElem.push(\r\n              <label\r\n                htmlFor={name}\r\n                key={name + \"_label\"}\r\n                style={{ fontWeight: \"inherit\" }}\r\n              >\r\n                {item.label}\r\n              </label>\r\n            );\r\n\r\n          rowElem.push(\r\n            <div className=\"options-number\" key={name}>\r\n              <FormControl\r\n                type=\"number\"\r\n                min={item.min}\r\n                max={item.max}\r\n                value={value}\r\n                disabled={item.disabled}\r\n                onChange={(e) => onChange(e, name, e.target.value)}\r\n                className=\"input\"\r\n                size=\"sm\"\r\n              ></FormControl>\r\n              {item.postfix && (\r\n                <span\r\n                  key={name + \"_postfix\"}\r\n                  style={{ marginLeft: \"5px\", flex: \"0 0 auto\" }}\r\n                >\r\n                  {item.postfix}\r\n                </span>\r\n              )}\r\n            </div>\r\n          );\r\n        } else if (item.type === \"string\") {\r\n          rowElem.push(\r\n            <StringOption\r\n              key={name}\r\n              name={name}\r\n              label={item.label}\r\n              postfix={item.postfix}\r\n              value={value}\r\n              onChange={onChange}\r\n            />\r\n          );\r\n        } else if (item.type === \"checkbox\") {\r\n          rowElem.push(\r\n            <Form.Check\r\n              id={name}\r\n              type=\"checkbox\"\r\n              label={item.label}\r\n              key={name}\r\n              name={name}\r\n              checked={String(value) === \"true\"}\r\n              disabled={item.disabled}\r\n              onChange={(e) => onChange(e, name, String(e.target.checked))}\r\n              style={{ flex: \"0 0 auto\", margin: \"0px\", maxWidth: \"100%\" }}\r\n            />\r\n          );\r\n        }\r\n      }\r\n\r\n      rows.push(\r\n        <div key={i} className=\"options-row\">\r\n          {rowElem}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    tabs.push(\r\n      <Tab key={tab.tabName} name={tab.tabName}>\r\n        {rows}\r\n      </Tab>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"options-form\">\r\n      <div className=\"options-header\" style={{ cursor: \"default\" }}>\r\n        <b>Настройки</b>\r\n      </div>\r\n      {tabs}\r\n      <div className=\"button-row\">\r\n        <Button\r\n          id=\"applyOptions\"\r\n          size=\"sm\"\r\n          variant=\"light\"\r\n          style={{ margin: \"5px\" }}\r\n          className=\"button\"\r\n          onClick={applyOptions}\r\n        >\r\n          OK\r\n        </Button>\r\n        <Button\r\n          id=\"cancelOptions\"\r\n          size=\"sm\"\r\n          variant=\"light\"\r\n          style={{ margin: \"5px\", float: \"left\" }}\r\n          className=\"button\"\r\n          onClick={closeForm}\r\n        >\r\n          Отмена\r\n        </Button>\r\n        <Button\r\n          id=\"defaultOptions\"\r\n          size=\"sm\"\r\n          variant=\"light\"\r\n          style={{ margin: \"5px\", float: \"right\" }}\r\n          className=\"button\"\r\n          onClick={resetOptions}\r\n        >\r\n          Сбросить настройки\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import { ReactElement } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport TopicsList from \"./topics_list\";\r\nimport Topic from \"./topic\";\r\nimport Options from \"./options\";\r\n\r\nconst AppRoutes = (): ReactElement => {\r\n  return (\r\n    <Container>\r\n      <Routes>\r\n        <Route path=\"/\" element={<TopicsList />} />\r\n        <Route path=\"/index.php\" element={<TopicsList />} />\r\n        <Route path=\"/topic.php\" element={<Topic />} />\r\n        <Route path=\"/options.php\" element={<Options />} />\r\n      </Routes>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AppRoutes;\r\n","import { ReactElement } from \"react\";\r\nimport { domain } from \"src/api\";\r\n\r\nconst NavBarFooter = (): ReactElement => {\r\n  return (\r\n    <footer className=\"flex-row navbar-footer\">\r\n      <a href={`${domain}/rules.php`}>Правила</a>\r\n      <span className=\"separator\">|</span>\r\n      <a href={`${domain}/about.php`}>Описание</a>\r\n      <span className=\"separator\">|</span>\r\n      <b>\r\n        <a href={`${domain}/ad.php`}>Реклама на сайте</a>{\" \"}\r\n      </b>\r\n      <span className=\"separator\">|</span>\r\n      <a href={`${domain}/find.php`}>Поиск</a>\r\n      <span className=\"separator\">|</span>\r\n      <a rel=\"nofollow\" href={`${domain}/sections_list.php`}>\r\n        Секции\r\n      </a>\r\n      <span className=\"separator\">|</span>\r\n      <a rel=\"nofollow\" href={`${domain}/rating.php`}>\r\n        Рейтинг\r\n      </a>\r\n      <span className=\"separator\">|</span>\r\n      <a href=\"http://kb.mista.ru\">Книга знаний</a>\r\n      <span className=\"separator\">|</span>\r\n      <a href=\"http://wiki.mista.ru\">Вики-миста (КЗ2)</a>\r\n      <span className=\"separator\">|</span>\r\n      <a rel=\"nofollow\" href=\"http://m.mista.ru/\">\r\n        Мобильная\r\n      </a>\r\n      <span className=\"separator\">|</span>\r\n      <a href={`${domain}/archive.php`}>Архив</a>\r\n      <span className=\"separator\">|</span>\r\n      <a href={`${domain}/moders.php`}>Модераторы</a>\r\n      <span className=\"separator\">|</span>\r\n      <a href={`${domain}/users_gallery.php`}>Галерея</a>\r\n      <span className=\"separator\">|</span>\r\n      <a href={`${domain}/ban_list.php`}>Баны</a>\r\n      <span className=\"separator\">|</span>\r\n      <span>18+</span>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default NavBarFooter;\r\n","import { FC, ReactElement } from \"react\";\r\n\r\ntype IProps = {\r\n  closeWindow?: (e: React.SyntheticEvent<HTMLDivElement>) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nconst TooltipHeader: FC<IProps> = ({ children, closeWindow }): ReactElement => {\r\n  return (\r\n    <div className=\"tooltip-header\">\r\n      {children}\r\n      <div\r\n        className=\"tooltip-close\"\r\n        onClick={closeWindow}\r\n        onTouchEnd={closeWindow}\r\n      >\r\n        <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n        <i\r\n          className=\"fa fa-angle-left\"\r\n          aria-hidden=\"true\"\r\n          style={{ marginLeft: \"-2px\" }}\r\n        ></i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TooltipHeader;\r\n","import { FC, ReactElement } from \"react\";\r\n\r\ntype IProps = {\r\n  onScroll?: (delta: number) => void;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nconst TooltipBody: FC<IProps> = ({ children, onScroll }): ReactElement => {\r\n  let startX = 0;\r\n\r\n  const onTouchStart = (e: React.TouchEvent<HTMLElement>) => {\r\n    startX = e.nativeEvent.changedTouches[0].clientX;\r\n  };\r\n\r\n  const onTouchEnd = (e: React.TouchEvent<HTMLElement>) => {\r\n    if (!onScroll) return;\r\n\r\n    let endX = e.nativeEvent.changedTouches[0].clientX;\r\n    if (Math.abs(endX - startX) > 100) onScroll(-endX + startX);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"tooltip-text\"\r\n      onTouchStart={onTouchStart}\r\n      onTouchEnd={onTouchEnd}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TooltipBody;\r\n","import React, { FC, ReactElement } from \"react\";\r\n\r\nimport Draggable from \"react-draggable\";\r\n\r\nimport TooltipHeader from \"./tooltip_header\";\r\nimport TooltipBody from \"./tooltip_body\";\r\n\r\nimport \"./tooltip.css\";\r\n\r\nimport { useActionCreators } from \"src/store\";\r\nimport { ITooltipItem, tooltipsActions } from \"src/store\";\r\n\r\ntype IProps = {\r\n  tooltip: ITooltipItem;\r\n  zIndex?: number;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nconst TooltipWindow: FC<IProps> = ({\r\n  tooltip,\r\n  zIndex,\r\n  children,\r\n}): ReactElement => {\r\n  const actions = useActionCreators(tooltipsActions);\r\n\r\n  const onCloseClick = () => {\r\n    actions.close(tooltip.keys);\r\n  };\r\n\r\n  const { coords } = tooltip;\r\n\r\n  let axis: \"both\" | \"x\" | \"y\" | \"none\";\r\n  let position: {\r\n    top: number;\r\n    left: number;\r\n  };\r\n\r\n  if (window.innerWidth <= 768) {\r\n    axis = \"y\";\r\n    position = { top: coords.y, left: 5 };\r\n  } else {\r\n    axis = \"both\";\r\n    position = {\r\n      top: coords.y,\r\n      left: Math.min(coords.x, window.innerWidth - 670),\r\n    };\r\n  }\r\n\r\n  let [header, body] = React.Children.toArray(children);\r\n\r\n  return (\r\n    <Draggable\r\n      axis={axis}\r\n      handle=\".tooltip-header\"\r\n      defaultClassNameDragging=\"dragging\"\r\n      key={zIndex}\r\n    >\r\n      <div className=\"tooltip-window\" style={{ ...position }}>\r\n        <TooltipHeader closeWindow={onCloseClick}>\r\n          {(header as ReactElement).props.children}\r\n        </TooltipHeader>\r\n        <TooltipBody>{(body as ReactElement).props.children}</TooltipBody>\r\n      </div>\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default TooltipWindow;\r\n","import { ITooltipItem } from \"src/store\";\r\nimport { useMessageData } from \"src/store/query-hooks\";\r\n\r\nimport MsgText from \"src/pages/topic/row/msg_text\";\r\nimport UserInfo from \"src/pages/topic/row/user_info\";\r\n\r\nimport TooltipWindow from \"./tooltip_window\";\r\nimport TooltipHeader from \"./tooltip_header\";\r\nimport TooltipBody from \"./tooltip_body\";\r\n\r\nimport \"./tooltip.css\";\r\n\r\ntype IProps = {\r\n  tooltip: ITooltipItem;\r\n};\r\n\r\nconst Tooltip: React.FC<IProps> = ({ tooltip }) => {\r\n  const { keys } = tooltip;\r\n\r\n  const {\r\n    data: item,\r\n    isPending,\r\n    isError,\r\n    error,\r\n  } = useMessageData({ topicId: keys.topicId, number: keys.number });\r\n\r\n  if (isPending) return null;\r\n\r\n  return (\r\n    <TooltipWindow tooltip={tooltip}>\r\n      <TooltipHeader>\r\n        {isError ? (\r\n          <b>Ошибка</b>\r\n        ) : (\r\n          <UserInfo\r\n            data={item}\r\n            isAuthor={false}\r\n            isYou={false}\r\n            isTooltip={true}\r\n          />\r\n        )}\r\n      </TooltipHeader>\r\n      <TooltipBody>\r\n        <MsgText\r\n          n={item?.n}\r\n          vote={item?.vote}\r\n          html={isError ? error.message : item.text}\r\n          topicId={keys.topicId}\r\n          topicDate={item?.time}\r\n          style={{ maxHeight: \"min(550px, 80vh)\", overflowY: \"auto\" }}\r\n        />\r\n      </TooltipBody>\r\n    </TooltipWindow>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import { useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport { QueryKeys } from \"./types\";\r\nimport { getCachedTopicData } from \"./use-topic-messages\";\r\nimport { fetchTopicMessage } from \"src/api\";\r\n\r\ninterface IProps {\r\n  topicId: number;\r\n  number: number;\r\n}\r\n\r\nexport const useMessageData = ({ topicId, number }: IProps) => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useQuery({\r\n    queryKey: [QueryKeys.TopicMessageData, topicId, number],\r\n    queryFn: async () => {\r\n      const cachedTopicData = getCachedTopicData(queryClient, topicId);\r\n\r\n      if (cachedTopicData) {\r\n        if (number === 0) {\r\n          return cachedTopicData.item0;\r\n        } else {\r\n          const item = cachedTopicData.list.find((item) => item.n === number);\r\n          if (item) {\r\n            return item;\r\n          }\r\n        }\r\n      }\r\n\r\n      const item = await fetchTopicMessage(topicId, number);\r\n      if (item === undefined) {\r\n        throw new Error(`Сообщение ${number} не найдено`);\r\n      }\r\n\r\n      return item;\r\n    },\r\n    refetchOnWindowFocus: false,\r\n  });\r\n};\r\n","import { ReactElement, useRef } from \"react\";\r\nimport { useOnClickOutside } from \"usehooks-ts\";\r\n\r\nimport { useActionCreators, useAppSelector } from \"src/store\";\r\nimport { tooltipsActions } from \"src/store\";\r\n\r\nimport Tooltip from \"./tooltip\";\r\n\r\nconst TooltipsContainer = (): ReactElement => {\r\n  const items = useAppSelector((state) => state.tooltips.items);\r\n  const actions = useActionCreators(tooltipsActions);\r\n  const ref = useRef(null);\r\n\r\n  const handleClickOutside = () => {\r\n    actions.closeAll();\r\n  };\r\n\r\n  useOnClickOutside(ref, handleClickOutside);\r\n\r\n  return (\r\n    <div ref={ref}>\r\n      {items.map((item) => {\r\n        return <Tooltip key={item.hash} tooltip={item} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TooltipsContainer;\r\n","import { ReactElement, useLayoutEffect } from \"react\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport NavBar from \"./components/navigation/nav_bar\";\r\nimport AppRoutes from \"./pages/approutes\";\r\nimport NavBarFooter from \"./components/navigation/nav_bar_footer\";\r\nimport TooltipsContainer from \"./components/tooltips/tooltips_container\";\r\nimport { useAppSelector } from \"./store\";\r\n\r\nconst App = (): ReactElement => {\r\n  const theme = useAppSelector((state) => state.options.items.theme);\r\n\r\n  useLayoutEffect(() => {\r\n    document.body.setAttribute(\"data-theme\", theme);\r\n  }, [theme]);\r\n\r\n  return (\r\n    <HashRouter>\r\n      <NavBar />\r\n      <AppRoutes />\r\n      <NavBarFooter />\r\n      <TooltipsContainer />\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createRoot } from \"react-dom/client\";\r\nimport { Provider } from \"react-redux\";\r\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { store, persistor } from \"src/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst Root = ({ store }): React.ReactElement => (\r\n  <QueryClientProvider client={queryClient}>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </QueryClientProvider>\r\n);\r\n\r\nconst container = document.getElementById(\"root\");\r\nconst root = createRoot(container!);\r\nroot.render(<Root store={store} />);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_mista\"] = self[\"webpackChunkreact_mista\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(906)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Search","searchEngine","setSearchEngine","useState","text","setText","handleTextChange","useCallback","e","target","value","handleKeyDown","useEventCallback","key","doSearch","url","concat","window","open","_jsxs","InputGroup","size","children","DropdownButton","id","title","variant","onSelect","_jsx","Dropdown","Item","eventKey","FormControl","type","placeholder","className","onKeyDown","onChange","Text","onClick","style","zIndex","toNumber","str","defaultValue","arguments","length","undefined","number","parseInt","isNaN","groupBy","list","getKey","reduce","previous","currentItem","group","push","getMaxPage","count","Math","min","ceil","childrenToText","map","displayName","props","console","log","formattedTime","time","td","dayjs","isSame","Date","format","paramsToString","paramsPrefix","params","searchParams","URLSearchParams","append","toString","fetchJsonpAndGetJson","async","options","fullUrl","domain","response","fetchJsonp","json","responseJson","JSON","parse","replace","error","message","utils","fetchAndGetJson","init","mode","credentials","fetch","fetchCookies","session","userId","Number","user_id","userName","user_name","userHash","user_hash","lastError","last_error","convertResponse","urlCookies","forum","code","shortn","name","fulln","fetchSections","items","urlSections","tree","item","fetchTopicInfo","voting","x","select","result","sectionId","section","created","authorId","author","updated","lastUser","updated_name","answers_count","down","closed","deleted","isVoting","is_voting","urlTopicInfo","n","user","utime","vote","fetchTopicMessages","urlTopicMessages","fetchTopicMessage","to","from","find","sect1","sectionCode","sect2","user0","answ","pinned","fetchTopicsList","request","page","itemsCount","itemsPerPage","topics","String","section_short_name","mytopics","myTopics","convertRequest","urlTopicsList","slice","localStorage","getItem","urlLogin","urlLogout","urlNewMessage","urlNewTopic","useSections","useQuery","queryKey","queryFn","placeholderData","refetchOnWindowFocus","QueryKeys","useAppDispatch","useDispatch","useAppSelector","useSelector","useActionCreators","actions","dispatch","useMemo","bindActionCreators","useTopicsList","_ref","state","topicsPerPage","_objectSpread","TopicsList","Object","fromEntries","previousData","checkLogin","createAsyncThunk","doLogin","method","body","username","user_password","password","headers","Accept","redirect","fetchLogin","doLogout","fetchLogout","shouldLogin","_ref2","login","status","createSlice","initialState","logged","reducers","extraReducers","builder","addCase","pending","fulfilled","_ref3","payload","rejected","_ref4","_ref5","loginActions","reducer","postNewTopic","fetchParams","message_text","topic_text","subject","target_section","target_forum","toLowerCase","action","rnd","round","random","votingItems","i","fetchNewTopic","clear","changeSubject","changeText","changeSection","showVoting","setError","_ref6","_ref7","newTopicActions","newTopic","defaultOptionsState","voteColors","theme","autoRefreshTopicsList","autoRefreshTopicsListInterval","autoRefreshTopic","autoRefreshTopicInterval","showTooltips","tooltipDelay","showTooltipOnPostLink","showYoutubeVideoTitle","replaceCatalogMista","fixBrokenLinks","save","optionsActions","show","hash","stringify","keys","index","findIndex","coords","close","filter","val","closeAll","tooltipsActions","tooltips","fetchTopic","info","topicId","item0","first","last","getFirstLastMessageNumber","max","pageNum","_item0","shift","postNewMessage","topic_id","voting_select","fetchNewMessage","newMessageActions","newMessage","useTopicMessages","useSearchParams","get","queryClient","useQueryClient","TopicMessages","cacheData","getCachedTopicData","useUpdateMessages","UpdateTopicMessages","data","setQueryData","prevData","at","initialData","refetchOnMount","topicQueries","getQueriesData","NavBar","location","useLocation","refetch","enabled","Navbar","bg","expand","fixed","Brand","as","Link","pathname","preventDefault","Toggle","Collapse","Nav","link","active","href","Form","persistConfig","storage","combineReducers","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","CustomToggle","React","ref","cursor","float","onMenuSelect","event","onLogout","Menu","Divider","LoginForm","setUsername","setPassword","flexWrap","marginRight","flex","maxLength","autoComplete","Button","doLoginIfNeeded","getState","margin","rel","dangerouslySetInnerHTML","__html","Login","elem","useEffect","LoggedUser","_Fragment","ErrorElem","selected","Select","currentTarget","label","Header","_searchParams$get","setSearchParams","Sections","onSectionChange","prevSearchParams","newSearchParams","set","delete","isLoading","onUpdateClick","letterSpacing","color","display","width","textAlign","setTime","msg","updateTime","expanded","pages","maxPage","loggedUserName","classes","classNames","bold","sectionHref","addPrefix","startsWith","overflowWrap","Pages","onFirst","onPrev","onNext","onLast","marginLeft","keywords","Set","split","Спецсиволы","НачалоТега","КонецТега","мЦветФона","мЦветЧисла","мЦветСтроки","мЦветКлючевогоСлова1","СтрокаРезультат","УстановленЦвет","ПоследнийЦвет","ВСтроке","Токен","ПустаяСтрока","Строка","trim","Сред","Нач","Длина","substring","Прав","isKeyword","token","has","ДобавитьЧастьСтроки1С","Часть","Цвет","РазукраситьСтроку","СтрокаКода","ВСтрокеСкобка","ВСтрокеТильда","НачалоСтроки","ТокенДоТочки","Поз","ТекущийСимвол","charAt","join","hidden","setHidden","newtext","highlight","prepareText","buttonText","linesCount","buttonShow","onShowClick","preStyle","overflow","height","marginTop","timerRef","useRef","currentTopicId","initialText","isMounted","run","onMouseOver","persist","current","setTimeout","showToolTip","onMouseOut","clearTimeout","stopPropagation","pageX","y","pageY","pageParam","role","hrefName","setHrefName","setTitle","videoId","fullHref","search","URL","hostname","getVideoId","apiKey","apiUrl","notFound","snippet","getVideoParams","parentText","_objectWithoutProperties","_excluded","newHref","LinkToPost","query","LinkToUser","isMistaCatalog","class","fixBrokenLink","escapedHref","regExp","RegExp","arr","match","YoutubeLink","total","colors","img","percent","textDecoration","src","maxWidth","alt","paddingLeft","VoteItem","memo","InternalImage","idx","topicDate","messageNumber","date","filePath","preview","full","PhotoView","htmlToReactParser","HtmlToReact","processNodeDefinitions","isValidNode","linkToPostProcessor","shouldProcessNode","node","processNode","attribs","codeProcessor","Code","linkProcessor","processedHtml","CustomLink","internalImageProcesor","ProcessedText","html","processText","processCode1C","processLinksToPosts","res","processImages","processingInstructions","processDefaultNode","reactComponent","parseWithInstructions","initialVoteText","voteText","setVoteText","_info","getVoteText","showVote","voteChart","VoteChart","PhotoProvider","Vote","imgDisplay","setImgDisplay","document","getElementById","scrollTo","offsetTop","isAuthor","isYou","isTooltip","dataStr","userClassNames","imgElem","timeElem","innerWidth","onLoad","onImageLoad","onError","onImageError","marginBottom","loggedUserId","onDataLoaded","setData","_data","getData","UserInfo","MsgText","overflowY","initialMsgNumber","deltaX","setDeltaX","setDispaly","setState","msgNumber","swipeable","useSwipeable","onSwiping","eventData","abs","onSwiped","dir","delta","onContentLoaded","transform","flexDirection","PreviewButtons","onClickFirst","onClickNext","onClickPrev","order","PreviewContent","previewNumber","setPreviewNumber","ForumCell","CountCell","previewShowLast","ShowPreviewButton","previewShowFirst","TopicNameCell","AuthorCell","LastUserCell","Last20Cell","TopicPreview","last20","pathName","locationParams","currentPage","Pagination","isFetching","formRef","onShowVotingChange","textAreaRef","handleShowVotingChange","checked","handleChange","cols","rows","onKeyUp","ctrlKey","dispatchEvent","Event","cancelable","bubbles","ButtonGroup","textAreaNode","start","selectionStart","end","selectionEnd","oldText","len","replacement","newText","disabled","Check","_newTopic$section","onSubmitSuccess","sections","currentSection","setSection","votes","setVotes","Array","fill","onVoteTextChange","votesCopy","onSubmit","onSuccess","this_onSubmitSuccess","shouldPost","postNewTopicIfNeeded","onSubjectChange","onTextChange","groupsElem","votingOptions","Control","TextEditor","FormGroup","Error","TableHeader","Row","position","NewTopic","forums","life","it","job","yandexUrl","encodeURIComponent","lineHeight","_topic$item","topic","isLastPage","onBookmarkClick","setVoting","afterSubmit","clearVoting","setVotingOption","votingElem","Topic","isPending","locationPage","enableUpdater","refreshInterval","enableRefresh","setEnableUpdater","useEnableUpdater","updateMessages","refetchInterval","htmltext","DOMParser","parseFromString","firstChild","innerText","nodeHash","TopicInfo","Footer","NewMessage","onPostNewMessageSuccess","values","oneLine","onChangeValue","descr","inline","postfix","htmlFor","formTabs","tabName","formParams","Options","navigate","useNavigate","closeForm","assign","tabs","tab","row","rowElem","RadioOption","fontWeight","StringOption","Tab","applyOptions","resetOptions","AppRoutes","Container","Routes","Route","path","element","NavBarFooter","closeWindow","onTouchEnd","onScroll","startX","onTouchStart","nativeEvent","changedTouches","clientX","endX","tooltip","axis","top","left","header","toArray","Draggable","handle","defaultClassNameDragging","TooltipHeader","onCloseClick","TooltipBody","isError","TopicMessageData","cachedTopicData","useMessageData","TooltipWindow","maxHeight","TooltipsContainer","useOnClickOutside","handleClickOutside","Tooltip","App","useLayoutEffect","setAttribute","HashRouter","QueryClient","Root","QueryClientProvider","client","Provider","PersistGate","loading","container","createRoot","render","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","j","every","splice","r","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","this","then","ns","create","def","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}