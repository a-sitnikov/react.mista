{"version":3,"file":"static/js/main.f05c37e4.js","mappings":"4MASA,MA6DA,EA7DeA,KACb,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,yCAC1CC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,IAE3BG,GAAmBC,EAAAA,EAAAA,cACtBC,IACCH,EAAQG,EAAEC,OAAOC,MAAM,GAEzB,IAGIC,GAAgBC,EAAAA,EAAAA,KACnBJ,IACe,UAAVA,EAAEK,KACJC,GACF,IAIEA,GAAWF,EAAAA,EAAAA,KAAiB,KAChC,IAAIG,EACJ,OAAQd,GACN,IAAK,uCACHc,EAAG,sCAAAC,OAAyCZ,EAAI,wBAChD,MACF,IAAK,SACHW,EAAG,kCAAAC,OAAqCZ,EAAI,wBAIhDa,OAAOC,KAAKH,GACZV,EAAQ,GAAG,IAGb,OACEc,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CAACC,KAAK,KAAIC,SAAA,EACnBH,EAAAA,EAAAA,MAACI,EAAAA,EAAc,CACbC,GAAG,gBACHC,MAAM,GACNJ,KAAK,KACLK,QAAQ,QACRC,SAAUzB,EAAgBoB,SAAA,EAE1BM,EAAAA,EAAAA,KAACC,EAAAA,EAASC,KAAI,CAACC,SAAS,uCAAQT,SAAC,0CACjCM,EAAAA,EAAAA,KAACC,EAAAA,EAASC,KAAI,CAACC,SAAS,SAAQT,SAAC,eAEnCM,EAAAA,EAAAA,KAACI,EAAAA,EAAW,CACVC,KAAK,OACLC,YAAW,GAAAlB,OAAKf,EAAY,oCAC5BkC,UAAU,qBACVC,UAAWzB,EACX0B,SAAU/B,EACVI,MAAON,KAETwB,EAAAA,EAAAA,KAACR,EAAAA,EAAWkB,KAAI,CAACH,UAAU,gBAAgBI,QAASzB,EAASQ,UAC3DM,EAAAA,EAAAA,KAAA,KAAGO,UAAU,qBAAqBK,MAAO,CAAEC,OAAQ,WAE1C,E,8DChEV,MAAMC,EAAW,SACtBC,GAEI,IADJC,EAAYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAEf,IAAKF,EAAK,OAAOC,EACjB,GAAmB,kBAARD,EAAkB,OAAOA,EAEpC,MAAMK,EAASC,SAASN,EAAK,IAC7B,OAAIO,MAAMF,GAAgBJ,EACnBI,CACT,EAEaG,EAAUA,CACrBC,EACAC,IAEAD,EAAKE,QAAO,CAACC,EAAUC,KACrB,MAAMC,EAAQJ,EAAOG,GAGrB,OAFKD,EAASE,KAAQF,EAASE,GAAS,IACxCF,EAASE,GAAOC,KAAKF,GACdD,CAAQ,GACd,CAAC,GAoCOI,EAAcC,IACV,IAAXA,QAA0Bb,IAAVa,GAA6B,EAC1CC,KAAKC,IAAID,KAAKE,KAAKH,EAAQ,KAAM,KAAO,EAGpCI,EAAkB1C,GACxBA,EAEEA,EAAS2C,KAAKvD,GACE,kBAAVA,EACFA,EACiB,OAAfA,EAAMuB,KACR,OAEoB,wBAA3BvB,EAAMuB,KAAKiC,aACgB,eAA3BxD,EAAMuB,KAAKiC,YAEJxD,EAAMyD,MAAMnB,QAEnBoB,QAAQC,IAAI3D,GACLA,KAdW,CAAC,IA6BlB,MAAM4D,EAAiBC,IAC5B,OAAa,eAATA,EAA+B,IALbC,EAOVD,EANLE,IAAMD,GAAIE,OAAO,IAAIC,KAAQ,OAO3BF,IAAMF,GAAMK,OAAO,SAEnBH,IAAMF,GAAMK,OAAO,aAVvB,IAAiBJ,CAWtB,ECjGWK,EAAiBA,CAACC,EAAsBC,KACnD,IAAKA,EAAQ,MAAO,GAEpB,IAAIC,EAAe,IAAIC,gBACvB,IAAK,IAAIpE,KAAOkE,EAAQ,CACtB,MAAMrE,EAAQqE,EAAOlE,QACPkC,IAAVrC,GAAqBsE,EAAaE,OAAOrE,EAAKH,EACpD,CAEA,IAAIiC,EAAMqC,EAAaG,WACvB,OAAIxC,EAAIG,OAAS,EAAUgC,EAAenC,EAC9B,EAAE,EAGHyC,EAAuBC,MAClCtE,EACAgE,EACAO,KAEA,IAAIC,EAAO,GAAAvE,OAAMwE,EAAM,KAAAxE,OAAID,GAAGC,OAAG6D,EAAe,IAAKE,IACrD,MAAMU,QAAiBC,IAAWH,GAClC,IACII,EADAC,QAAqBH,EAASE,OAElC,GAA4B,kBAAjBC,EACT,IACED,EAAOE,KAAKC,MAAMF,EACpB,CAAE,MAAOpF,GACPmF,EDNoBvF,KACxB,IACE,OAAOyF,KAAKC,MAAM1F,EACpB,CAAE,MAAOI,GAAI,CAEb,IAaE,OAZAJ,EAAOA,EACJ2F,QAAQ,OAAQ,KAChBA,QAAQ,OAAQ,KAChBA,QAAQ,OAAQ,KAChBA,QAAQ,OAAQ,KAChBA,QAAQ,OAAQ,IAChBA,QAAQ,MAAO,QACfA,QAAQ,MAAO,QACfA,QAAQ,MAAO,OACfA,QAAQ,cAAe,SAGnBF,KAAKC,MAAM1F,EAGpB,CAAE,MAAOI,GAIP,OAHA4D,QAAQ4B,MAAMxF,EAAEyF,SAChB7B,QAAQC,IAAIjE,GAEL,CAAC,CACV,GCpBW8F,CAAgBN,EACzB,MAEAD,EAAOC,EAET,OAAOD,CAAI,EAGAQ,EAAkBd,MAC7BtE,EACAgE,EACAqB,KAEA,IAAIb,EAAO,GAAAvE,OAAMwE,EAAM,KAAAxE,OAAID,GAAGC,OAAG6D,EAAe,IAAKE,IAEhDqB,IACHA,EAAO,CACLC,KAAM,OACNC,YAAa,gBAGjB,MAAMb,QAAiBc,MAAMhB,EAASa,GACtC,aAAaX,EAASE,MAAM,ECH9BN,eAAemB,IAEb,OAbF,SAAyBf,GACvB,MAAM,QAAEgB,GAAYhB,EAEpB,MAAO,CACLiB,OAAQC,OAAc,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASG,SACxBC,SAAiB,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASK,UACnBC,SAAiB,OAAPN,QAAO,IAAPA,OAAO,EAAPA,EAASO,UACnBC,UAAkB,OAAPR,QAAO,IAAPA,OAAO,EAAPA,EAASS,WAExB,CAISC,OADgB/B,EAAqBgC,GAE9C,CCzCA,SAASD,EAAgB1B,GACvB,MAAO,CACLjE,GAAIiE,EAASjE,GACb6F,MAAO5B,EAAS4B,MAChBC,KAAM7B,EAAS8B,OACfC,KAAM/B,EAASgC,MAEnB,CAEO,MAAMC,EAAgBrC,UAI3B,MACMsC,SADavC,EAAqBwC,IACrB3D,IAAIkD,GACvB,MAAO,CACLQ,QACAE,KAAM1E,EAAQwE,GAAQG,GAASA,EAAKT,QACrC,ECsBHhC,eAAe0C,EAAevG,GAE5B,OA7BF,SAAyBiE,GACvB,IAAIuC,EAAS,GAOb,OANIvC,EAASuC,SACXA,EAASvC,EAASuC,OAAO/D,KAAKgE,IAAC,CAC7B7H,KAAM6H,EAAEC,OACRtE,MAAOqE,EAAEE,YAGN,CACL3G,GAAIyB,SAASwC,EAASjE,IACtBC,MAAOgE,EAASrF,KAChBiH,MAAO5B,EAAS4B,MAChBe,UAAW3C,EAAS4C,QACpBC,QAAsC,IAA7BrF,SAASwC,EAAS6C,SAC3BC,SAAU9C,EAASmB,QACnB4B,OAAQ/C,EAASqB,UACjB2B,QAAsC,IAA7BxF,SAASwC,EAASgD,SAC3BC,SAAUjD,EAASkD,aACnB/E,MAAOX,SAASwC,EAASmD,eACzBC,KAAMpD,EAASoD,KACfC,OAAQrD,EAASqD,OACjBC,QAAStD,EAASsD,QAClBC,SAAiC,IAAvBvD,EAASwD,UACnBjB,SAEJ,CAISb,OADYhB,EAAgB+C,EAAc,CAAE1H,OAErD,CCjCA,SAAS2F,EAAgB1B,GACvB,MAAO,CACLjE,GAAIyB,SAASwC,EAASjE,IACtB2H,EAAGlG,SAASwC,EAAS0D,GACrBC,KAAM3D,EAAS2D,KACf1C,OAAQzD,SAASwC,EAASiB,QAC1BtG,KAAMqF,EAASrF,KACfmE,KAAiC,IAA3BtB,SAASwC,EAAS4D,OACxBC,KAAM7D,EAAS6D,KAEnB,CAEAjE,eAAekE,EACbxE,GAGA,aADmBoB,EAAgBqD,EAAkBzE,IACzCd,IAAIkD,EAClB,CAEA9B,eAAeoE,EACbjI,EACA2H,GAEA,MAAMO,EAAW,IAANP,EAAUA,EAAI,EAAIA,EAG7B,aADmBhD,EAAgBqD,EAAkB,CAAEhI,KAAImI,KAAMR,EAAGO,QACxDzF,IAAIkD,GAAiByC,MAAM9B,GAAwBA,EAAKqB,IAAMA,GAC5E,CCOA,SAAShC,EAAgB1B,GACvB,MAAO,CACLjE,GAAIiE,EAASjE,GACb6F,MAAO5B,EAAS4B,MAChBgB,QAAS5C,EAASoE,MAClBC,YAAarE,EAASsE,MACtBvB,OAAQ/C,EAASuE,MACjBtB,SAAUjD,EAAS2D,KACnBd,QAA4B,IAAnB7C,EAAS6C,QAClBG,QAA0B,IAAjBhD,EAAS4D,MAClBzF,MAAO6B,EAASwE,KAChB7J,KAAMqF,EAASrF,KACf0I,OAA4B,IAApBrD,EAASqD,OACjBD,KAAwB,IAAlBpD,EAASoD,KACfqB,OAA2B,aAAnBzE,EAAS4D,MACjBL,SAAiC,IAAvBvD,EAASwD,UAEvB,CAEA5D,eAAe8E,EACbpF,GAEA,MAAMqF,EAnCR,SAAwBA,GACtB,MAAMC,EAAO3H,EAAS0H,EAAQC,KAAM,GAC9BC,EAAa5H,EAAS0H,EAAQG,aAAc,IAAMF,EAExD,MAAO,CACLG,OAAQC,OAAOH,GACfI,mBAAoBN,EAAQ/B,QAC5BhB,MAAO+C,EAAQ/C,MACfT,QAASwD,EAAQ1D,OACjBiE,SAAUP,EAAQQ,SAEtB,CAwBkBC,CAAe9F,GAEzBwF,EAAe7H,EAAe,OAANqC,QAAM,IAANA,OAAM,EAANA,EAAQwF,aAAc,IAGpD,aADmBpE,EAAgB2E,EAAeV,IACtCnG,IAAIkD,GAAiB4D,OAAOR,EAC1C,CCpFO,MAAM/E,EACXwF,aAAaC,QAAQ,WAAa,uBAEvBH,EACXE,aAAaC,QAAQ,kBAAoB,gBAC9B/B,EACX8B,aAAaC,QAAQ,iBAAmB,oBAC7BzB,EACXwB,aAAaC,QAAQ,qBAAuB,kBACjCC,EACXF,aAAaC,QAAQ,aAAe,4BACzBE,EACXH,aAAaC,QAAQ,cAAgB,wBAC1B7D,EACX4D,aAAaC,QAAQ,eAAiB,kBAC3BrD,EACXoD,aAAaC,QAAQ,gBAAkB,2BAC5BG,EACXJ,aAAaC,QAAQ,kBAAoB,0BAC9BI,EACXL,aAAaC,QAAQ,gBAAkB,YAEvCD,aAAaC,QAAQ,kBAErBD,aAAaC,QAAQ,aCxBhB,IAAKK,EAAS,SAATA,GAAS,OAATA,EAAS,oBAATA,EAAS,yBAATA,EAAS,+BAATA,EAAS,sCAATA,EAAS,4CAATA,CAAS,MCId,MAAMC,GACXjG,IAKOkG,EAAAA,EAAAA,IAAQC,EAAAA,EAAAA,GAAC,CACdC,SAAU,CAACJ,EAAUK,UACrBC,QAASlE,EACTmE,gBAAiB,CAAElE,MAAO,GAAIE,KAAM,CAAC,GACrCiE,sBAAsB,GACnBxG,I,eCVA,MAAMyG,GAAiBA,KAAMC,EAAAA,EAAAA,MACvBC,GAAkDC,EAAAA,GAElDC,GAAqBC,IAChC,MAAMC,EAAWN,KACjB,OAAOO,EAAAA,EAAAA,UACL,KAAMC,EAAAA,GAAAA,IAAmBH,EAASC,IAClC,CAACD,EAASC,GACX,ECJUG,GAAgBA,CAAAC,EAE3BnH,KASI,IAVJ,aAAEN,GAAsByH,EAWxB,MAAMlC,EAAe0B,IAClBS,GAAUA,EAAMpH,QAAQqC,MAAMgF,gBAGjC,OAAOnB,EAAAA,EAAAA,IAAQC,EAAAA,EAAAA,GAAC,CACdC,SAAU,CAACJ,EAAUsB,cAAeC,OAAOC,OAAO9H,IAClD4G,QAASA,KACP,MAAM7G,EAAS8H,OAAOE,YAAY/H,GAClC,OAAOmF,GAAesB,EAAAA,EAAAA,GAAC,CAAElB,gBAAiBxF,GAAS,EAErD8G,gBAAkBmB,GAA6B,OAAZA,QAAY,IAAZA,EAAAA,EAAgB,GACnDlB,sBAAsB,GACnBxG,GACH,E,eCRJ,MAKa2H,IAAaC,EAAAA,GAAAA,IAAiB,eAAe7H,eAC3CmB,MAGF2G,IAAUD,EAAAA,GAAAA,IACrB,eACA7H,MAAON,EAAqB0H,KAAoB,IAAlB,SAAEJ,GAAUI,EAExC,YC/BsBpH,iBAClBkB,MAAM,GAADvF,OAAIwE,EAAM,KAAAxE,OAAIkK,GAAY,CACnCkC,OAAQ,OACRC,KAAMxI,EAAe,GAAI,CACvBiC,UAAW/B,EAAOuI,SAClBC,cAAexI,EAAOyI,WAExBnH,KAAM,UACNC,YAAa,UACbmH,QAAS,CACPC,OAAQ,kDACR,eAAgB,qCAElBC,SAAU,UACV,EDgBMC,CAAW7I,GACVyB,GAAc,IAIZqH,IAAWX,EAAAA,GAAAA,IAAiB,gBAAgB7H,cClB9BA,WACzB,MAAME,EAAO,GAAAvE,OAAMwE,EAAM,KAAAxE,OAAImK,SACvB5E,MAAMhB,EAAS,CACnBc,KAAM,UACNC,YAAa,WACb,EDcWwH,KAGTC,GAAcC,IAAoC,IAAnC,MAAEC,GAAkBD,EACvC,OAAKC,GACgB,YAAjBA,EAAMC,MAEC,EAiBPnD,IAAQoD,EAAAA,GAAAA,IAAY,CACxB3G,KAAM,QACN4G,aA5C+B,CAC/BF,OAAQ,OACRG,QAAQ,GA2CRC,SAAU,CAAC,EACXC,cAAgBC,IACdA,EACGC,QAAQtB,GAAQuB,SAAUhC,IACzBA,EAAMwB,OAAS,iBACRxB,EAAM1G,KAAK,IAEnByI,QACCtB,GAAQwB,WACR,CAACjC,EAAKkC,KAA0C,IAAxC,QAAEC,GAAgCD,EACxClC,EAAMwB,OAAS,UACfxB,EAAMhG,OAASmI,EAAQnI,OACvBgG,EAAM7F,SAAWgI,EAAQhI,SACzB6F,EAAM3F,SAAW8H,EAAQ9H,SACzB2F,EAAM2B,QAAS,SACR3B,EAAM1G,KAAK,IAGrByI,QAAQtB,GAAQ2B,UAAU,CAACpC,EAAKqC,KAAiB,IAAf,MAAE/I,GAAO+I,EAC1CrC,EAAMwB,OAAS,QACfxB,EAAM1G,MAAa,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,OAAO,IAG7BwI,QAAQZ,GAASa,SAAUhC,IAC1BA,EAAMwB,OAAS,iBACRxB,EAAM1G,KAAK,IAEnByI,QAAQZ,GAASc,WAAYjC,IAC5BA,EAAMwB,OAAS,UACfxB,EAAM2B,QAAS,SAER3B,EAAMhG,cACNgG,EAAM7F,gBACN6F,EAAM3F,gBACN2F,EAAM1G,KAAK,IAEnByI,QAAQZ,GAASiB,UAAU,CAACpC,EAAKsC,KAAiB,IAAf,MAAEhJ,GAAOgJ,EAC3CtC,EAAMwB,OAAS,QACfxB,EAAM1G,MAAa,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,OAAO,GAC5B,KAIOmG,QAAS6C,GAAcC,QAASjB,IAAUlD,GEzE5CoE,IAAejC,EAAAA,GAAAA,IAC1B,iBACA7H,UACE,IAAI+J,EAAgC,CAClCC,aAActK,EAAO3E,KACrBkP,WAAYvK,EAAOwK,QACnBC,eAAgB/E,OAAO1F,EAAOsD,SAC9BoH,aAAc1K,EAAOsC,MAAMqI,cAC3BC,OAAQ,MACRC,IAAK/L,KAAKgM,MAAsB,KAAhBhM,KAAKiM,UACrB9H,OAAQjD,EAAOiE,SAAW,EAAI,GAGhC,GAAIjE,EAAOgL,YACT,IAAK,IAAIC,EAAI,EAAGA,EAAIjL,EAAOgL,YAAYjN,OAAQkN,IAC7CZ,EAAY,UAADpO,OAAWgP,EAAI,IAAOjL,EAAOgL,YAAYC,QCjC/B3K,iBACrBkB,MAAM,GAADvF,OAAIwE,EAAM,KAAAxE,OAAIqK,GAAe,CACtC+B,OAAQ,OACRC,KAAMxI,EAAe,GAAIE,GACzBsB,KAAM,UACNC,YAAa,UACbmH,QAAS,CACP,eAAgB,sCAElB,ED2BMwC,CAAcb,EAAY,IAqB9Bc,GAASxD,IACbA,EAAMwB,OAAS,OACfxB,EAAMtM,KAAO,GACbsM,EAAM6C,QAAU,GAChB7C,EAAMrF,MAAQ,GACdqF,EAAM1D,UAAW,CAAK,EAGlB+B,IAAQoD,EAAAA,GAAAA,IAAY,CACxB3G,KAAM,WACN4G,aApEkC,CAClCF,OAAQ,OACR7F,QAAS,KACTjI,KAAM,GACNmP,QAAS,GACTlI,MAAO,KACP2B,UAAU,GA+DVsF,SAAU,CACR4B,SACAC,cAAeA,CAACzD,EAAKsB,KAA0C,IAAxC,QAAEa,GAAgCb,EACvDtB,EAAM6C,QAAUV,CAAO,EAEzBuB,WAAYA,CAAC1D,EAAKkC,KAA0C,IAAxC,QAAEC,GAAgCD,EACpDlC,EAAMtM,KAAOyO,CAAO,EAEtBwB,cAAeA,CAAC3D,EAAKqC,KAAgD,IAA9C,QAAEF,GAAsCE,EAC7DrC,EAAMrE,QAAUwG,EAChBnC,EAAMrF,MAAe,OAAPwH,QAAO,IAAPA,OAAO,EAAPA,EAASxH,MAAMqI,aAAa,EAE5CY,WAAYA,CAAC5D,EAAKsC,KAA2C,IAAzC,QAAEH,GAAiCG,EACrDtC,EAAM1D,SAAW6F,CAAO,EAE1B0B,SAAUA,CAAC7D,EAAK8D,KAA0C,IAAxC,QAAE3B,GAAgC2B,EAClD9D,EAAM1G,MAAQ6I,CAAO,GAGzBN,cAAgBC,IACdA,EACGC,QAAQU,GAAaT,SAAUhC,IAC9BA,EAAMwB,OAAS,iBACRxB,EAAM1G,KAAK,IAEnByI,QAAQU,GAAaR,WAAYjC,IAChCwD,GAAMxD,UACCA,EAAM1G,KAAK,IAEnByI,QAAQU,GAAaL,UAAU,CAACpC,EAAK+D,KAAiB,IAAf,MAAEzK,GAAOyK,EAC/C/D,EAAMwB,OAAS,QACfxB,EAAM1G,MAAa,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,OAAO,GAC5B,KAIOmG,QAASsE,GAAiBxB,QAASyB,IAAa5F,GExGlD6F,GAAoC,CAC/CC,WAAY,CACV,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFlJ,MAAO,CACLmJ,MAAO,YACPnE,cAAe,KACfoE,sBAAuB,QACvBC,8BAA+B,KAC/BC,iBAAkB,OAClBC,yBAA0B,KAE1BC,aAAc,OACdC,aAAc,MACdC,sBAAuB,OAEvBC,sBAAuB,OACvBC,oBAAqB,OACrBC,eAAgB,SAIdzG,IAAQoD,EAAAA,GAAAA,IAAY,CACxB3G,KAAM,UACN4G,aAAcwC,GACdtC,SAAU,CACRmD,KAAMA,CAAC/E,EAAKD,KAAiD,IAA/C,QAAEoC,GAAuCpC,EACrD,IAAK,IAAI5L,KAAOgO,EAAS,CACvB,MAAMnO,EAAQ+J,OAAOoE,EAAQhO,IAC7B6L,EAAM/E,MAAM9G,GAAOH,CACrB,OAKS0L,QAASsF,GAAgBxC,QAAS5J,IAAYyF,GCfvDA,IAAQoD,EAAAA,GAAAA,IAAY,CACxB3G,KAAM,WACN4G,aA5BkC,CAClCzG,MAAO,IA4BP2G,SAAU,CACRqD,KA1BSA,CACXjF,EAAoBD,KAEhB,IADJ,QAAEoC,GAAiEpC,EAEnE,MAAMmF,EAAO/L,KAAKgM,UAAUhD,EAAQiD,MAC9BC,EAAQrF,EAAM/E,MAAMqK,WAAWlK,GAASA,EAAK8J,OAASA,IAC5D,IAAInP,EAAS,EACTiK,EAAM/E,MAAM7E,SACdL,EAASiK,EAAM/E,MAAM+E,EAAM/E,MAAM7E,OAAS,GAAGL,OAAS,IACzC,IAAXsP,EACFrF,EAAM/E,MAAMjE,KAAK,CACfoO,KAAMjD,EAAQiD,KACdG,OAAQpD,EAAQoD,OAChBL,OACAnP,WAIFiK,EAAM/E,MAAM+E,EAAM/E,MAAM7E,OAAS,GAAGL,OAASA,CAC/C,EAQEyP,MAAOA,CAACxF,EAAKsB,KAAgD,IAA9C,QAAEa,GAAsCb,EACrD,MAAM4D,EAAO/L,KAAKgM,UAAUhD,GAC5BnC,EAAM/E,MAAQ+E,EAAM/E,MAAMwK,QAAQC,GAAQA,EAAIR,OAASA,GAAK,EAE9DS,SAAW3F,IACTA,EAAM/E,MAAQ,EAAE,MAKPyE,QAASkG,GAAiBpD,QAASqD,IAAaxH,GChBlDyH,GAAanN,UAQnB,IACDoN,GAT2B,QAC/BC,EAAO,KACPrI,EAAI,MACJsI,GAKDlG,EAEC,IACEgG,QAAa1K,EAAe2K,EAC9B,CAAE,MAAOlS,GACP4D,QAAQ4B,MAAMxF,GACdiS,EAAO,CACLjR,GAAIkR,EACJjR,MAAO,GACPmC,OAAQ,EAEZ,CAEA,IAAKgP,EAAOC,GAlCoBC,EAAClP,EAAeyG,KAChD,GAAa,WAATA,EACF,OAAe,IAAXzG,EACK,CAAC,EAAG,MAEJ,CAACC,KAAKkP,IAAI,EAAGnP,EAAQ,IAAKA,GAIrC,MAAMoP,EAAUtQ,EAAS2H,EAAM,GAAK,EACpC,MAAO,CAAW,IAAV2I,EAAyB,IAAVA,EAAgB,GAAG,EAwBtBF,CAA0BL,EAAK7O,MAAOyG,GAC5C,IAAVuI,GAAiBD,IACnBC,EAAQ,GAGV,IAAIjL,QAAkC4B,EAAmB,CACvD/H,GAAIkR,EACJ/I,KAAMiJ,EACNlJ,GAAImJ,IAGFI,EAASN,EAeb,OAbEM,EADY,IAAVL,EACOjL,EAAMuL,cAEAzJ,EAAkBiJ,EAAS,GAGzB,IAAfD,EAAK7O,OAAe+D,EAAM7E,OAAS,IACrC2P,EAAK7O,MAAQ+D,EAAMA,EAAM7E,OAAS,GAAGqG,GAG1B,WAATkB,GAAqB1C,EAAM7E,OAAS,KACtC6E,EAAQA,EAAMoD,OAAO,KAGhB,CACL0H,OACAE,MAAOM,EACP7P,KAAMuE,EACP,ECjFUwL,IAAiBjG,EAAAA,GAAAA,IAC5B,mBACA7H,UACE,IAAI+J,EAAkC,CACpCC,aAActK,EAAO3E,KACrBuP,OAAQ,MACRyD,SAAUrO,EAAO2N,QACjB9C,IAAK/L,KAAKgM,MAAsB,KAAhBhM,KAAKiM,WAGnB/K,EAAOsO,gBAAejE,EAAYiE,cAAgBtO,EAAOsO,oBClBlChO,WAG7B,MAAMtE,EAAMqK,EAAcrF,QAAQ,MAAOhB,EAAOqO,UAE1C9N,EAAuB,CAC3B8H,OAAQ,OACRC,KAAMxI,EAAe,GAAIE,GACzBsB,KAAM,UACNC,YAAa,UACbmH,QAAS,CACPC,OAAQ,kDACR,eAAgB,qCAElBC,SAAU,UAIZ,aADqBpH,MAAM,GAADvF,OAAIwE,EAAM,KAAAxE,OAAID,GAAOuE,EAClC,EDELgO,CAAgBlE,EAAY,IAOhCrE,IAAQoD,EAAAA,GAAAA,IAAY,CACxB3G,KAAM,aACN4G,aAjCoC,CACpCF,OAAQ,OACR9N,KAAM,IAgCNkO,SAAU,CACR8B,WAAYA,CAAC1D,EAAKD,KAA0C,IAAxC,QAAEoC,GAAgCpC,EACpDC,EAAMtM,KAAOyO,CAAO,GAGxBN,cAAgBC,IACdA,EACGC,QAAQ0E,GAAezE,SAAUhC,IAChCA,EAAMwB,OAAS,iBACRxB,EAAM1G,KAAK,IAEnByI,QAAQ0E,GAAexE,WAAYjC,IAClCA,EAAMtM,KAAO,UACNsM,EAAM1G,KAAK,IAEnByI,QAAQ0E,GAAerE,UAAU,CAACpC,EAAKsB,KAAiB,IAAf,MAAEhI,GAAOgI,EACjDtB,EAAMwB,OAAS,QACfxB,EAAM1G,MAAa,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,OAAO,GAC5B,KAIOmG,QAASmH,GAAmBrE,QAASsE,IAAezI,GElDtD0I,GAAmBA,CAAAhH,EAE9BnH,KASI,IAVJ,QAAEoN,GAAiBjG,EAWnB,MAAOzH,IAAgB0O,EAAAA,EAAAA,MAEjBrJ,EAAOrF,EAAa2O,IAAI,QAExBC,GAAcC,EAAAA,EAAAA,MAEpB,OAAOrI,EAAAA,EAAAA,IAAQC,EAAAA,EAAAA,GAAC,CACdC,SAAU,CAACJ,EAAUwI,cAAepB,EAASrI,GAC7CuB,QAASA,KACP,MAAMmI,EAAYC,GAAmBJ,EAAalB,GAClD,OAAOF,GAAW,CAAEE,UAASrI,OAAMsI,MAAgB,OAAToB,QAAS,IAATA,OAAS,EAATA,EAAWpB,OAAQ,EAE/D9G,gBAAkBmB,GAAiBA,EACnClB,sBAAsB,GACnBxG,GACH,EAGS2O,GAAoBA,CAAAjG,EAE/B1I,KASI,IAVJ,QAAEoN,GAAiB1E,EAWnB,MAAOhJ,IAAgB0O,EAAAA,EAAAA,MAEjBrJ,EAAOrF,EAAa2O,IAAI,QAExBC,GAAcC,EAAAA,EAAAA,MAEpB,OAAOrI,EAAAA,EAAAA,IAAQC,EAAAA,EAAAA,GAAC,CACdC,SAAU,CAACJ,EAAU4I,oBAAqBxB,GAC1C9G,QAASvG,UACP,MAAM0O,EAAYC,GAAmBJ,EAAalB,GAClD,IAAKqB,EAAW,OAAO,EAEvB,MAAMI,QAAa5K,EAAmB,CACpC/H,GAAIkR,EACJ/I,KAAMoK,EAAUtB,KAAK7O,MAAQ,EAC7B8F,GAAI,OAGN,OAAoB,IAAhByK,EAAKrR,QAET8Q,EAAYQ,aACV,CAAC9I,EAAUwI,cAAepB,EAASrI,IAClCgK,IACQ,CACL5B,MAAIhH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACC4I,EAAS5B,MAAI,IAChB7O,MAAOuQ,EAAKG,IAAI,GAAGnL,IAErBwJ,MAAO0B,EAAS1B,MAChBvP,KAAM,IAAIiR,EAASjR,QAAS+Q,QAXJ,CAgBnB,EAEbI,aAAa,EACbC,gBAAgB,GACblP,GACH,EAGS0O,GAAqBA,CAChCJ,EACAlB,KAEA,MAAM+B,EAAeb,EAAYc,eAAe,CAC9ChJ,SAAU,CAACJ,EAAUwI,cAAepB,KAGtC,GAA4B,IAAxB+B,EAAa3R,OAEjB,OAAO2R,EAAa,GAAG,EAAE,EC3C3B,GAxDyBE,KACvB,MAAMC,GAAWC,EAAAA,EAAAA,OACV7P,IAAgB0O,EAAAA,EAAAA,MAEjBrM,EAAQrC,EAAa2O,IAAI,UACzB,QAAEmB,GAAYtI,GAAc,CAAExH,gBAAgB,CAAE+P,SAAS,IAsB/D,OACE5T,EAAAA,EAAAA,MAAC6T,EAAAA,EAAM,CAACC,GAAG,OAAOvT,QAAQ,OAAOwT,OAAO,KAAKC,MAAM,MAAK7T,SAAA,EACtDM,EAAAA,EAAAA,KAACoT,EAAAA,EAAOI,MAAK,CAACC,GAAIC,EAAAA,GAAM5L,GAAE,IAAOnH,QAtBpB/B,IACW,MAAtBoU,EAASW,UAA0C,IAAtBvQ,EAAa3D,OAC5Cb,EAAEgV,iBACFV,IACF,EAkBoDxT,SAAC,iBAGnDM,EAAAA,EAAAA,KAACoT,EAAAA,EAAOS,OAAM,CAAC,gBAAc,sBAC7BtU,EAAAA,EAAAA,MAAC6T,EAAAA,EAAOU,SAAQ,CAAApU,SAAA,EACdH,EAAAA,EAAAA,MAACwU,EAAAA,EAAG,CAACxT,UAAU,UAASb,SAAA,CApBR,CACpB,CAAEkG,KAAM,KAAMoO,KAAK,uBACnB,CAAEpO,KAAM,KAAMoO,KAAK,uBACnB,CAAEpO,KAAM,MAAOoO,KAAK,wBACpB,CAAEpO,KAAM,OAAQoO,KAAK,yBACrB,CAAEpO,KAAM,yDAAaoO,KAAM,iBAgBN3R,KAAI,CAAC6D,EAAMkI,KACxBpO,EAAAA,EAAAA,KAAC+T,EAAAA,EAAI7T,KAAI,CAAAR,UACPM,EAAAA,EAAAA,KAAC+T,EAAAA,EAAIL,KAAI,CAAC5L,GAAI5B,EAAK8N,KAAMC,OAAQ/N,EAAKN,OAASH,EAAOgO,GAAIC,EAAAA,GAAKhU,SAC5DwG,EAAKN,QAFK,IAAMwI,KAdT,CACpB,CAAExI,KAAM,OAAQoO,KAAM,yBACtB,CAAEpO,KAAM,sEAAgBoO,KAAM,wBAkBT3R,KAAI,CAAC6D,EAAMkI,KACxBpO,EAAAA,EAAAA,KAAC+T,EAAAA,EAAI7T,KAAI,CAAAR,UACPM,EAAAA,EAAAA,KAAC+T,EAAAA,EAAIL,KAAI,CAACQ,KAAMhO,EAAK8N,KAAKtU,SAAEwG,EAAKN,QADpB,IAAMwI,SAKzBpO,EAAAA,EAAAA,KAACmU,EAAAA,EAAI,CAAC5T,UAAU,SAAQb,UACtBM,EAAAA,EAAAA,KAAC5B,EAAM,WAGJ,E,0BC/Cb,MAAMgW,GAAgB,CACpBnV,IAAK,UACLoV,Q,QACF,GAEa/G,IAAUgH,EAAAA,GAAAA,IAAgB,CACrC5Q,SAAS6Q,EAAAA,GAAAA,IAAeH,GAAe1Q,IACvC2I,MAAK,GACLsE,SAAQ,GACR5B,SAAQ,GACR6C,WACF,KAEa4C,IAAQC,EAAAA,GAAAA,IAAe,CAClCnH,WACAoH,WAAaC,GACXA,EAAqB,CACnBC,kBAAmB,CACjBC,eAAgB,CAACC,GAAAA,GAAOC,GAAAA,GAAWC,GAAAA,GAAOC,GAAAA,GAASC,GAAAA,EAAOC,GAAAA,OAGhEC,UAAUC,IAGCC,IAAYC,EAAAA,GAAAA,IAAaf,IC3BhCgB,GAAeC,EAAAA,YACnB,CAAA5K,EAAwB6K,KAAG,IAA1B,SAAEhW,EAAQ,QAAEiB,GAASkK,EAAA,OACpB7K,EAAAA,EAAAA,KAAA,QACE0V,IAAKA,EACL9U,MAAO,CAAE+U,OAAQ,WACjBpV,UAAU,OACVI,QAAU/B,IACRA,EAAEgV,iBACFjT,EAAQ/B,EAAE,EACVc,SAEDA,GACI,IAmDX,GA/CqC0M,IAA2B,IAA1B,OAAEtH,EAAM,SAAEG,GAAUmH,EACxD,MAAM5B,EAAUD,GAAkB8C,IAgBlC,OACErN,EAAAA,EAAAA,KAAA,OAAKY,MAAO,CAAEgV,MAAO,QAASlW,UAC5BH,EAAAA,EAAAA,MAACU,EAAAA,EAAQ,CAACL,GAAG,uBAAuBG,SAXnB8V,CACnB1V,EACA2V,KAEiB,SAAb3V,GATY2V,KAChBA,EAAMlC,iBACNpJ,EAAQyB,UAAU,EAQhB8J,CAASD,EACX,EAK6DpW,SAAA,EACzDM,EAAAA,EAAAA,KAAA,QAAAN,SAAM,4CACNH,EAAAA,EAAAA,MAACU,EAAAA,EAAS4T,OAAM,CAACJ,GAAI+B,GAAa9V,SAAA,CAAEuF,EAAS,cAC7C1F,EAAAA,EAAAA,MAACU,EAAAA,EAAS+V,KAAI,CAAAtW,SAAA,EACZM,EAAAA,EAAAA,KAACC,EAAAA,EAASC,KAAI,CACZC,SAAS,UACT+T,KAAI,GAAA9U,OAAKwE,EAAM,kBAAAxE,OAAiB0F,GAASpF,SAC1C,gDAGDM,EAAAA,EAAAA,KAACC,EAAAA,EAASC,KAAI,CACZC,SAAS,WACT+T,KAAI,uBAAA9U,OAAyB0F,GAASpF,SACvC,iDAGDM,EAAAA,EAAAA,KAACC,EAAAA,EAASgW,QAAO,KACjBjW,EAAAA,EAAAA,KAACC,EAAAA,EAASC,KAAI,CAACC,SAAS,UAAU+T,KAAI,gBAAkBxU,SAAC,4DAGzDM,EAAAA,EAAAA,KAACC,EAAAA,EAASgW,QAAO,KACjBjW,EAAAA,EAAAA,KAACC,EAAAA,EAASC,KAAI,CAACC,SAAS,OAAMT,SAAC,0CAG/B,E,eCjEV,MAuDA,GAvD4BwW,KAC1B,MAAMzL,EAAWN,MAEVuB,EAAUyK,IAAe5X,EAAAA,EAAAA,UAAS,KAClCqN,EAAUwK,IAAe7X,EAAAA,EAAAA,UAAS,IAOzC,OACEgB,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEH,EAAAA,EAAAA,MAAA,QAAMqG,KAAK,YAAYrF,UAAU,WAAWK,MAAO,CAAEyV,SAAU,QAAS3W,SAAA,EACtEM,EAAAA,EAAAA,KAACI,EAAAA,EAAW,CACVR,GAAG,WACHS,KAAK,OACLC,YAAY,qBACZxB,MAAO4M,EACPjL,SAAW7B,GAAMuX,EAAYvX,EAAEC,OAAOC,OACtCW,KAAK,KACLc,UAAU,QACVK,MAAO,CAAE0V,YAAa,MAAOC,KAAM,gBAErCvW,EAAAA,EAAAA,KAACI,EAAAA,EAAW,CACVR,GAAG,WACHS,KAAK,WACLC,YAAY,uCACZkW,UAAW,GACXC,aAAa,MACb3X,MAAO8M,EACPnL,SAAW7B,GAAMwX,EAAYxX,EAAEC,OAAOC,OACtCW,KAAK,KACLc,UAAU,QACVK,MAAO,CAAE0V,YAAa,MAAOC,KAAM,gBAErCvW,EAAAA,EAAAA,KAAC0W,GAAAA,EAAM,CAACjX,KAAK,KAAKK,QAAQ,QAAQS,UAAU,SAASI,QA9B1CmV,IACfA,EAAMlC,iBACNnJ,EbyCFkM,EAACjL,EAAkBE,IACnB,CAACnB,EAAemM,KACd,GAAIzK,GAAYyK,KACd,OAAOnM,EAASc,GAAQ,CAAEG,WAAUE,aACtC,Ea7CS+K,CAAgBjL,EAAUE,GAAU,EA4B6BlM,SAAC,uCAIzEH,EAAAA,EAAAA,MAAA,KAAGqB,MAAO,CAAEiW,OAAQ,OAAQnX,SAAA,CAAC,4GACN,KACrBM,EAAAA,EAAAA,KAAA,KAAGkU,KAAK,0BAAyBxU,SAAC,uBAEpCM,EAAAA,EAAAA,KAAA,KAAG8W,IAAI,WAAW5C,KAAK,+CAA8CxU,SAAC,wEAGtEM,EAAAA,EAAAA,KAAA,QAAMY,MAAO,CAAEiW,OAAQ,OAAQnX,SAAC,OAChCM,EAAAA,EAAAA,KAAA,KAAG8W,IAAI,WAAW5C,KAAK,+CAA8CxU,SAAC,iFAGlE,EC3CV,GARoCmL,IAAe,IAAd,KAAErM,GAAMqM,EAC3C,OAAKrM,GAGHwB,EAAAA,EAAAA,KAAA,OAAKO,UAAU,QAAQwW,wBAAyB,CAAEC,OAAQxY,KAH1C,IAGwD,ECqB5E,GAvBwByY,KACtB,MAAMxM,EAAWN,KACXsC,EAASpC,IAAgBS,GAAUA,EAAMuB,MAAMI,SAC/C3H,EAASuF,IAAgBS,GAAUA,EAAMuB,MAAMvH,SAC/CG,EAAWoF,IAAgBS,GAAUA,EAAMuB,MAAMpH,WACjDb,EAAQiG,IAAgBS,GAAUA,EAAMuB,MAAMjI,QAMpD,OAJA8S,EAAAA,EAAAA,YAAU,KACRzM,Gf8CyC,CAACA,EAAemM,KAC3D,GAAIzK,GAAYyK,KACd,OAAOnM,EAASY,KAClB,GejDgC,GAC7B,CAACZ,KAGFlL,EAAAA,EAAAA,MAAA4X,EAAAA,SAAA,CAAAzX,SAAA,CACG+M,GACCzM,EAAAA,EAAAA,KAACoX,GAAU,CAACtS,OAAQA,EAAQG,SAAUA,KAEtCjF,EAAAA,EAAAA,KAACkW,GAAS,IAEX9R,IAASpE,EAAAA,EAAAA,KAACqX,GAAS,CAAC7Y,KAAM4F,MAC1B,ECiCP,GA1CmCyG,IAO5B,IAP6B,GAClCjL,EAAE,aACFoB,EAAY,SACZsW,EAAQ,MACR1W,EAAK,KACLnB,EAAI,SACJgB,GACDoK,EACC,MAAM,KAAE0H,GAAS5I,KAUjB,OACEpK,EAAAA,EAAAA,MAAC4U,EAAAA,EAAKoD,OAAM,CACV,aAAW,uCACX9W,SAXkB7B,IACpB,IAAK6B,EAAU,OAEf,MAAMiF,EAAO9G,EAAE4Y,cAAc1Y,MACvBoH,EAAOqM,EAAKxM,MAAMiC,MAAM9B,GAASA,EAAKR,OAASA,IACrDjF,EAAS7B,EAAGsH,EAAK,EAOfpH,MAAOwY,EACP1W,MAAOA,EACPL,UAAU,QACVd,KAAMA,EACNG,GAAIA,EAAGF,SAAA,EAEPM,EAAAA,EAAAA,KAAA,UAAQlB,MAAM,GAAEY,SAAEsB,IACjBiK,OAAOiF,KAAKqC,EAAKtM,MAAM5D,KAAKoD,IAC3BzF,EAAAA,EAAAA,KAAA,YAAsByX,MAAOhS,EAAM/F,SAChC6S,EAAKtM,KAAKR,GAAOpD,KAAK6D,IACrBlG,EAAAA,EAAAA,KAAA,UAAsBlB,MAAOoH,EAAKR,KAAKhG,SACpCwG,EAAKN,MADKM,EAAKtG,OAFP6F,OAQL,ECjBlB,GAjCyBiS,KACvB,MAAOtU,EAAcuU,IAAmB7F,EAAAA,EAAAA,MAcxC,OACEvS,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,WAAUb,SAAA,EACvBM,EAAAA,EAAAA,KAAA,OAAKO,UAAU,cAAab,UAC1BM,EAAAA,EAAAA,KAACiX,GAAK,OAERjX,EAAAA,EAAAA,KAAA,OAAKO,UAAU,eAAcb,UAC3BM,EAAAA,EAAAA,KAAC+J,GAAQ,CACPnK,GAAG,OACHoB,aAAa,8DACbsW,SAAUlU,EAAa2O,IAAI,WAC3BtR,SAtBgBmX,CAAChZ,EAAGE,KAC1B6Y,GAAiBE,IACf,MAAMC,EAAkB,IAAIzU,gBAAgBwU,GAM5C,OALI/Y,EACFgZ,EAAgBC,IAAI,UAAWjZ,EAAM4G,MAErCoS,EAAgBE,OAAO,WAElBF,CAAe,GACtB,EAcIrY,KAAK,WAGL,ECPV,GAvBsCoL,IAAmC,IAAlC,UAAEoN,EAAS,cAAEC,GAAerN,EACjE,OACEtL,EAAAA,EAAAA,MAAA,OACEgB,UAAU,eAAeb,SAAA,EAEzBM,EAAAA,EAAAA,KAAA,OAAKY,MAAO,CAAEuX,cAAe,QAASzY,SAAC,0CACvCM,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,OAAAN,SAAK,8BACLM,EAAAA,EAAAA,KAAA,OAAAN,SAAK,QACLM,EAAAA,EAAAA,KAAA,OAAAN,SAAK,oCACLM,EAAAA,EAAAA,KAAA,OAAAN,UACEM,EAAAA,EAAAA,KAAA,QACEY,MAAO,CAAE+U,OAAQ,WACjB9V,MAAM,wFACNc,QAASuX,EAAcxY,SAEtBuY,EAAY,qEAAgB,+DAG7B,ECLV,GAbqCpN,IAAA,IAAC,KAAE3E,GAAM2E,EAAA,OAC5C7K,EAAAA,EAAAA,KAAA,OAAKO,UAAU,cAAab,UAC1BH,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,qBAAoBb,SAAA,EACjCM,EAAAA,EAAAA,KAAA,KACE,cAAY,OACZO,UAAU,oBACVK,MAAO,CAAE0V,YAAa,SAEvBpQ,EAAKU,WAEJ,ECIR,GAboCiE,IAAA,IAAC,KAAE3E,EAAI,QAAEvF,GAASkK,EAAA,OACpD7K,EAAAA,EAAAA,KAAA,OAAKO,UAAU,YAAYI,QAASA,EAAQjB,UAC1CH,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,mBAAkBb,SAAA,EAC/BM,EAAAA,EAAAA,KAAA,KACEO,UAAU,mBACV,cAAY,OACZK,MAAO,CAAE0V,YAAa,UAExBtW,EAAAA,EAAAA,KAAA,QAAAN,SAAOwG,EAAKlE,YAEV,ECLR,GANoC6I,IAAA,IAAC,KAAE3E,GAAM2E,EAAA,OAC3C7K,EAAAA,EAAAA,KAAA,OAAKO,UAAU,aAAYb,UACzBM,EAAAA,EAAAA,KAAA,OAAKO,UAAU,oBAAmBb,SAAEwG,EAAKT,SACrC,ECeR,GAhBqCoF,IAAA,IAAC,KAAE3E,GAAM2E,EAAA,OAC5C7K,EAAAA,EAAAA,KAAA,OAAKO,UAAU,cAAab,UAC1BM,EAAAA,EAAAA,KAAC0T,EAAAA,GAAI,CACH5L,GAAE,iBAAA1I,OAAmB8G,EAAKtG,GAAE,kBAC5BgB,MAAO,CACLwX,MAAO,UACPC,QAAS,QACTC,MAAO,OACPC,UAAW,UACX7Y,UAEFM,EAAAA,EAAAA,KAAA,KAAGO,UAAU,oBAAoB,cAAY,YAE3C,ECgBR,GA5BuCsK,IAAe,IAAd,KAAE3E,GAAM2E,EAC9C,MAAOlI,EAAM6V,IAAWja,EAAAA,EAAAA,UAAS2H,EAAKW,SAiBtC,OAfAqQ,EAAAA,EAAAA,YAAU,KACR,IAAKhR,EAAKoC,OAAQ,OAEC7E,WACjB,MAAMgV,QAAY5Q,EAAkB3B,EAAKtG,GAAIsG,EAAKlE,OAClDwW,EAAQC,EAAI9V,KAAK,EAGnB+V,EAAY,GACX,CAACxS,EAAKoC,OAAQpC,EAAKtG,GAAIsG,EAAKlE,SAE/BkV,EAAAA,EAAAA,YAAU,KACRsB,EAAQtS,EAAKW,QAAQ,GACpB,CAACX,EAAKW,WAGP7G,EAAAA,EAAAA,KAAA,OAAKO,UAAU,gBAAeb,UAC5BH,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,qBAAoBb,SAAA,EACjCM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,qBAAoBb,SAAEgD,EAAcC,MACpD3C,EAAAA,EAAAA,KAAA,QAAMO,UAAU,qBAAoBb,SAAEwG,EAAKY,eAEzC,ECdV,GAd4C+D,IAA4B,IAA3B,SAAE8N,EAAQ,QAAEhY,GAASkK,EAChE,OACE7K,EAAAA,EAAAA,KAAA,OAAKO,UAAU,oBAAoBI,QAASA,EAAQjB,UAClDM,EAAAA,EAAAA,KAAA,QAAAN,SACGiZ,GACC3Y,EAAAA,EAAAA,KAAA,KAAGO,UAAU,2BAA2B,cAAY,UAEpDP,EAAAA,EAAAA,KAAA,KAAGO,UAAU,0BAA0B,cAAY,YAGnD,E,0BCNV,MA6BA,GA7BgCsK,IAAyB,IAAxB,MAAE7I,EAAK,QAAE8O,GAASjG,EAC7C+N,EAAQ,GACZ,GAAI5W,EAAQ,IAAK,CACf,IAAI6W,EAAU9W,EAAWC,GACzB,IAAK,IAAIoM,EAAI,EAAGA,GAAKyK,EAASzK,IAAK,CACjC,IACI5P,EADA0V,EAAI,iBAAA9U,OAAoB0R,EAAO,UAAA1R,OAASgP,GAElB5P,EAAtB4P,EAAI,GAAKA,EAAIyK,EAAgB,SACrBhQ,OAAOuF,GACnBwK,EAAM9W,MACJ9B,EAAAA,EAAAA,KAAC0T,EAAAA,GAAI,CAASnT,UAAU,MAAMK,MAAO,CAAEiW,OAAQ,OAAS/O,GAAIoM,EAAKxU,SAC9DlB,GADQ4P,GAIf,CACF,CAEA,GAAIpM,EAAQ,GAAI,CACd,IAAIkS,EAAI,iBAAA9U,OAAoB0R,EAAO,kBACnC8H,EAAM9W,MACJ9B,EAAAA,EAAAA,KAAC0T,EAAAA,GAAI,CAAcnT,UAAU,MAAMK,MAAO,CAAEiW,OAAQ,OAAS/O,GAAIoM,EAAKxU,SAAC,QAA7D,UAId,CAEA,OAAOM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,cAAab,SAAEkZ,GAAa,ECuCrD,GAjDwC/N,IAAe,IAAd,KAAE0H,GAAM1H,EAC/C,MAAMiO,EAAiBzO,IAAgBS,GAAUA,EAAMuB,MAAMpH,WAE7D,IAAIzG,EAlBYua,EAChBva,EACAiH,EACAyC,IAEc,SAAVzC,GAAqBjH,EAAKwa,WAAW,OAEd,QAAhB9Q,GAA0B1J,EAAKwa,WAAW,OAE1B,OAAhB9Q,GAAyB1J,EAAKwa,WAAW,MAG7Cxa,EAFE,OAASA,EAFT,QAAUA,EAFV,QAAUA,EAYRua,CAAUxG,EAAK/T,KAAM+T,EAAK9M,MAAO8M,EAAKrK,aAEjD,OACElI,EAAAA,EAAAA,KAAA,OAAKO,UAAU,aAAYb,UACzBH,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,oBAAmBb,SAAA,CAC/B6S,EAAKjK,SACJtI,EAAAA,EAAAA,KAAA,KACEO,UAAU,uBACV,cAAY,OACZK,MAAO,CAAE0V,YAAa,UAG1BtW,EAAAA,EAAAA,KAAC0T,EAAAA,GAAI,CACH5L,GAAE,iBAAA1I,OAAmBmT,EAAK3S,IAC1BW,UAAW0Y,KAAW,MAAO,MAAO,CAClCC,KAAM3G,EAAKvQ,OAAS,IACpB+G,SAAUwJ,EAAK3L,SAAWkS,EAC1BxQ,OAAQiK,EAAKjK,SAEfyO,wBAAyB,CAAEC,OAAQxY,GACnCoC,MAAO,CAAEuY,aAAc,cAExB5G,EAAKnL,WAAYpH,EAAAA,EAAAA,KAAA,QAAMO,UAAU,gBAAeb,SAAC,YAClDM,EAAAA,EAAAA,KAACoZ,GAAK,CAACpX,MAAOuQ,EAAKvQ,MAAO8O,QAASyB,EAAK3S,KACvC2S,EAAKrL,SAAUlH,EAAAA,EAAAA,KAAA,QAAMO,UAAU,MAAKb,SAAC,SACrC6S,EAAKtL,OAAQjH,EAAAA,EAAAA,KAAA,QAAMO,UAAU,MAAKb,SAAC,WACnC6S,EAAK9L,UACJlH,EAAAA,EAAAA,MAAA,QAAMgB,UAAU,gBAAeb,SAAA,EAC7BM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,MAAMK,MAAO,CAAEiW,OAAQ,WAAYnX,SAAC,OAGpDM,EAAAA,EAAAA,KAAC0T,EAAAA,GAAI,CAEHoD,IAAI,WACJvW,UAAU,MACVuH,GAAE,sBAAA1I,OAAwBmT,EAAKrK,aAAcxI,SAE5C6S,EAAK9L,SALF,YAUR,E,eCzDV,MA2DA,GA3DyCoE,IAOlC,IAPmC,QACxCiG,EAAO,QACPuI,EAAO,OACPC,EAAM,OACNC,EAAM,OACNC,EAAM,MACNlJ,GACDzF,EACC,OACEtL,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,uBAAsBb,SAAA,EACnCM,EAAAA,EAAAA,KAAA,OACEO,UAAU,kCACVI,QAAS0Y,EACTxZ,MAAM,oDAAWH,UAEjBM,EAAAA,EAAAA,KAAA,KAAGO,UAAU,0BAA0B,cAAY,YAErDP,EAAAA,EAAAA,KAAA,OACEO,UAAU,kCACVI,QAAS2Y,EACTzZ,MAAM,4EAAeH,UAErBM,EAAAA,EAAAA,KAAA,KAAGO,UAAU,mBAAmB,cAAY,YAE9CP,EAAAA,EAAAA,KAAA,OACEO,UAAU,kCACVI,QAAS4Y,EACT1Z,MAAM,sEAAcH,UAEpBM,EAAAA,EAAAA,KAAA,KAAGO,UAAU,oBAAoB,cAAY,YAE/CP,EAAAA,EAAAA,KAAA,OACEO,UAAU,kCACVI,QAAS6Y,EACT3Z,MAAM,sEAAcH,UAEpBM,EAAAA,EAAAA,KAAA,KAAGO,UAAU,2BAA2B,cAAY,YAEtDhB,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,qCAAqCI,QAAS2P,EAAM5Q,SAAA,EACjEM,EAAAA,EAAAA,KAAA,KAAGO,UAAU,oBAAoB,cAAY,UAC7CP,EAAAA,EAAAA,KAAA,KACEO,UAAU,mBACV,cAAY,OACZK,MAAO,CAAE6Y,WAAY,cAGzBzZ,EAAAA,EAAAA,KAAA,OAAKO,UAAU,oCAAmCb,UAChDM,EAAAA,EAAAA,KAAC0T,EAAAA,GAAI,CAAC5L,GAAE,iBAAA1I,OAAmB0R,EAAO,kBAAiBpR,UACjDM,EAAAA,EAAAA,KAAA,KACEO,UAAU,eACV,cAAY,OACZK,MAAO,CAAEwX,MAAO,6BAIlB,ECbV,GA1CmCvN,IAA0C,IAAzC,QAAEiG,EAAO,KAAEyB,EAAI,MAAEmH,EAAK,EAAEnS,EAAC,OAAEoS,GAAQ9O,EACrE,MAAM+O,EAAG,GAAAxa,OAAMwE,EAAM,eAAAxE,OAAcmI,EAAC,QAE9BsS,EAAUH,EAAQzX,KAAKgM,MAAO,IAAMsE,EAAKvQ,MAAS0X,GAAS,EAQjE,OACEna,EAAAA,EAAAA,MAAA,MAAIgB,UAAU,cAAab,SAAA,EACzBM,EAAAA,EAAAA,KAAA,OAAKO,UAAU,eAAcb,UAC3BM,EAAAA,EAAAA,KAAA,KACE8W,IAAI,WACJlW,MAAO,CAAEkZ,eAAgB,QACzB5F,KAAI,kBAAA9U,OAAoB0R,EAAO,SAAA1R,OAAQmI,GAAI7H,UAE3CM,EAAAA,EAAAA,KAAA,KAAAN,UACEM,EAAAA,EAAAA,KAAA,QAAMY,MAAO,CAAEwX,MAAOuB,EAAOpS,EAAI,IAAK7H,SAAA,GAAAN,OAAKmI,EAAC,MAAAnI,OAAKmT,EAAK/T,eAI5DwB,EAAAA,EAAAA,KAAA,OAAKO,UAAU,oBAAmBb,UAChCM,EAAAA,EAAAA,KAAA,KAAAN,UACEM,EAAAA,EAAAA,KAAA,QACEY,MAAO,CAAEwX,MAAOuB,EAAOpS,EAAI,IAAK7H,SAAA,GAAAN,OAC7Bya,EAAO,OAAAza,OAAMmT,EAAKvQ,MAAK,YAGhChC,EAAAA,EAAAA,KAAA,OAAKO,UAAU,aAAYb,UACzBM,EAAAA,EAAAA,KAAA,OAAKY,MAAO,CAAE0X,MAAM,GAADlZ,OAAKya,EAAO,MAAMna,UACnCM,EAAAA,EAAAA,KAAA,KAAGkU,KAAM0F,EAAIla,UACXM,EAAAA,EAAAA,KAAA,OAAK+Z,IAAKH,EAAKhZ,MA7BQ,CAC/BoZ,SAAU,QACV1B,MAAO,OACP2B,OAAQ,QA0BgCC,IAAG,8CAAA9a,OAAamI,aAInD,ECrBT,GArBoCsD,IAAiC,IAAhC,MAAE9E,EAAK,QAAE+K,EAAO,OAAE6I,GAAQ9O,EACzD6O,EAAQzX,KAAKkP,OAAOpL,EAAM1D,KAAK6D,GAASA,EAAKlE,SAEjD,OACEhC,EAAAA,EAAAA,KAAA,MAAIY,MAAO,CAAEuZ,YAAa,GAAIza,SAC3BqG,EACEwK,QAAQrK,GAASA,EAAK1H,OACtB6D,KAAI,CAACkQ,EAAMnE,KACVpO,EAAAA,EAAAA,KAACoa,GAAQ,CAEP7H,KAAMA,EACNmH,MAAOA,EACPnS,EAAG6G,EAAI,EACP0C,QAASA,EACT6I,OAAQA,GALHvL,MAQR,ECRT,IAV+BiM,EAAAA,EAAAA,OAAKxP,IAA0B,IAAzB,OAAE8O,EAAM,EAAEpS,EAAC,KAAE/I,GAAMqM,EACtD,OACE7K,EAAAA,EAAAA,KAAA,OAAKY,MAAO,CAAE0Z,UAAW,OAAQ5a,UAC/BM,EAAAA,EAAAA,KAAA,KAAAN,UACEM,EAAAA,EAAAA,KAAA,QAAMY,MAAO,CAAEwX,MAAOuB,EAAOpS,EAAI,IAAK7H,SAAA,GAAAN,OAAKmI,EAAC,MAAAnI,OAAKZ,QAE/C,I,qCCmQV,SA/QA,SAAmBA,GACjB,MAAM+b,EAAW,IAAIC,IACnB,gvDASEC,MAAM,MAGJC,EAAa,IAAIF,IAAI,oBAAoBC,MAAM,KAC/CE,EAAa,eACbC,EAAY,UAEZC,EAAY,MACZC,EAAa,OACbC,EAAc,OAKdC,EAAuB,OAE7B,IAAIC,EACAC,EACAC,EAEAC,GAAU,EACVC,EAAQ,GAEZ,SAASC,EAAaC,GACpB,MAAyB,KAAlBA,EAAOC,MAChB,CAEA,SAASC,EAAKF,EAAgBG,EAAaC,GACzC,OAAOJ,EAAOK,UAAUF,EAAM,EAAGA,EAAM,EAAIC,EAC7C,CAEA,SAASE,EAAKN,EAAgBI,GAC5B,OAAOJ,EAAOK,UAAUL,EAAOra,OAASya,EAC1C,CAEA,SAASG,EAAUC,GACjB,OAAOxB,EAASyB,IAAID,EAAMjO,cAAc0N,OAC1C,CAEA,SAASS,EAAsBC,EAAeC,GAC9B,MAAVD,GAAiBf,IAAkBgB,EACrClB,GAAoCiB,GAEhChB,IACFD,GAAoCL,EACpCM,GAAiB,GAGnBD,EAAkBA,EAAkBN,EAAawB,EAAOD,EACxDhB,GAAiB,EACjBC,EAAgBgB,EAEpB,CAEA,SAASC,EAAkBC,GAEzB,IAAIC,GAAgB,EAChBC,GAAgB,EAChBC,EAAe,EACfC,GAAe,EAIfC,EAAM,EACV,IAAKA,EAAM,EAAGA,GAAOL,EAAWnb,OAAQwb,IAAO,CAC7C,IAAIC,EAAgBN,EAAWO,OAAOF,EAAM,GAC5C,GAAItB,EAEoB,MAAlBuB,GAEFV,EACER,EAAKY,EAAYG,EAAcE,EAAMF,EAAe,GACpDzB,GAEFK,GAAU,EACVC,EAAQ,GACRoB,GAAe,GAEfpB,GAAgBsB,OAEb,GAAIL,EAEa,MAAlBK,GAEFV,EACER,EAAKY,EAAYG,EAAcE,EAAMF,EAAe,GACpDzB,GAEFuB,GAAgB,EAChBjB,EAAQ,GACRoB,GAAe,GAEfpB,GAAgBsB,OAEb,GAAsB,MAAlBA,EAEJrB,EAAaD,GAehBJ,GAAoC,KAZhCsB,GACFN,EAAsBZ,EAAQ,IAAKN,GACnCwB,GAAgB,GACPT,EAAUT,EAAMG,QACzBS,EAAsBZ,EAAQ,IAAKL,GACzB1Z,MAAMD,SAASga,EAAO,KAGhCY,EAAsBZ,EAAQ,IAAKR,GAFnCoB,EAAsBZ,EAAQ,IAAKP,GAIrCO,EAAQ,IAIVoB,GAAe,OACV,GAAI/B,EAAWsB,IAAIW,GAAgB,CAwBxC,GAtBKrB,EAAaD,KAGZkB,GACFN,EAAsBZ,EAAON,GAC7BwB,GAAgB,EAChBE,EAAiC,MAAlBE,GACNF,GAAgBX,EAAUT,IACnCY,EAAsBZ,EAAOL,GAC7ByB,EAAiC,MAAlBE,IAGVrb,MAAMD,SAASga,EAAO,KAGzBY,EAAsBZ,EAAOR,GAF7BoB,EAAsBZ,EAAOP,GAI/B2B,EAAiC,MAAlBE,GAEjBtB,EAAQ,IAGY,MAAlBsB,GAAyBxB,IAAkBL,EAAY,CAEzDmB,EAAsBU,EAAe7B,GACrC,QACF,CAAO,GACa,MAAlB6B,GACiC,MAAjClB,EAAKY,EAAYK,EAAM,EAAG,GAG1BvB,OAAgBha,OACX,GACa,MAAlBwb,GACiC,MAAjClB,EAAKY,EAAYK,EAAM,EAAG,GAO1B,YAJAT,EACEJ,EAAKQ,EAAYA,EAAWnb,OAASwb,EAAM,GA/I5B,QAoJnBT,EAAsBU,EAnJH,MAoJrB,MAAO,GAAsB,MAAlBA,GAA2C,MAAlBA,EAG9BrB,EAAaD,IACfmB,EAAeE,EACftB,GAAU,IAGVa,EAAsBZ,EAAQsB,EAAe5B,GAC7CM,EAAQ,IAEVoB,GAAe,OACV,GAAsB,MAAlBE,EAGLrB,EAAaD,IACfmB,EAAeE,EACfJ,GAAgB,IAGhBL,EAAsBZ,EAAQsB,EAAe5B,GAC7CM,EAAQ,IAEVoB,GAAe,MACV,IACa,MAAlBE,GACmB,MAAlBA,GAAyBrB,EAAaL,GACvC,CAEAgB,EACEJ,EAAKQ,EAAYA,EAAWnb,OAASwb,EAAM,GAjLxB,OAoLrBA,EAAML,EAAWnb,OACjB,KACF,CAA6B,MAAlByb,GACTtB,GAAgBsB,EAChBJ,GAAgB,GAGhBlB,GAAgBsB,CAClB,CACF,CAEIvB,GAMOkB,EAJTL,EACER,EAAKY,EAAYG,EAAcE,EAAMF,EAAe,GACpDzB,GAQQO,EAAaD,KAEnBS,EAAUT,GACZY,EAAsBZ,EAAOL,GACnB1Z,MAAMD,SAASga,EAAO,KAGhCY,EAAsBZ,EAAOR,GAF7BoB,EAAsBZ,EAAOP,GAKnC,CAEAM,GAAU,EACVC,EAAQ,GACRH,GAAiB,EACjBC,OAAgBha,EAChB8Z,EAAkB,GAElB,IAAI1U,EAAS,GAEb,IAAK,IAAI8V,KAAc7d,EAAKic,MAAM,MAC5Ba,EAAae,GACf9V,EAAOzE,KAAK,KAIdmZ,EAAkB,GAClBmB,EAAkBC,GACdnB,IAAmBE,GACrBH,GAAmB,UACnBC,GAAiB,EACjBC,EAAgB,GAChBE,EAAQ,IACED,IACVD,EAAgB,GAChBE,EAAQ,IAGV9U,EAAOzE,KAAKmZ,IAGd,OAAO1U,EAAOsW,KAAK,KACrB,EC7LA,GA5CgDhS,IAAmB,IAAlB,SAAEnL,GAAUmL,EAC3D,MAAOiS,EAAQC,IAAaxe,EAAAA,EAAAA,WAAS,IAE9BC,EAAMwe,IAActS,EAAAA,EAAAA,UAAQ,KACjC,IAAKhL,EAAU,MAAO,CAAC,GAAI,GAE3B,IAAIud,EAAQ7a,EAAe1C,GAAUmd,KAAK,IAG1C,OAFAI,EAvBiBze,KAEnB,IAAI0e,EAAU1e,EACX2F,QAAQ,UAAW,MACnBA,QAAQ,UAAW,MACnBA,QAAQ,UAAW,MACnBA,QAAQ,UAAW,MACnBA,QAAQ,QAAS,MACjBA,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,OAGjB,OADA+Y,EA7BoBnc,KACpB,IAAIoc,EAAQ,EACRC,EAAMrc,EAAIG,OAGd,KAAOic,EAAQC,IAAuB,OAAfrc,EAAIoc,IAAkC,OAAfpc,EAAIoc,KAChDA,IAIF,KAAOC,EAAMD,IAA2B,OAAjBpc,EAAIqc,EAAM,IAAgC,OAAjBrc,EAAIqc,EAAM,KACxDA,IAGF,OAAOrc,EAAI6a,UAAUuB,EAAOC,EAAI,EAetBC,CAAaH,GAChBI,GAAUJ,EAAQ,EAUfK,CAAYN,GAEb,CAACA,EAAOA,EAAMxC,MAAM,MAAMvZ,OAAO,GACvC,CAACxB,IAMJ,IAAI8d,EAAgC,CAAC,EAUrC,OARIV,GAAUE,EAAa,GACzBQ,EAASC,SAAW,SACpBD,EAASvD,OAAS,UAElBuD,EAASC,SAAW,OACpBD,EAASvD,OAAS,SAIlB1a,EAAAA,EAAAA,MAAA,OAAKqB,MAAO,CAAE0Z,UAAW,OAAQ5a,SAAA,EAC/BM,EAAAA,EAAAA,KAAA,OACEO,UAAU,WACVK,MAAO4c,EACPzG,wBAAyB,CAAEC,OAAQxY,KAEpCwe,EAAa,IACZhd,EAAAA,EAAAA,KAAA,OAAKO,UAAU,oBAAmBb,UAChCM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,qBAAqBI,QAvBzB+c,KAClBX,GAAWY,IAAUA,GAAK,EAsBsCje,SACvDod,EAAM,qDAAA1d,OAAgB4d,EAAU,mCAAW,6CAI9C,EC6CV,GA7GqCnS,IAA2C,IAA1C,QAAEiG,EAAO,OAAE1P,EAAM,SAAE1B,EAAQ,MAAEkB,GAAOiK,EACxE,MAAM+S,GAAWC,EAAAA,EAAAA,QAAO,MAClBrT,EAAUD,GAAkBmG,KAE3BtN,IAAgB0O,EAAAA,EAAAA,MACjBgM,EAAiBhd,EAASsC,EAAa2O,IAAI,OAAQ,GAEnDvC,EAAenF,IAClBS,IAAWA,EAAMpH,QAAQqC,MAAMyJ,eAGlC,IAAIuO,EAAc,GAEbA,EADAre,EACc0C,EAAe1C,GAAUmd,KAAK,IADpBhU,OAAOzH,GAGpC,MAAO5C,EAAMC,IAAWF,EAAAA,EAAAA,UAASwf,IAEjC7G,EAAAA,EAAAA,YAAU,KACR,IAAI8G,GAAY,EAEhB,IAAKD,EAAY/E,WAAW,QAE1B,YADAva,EAAQsf,GAWV,MAPYta,WACV,MAAM,MAAE5D,SAAgBsG,EAAe2K,GACnCkN,GAAWvf,EAAQoB,EAAM,EAG/Boe,GAEO,KACLD,GAAY,CAAK,CAClB,GACA,CAACD,EAAajN,IAEjB,MAAMoN,EAAetf,IACnBA,EAAEuf,UACFP,EAASQ,QAAUC,YAAW,IAAMC,EAAY1f,IAAI4Q,EAAa,EAG7D+O,EAAaA,KACbX,EAASQ,SAASI,aAAaZ,EAASQ,QAAQ,EAGhDzd,EAAW/B,IACfA,EAAE6f,kBACEb,EAASQ,SAASI,aAAaZ,EAASQ,SAC5CE,EAAY1f,EAAE,EAGV0f,EAAe1f,IACnB,MAAMyR,EAAS,CACbhK,EAAGzH,EAAE8f,MACLC,EAAG/f,EAAEggB,MAAQ,IAGT1O,EAAqB,CACzBY,SAAUA,EACV1P,QAASA,GAGXoJ,EAAQuF,KAAK,CAAEG,OAAMG,UAAS,EAGhC,GAAIS,IAAYgN,GAAmBxc,OAAO9C,GAarC,CACH,MAAMiK,EAAO1G,EAAWX,GAExB,IAAIyd,EAAY,GAGhB,OAFIpW,EAAO,IAAGoW,EAAS,SAAAzf,OAAYqJ,KAGjClJ,EAAAA,EAAAA,MAAA,QAAAG,SAAA,EACEM,EAAAA,EAAAA,KAAA,KACEkU,KAAI,kBAAA9U,OAAoB0R,GAAO1R,OAAGyf,EAAS,KAAAzf,OAAIgC,GAC/CR,OAAKiJ,EAAAA,EAAAA,GAAA,GAAOjJ,GAAQlB,SAEnBlB,IACE,IAAI,KAETwB,EAAAA,EAAAA,KAAA,QACEke,YAAaA,EACbK,WAAYA,EACZ5d,QAASA,EACTJ,UAAU,OACVue,KAAK,SAAQpf,SAEZ0B,IACI,MAIb,CAvCE,OACEpB,EAAAA,EAAAA,KAAA,QACEke,YAAaA,EACbK,WAAYA,EACZ5d,QAASA,EACTJ,UAAU,OACVK,OAAKiJ,EAAAA,EAAAA,GAAA,GAAOjJ,GACZke,KAAK,SAAQpf,SAEZlB,GA8BP,E,qCCpHF,MAQA,GARqCqM,IAAyB,IAAxB,KAAEqJ,EAAI,SAAExU,GAAUmL,EACtD,OACE7K,EAAAA,EAAAA,KAAA,KAAGkU,KAAMA,EAAM3T,UAAU,kBAAiBb,SACvCA,GACC,ECwFR,GAjCsCmL,IAAe,IAAd,KAAEqJ,GAAMrJ,GACxCkU,EAAUC,IAAezgB,EAAAA,EAAAA,UAAS2V,IAClCrU,EAAOof,IAAY1gB,EAAAA,EAAAA,UAAS,KAEjC2Y,EAAAA,EAAAA,YAAU,KACR,MAAMgI,EAAkB,IAAIC,gBAqB5B,MAnBY1b,WACV,MAAM2b,EAjEQlL,KAClB,IAAImL,EAAWnL,GACc,IAAzBA,EAAKoL,OAAO,UAAgBD,EAAW,UAAYA,GAEvD,IACE,IAAIlgB,EAAM,IAAIogB,IAAIF,EACpB,CAAE,MAAOzgB,GACP,OAAO,IACT,CAEA,OAAwC,IAApCO,EAAIqgB,SAASF,OAAO,WACfngB,EAAIiE,aAAa2O,IAAI,MACmB,IAAtC5S,EAAIqgB,SAASF,OAAO,aACtBngB,EAAIwU,SAASiI,UAAU,GAGzB,IAAI,EAiDS6D,CAAWvL,GAC3B,GAAKkL,EAEL,IACE,MAAMjc,OA5CSM,OACrB2b,EACAM,KAEA,MAAMC,EACJvW,aAAaC,QAAQ,kBACrB,0CACF,IAAIuW,EAAM,oDAAAxgB,OAAuDugB,EAAM,kDAAAvgB,OAAiDggB,GACxH,MAAMvb,QAAiBc,MAAMib,EAAQ,CAAEF,WACjC3b,QAAaF,EAASE,OAE5B,GAA0B,IAAtBA,EAAKgC,MAAM7E,OACb,MAAO,CACL6d,SAAU,GACVlf,MAAO,GACPggB,UAAU,GAGd,MAAMhgB,EAAQkE,EAAKgC,MAAM,GAAG+Z,QAAQjgB,MAEpC,IAAIkf,EAAWlf,EAKf,OAHIA,EAAMqB,OAASsV,KACjBuI,EAAWA,EAASnD,UAAU,EAFhB,IAEgC,OAEzC,CACLmD,WACAlf,QACAggB,UAAU,EACX,EAe0BE,CAAeX,EAASF,EAAgBQ,QAEzDvc,EAAO0c,SAAUb,EAAY9K,EAAO,8FAEtC8K,EAAY7b,EAAO4b,UACnBE,EAAS9b,EAAOtD,OAEpB,CAAE,MAAOjB,GACP4D,QAAQ4B,MAAM,UAAWgb,EAASxgB,EAAEyF,QACtC,GAGF4Z,GAEO,IAAMiB,EAAgBc,OAAO,GACnC,CAAC9L,IAGJ,OAAOlU,EAAAA,EAAAA,KAAA,KAAGkU,KAAMA,EAAMrU,MAAOA,EAAMH,SAAA,GAAAN,OADpB,UAC+B,MAAAA,OAAK2f,IAAe,E,oCC+DpE,GAjGqClU,IAK9B,IAL+B,KACpCqJ,EAAI,SACJxU,EAAQ,WACRugB,GAEDpV,EADItI,GAAK2d,EAAAA,GAAAA,GAAArV,EAAAsV,IAER,MAAMzQ,EAAwBrF,IAC3BS,GAAwD,SAA9CA,EAAMpH,QAAQqC,MAAM2J,wBAE3BC,EAAsBtF,IACzBS,GAAsD,SAA5CA,EAAMpH,QAAQqC,MAAM4J,sBAE3BC,EAAiBvF,IACpBS,GAAiD,SAAvCA,EAAMpH,QAAQqC,MAAM6J,iBAGjC,IACE,IAAIzQ,EAAM,IAAIogB,KAAJ,CAAQrL,GAAM,EAC1B,CAAE,MAAOtV,GAEP,OADA4D,QAAQ4B,MAAOxF,EAAYyF,QAAS6P,IAC7BlU,EAAAA,EAAAA,KAAA,KAAGkU,KAAMA,EAAKxU,SAAEwU,GACzB,CAEA,IAAIkM,EAAUlM,EAOd,GANIkM,EAAQpH,WAAW,OACrB7Z,EAAI4Y,IAAI,WAAY,SACpB5Y,EAAI4Y,IAAI,WAAY,kBACpBqI,EAAUjhB,EAAI+U,OAGgC,IAA5C/U,EAAIqgB,SAASF,OAAO,mBAA2B,CACjD,GAAqB,eAAjBngB,EAAIwU,SACN,OACE3T,EAAAA,EAAAA,KAACqgB,GAAU,CACTvP,QAAS3R,EAAImhB,MAAM1gB,GACnBwB,OAAQjC,EAAI6Q,KAAK7L,QAAQ,IAAK,KAAO,IAAIzE,SAExC0C,EAAe1C,KAGf,GAAqB,eAAjBP,EAAIwU,SACb,OAAO3T,EAAAA,EAAAA,KAACugB,GAAU,CAACrM,KAAM/U,EAAI+U,KAAKxU,SAAEA,GAExC,CAEA,MACmB,yBAAjBP,EAAIqgB,UACa,kBAAjBrgB,EAAIwU,UAEkC,IAAlC1I,OAAOiF,KAAK/Q,EAAImhB,OAAOpf,QAEJ,4BADrB/B,EAAM,IAAIogB,KAAJ,CAAQrL,EAAK/P,QAAQ,MAAO,KAAK,IAC/BwP,UAEJ3T,EAAAA,EAAAA,KAACqgB,GAAU,CACTvP,QAAS3R,EAAImhB,MAAM1gB,GACnBwB,OAAQjC,EAAI6Q,KAAK7L,QAAQ,IAAK,KAAO,IAAIzE,SAExC0C,EAAe1C,MAMtBgQ,IAzEgC,KADnB8P,EA0EsBrgB,EAAIqgB,UAzE9BF,OAAO,aAAuD,IAAlCE,EAASF,OAAO,aA4ErD3P,GAvEkB6P,KACqB,IAAvCA,EAASF,OAAO,kBAsEOkB,CAAerhB,EAAIqgB,WAC5CrgB,EAAI4Y,IAAI,WAAY,iBAGlBxY,EAAAA,EAAAA,MAAA,KACEV,OAAa,OAAL0D,QAAK,IAALA,OAAK,EAALA,EAAO1D,OACf0B,UAAgB,OAALgC,QAAK,IAALA,OAAK,EAALA,EAAOke,MAClB3J,IAAU,OAALvU,QAAK,IAALA,OAAK,EAALA,EAAOuU,IACZ5C,KAAM/U,EAAI+U,KAAKxU,SAAA,CAEdP,EAAI+U,KAAM,SAKbtE,GAAkBqQ,IACpBG,EA5HkBM,EAACxM,EAAc+L,KACnC,IAAIU,EAAczM,EACf/P,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,KACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OAElB,IACE,IAAIyc,EAAS,IAAIC,OACfF,EAAc,6EAEZG,EAAMb,EAAWc,MAAMH,GAC3B,GAAIE,GAAOA,EAAI5f,OAAS,EACtB,MAAe,MAAX4f,EAAI,KAAsC,IAAxB5M,EAAKoL,OAAO,OACzBpL,EAETA,GAAc4M,EAAI,EAGtB,CAAE,MAAOliB,GACP4D,QAAQ4B,MAAMxF,EAChB,CACA,OAAOsV,CAAI,EAgGCwM,CAAcN,EAASH,KAIjCjgB,EAAAA,EAAAA,KAAA,KACEnB,OAAa,OAAL0D,QAAK,IAALA,OAAK,EAALA,EAAO1D,OACf0B,UAAgB,OAALgC,QAAK,IAALA,OAAK,EAALA,EAAOke,MAClB3J,IAAU,OAALvU,QAAK,IAALA,OAAK,EAALA,EAAOuU,IACZ5C,KAAMkM,EAAQ1gB,SAEbA,MA5BIM,EAAAA,EAAAA,KAACghB,GAAW,CAAC9M,KAAMA,IA3EXsL,KAwGX,E,OC5IR,MAAMyB,GAAkCpW,IAKjC,IALkC,IACvCqW,EAAG,QACHpQ,EAAO,UACPqQ,EAAS,cACTC,GACDvW,EACC,MAAMwW,EAAOxe,IAAMse,GAAWne,OAAO,cAG/Bse,EAAQ,uCAAAliB,OAA0CiiB,EAAI,KAAAjiB,OAAI0R,EAAO,KAAA1R,OAAIgiB,GACrEG,EAAO,GAAAniB,OAAMkiB,EAAQ,KAAAliB,OAAI8hB,EAAG,gBAC5BM,EAAI,GAAApiB,OAAMkiB,EAAQ,KAAAliB,OAAI8hB,EAAG,QAE/B,OACElhB,EAAAA,EAAAA,KAACyhB,GAAAA,GAAS,CAAC1H,IAAKyH,EAAK9hB,UACnBM,EAAAA,EAAAA,KAAA,OACE+Z,IAAKwH,EACLrH,IAAI,GACJtZ,MAAO,CAAEoZ,SAAU,OAAQrE,OAAQ,cAE3B,EAIhB,IAAe0E,EAAAA,EAAAA,MAAK4G,ICiBdS,GAAoBC,KAAAA,SACpBC,GAAyBD,KAAAA,yBACzBE,GAAcA,KAAM,EAEpBC,GAAsB,CAC1BC,kBAAoBC,GACI,UAAX,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMpc,MAEfqc,YAAaA,CACXD,EACAtiB,EACAyQ,KAEA,MAAMW,EAAUkR,EAAKE,QAAQ,gBACvB9gB,EAAS4gB,EAAKE,QAAQ,eAC5B,OAAOliB,EAAAA,EAAAA,KAACqgB,GAAU,CAAavP,QAASA,EAAS1P,OAAQA,GAAjC+O,EAA2C,GAIjEgS,GAAgB,CACpBJ,kBAAoBC,GACI,UAAX,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMpc,OAAkC,SAAX,OAAJoc,QAAI,IAAJA,OAAI,EAAJA,EAAMpc,MAExCqc,YAAaA,CAACD,EAAWtiB,EAAeyQ,KAC/BnQ,EAAAA,EAAAA,KAACoiB,GAAI,CAAA1iB,SAAcA,GAARyQ,IAIhBkS,GAAiBC,IAAqB,CAE1CP,kBAAoBC,GACI,OAAX,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMpc,MAEfqc,YAAa,SAAUD,EAAWtiB,EAAeyQ,GAC/C,MAAM+D,EAAO8N,EAAKE,QAAc,KAChC,OACEliB,EAAAA,EAAAA,KAACuiB,GAAU,CAAarO,KAAMA,EAAM+L,WAAYqC,EAAc5iB,SAC3DA,GADcyQ,EAIrB,IAGIqS,GAAwBA,CAC5B1R,EACAqQ,EACAC,KAAqB,CAErBW,kBAAoBC,GACI,aAAX,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMpc,MAEfqc,YAAa,SAAUD,EAAWtiB,EAAeyQ,GAC/C,MAAM+Q,EAAMc,EAAKE,QAAa,IAC9B,OACEliB,EAAAA,EAAAA,KAACihB,GAAa,CAEZnQ,QAASA,EACTqQ,UAAWA,EACXC,cAAeA,EACfF,IAAKA,GAJA/Q,EAOX,IAGIsS,GAKD5X,IAAkD,IAAjD,KAAE6X,EAAI,QAAE5R,EAAO,UAAEqQ,EAAS,cAAEC,GAAevW,EAC/C,MAAMyX,EAtFYK,EAClBnkB,EACAsS,EACAqQ,EACAC,KAEA,IAAK5iB,EAAM,OAAOA,EAElB,IAAI0e,EA9BiB1e,IACdA,EACJ2F,QAAQ,mBAAe,UACvBA,QAAQ,iBAAa,UACrBA,QAAQ,qBAAiB,WACzBA,QAAQ,mBAAe,WAyBZye,CAAcpkB,GAI5B,OAHA0e,EAvC0B2F,EAACrkB,EAAcsS,IAElCtS,EAAK2F,QADG,gCACa,SAAC2e,GAC3B,MAAM1hB,EAAMH,UAAAC,QAAA,OAAAC,EAAAF,UAAA,GACZ,MAAM,wBAAN7B,OAA+B0R,EAAO,mBAAA1R,OAAkBgC,EAAM,aAChE,IAkCUyhB,CAAoB3F,EAASpM,GACvCoM,EAxBoB6F,EACpBvkB,EACAsS,EACAqQ,EACAC,IAIO5iB,EAAK2F,QAFG,mBAEa,SAAC2e,GAE3B,MAAM,iBAAN1jB,OADS6B,UAAAC,QAAA,OAAAC,EAAAF,UAAA,GACkB,eAC7B,IAaU8hB,CAAc7F,GAEjBA,CAAO,EA0EQyF,CAAYD,EAAM5R,GAClCkS,EAAyB,CAC7BlB,GACAK,GACAE,GAAcC,GACdE,GAAsB1R,EAASqQ,EAAWC,GAC1C,CAEEW,kBAAmBA,KAAM,EACzBE,YAAaL,GAAuBqB,qBAIlCC,EAAiBxB,GAAkByB,sBACvCb,EACAT,GACAmB,GAGF,OAAOhjB,EAAAA,EAAAA,KAAAmX,EAAAA,SAAA,CAAAzX,SAAGwjB,GAAkB,EAG9B,IAAe7I,EAAAA,EAAAA,MAAKoI,ICrEpB,GA1DkC5X,IAO3B,IAP4B,QACjCiG,EAAO,UACPqQ,EAAS,EACT5Z,EAAC,KACDmb,EAAI,KACJhb,EAAI,MACJ9G,GACDiK,EACC,MAAQ0H,KAAM1B,GAASgB,GACrB,CAAEf,WACF,CAAEqC,SAAS,EAAO7M,OAASiM,GAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM1B,OAEtC5B,EAAa5E,IAAgBS,GAAUA,EAAMpH,QAAQuL,aAE3D,IAAImU,EAA0B,KAC1B1b,GAAQmJ,EAAKzK,QAAU0K,IAAYD,EAAKjR,KAC1CwjB,EAAkBvS,EAAKzK,OAAOsB,EAAO,GAAGlJ,MAE1C,MAAO6kB,EAAUC,IAAe/kB,EAAAA,EAAAA,UAAS6kB,IAEzClM,EAAAA,EAAAA,YAAU,KAUJxP,IAAS0b,GATO3f,WAClB,IACE,MAAM8f,QAAcpd,EAAe2K,GACnCwS,EAAYC,EAAMnd,OAAOsB,EAAO,GAAGlJ,KACrC,CAAE,MAAOI,GACP4D,QAAQ4B,MAAMxF,EAAEyF,QAClB,GAIAmf,EACF,GACC,CAAC9b,EAAM0b,EAAiBtS,IAE3B,MAAM2S,EAAsB,IAANlc,GAAWsJ,EAAKzJ,UAAYyJ,EAAKzK,OACjDsd,EAAwB,IAAThc,GAA2B,OAAb2b,EAEnC,OACE9jB,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,UAAUK,MAAOA,EAAMlB,SAAA,CACnC+jB,IACCzjB,EAAAA,EAAAA,KAAC2jB,GAAS,CAAC5d,MAAO8K,EAAKzK,OAAQ0K,QAASA,EAAS6I,OAAQ1K,KAE3DjP,EAAAA,EAAAA,KAAA,OAAAN,UACEM,EAAAA,EAAAA,KAAC4jB,GAAAA,GAAa,CAAAlkB,UACZM,EAAAA,EAAAA,KAACyiB,GAAa,CACZC,KAAMA,EACN5R,QAASA,EACTqQ,UAAWA,EACXC,cAAe7Z,QAIpBmc,IAAgB1jB,EAAAA,EAAAA,KAAC6jB,GAAI,CAACrlB,KAAM6kB,EAAU9b,EAAGG,EAAMiS,OAAQ1K,MACpD,EChCV,GAhCkCpE,IAAe,IAAd,KAAE0H,GAAM1H,EACzC,MAAOiZ,EAAYC,IAAiBxlB,EAAAA,EAAAA,UAA2B,QAc/D,OAJA2Y,EAAAA,EAAAA,YAAU,KACR6M,EAAc,OAAO,GACpB,CAACxR,EAAKhL,IAELlI,OAAO2kB,YAAc,IAAY,MAGnChkB,EAAAA,EAAAA,KAAA,OACE+Z,IAAG,GAAA3a,OAAKwE,EAAM,oBAAAxE,OAAmBmT,EAAKzN,OAAM,cAC5CoV,IAAI,WACJ+J,OAlBgBC,KAClBH,EAAc,SAAS,EAkBrBI,QAfiBC,KACnBL,EAAc,OAAO,EAenBnjB,MAAO,CACLyX,QAASyL,EACTO,aAAc,MACd/N,YAAa,QAEf,ECuCN,GA1DmCzL,IAA2C,IAA1C,KAAE0H,EAAI,SAAE+R,EAAQ,MAAEC,EAAK,UAAEC,GAAW3Z,EACtE,MAAML,EAAUD,GAAkBoH,IASlC,IAAI8S,GAAU/Z,EAAAA,EAAAA,UAAQ,KACpB,GAAK6H,EAEL,OAAe,IAAXA,EAAKhL,EACA1E,IAAM0P,EAAK5P,MAAMK,OAAO,qBAG7BzD,EAAAA,EAAAA,MAAA4X,EAAAA,SAAA,CAAAzX,SAAA,EACEM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,iBAAgBb,SAAE6S,EAAKhL,IACtC,MAAQ1E,IAAM0P,EAAK5P,MAAMK,OAAO,sBAGvC,GACC,CAACuP,IAEJ,MAAMmS,EAAiBzL,KAAW,kBAAmB,CACnD,YAAaqL,EACb,SAAUC,IAGZ,OACEhlB,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,YAAWb,SAAA,EACxBM,EAAAA,EAAAA,KAAC2kB,GAAO,CAACpS,KAAMA,KACfvS,EAAAA,EAAAA,KAAA,KACEO,UAAWmkB,EACXxQ,KAAI,GAAA9U,OAAKwE,EAAM,kBAAAxE,OAAiBmT,EAAKzN,QAASpF,SAE7C6S,EAAK/K,OAEPgd,GACCxkB,EAAAA,EAAAA,KAAA,OACEO,UAAU,KACVK,MAAO,CAAEyX,QAAS,eAAgBoB,WAAY,OAAQ/Z,SAErD+kB,KAGHllB,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,eAAcb,SAAA,EAC3BM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,KAAIb,SAAE+kB,KACtBzkB,EAAAA,EAAAA,KAAA,UAAQO,UAAU,YAAYI,QA9CtBA,KACd6J,EAAQgE,WAAW,IAADpP,OAAKmT,EAAKhL,EAAC,MAE7B,IAAIqd,EAAOC,SAASC,eAAe,gBAC/BF,GAAMvlB,OAAO0lB,SAAS,EAAGH,EAAKI,UAAU,EA0CStlB,SAC5C+kB,SAIH,ECOV,GA5DyC5Z,IAMlC,IANmC,QACxCiG,EAAO,EACPvJ,EAAC,OACDX,EAAM,aACNqe,EAAY,aACZC,GACDra,EACC,MAAO0H,EAAM4S,IAAW5mB,EAAAA,EAAAA,UAA+B,OAChD6F,EAAOuK,IAAYpQ,EAAAA,EAAAA,UAAwB,MAuBlD,OArBA2Y,EAAAA,EAAAA,YAAU,KACQzT,WACd,IACE,MAAM2hB,QAAcvd,EAAkBiJ,EAASvJ,GAC3C6d,GACFD,EAAQC,GACRzW,EAAS,MACLuW,GAAcA,MAElBC,EAAQ,MACRxW,EAAS,kHAADvP,OAAyBmI,IAErC,CAAE,MAAO3I,GACPumB,EAAQ,MACRxW,EAAU/P,EAAYyF,QACxB,GAGFghB,EAAS,GACR,CAACvU,EAASvJ,EAAG2d,IAEX3S,GAASnO,GAGZ7E,EAAAA,EAAAA,MAAA4X,EAAAA,SAAA,CAAAzX,SAAA,CACG6S,IACChT,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,kBAAiBb,SAAA,EAC9BM,EAAAA,EAAAA,KAAA,OAAKO,UAAU,yBAAwBb,UACrCM,EAAAA,EAAAA,KAACslB,GAAQ,CACP/S,KAAMA,EACN+R,SAAU/R,EAAK/K,OAASZ,EACxB2d,MAAOhS,EAAKzN,SAAWmgB,EACvBT,WAAS,OAGbxkB,EAAAA,EAAAA,KAACulB,GAAO,CACNzU,QAASA,EACTqQ,UAAW5O,EAAK5P,KAChB4E,EAAGA,EACHmb,KAAMnQ,EAAK/T,KACXkJ,KAAM6K,EAAK7K,KACX9G,MAAO,CAAE4kB,UAAW,OAAQrM,aAAc,mBAI/C/U,IAASpE,EAAAA,EAAAA,KAAA,QAAAN,SAAO0E,OAxBO,IAyBvB,ECyEP,GApIuCyG,IAKhC,IALiC,QACtCiG,EAAO,iBACP2U,EAAgB,OAChB7e,EAAM,MACN0J,GACDzF,EACC,MAAMoa,EAAe5a,IAAgBS,GAAUA,EAAMuB,MAAMvH,UAEpD4gB,EAAQC,IAAapnB,EAAAA,EAAAA,UAAS,IAC9B8Z,EAASuN,IAAcrnB,EAAAA,EAAAA,UAAS,SAChCuM,EAAO+a,IAAYtnB,EAAAA,EAAAA,UAAS,CACjCunB,UAAWL,EACXxmB,IAAK,IAuDD8mB,GAAYC,EAAAA,GAAAA,IAAa,CAC7BC,UAvBiBC,IACbjkB,KAAKkkB,IAAID,EAAUR,QAAU,GAAIC,EAAU,GAC1CA,EAAUO,EAAUR,OAAO,EAsBhCU,SAnBgBF,IACZjkB,KAAKkkB,IAAID,EAAUR,QAAU,MACT,SAAlBQ,EAAUG,IACZR,EAAS,CACPC,UAAWhb,EAAMgb,UAAY,EAC7B7mB,IAAK6L,EAAM7L,IAAM,IAEQ,UAAlBinB,EAAUG,KAAmBvb,EAAMgb,UAAY,GACxDD,EAAS,CACPC,UAAWhb,EAAMgb,UAAY,EAC7B7mB,IAAK6L,EAAM7L,IAAM,KAIvB0mB,EAAU,EAAE,EAMZW,MAAO,KAGHC,GAAkB5nB,EAAAA,EAAAA,cAAY,KAClCinB,EAAW,QAAQ,GAClB,IAEH,IAAI7f,EAAQ,CAAC+E,EAAMgb,WAEfJ,EAAS,EAAG3f,EAAMjE,KAAKgJ,EAAMgb,UAAY,GACpCJ,EAAS,GAAK5a,EAAMgb,UAAY,GAAG/f,EAAMjE,KAAKgJ,EAAMgb,UAAY,GAEzE,MAAMllB,EAA6B,CACjC4lB,UAAU,eAADpnB,OAAiBsmB,EAAM,iBAChCe,cAAef,EAAS,EAAI,cAAgB,OAG9C,OACE1lB,EAAAA,EAAAA,KAAA,OAAKO,UAAU,oBAAoBK,MAAO,CAAEyX,WAAU3Y,UACpDH,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,gBAAeb,SAAA,EAC5BM,EAAAA,EAAAA,KAAC0mB,GAAc,CACb5V,QAASA,EACTuI,QA7EasN,KACnBd,EAAS,CACPC,UAAW,EACX7mB,IAAK6L,EAAM7L,KACX,EA0EIua,OAxDY/V,UAClB,MAAMoN,QAAa1K,EAAe2K,GAClC+U,EAAS,CACPC,UAAWjV,EAAK7O,MAChB/C,IAAK6L,EAAM7L,KACX,EAoDIsa,OAxEYqN,KAClBf,EAAS,CACPC,UAAWhb,EAAMgb,UAAY,EAC7B7mB,IAAK6L,EAAM7L,KACX,EAqEIqa,OAlEYuN,KACd/b,EAAMgb,UAAY,GACpBD,EAAS,CACPC,UAAWhb,EAAMgb,UAAY,EAC7B7mB,IAAK6L,EAAM7L,KACX,EA8DEqR,MAAOA,KAET/Q,EAAAA,EAAAA,MAAA,OAAAsK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAKtJ,UAAU,oBAAuBwlB,GAAS,IAAEnlB,MAAOA,EAAMlB,SAAA,EAC5DM,EAAAA,EAAAA,KAAA,OACEO,UAAU,wBAEVK,MAAO,CAAEkmB,MAAO,GAAIpnB,UAEpBM,EAAAA,EAAAA,KAAC+mB,GAAc,CACbjW,QAASA,EACTvJ,EAAGxB,EAAM,GACTkf,aAAcA,EACdre,OAAQA,EACRse,aAAcqB,KARXzb,EAAM7L,KAWZ8G,EAAM7E,OAAS,IACdlB,EAAAA,EAAAA,KAAA,OACEO,UAAU,wBAEVK,MAAO,CAAEkmB,MAAO,GAAIpnB,UAEpBM,EAAAA,EAAAA,KAAC+mB,GAAc,CACbjW,QAASA,EACTvJ,EAAGxB,EAAM,GACTkf,aAAcA,EACdre,OAAQA,KAPLkE,EAAM7L,IAAM,WAarB,ECjFV,GA9C8B4L,IAAe,IAAd,KAAE3E,GAAM2E,EACrC,MAAOmc,EAAeC,IAAoB1oB,EAAAA,EAAAA,YAkB1C,OACEgB,EAAAA,EAAAA,MAAA4X,EAAAA,SAAA,CAAAzX,SAAA,EACEH,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,kBAAiBb,SAAA,EAC9BM,EAAAA,EAAAA,KAACknB,GAAS,CAAChhB,KAAMA,KACjBlG,EAAAA,EAAAA,KAAA,OAAKO,UAAU,eAAcb,SAAEwG,EAAKO,WACpCzG,EAAAA,EAAAA,KAACmnB,GAAS,CAACjhB,KAAMA,EAAMvF,QAbLymB,UACAjmB,IAAlB6lB,GAA+BA,IAAkB9gB,EAAKlE,MACxDilB,EAAiB/gB,EAAKlE,OAEtBilB,OAAiB9lB,EACnB,KASInB,EAAAA,EAAAA,KAACqnB,GAAiB,CAChB1O,cAA4BxX,IAAlB6lB,EACVrmB,QAxBiB2mB,KAErBL,OADoB9lB,IAAlB6lB,EACe,OAEA7lB,EACnB,KAqBInB,EAAAA,EAAAA,KAACunB,GAAa,CAAChV,KAAMrM,KACrBlG,EAAAA,EAAAA,KAACwnB,GAAU,CAACthB,KAAMA,KAClBlG,EAAAA,EAAAA,KAACynB,GAAY,CAACvhB,KAAMA,KACpBlG,EAAAA,EAAAA,KAAC0nB,GAAU,CAACxhB,KAAMA,YAED/E,IAAlB6lB,IACChnB,EAAAA,EAAAA,KAAC2nB,GAAY,CACX7W,QAAS5K,EAAKtG,GACd6lB,iBAAkBuB,EAClBpgB,OAAQV,EAAKU,OACb0J,MAAOA,IAAM2W,OAAiB9lB,OAGjC,E,eCjDP,MA0CA,GA1CgC0J,IAA0B,IAAzB,QAAEgO,EAAO,OAAE+O,GAAQ/c,EAClD,MAAMmI,GAAWC,EAAAA,EAAAA,MACjB,IAAI4U,EAAW7U,EAASW,SACP,MAAbkU,IAAkBA,EAAW,cAEjC,MAAMC,EAAiB,IAAIzkB,gBAAgB2P,EAASsM,QAEpD,IAAIyI,EACJ,MAAMtf,EAAOqf,EAAe/V,IAAI,QAEJgW,EADvBtf,EACa,WAATA,EAAiC,SACvBpH,SAASoH,EAAM,KAAO,EAFhB,EAIzB,IAAImQ,EAAQ,GACZ,IAAK,IAAIxK,EAAI,EAAGA,GAAKyK,EAASzK,IAAK,CACjC0Z,EAAe/P,IAAI,OAAQlP,OAAOuF,IAClC,IAAI8F,EAAO,IAAM2T,EAAW,IAAMC,EAAevkB,WAEjDqV,EAAM9W,MACJ9B,EAAAA,EAAAA,KAACgoB,GAAAA,EAAW9nB,KAAI,CAAC+T,OAAQ8T,IAAgB3Z,EAAW8F,KAAMA,EAAKxU,SAC5D0O,GAD8CA,GAIrD,CAEA,IAAe,IAAXwZ,EAAiB,CACnBE,EAAe/P,IAAI,OAAQ,UAC3B,IAAI7D,EAAO,IAAM2T,EAAW,IAAMC,EAAevkB,WACjDqV,EAAM9W,MACJ9B,EAAAA,EAAAA,KAACgoB,GAAAA,EAAW9nB,KAAI,CACd+T,OAAwB,WAAhB8T,EAER7T,KAAMA,EAAKxU,SACZ,QAFK,UAMV,CAEA,OAAOM,EAAAA,EAAAA,KAACgoB,GAAAA,EAAU,CAACpnB,MAAO,CAAEiW,OAAQ,OAAQnX,SAAEkZ,GAAmB,E,yBCjCnE,MA6GA,GA7GqC/N,IAS9B,IAT+B,YACpCvK,EAAW,WACXoO,EAAU,SACVtH,EAAQ,WACR6gB,EAAU,KACVzpB,EAAI,QACJ0pB,EAAO,SACPznB,EAAQ,mBACR0nB,GACDtd,EACC,MAAMud,GAAcvK,EAAAA,EAAAA,UAuBdwK,GAAyB1pB,EAAAA,EAAAA,cAC5BC,IACKupB,GAAoBA,EAAmBvpB,EAAE4Y,cAAc8Q,QAAQ,GAErE,CAACH,IAGGI,GAAe5pB,EAAAA,EAAAA,cAClBC,IACK6B,GAAUA,EAAS7B,EAAE4Y,cAAc1Y,MAAM,GAE/C,CAAC2B,IAcH,OACElB,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEM,EAAAA,EAAAA,KAACI,EAAAA,EAAW,CACVqT,GAAG,WACH,aAAW,yDACXnT,YAAaA,EACbkoB,KAAM,GACNC,KAAM,EACN3pB,MAAON,EACPiC,SAAU8nB,EACVG,QArBe9pB,IACdspB,GACAA,EAAQ9J,SAEC,UAAVxf,EAAEK,KAAmBL,EAAE+pB,SACzBT,EAAQ9J,QAAQwK,cACd,IAAIC,MAAM,SAAU,CAAEC,YAAY,EAAMC,SAAS,IAErD,EAcIrT,IAAK0S,EACL7nB,UAAU,oBACV,iBAAe,KAEjBhB,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,WAAUb,SAAA,EACvBH,EAAAA,EAAAA,MAACypB,GAAAA,EAAW,CAAAtpB,SAAA,EACVM,EAAAA,EAAAA,KAAC0W,GAAAA,EAAM,CACLjX,KAAK,KACLK,QAAQ,QACRa,QAlEc/B,IACtBA,EAAEgV,iBAEF,MAGMqV,EAAeb,EAAYhK,QAE3BjB,EAAQ8L,EAAaC,eACrB9L,EAAM6L,EAAaE,aAEnBC,EAAUH,EAAanqB,MACvBuqB,EAAMD,EAAQloB,OAEdooB,EAXU,SAUKF,EAAQxN,UAAUuB,EAAOC,GAT7B,UAWjB,IAAImM,EACFH,EAAQxN,UAAU,EAAGuB,GAASmM,EAAcF,EAAQxN,UAAUwB,EAAKiM,GAEjE5oB,GAAUA,EAAS8oB,EAAQ,EAiDvB3oB,MAAO,CAAE0V,YAAa,OACtB/V,UAAU,SAAQb,SACnB,gCAGDM,EAAAA,EAAAA,KAAC0W,GAAAA,EAAM,CACLjX,KAAK,KACLK,QAAQ,QACR0pB,SAAUvB,EACV5nB,KAAK,SACLE,UAAU,SAAQb,SAEjBuoB,EAAa,2EAAiB,8DAGlCvZ,IACC1O,EAAAA,EAAAA,KAACmU,EAAAA,EAAKsV,MAAK,CACT7pB,GAAG,cACHS,KAAK,WACLioB,QAASlhB,EACT3G,SAAU4nB,EACV5Q,MAAM,qEACN7W,MAAO,CAAEiW,OAAQ,6BAInB,ECoFV,GAzLmChM,IAA0B,IAAD6e,EAAA,IAAxB,gBAAEC,GAAiB9e,EACrD,MAAQ0H,KAAMqX,GAAajgB,KAErBoF,EAAW1E,IAAgBS,GAAUA,EAAMiE,YAE1C8a,EAAgBC,IAAcvrB,EAAAA,EAAAA,UAAS,OACvCwrB,EAAOC,IAAYzrB,EAAAA,EAAAA,UAAS0rB,MAAM,IAAIC,KAAK,KAE5ChC,GAAUrK,EAAAA,EAAAA,QAAO,MACjBpT,EAAWN,KACXK,EAAUD,GAAkBuE,IAE5B8I,GAAkB5Y,EAAAA,EAAAA,KACtB,CAACJ,EAAyB6H,KACxBqjB,EAAWrjB,GACX+D,EAAQiE,cAAchI,EAAQ,IAI5B0jB,EACH/b,GAAexP,IACd,IAAIwrB,EAAYL,EAAM5gB,QACtBihB,EAAUhc,GAAKxP,EAAEC,OAAOC,MACxBkrB,EAASI,EAAU,EAGjBC,GAAWrrB,EAAAA,EAAAA,KAAkBJ,IAGjC,GAFAA,EAAEgV,kBAEGiW,EAEH,YADArf,EAAQmE,SAAS,gGAInB,IAAIhB,EAAUoB,EAASpB,QACvB,IAAKA,EAEH,YADAnD,EAAQmE,SAAS,oFAInB,IAAKI,EAASvQ,KAEZ,YADAgM,EAAQmE,SAAS,kHAInB,IAAIxL,EAAS,CACXwK,UACAnP,KAAMuQ,EAASvQ,KACfiI,QAASojB,EAAejqB,GACxB6F,MAAOokB,EAAepkB,MACtB2B,SAAU2H,EAAS3H,SACnB+G,YAAa,GACbmc,UAAWC,GAGb,GAAIxb,EAAS3H,SAAU,CACrBjE,EAAOgL,YAAc,GACrB,IAAK,IAAIC,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC5B,IAAIoC,EAAMuZ,EAAM3b,EAAI,GAChBoC,GACFrN,EAAOgL,YAAYrM,KAAK0O,EAE5B,CACF,CAEA/F,E7CZDtH,IAA+B,CAACsH,EAAemM,KAE9C,GAVsB/L,KAAuC,IAAtC,SAAEkE,GAAqBlE,EAChD,QAAKkE,GACmB,YAApBA,EAASzC,MAEF,EAMLke,CADU5T,KAEZ,OAAOnM,EAAS8C,GAAapK,GAC/B,E6CQSsnB,CAAqBtnB,GAAQ,IAGlCunB,GAAkB/rB,EAAAA,EAAAA,cACrBC,IACC4L,EAAQ+D,cAAc3P,EAAEC,OAAOC,MAAM,GAEvC,CAAC0L,IAGGmgB,GAAehsB,EAAAA,EAAAA,cAClBH,IACCgM,EAAQgE,WAAWhQ,EAAK,GAE1B,CAACgM,IAGG2d,GAAqBxpB,EAAAA,EAAAA,cACxBoR,IACCvF,EAAQkE,WAAWqB,EAAK,GAE1B,CAACvF,IAGG+f,EAAuBA,KAC3B/f,EAAQ8D,QAEJqb,GACFA,GACF,EAEF,IAAIiB,EAAa,GACjB,IAAK,IAAInlB,KAASmkB,EAAS3jB,KACzB2kB,EAAW9oB,MACT9B,EAAAA,EAAAA,KAAA,UAAoBlB,MAAO2G,EAAMqI,cAAcpO,SAC5C+F,GADUA,IAMjB,IAAIolB,EAAgB,GAEpB,GAAI9b,EAAS3H,SAAU,CACrByjB,EAAc/oB,MAAK9B,EAAAA,EAAAA,KAAA,OAAAN,SAAa,qDAAJ,MAC5B,IAAK,IAAI0O,EAAI,EAAGA,GAAK,GAAIA,IACvByc,EAAc/oB,MACZvC,EAAAA,EAAAA,MAACC,EAAAA,EAAU,CAETC,KAAK,KACLmB,MAAO,CAAEyjB,aAAc,MAAO/L,MAAO,QAAS5Y,SAAA,EAE9CM,EAAAA,EAAAA,KAACR,EAAAA,EAAWkB,KAAI,CAACE,MAAO,CAAE0X,MAAO,QAAU/X,UAAU,QAAOb,SAAA,GAAAN,OACtDgP,EAAC,QAEPpO,EAAAA,EAAAA,KAACmU,EAAAA,EAAK2W,QAAO,CACXzqB,KAAK,OACL,2DAAAjB,OAAuBgP,GACvBoI,UAAW,GACXjW,UAAU,QACVzB,MAAOirB,EAAM3b,EAAI,GACjB3N,SAAU0pB,EAAiB/b,EAAI,OAb5BA,GAkBb,CAEA,OACE7O,EAAAA,EAAAA,MAAA,QAAMgB,UAAU,sBAAsB8pB,SAAUA,EAAU3U,IAAKwS,EAAQxoB,SAAA,EACrEH,EAAAA,EAAAA,MAAA,OAAKK,GAAG,gBAAgBW,UAAU,iBAAgBb,SAAA,EAChDM,EAAAA,EAAAA,KAAA,OAAAN,UACEM,EAAAA,EAAAA,KAAA,KAAAN,SAAG,+DAEJqP,EAAS3K,QAASpE,EAAAA,EAAAA,KAACqX,GAAS,CAAC7Y,KAAMuQ,EAAS3K,SAC7C7E,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,WAAWK,MAAO,CAAEyjB,aAAc,OAAQ3kB,SAAA,EACvDM,EAAAA,EAAAA,KAACmU,EAAAA,EAAKoD,OAAM,CACViS,UAAQ,EACR/pB,KAAK,KACLX,MAAOiQ,EAAStJ,MAChB7E,MAAO,CAAE2V,KAAM,YACfhW,UAAU,QAAOb,SAEhBkrB,KAEH5qB,EAAAA,EAAAA,KAAC+J,GAAQ,CACPnK,GAAG,iBACHoB,aAAa,uCACbsW,SAA0B,QAAlBoS,EAAE3a,EAAStI,eAAO,IAAAijB,OAAA,EAAhBA,EAAkBhkB,KAC5BjG,KAAK,KACLmB,MAAO,CAAE2V,KAAM,YACf9V,SAAUmX,QAGd5X,EAAAA,EAAAA,KAACmU,EAAAA,EAAK2W,QAAO,CACXzqB,KAAK,OACL,aAAW,2BACXC,YAAY,2BACZb,KAAK,KACLX,MAAOiQ,EAASpB,QAChBlN,SAAUiqB,EACV9pB,MAAO,CAAEyjB,aAAc,OACvB9jB,UAAU,QACViW,UAAW,MAEbxW,EAAAA,EAAAA,KAAC+qB,GAAU,CACTzqB,YAAY,yDACZoO,YAAY,EACZtH,SAAU2H,EAAS3H,SACnB5I,KAAMuQ,EAASvQ,KACfypB,WAAgC,YAApBlZ,EAASzC,OACrB7L,SAAUkqB,EACVxC,mBAAoBA,EACpBD,QAASA,QAGbloB,EAAAA,EAAAA,KAACgrB,GAAAA,EAAS,CAACzqB,UAAU,mBAAkBb,SAAEmrB,MACpC,ECjJX,GA1C6B7f,KAC3B,MAAO5H,IAAgB0O,EAAAA,EAAAA,OAEjB,WACJmW,EACA1V,KAAMxM,EAAK,MACX3B,EAAK,QACL8O,GACEtI,GAAc,CAAExH,iBAUpB,OARA8T,EAAAA,EAAAA,YAAU,KACR2N,SAAShlB,MAAQ,aAAa,GAC7B,KAEHqX,EAAAA,EAAAA,YAAU,KACR7X,OAAO0lB,SAAS,EAAG,EAAE,GACpB,CAAC3hB,KAGF7D,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEM,EAAAA,EAAAA,KAAC0X,GAAM,IACNtT,IAASpE,EAAAA,EAAAA,KAACirB,GAAK,CAACzsB,KAAM4F,EAAMC,WAC7B9E,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,mBAAkBb,SAAA,EAC/BM,EAAAA,EAAAA,KAACkrB,GAAW,CAAChT,cAAehF,EAAS+E,UAAWgQ,IAC/CliB,EAAM1D,KAAK6D,IACVlG,EAAAA,EAAAA,KAACmrB,GAAG,CAAejlB,KAAMA,GAAfA,EAAKtG,OAEjBI,EAAAA,EAAAA,KAAA,OAAKO,UAAU,eAAcb,UAC3BM,EAAAA,EAAAA,KAACoZ,GAAK,CAACP,QAAS,WAGpB7Y,EAAAA,EAAAA,KAAA,OACEJ,GAAG,IACHW,UAAU,WACVK,MAAO,CAAEyjB,aAAc,OAAQ/J,UAAW,MAAO8Q,SAAU,YAAa1rB,UAExEM,EAAAA,EAAAA,KAACqrB,GAAQ,CAAC1B,gBAAiBzW,QAEzB,EChDJoY,GAAS,CACb,KAAM,6EACNC,KAAM,wCACNC,GAAI,oJACJC,IAAK,wCAmCP,GA5BiC5gB,IAAkB,IAAjB,QAAEiG,GAASjG,EAC3C,MAAQ0H,KAAM9M,GAAUoM,GACtB,CAAEf,WACF,CACEqC,SAAS,EACT7M,OAASiM,GAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM1B,KAAKpL,QAIjC,OACElG,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,WAAUb,SAAA,EACvBM,EAAAA,EAAAA,KAAA,OAAKO,UAAU,cAAab,UAC1BM,EAAAA,EAAAA,KAACiX,GAAK,OAERjX,EAAAA,EAAAA,KAAA,OAAKO,UAAU,eAAcb,UAC3BM,EAAAA,EAAAA,KAAA,QAAMJ,GAAG,eAAeW,UAAU,UAASb,UACzCM,EAAAA,EAAAA,KAAC0T,EAAAA,GAAI,CACH5L,GAAE,oBAAA1I,OAAsBqG,GACxB7E,MAAO,CAAEkZ,eAAgB,QAASpa,SAEjC4rB,GAAO7lB,WAIV,EC8BV,GA9DoCoF,IAAkB,IAAjB,QAAEiG,GAASjG,EAC9C,MAAQ0H,KAAM1S,GAAUgS,GACtB,CAAEf,WACF,CAAExK,OAASiM,GAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM1B,KAAKhR,QAGjC,IAAI6rB,EACF,sCAAwCC,mBAAmB9rB,GAE7D,OACEN,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,YAAWb,SAAA,EACxBM,EAAAA,EAAAA,KAAA,OAAKO,UAAU,gBAAeb,UAC5BH,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,cAAab,SAAA,EAC1BM,EAAAA,EAAAA,KAAA,KACEH,MAAM,WACNqU,KAAI,GAAA9U,OAAKwE,EAAM,KAAAxE,OAAIkI,EAAY,QAAAlI,OAAO0R,GACtCvQ,UAAU,MACVK,MAAO,CAAEyX,QAAS,QAASuT,WAAY,OAAQlsB,SAChD,OAGDM,EAAAA,EAAAA,KAAA,KACEH,MAAM,eACNqU,KAAI,GAAA9U,OAAKwE,EAAM,KAAAxE,OAAIwI,EAAgB,QAAAxI,OAAO0R,EAAO,iBACjDvQ,UAAU,MACVK,MAAO,CAAEyX,QAAS,QAASuT,WAAY,OAAQlsB,SAChD,YAMLM,EAAAA,EAAAA,KAAA,OAAKO,UAAU,eAAcb,UAC3BH,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,WAAUb,SAAA,EACvBH,EAAAA,EAAAA,MAAA,OAAKqB,MAAO,CAAE2V,KAAM,EAAGgC,UAAW,UAAW7Y,SAAA,EAC3CM,EAAAA,EAAAA,KAAA,KAAGkU,KAAI,gCAAA9U,OAAkC0R,GAAUpR,UACjDM,EAAAA,EAAAA,KAAA,MACEO,UAAU,cACVwW,wBAAyB,CAAEC,OAAQnX,QAGvCG,EAAAA,EAAAA,KAAA,OAAKO,UAAU,qBAEjBP,EAAAA,EAAAA,KAAA,OAAKY,MAAO,CAAE2V,KAAM,WAAY6U,SAAU,YAAa1rB,UACrDM,EAAAA,EAAAA,KAAA,OAAKO,UAAU,gBAAeb,UAC5BM,EAAAA,EAAAA,KAAA,KACE8W,IAAI,sBACJ5C,KAAMwX,EACN7rB,MAAM,yFACNhB,OAAO,SACP0B,UAAU,SAAQb,SACnB,sBAOL,ECzBV,GA7B8BmL,IAAwB,IAADghB,EAAA,IAAtB,KAAE3lB,EAAI,QAAE4K,GAASjG,EAC9C,MAAMwB,EAAQhC,IAAgBS,GAAUA,EAAMuB,SACtCkG,KAAMuZ,GAAUja,GAAiB,CAAEf,WAAW,CAAEqC,SAAS,IAC3DvM,GAAc,OAALklB,QAAK,IAALA,GAAY,QAAPD,EAALC,EAAO/a,aAAK,IAAA8a,OAAP,EAALA,EAAcrkB,OAAQ,GAErC,OAAKtB,GAGH3G,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,YAAYX,GAAIiJ,OAAO3C,EAAKqB,GAAG7H,SAAA,EAC5CM,EAAAA,EAAAA,KAAA,OAAKO,UAAU,gBAAeb,UAC5BM,EAAAA,EAAAA,KAACslB,GAAQ,CACP/S,KAAMrM,EACNoe,SAAUpe,EAAKsB,OAASZ,EACxB2d,MAAOre,EAAKsB,OAAS6E,EAAMpH,cAG/BjF,EAAAA,EAAAA,KAAA,OAAKO,UAAU,eAAcb,UAC3BM,EAAAA,EAAAA,KAACulB,GAAO,CACN7C,KAAMxc,EAAK1H,KACXsS,QAASA,EACTqQ,UAAWjb,EAAKvD,KAChB4E,EAAGrB,EAAKqB,EACRG,KAAMxB,EAAKwB,YAjBD,IAoBV,ECYV,GAxCiCmD,IAA8B,IAA7B,QAAEiG,EAAO,WAAEib,GAAYlhB,EACvD,MAAM,WAAEod,EAAU,QAAE/U,GAAYb,GAC9B,CAAEvB,WACF,CAAEqC,SAAS,IAOb,OACE5T,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,WAAWX,GAAG,IAAGF,SAAA,EAC9BM,EAAAA,EAAAA,KAAA,OAAKO,UAAU,iBAAiBK,MAAO,CAAE0X,MAAO,OAAQ5Y,UACtDM,EAAAA,EAAAA,KAAC0W,GAAAA,EAAM,CACL/V,QARgBqrB,OAShBxC,UAAU,EACV/pB,KAAK,KACLc,UAAU,SACVT,QAAQ,QAAOJ,SAEd,wDAGLM,EAAAA,EAAAA,KAAA,OAAKO,UAAU,qBAAqBK,MAAO,CAAE6Y,WAAY,QAAS/Z,SAC/DqsB,IACC/rB,EAAAA,EAAAA,KAAC0W,GAAAA,EAAM,CACL/V,QAASA,IAAMuS,IACfsW,SAAUvB,EACVxoB,KAAK,KACLc,UAAU,SACVT,QAAQ,QAAOJ,SAEduoB,EAAa,qEAAgB,wFAIhC,ECiFV,GA9GqCpd,IAAmC,IAAlC,QAAEiG,EAAO,gBAAE6Y,GAAiB9e,EAChE,MAAOzE,EAAQ6lB,IAAa1tB,EAAAA,EAAAA,YACtBkM,EAAWN,KACXK,EAAUD,GAAkBoH,KAGhCY,MAAM,KAAE1B,IACNgB,GAAiB,CAAEf,YACjBc,EAAavH,IAAgBS,GAAUA,EAAM8G,aAoB7Csa,EAAcA,KAClB1hB,EAAQgE,WAAW,IACnByd,OAAU9qB,GAENwoB,GACFA,GACF,EAGIwC,EAAevtB,IACnBA,EAAEgV,iBACFqY,OAAU9qB,EAAU,EAGhBirB,EAAmBhe,IACvB6d,EAAU7d,EAAE,EAGRuc,GAAehsB,EAAAA,EAAAA,cAClBH,IACCiM,EAASqE,GAAgBN,WAAWhQ,GAAM,GAE5C,CAACiM,IAGH,IAAI4hB,EACJ,GAAQ,OAAJxb,QAAI,IAAJA,GAAAA,EAAMzJ,UAAgB,OAAJyJ,QAAI,IAAJA,GAAAA,EAAMzK,OAAQ,CAClC,IAAIykB,EAAgB,GACpB,IAAK,IAAIzc,EAAI,EAAGA,GAAKyC,EAAKzK,OAAOlF,OAAQkN,IAAK,CAC5C,MAAMlI,EAAO2K,EAAKzK,OAAOgI,EAAI,GACxBlI,EAAK1H,MAEVqsB,EAAc/oB,MACZ9B,EAAAA,EAAAA,KAACmU,EAAAA,EAAKsV,MAAK,CACTppB,KAAK,QAELuF,KAAK,SACL0iB,QAASliB,IAAWgI,EACpB3N,SAAUA,IAAM2rB,EAAgBhe,GAChCqJ,MAAK,GAAArY,OAAKgP,EAAC,MAAAhP,OAAK8G,EAAK1H,OAJhB4P,GAOX,CAEAie,GACE9sB,EAAAA,EAAAA,MAACyrB,GAAAA,EAAS,CAAAtrB,SAAA,EACRM,EAAAA,EAAAA,KAAA,UAAAN,UACEH,EAAAA,EAAAA,MAAA,SAAAG,SAAA,CAAO,sDAELM,EAAAA,EAAAA,KAAA,QACEJ,GAAG,eACHgB,MAAO,CAAE6Y,WAAY,MAAO9D,OAAQ,WACpChV,QAASwrB,EAAYzsB,SACtB,0DAKJmrB,EAAc,oHAIrB,CAEA,OACEtrB,EAAAA,EAAAA,MAAA,QAAMqB,MAAO,CAAE0Z,UAAW,OAAS+P,SAnFnBzrB,IAChBA,EAAEgV,iBACFhV,EAAE6f,kBAEF,IAAItb,EAA+B,CACjC3E,KAAMoT,EAAWpT,KACjBsS,QAASjI,OAAW,OAAJgI,QAAI,IAAJA,OAAI,EAAJA,EAAMjR,IACtB0qB,UAAW4B,EACXza,mBAAetQ,GAGbiF,IACFjD,EAAOsO,cAAgBrL,GAGzBqE,EAAS8G,GAAepO,GAAQ,EAoEsBzD,SAAA,EACpDM,EAAAA,EAAAA,KAAA,OAAKO,UAAU,OAAMb,SAAC,8IACtBH,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,wBAAuBb,SAAA,EACpCM,EAAAA,EAAAA,KAAA,OAAKO,UAAU,mBAAkBb,UAC/BM,EAAAA,EAAAA,KAAC+qB,GAAU,CACT9C,WAAkC,YAAtBrW,EAAWtF,OACvB9N,KAAMoT,EAAWpT,KACjB8B,YAAY,yDACZG,SAAUkqB,OAGd3qB,EAAAA,EAAAA,KAAA,OAAKO,UAAU,qBAAoBb,SAAE2sB,SAElC,ECvBX,GA1EwBC,KACtB,MAAM7hB,EAAWN,MACX,KAAE6F,IAASiD,EAAAA,EAAAA,OACV7P,IAAgB0O,EAAAA,EAAAA,MAEjBhB,EAAUhQ,EAASsC,EAAa2O,IAAI,OAAQ,IAC5C,KAAEQ,EAAI,MAAEnO,EAAK,UAAEmoB,GAAc1a,GAAiB,CAAEf,aAEhD,KAAED,EAAI,MAAEE,EAAOvP,KAAMuE,EAAQ,IAAW,OAAJwM,QAAI,IAAJA,EAAAA,EAAQ,CAAC,EAE7ClG,EAAQhC,IAAgBS,GAAUA,EAAMuB,QAExC5D,ElEmBe,YADO+jB,EkElBDppB,EAAa2O,IAAI,SlEmBN,SAC/BjR,EAAS0rB,EAAc,GAFFA,MkEjB5B,MAAM3T,EAAU9W,EAAe,OAAJ8O,QAAI,IAAJA,OAAI,EAAJA,EAAM7O,OAE3B+pB,EAAsB,WAATtjB,GAAqBA,IAASoQ,GAC3C,cAAE4T,EAAa,gBAAEC,GChCO7hB,KAA6B,IAA5B,WAAEkhB,GAAoBlhB,EACrD,MAAO8hB,EAAeD,GAAmBriB,IAAgBS,GAAU,CACjEA,EAAMpH,QAAQqC,MAAMsJ,iBACyC,IAA7DvO,EAASgK,EAAMpH,QAAQqC,MAAMuJ,yBAA0B,QAGlDmd,EAAeG,IAAoBruB,EAAAA,EAAAA,WAAS,GAOnD,OANA2Y,EAAAA,EAAAA,YAAU,KACc,SAAlByV,GAA4BZ,GAC9B1N,YAAW,IAAMuO,GAAiB,IAAOF,EAC3C,GACC,CAACC,EAAeD,EAAiBX,IAE7B,CACLU,gBACAC,kBACD,EDgB0CG,CAAiB,CAAEd,gBAEtD7Y,QAAS4Z,GAAmBza,GAClC,CAAEvB,WACF,CACEic,gBAAiBL,EACjBvZ,QAASsZ,IAyBb,OAhBAvV,EAAAA,EAAAA,YAAU,KlE6BwB8V,MkE5BxB,OAAJnc,QAAI,IAAJA,GAAAA,EAAMhR,QACRglB,SAAShlB,OlE2BqBmtB,EkE3BOnc,EAAKhR,OlE4B/B,IAAIotB,WACYC,gBAAgBF,EAAU,aACjCG,WAA2BC,WkE7BjD,GACC,CAAK,OAAJvc,QAAI,IAAJA,OAAI,EAAJA,EAAMhR,SAEVqX,EAAAA,EAAAA,YAAU,KACR,GAAIqV,EAAW,OACf,IAAKvc,EAAM,OAEX,MAAMqd,EAAWxI,SAASC,eAAe9U,EAAK7G,MAAM,IAChDkkB,GACFhuB,OAAO0lB,SAAS,EAAGsI,EAASrI,UAC9B,GACC,CAACuH,EAAWvc,KAGbzQ,EAAAA,EAAAA,MAAA,OAAKqB,MAAO,CAAEyjB,aAAc,OAAQ3kB,SAAA,EAClCM,EAAAA,EAAAA,KAAC0X,GAAM,CAAC5G,QAASA,IAChB1M,IAASpE,EAAAA,EAAAA,KAACirB,GAAK,CAACzsB,KAAM4F,EAAMC,WAC7B9E,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,cAAab,SAAA,EAC1BM,EAAAA,EAAAA,KAACstB,GAAS,CAACxc,QAASA,KACpB9Q,EAAAA,EAAAA,KAACmrB,GAAG,CAACjlB,KAAM6K,EAAOD,QAASA,IAC1B/K,EAAM1D,KAAI,CAAC6D,EAAMkI,KAChBpO,EAAAA,EAAAA,KAACmrB,GAAG,CAAcjlB,KAAMA,EAAM4K,QAASA,GAA7B5K,EAAKqB,MAEfsR,EAAU,GAAc,WAATpQ,KACfzI,EAAAA,EAAAA,KAAA,OAAKO,UAAU,eAAcb,UAC3BM,EAAAA,EAAAA,KAACoZ,GAAK,CAACP,QAASA,EAAS+O,QAAM,UAIrC5nB,EAAAA,EAAAA,KAACutB,GAAM,CAACzc,QAASA,EAASib,WAAYA,IACrC1f,EAAMI,SACLzM,EAAAA,EAAAA,KAACwtB,GAAU,CACT1c,QAASA,EACT6Y,gBAzCwB8D,KAC9BX,IACAriB,EAASkH,GAAkBnD,WAAW,IAAI,MA0CpC,EE9CV,GAjCsC3D,IAO/B,IAPgC,KACrCjF,EAAI,MACJ6R,EAAK,MACL3Y,EAAK,OACLoM,EAAM,QACNwiB,EAAO,SACPjtB,GACDoK,EACC,MAAM8iB,EAAiB/uB,IACrB6B,EAAS7B,EAAGgH,EAAMhH,EAAEC,OAAOC,MAAM,EAGnC,OACES,EAAAA,EAAAA,MAAA,QAAAG,SAAA,EACEH,EAAAA,EAAAA,MAAA,QAAMqB,MAAO,CAAE0V,YAAa,OAAQ5W,SAAA,CAAC,IAAE+X,EAAM,OAC5CiW,IAAW1tB,EAAAA,EAAAA,KAAA,SACXkL,EAAO7I,KAAI,CAAC6D,EAAMkI,KACjBpO,EAAAA,EAAAA,KAACmU,EAAAA,EAAKsV,MAAK,CAETppB,KAAK,QACLT,GAAIsG,EAAKN,KACT6R,MAAOvR,EAAK0nB,MACZhoB,KAAM6R,EACN6Q,QAASpiB,EAAKN,OAAS9G,EACvBA,MAAOoH,EAAKN,KACZioB,OAAQH,EACRjtB,SAAUktB,GARLvf,OAWJ,ECJX,GA5BuCvD,IAMhC,IANiC,KACtCjF,EAAI,MACJ9G,EAAK,MACL2Y,EAAK,QACLqW,EAAO,SACPrtB,GACDoK,EAKC,OACEtL,EAAAA,EAAAA,MAAA,SAAOwuB,QAASnoB,EAAMhF,MAAO,CAAE0V,YAAa,OAAQ5W,SAAA,EAClDM,EAAAA,EAAAA,KAAA,QAAMY,MAAO,CAAE0V,YAAa,OAAQ5W,SAAE+X,KACtCzX,EAAAA,EAAAA,KAAA,SACEK,KAAK,SACLuF,KAAMA,EACN9G,MAAOA,EACP2B,SAXgB7B,IACpB6B,EAAS7B,EAAGgH,EAAMhH,EAAEC,OAAOC,MAAM,EAW7ByB,UAAU,eAECY,IAAZ2sB,GACC9tB,EAAAA,EAAAA,KAAA,QAAMY,MAAO,CAAE6Y,WAAY,OAAQ/Z,SAAEouB,IACnC,OACE,ECpCCE,GAAW,CACtB,CACEC,QAAS,iCACTxF,KAAM,CACJ,CAAC,SACD,CAAC,iBACD,CAAC,wBAAyB,iCAC1B,CAAC,mBAAoB,8BAGzB,CACEwF,QAAS,6CACTxF,KAAM,CAAC,CAAC,eAAgB,gBAAiB,CAAC,2BAE5C,CACEwF,QAAS,uCACTxF,KAAM,CACJ,CAAC,yBACD,CAAC,uBACD,CAAC,qBAKMyF,GAAa,CACxBhf,MAAO,CACL7O,KAAM,QACNoX,MAAO,+FACPiW,SAAS,EACTxiB,OAAQ,CACN,CAAEtF,KAAM,SAAUgoB,MAAO,8CACzB,CAAEhoB,KAAM,YAAagoB,MAAO,kCAC5B,CAAEhoB,KAAM,OAAQgoB,MAAO,0CAG3B7iB,cAAe,CACb1K,KAAM,SACNoX,MAAO,6FACPvV,IAAK,EACLiP,IAAK,IAEPhC,sBAAuB,CACrB9O,KAAM,WACNoX,MAAO,gJAETrI,8BAA+B,CAC7B/O,KAAM,SACNoX,MAAO,GACPvV,IAAK,GACLiP,IAAK,IACL2c,QAAS,sBAEXze,iBAAkB,CAChBhP,KAAM,WACNoX,MAAO,iHAETnI,yBAA0B,CACxBjP,KAAM,SACNoX,MAAO,GACPvV,IAAK,GACLiP,IAAK,IACL2c,QAAS,sBAGXve,aAAc,CACZlP,KAAM,WACNoX,MAAO,4JACP+R,UAAU,GAEZha,aAAc,CACZnP,KAAM,SACN8Q,IAAK,IACLsG,MAAO,GACPqW,QAAS,eACTtE,UAAU,GAEZ/Z,sBAAuB,CACrBpP,KAAM,WACNoX,MAAO,oNACP+R,UAAU,GAGZ9Z,sBAAuB,CACrBrP,KAAM,WACNoX,MAAO,4LAET9H,oBAAqB,CACnBtP,KAAM,WACNoX,MAAO,0IAET7H,eAAgB,CACdvP,KAAM,WACNoX,MAAO,4PC/EX,GAT8B5M,IAAyB,IAAxB,KAAEjF,EAAI,SAAElG,GAAUmL,EAC/C,OACEtL,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEM,EAAAA,EAAAA,KAAA,OAAKO,UAAU,aAAYb,SAAEkG,KAC7B5F,EAAAA,EAAAA,KAAA,OAAKO,UAAU,cAAab,SAAEA,MAC1B,EC2LV,GArL0ByuB,KACxB,MAAM1jB,EAAWN,KACXikB,GAAWC,EAAAA,EAAAA,MAEX3qB,EAAU2G,IAAgBS,GAAUA,EAAMpH,WAEzCoH,EAAO+a,IAAYtnB,EAAAA,EAAAA,UAAS,CACjCwH,MAAOrC,EAAQqC,QAGXuoB,EAAYA,KAChBF,EAAS,KAAK,EAeV3tB,EAAWA,CACf7B,EACAgH,EACA9G,KAEA,IAAIiH,EAAQkF,OAAOsjB,OAAO,CAAC,EAAGzjB,EAAM/E,OACpCA,EAAMH,GAAQ9G,EACd+mB,GAAQhc,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLiB,GAAK,IACR/E,UACA,EAGJ,IAAIyoB,EAAO,GACX,IAAK,IAAIC,KAAOT,GAAU,CACxB,IAAIvF,EAAO,GACX,IAAK,IAAIra,KAAKqgB,EAAIhG,KAAM,CACtB,MAAMiG,EAAMD,EAAIhG,KAAKra,GACrB,IAAIugB,EAAU,GACd,IAAK,IAAI/oB,KAAQ8oB,EAAK,CACpB,MAAMxoB,EAAOgoB,GAAWtoB,GACxB,IAAKM,EAAM,SAEX,MAAMpH,EAAQgM,EAAM/E,MAAMH,GAER,UAAdM,EAAK7F,KACPsuB,EAAQ7sB,MACN9B,EAAAA,EAAAA,KAAC4uB,GAAW,CAEVhpB,KAAMA,EACN6R,MAAOvR,EAAKuR,MACZvM,OAAQhF,EAAKgF,OACbpM,MAAOA,EACP4uB,QAASxnB,EAAKwnB,QACdjtB,SAAUA,GANLmF,IASc,WAAdM,EAAK7F,MACV6F,EAAKuR,OACPkX,EAAQ7sB,MACN9B,EAAAA,EAAAA,KAAA,SACE+tB,QAASnoB,EAEThF,MAAO,CAAEiuB,WAAY,WAAYnvB,SAEhCwG,EAAKuR,OAHD7R,EAAO,WAOlB+oB,EAAQ7sB,MACNvC,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,iBAAgBb,SAAA,EAC7BM,EAAAA,EAAAA,KAACI,EAAAA,EAAW,CACVC,KAAK,SACL6B,IAAKgE,EAAKhE,IACViP,IAAKjL,EAAKiL,IACVrS,MAAOA,EACP0qB,SAAUtjB,EAAKsjB,SACf/oB,SAAW7B,GAAM6B,EAAS7B,EAAGgH,EAAMhH,EAAEC,OAAOC,OAC5CyB,UAAU,QACVd,KAAK,OAENyG,EAAK4nB,UACJ9tB,EAAAA,EAAAA,KAAA,QAEEY,MAAO,CAAE6Y,WAAY,MAAOlD,KAAM,YAAa7W,SAE9CwG,EAAK4nB,SAHDloB,EAAO,cAbmBA,KAqBhB,WAAdM,EAAK7F,KACdsuB,EAAQ7sB,MACN9B,EAAAA,EAAAA,KAAC8uB,GAAY,CAEXlpB,KAAMA,EACN6R,MAAOvR,EAAKuR,MACZqW,QAAS5nB,EAAK4nB,QACdhvB,MAAOA,EACP2B,SAAUA,GALLmF,IAQc,aAAdM,EAAK7F,MACdsuB,EAAQ7sB,MACN9B,EAAAA,EAAAA,KAACmU,EAAAA,EAAKsV,MAAK,CACT7pB,GAAIgG,EACJvF,KAAK,WACLoX,MAAOvR,EAAKuR,MAEZ7R,KAAMA,EACN0iB,QAA2B,SAAlBzf,OAAO/J,GAChB0qB,SAAUtjB,EAAKsjB,SACf/oB,SAAW7B,GAAM6B,EAAS7B,EAAGgH,EAAMiD,OAAOjK,EAAEC,OAAOypB,UACnD1nB,MAAO,CAAE2V,KAAM,WAAYM,OAAQ,MAAOmD,SAAU,SAL/CpU,GASb,CAEA6iB,EAAK3mB,MACH9B,EAAAA,EAAAA,KAAA,OAAaO,UAAU,cAAab,SACjCivB,GADOvgB,GAId,CAEAogB,EAAK1sB,MACH9B,EAAAA,EAAAA,KAAC+uB,GAAG,CAAmBnpB,KAAM6oB,EAAIR,QAAQvuB,SACtC+oB,GADOgG,EAAIR,SAIlB,CAEA,OACE1uB,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,eAAcb,SAAA,EAC3BM,EAAAA,EAAAA,KAAA,OAAKO,UAAU,iBAAiBK,MAAO,CAAE+U,OAAQ,WAAYjW,UAC3DM,EAAAA,EAAAA,KAAA,KAAAN,SAAG,6DAEJ8uB,GACDjvB,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,aAAYb,SAAA,EACzBM,EAAAA,EAAAA,KAAC0W,GAAAA,EAAM,CACL9W,GAAG,eACHH,KAAK,KACLK,QAAQ,QACRc,MAAO,CAAEiW,OAAQ,OACjBtW,UAAU,SACVI,QAnIaquB,KACnBvkB,EAASqF,GAAeD,KAAK/E,EAAM/E,QACnCuoB,GAAW,EAiIiB5uB,SACvB,QAGDM,EAAAA,EAAAA,KAAC0W,GAAAA,EAAM,CACL9W,GAAG,gBACHH,KAAK,KACLK,QAAQ,QACRc,MAAO,CAAEiW,OAAQ,MAAOjB,MAAO,QAC/BrV,UAAU,SACVI,QAAS2tB,EAAU5uB,SACpB,0CAGDM,EAAAA,EAAAA,KAAC0W,GAAAA,EAAM,CACL9W,GAAG,iBACHH,KAAK,KACLK,QAAQ,QACRc,MAAO,CAAEiW,OAAQ,MAAOjB,MAAO,SAC/BrV,UAAU,SACVI,QA9JasuB,KACnBpJ,GAAQhc,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLiB,GAAK,IACR/E,MAAOkF,OAAOsjB,OAAO,CAAC,EAAGvf,GAAoBjJ,SAC7C,EA0J0BrG,SACvB,iHAIC,EC5KV,GAb4BwvB,KAExBlvB,EAAAA,EAAAA,KAACmvB,GAAAA,EAAS,CAAAzvB,UACRH,EAAAA,EAAAA,MAAC6vB,EAAAA,GAAM,CAAA1vB,SAAA,EACLM,EAAAA,EAAAA,KAACqvB,EAAAA,GAAK,CAACC,KAAK,IAAIC,SAASvvB,EAAAA,EAAAA,KAACgL,GAAU,OACpChL,EAAAA,EAAAA,KAACqvB,EAAAA,GAAK,CAACC,KAAK,aAAaC,SAASvvB,EAAAA,EAAAA,KAACgL,GAAU,OAC7ChL,EAAAA,EAAAA,KAACqvB,EAAAA,GAAK,CAACC,KAAK,aAAaC,SAASvvB,EAAAA,EAAAA,KAACssB,GAAK,OACxCtsB,EAAAA,EAAAA,KAACqvB,EAAAA,GAAK,CAACC,KAAK,eAAeC,SAASvvB,EAAAA,EAAAA,KAACmuB,GAAO,WC8BpD,GA1C+BqB,KAE3BjwB,EAAAA,EAAAA,MAAA,UAAQgB,UAAU,yBAAwBb,SAAA,EACxCM,EAAAA,EAAAA,KAAA,KAAGkU,KAAI,GAAA9U,OAAKwE,EAAM,cAAalE,SAAC,gDAChCM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,YAAWb,SAAC,OAC5BM,EAAAA,EAAAA,KAAA,KAAGkU,KAAI,GAAA9U,OAAKwE,EAAM,cAAalE,SAAC,sDAChCM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,YAAWb,SAAC,OAC5BH,EAAAA,EAAAA,MAAA,KAAAG,SAAA,EACEM,EAAAA,EAAAA,KAAA,KAAGkU,KAAI,GAAA9U,OAAKwE,EAAM,WAAUlE,SAAC,2FAAqB,QAEpDM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,YAAWb,SAAC,OAC5BM,EAAAA,EAAAA,KAAA,KAAGkU,KAAI,GAAA9U,OAAKwE,EAAM,aAAYlE,SAAC,oCAC/BM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,YAAWb,SAAC,OAC5BM,EAAAA,EAAAA,KAAA,KAAG8W,IAAI,WAAW5C,KAAI,GAAA9U,OAAKwE,EAAM,sBAAqBlE,SAAC,0CAGvDM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,YAAWb,SAAC,OAC5BM,EAAAA,EAAAA,KAAA,KAAG8W,IAAI,WAAW5C,KAAI,GAAA9U,OAAKwE,EAAM,eAAclE,SAAC,gDAGhDM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,YAAWb,SAAC,OAC5BM,EAAAA,EAAAA,KAAA,KAAGkU,KAAK,qBAAoBxU,SAAC,yEAC7BM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,YAAWb,SAAC,OAC5BM,EAAAA,EAAAA,KAAA,KAAGkU,KAAK,uBAAsBxU,SAAC,6EAC/BM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,YAAWb,SAAC,OAC5BM,EAAAA,EAAAA,KAAA,KAAG8W,IAAI,WAAW5C,KAAK,qBAAoBxU,SAAC,4DAG5CM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,YAAWb,SAAC,OAC5BM,EAAAA,EAAAA,KAAA,KAAGkU,KAAI,GAAA9U,OAAKwE,EAAM,gBAAelE,SAAC,oCAClCM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,YAAWb,SAAC,OAC5BM,EAAAA,EAAAA,KAAA,KAAGkU,KAAI,GAAA9U,OAAKwE,EAAM,eAAclE,SAAC,kEACjCM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,YAAWb,SAAC,OAC5BM,EAAAA,EAAAA,KAAA,KAAGkU,KAAI,GAAA9U,OAAKwE,EAAM,sBAAqBlE,SAAC,gDACxCM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,YAAWb,SAAC,OAC5BM,EAAAA,EAAAA,KAAA,KAAGkU,KAAI,GAAA9U,OAAKwE,EAAM,iBAAgBlE,SAAC,8BACnCM,EAAAA,EAAAA,KAAA,QAAMO,UAAU,YAAWb,SAAC,OAC5BM,EAAAA,EAAAA,KAAA,QAAAN,SAAM,W,0BCnCZ,MAoBA,GApBwCmL,IAAgC,IAA/B,SAAEnL,EAAQ,YAAE+vB,GAAa5kB,EAChE,OACEtL,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,iBAAgBb,SAAA,CAC5BA,GACDH,EAAAA,EAAAA,MAAA,OACEgB,UAAU,gBACVI,QAAS8uB,EACTC,WAAYD,EAAY/vB,SAAA,EAExBM,EAAAA,EAAAA,KAAA,KAAGO,UAAU,oBAAoB,cAAY,UAC7CP,EAAAA,EAAAA,KAAA,KACEO,UAAU,mBACV,cAAY,OACZK,MAAO,CAAE6Y,WAAY,eAGrB,ECSV,GAzBsC5O,IAA6B,IAA5B,SAAEnL,EAAQ,SAAEiwB,GAAU9kB,EACvD+kB,EAAS,EAab,OACE5vB,EAAAA,EAAAA,KAAA,OACEO,UAAU,eACVsvB,aAdkBjxB,IACpBgxB,EAAShxB,EAAEkxB,YAAYC,eAAe,GAAGC,OAAO,EAc9CN,WAXgB9wB,IAClB,IAAK+wB,EAAU,OAEf,IAAIM,EAAOrxB,EAAEkxB,YAAYC,eAAe,GAAGC,QACvC/tB,KAAKkkB,IAAI8J,EAAOL,GAAU,KAAKD,GAAUM,EAAOL,EAAO,EAOlClwB,SAEtBA,GACG,ECoCV,GA7CwCmL,IAAoC,IAAnC,QAAEqlB,EAAO,OAAErvB,EAAM,SAAEnB,GAAUmL,EACpE,MAAML,EAAUD,GAAkBmG,KAM5B,OAAEL,GAAW6f,EAEnB,IAAIC,EACA/E,EAKA/rB,OAAO2kB,YAAc,KACvBmM,EAAO,IACP/E,EAAW,CAAEgF,IAAK/f,EAAOsO,EAAG0R,KAAM,KAElCF,EAAO,OACP/E,EAAW,CACTgF,IAAK/f,EAAOsO,EACZ0R,KAAMpuB,KAAKC,IAAImO,EAAOhK,EAAGhH,OAAO2kB,WAAa,OAIjD,IAAKsM,EAAQ7kB,GAAQ8kB,EAAAA,SAASC,QAAQ9wB,GAEtC,OACEM,EAAAA,EAAAA,KAACywB,KAAS,CACRN,KAAMA,EACNO,OAAO,kBACPC,yBAAyB,WAAUjxB,UAGnCH,EAAAA,EAAAA,MAAA,OAAKgB,UAAU,iBAAiBK,OAAKiJ,EAAAA,EAAAA,GAAA,GAAOuhB,GAAW1rB,SAAA,EACrDM,EAAAA,EAAAA,KAAC4wB,GAAa,CAACnB,YAjCAoB,KACnBrmB,EAAQ8F,MAAM4f,EAAQhgB,KAAK,EAgCkBxQ,SACrC4wB,EAAwB/tB,MAAM7C,YAElCM,EAAAA,EAAAA,KAAC8wB,GAAW,CAAApxB,SAAG+L,EAAsBlJ,MAAM7C,eANxCmB,EAQK,ECDhB,GAxCkCgK,IAAkB,IAAjB,QAAEqlB,GAASrlB,EAC5C,MAAM,KAAEqF,GAASggB,GAGf3d,KAAMrM,EAAI,UACVqmB,EAAS,QACTwE,EAAO,MACP3sB,GCb0ByG,KAAkC,IAAjC,QAAEiG,EAAO,OAAE1P,GAAgByJ,EACxD,MAAMmH,GAAcC,EAAAA,EAAAA,MAEpB,OAAOrI,EAAAA,EAAAA,GAAS,CACdE,SAAU,CAACJ,EAAUsnB,iBAAkBlgB,EAAS1P,GAChD4I,QAASvG,UACP,MAAMwtB,EAAkB7e,GAAmBJ,EAAalB,GAExD,GAAImgB,EAAiB,CACnB,GAAe,IAAX7vB,EACF,OAAO6vB,EAAgBlgB,MAClB,CACL,MAAM7K,EAAO+qB,EAAgBzvB,KAAKwG,MAAM9B,GAASA,EAAKqB,IAAMnG,IAC5D,GAAI8E,EACF,OAAOA,CAEX,CACF,CAEA,MAAMA,QAAa2B,EAAkBiJ,EAAS1P,GAC9C,QAAaD,IAAT+E,EACF,MAAM,IAAI+kB,MAAM,0DAAD7rB,OAAcgC,EAAM,6DAGrC,OAAO8E,CAAI,EAEbgE,sBAAsB,GACtB,EDbEgnB,CAAe,CAAEpgB,QAASZ,EAAKY,QAAS1P,OAAQ8O,EAAK9O,SAEzD,OAAImrB,EAAkB,MAGpBhtB,EAAAA,EAAAA,MAAC4xB,GAAa,CAACjB,QAASA,EAAQxwB,SAAA,EAC9BM,EAAAA,EAAAA,KAAC4wB,GAAa,CAAAlxB,SACXqxB,GACC/wB,EAAAA,EAAAA,KAAA,KAAAN,SAAG,0CAEHM,EAAAA,EAAAA,KAACslB,GAAQ,CACP/S,KAAMrM,EACNoe,UAAU,EACVC,OAAO,EACPC,WAAW,OAIjBxkB,EAAAA,EAAAA,KAAC8wB,GAAW,CAAApxB,UACVM,EAAAA,EAAAA,KAACulB,GAAO,CACNhe,EAAO,OAAJrB,QAAI,IAAJA,OAAI,EAAJA,EAAMqB,EACTG,KAAU,OAAJxB,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,KACZgb,KAAMqO,EAAU3sB,EAAMC,QAAU6B,EAAK1H,KACrCsS,QAASZ,EAAKY,QACdqQ,UAAe,OAAJjb,QAAI,IAAJA,OAAI,EAAJA,EAAMvD,KACjB/B,MAAO,CAAEwwB,UAAW,mBAAoB5L,UAAW,cAGzC,EExBpB,GApBoC6L,KAClC,MAAMtrB,EAAQsE,IAAgBS,GAAUA,EAAM6F,SAAS5K,QACjDyE,EAAUD,GAAkBmG,IAC5BgF,GAAMmI,EAAAA,EAAAA,QAAO,MAQnB,OAFAyT,EAAAA,EAAAA,IAAkB5b,GAJS6b,KACzB/mB,EAAQiG,UAAU,KAMlBzQ,EAAAA,EAAAA,KAAA,OAAK0V,IAAKA,EAAIhW,SACXqG,EAAM1D,KAAK6D,IACHlG,EAAAA,EAAAA,KAACwxB,GAAO,CAAiBtB,QAAShqB,GAApBA,EAAK8J,SAExB,ECEV,GAjBsByhB,KACpB,MAAMviB,EAAQ7E,IAAgBS,GAAUA,EAAMpH,QAAQqC,MAAMmJ,QAM5D,OAJAwiB,EAAAA,EAAAA,kBAAgB,KACd7M,SAASpZ,KAAKkmB,aAAa,aAAcziB,EAAM,GAC9C,CAACA,KAGF3P,EAAAA,EAAAA,MAACqyB,EAAAA,GAAU,CAAAlyB,SAAA,EACTM,EAAAA,EAAAA,KAAC+S,GAAM,KACP/S,EAAAA,EAAAA,KAACkvB,GAAS,KACVlvB,EAAAA,EAAAA,KAACwvB,GAAY,KACbxvB,EAAAA,EAAAA,KAACqxB,GAAiB,MACP,E,eCbjB,MAAMrf,GAAc,IAAI6f,EAAAA,EAElBC,GAAOjnB,IAAA,IAAC,MAAE2J,GAAO3J,EAAA,OACrB7K,EAAAA,EAAAA,KAAC+xB,EAAAA,GAAmB,CAACC,OAAQhgB,GAAYtS,UACvCM,EAAAA,EAAAA,KAACiyB,EAAAA,GAAQ,CAACzd,MAAOA,EAAM9U,UACrBM,EAAAA,EAAAA,KAACkyB,GAAAA,EAAW,CAACC,QAAS,KAAM7c,UAAWA,GAAU5V,UAC/CM,EAAAA,EAAAA,KAACyxB,GAAG,SAGY,EAGlBW,GAAYvN,SAASC,eAAe,SAC7BuN,EAAAA,EAAAA,GAAWD,IACnBE,QAAOtyB,EAAAA,EAAAA,KAAC8xB,GAAI,CAACtd,MAAOA,K,GCtBrB+d,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBtxB,IAAjBuxB,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUK,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAGpEI,EAAOD,OACf,CAGAH,EAAoBO,EAAIF,E,MCzBxB,IAAIG,EAAW,GACfR,EAAoBS,EAAI,CAAC1sB,EAAQ2sB,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASllB,EAAI,EAAGA,EAAI4kB,EAAS9xB,OAAQkN,IAAK,CACrC8kB,EAAWF,EAAS5kB,GAAG,GACvB+kB,EAAKH,EAAS5kB,GAAG,GACjBglB,EAAWJ,EAAS5kB,GAAG,GAE3B,IAJA,IAGIrB,GAAY,EACPwmB,EAAI,EAAGA,EAAIL,EAAShyB,OAAQqyB,MACpB,EAAXH,GAAsBC,GAAgBD,IAAanoB,OAAOiF,KAAKsiB,EAAoBS,GAAGO,OAAOv0B,GAASuzB,EAAoBS,EAAEh0B,GAAKi0B,EAASK,MAC9IL,EAASO,OAAOF,IAAK,IAErBxmB,GAAY,EACTqmB,EAAWC,IAAcA,EAAeD,IAG7C,GAAGrmB,EAAW,CACbimB,EAASS,OAAOrlB,IAAK,GACrB,IAAIslB,EAAIP,SACEhyB,IAANuyB,IAAiBntB,EAASmtB,EAC/B,CACD,CACA,OAAOntB,CArBP,CAJC6sB,EAAWA,GAAY,EACvB,IAAI,IAAIhlB,EAAI4kB,EAAS9xB,OAAQkN,EAAI,GAAK4kB,EAAS5kB,EAAI,GAAG,GAAKglB,EAAUhlB,IAAK4kB,EAAS5kB,GAAK4kB,EAAS5kB,EAAI,GACrG4kB,EAAS5kB,GAAK,CAAC8kB,EAAUC,EAAIC,EAuBjB,C,KC3BdZ,EAAoBjrB,EAAKqrB,IACxB,IAAIe,EAASf,GAAUA,EAAOgB,WAC7B,IAAOhB,EAAiB,QACxB,IAAM,EAEP,OADAJ,EAAoBqB,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,E,MCNd,IACII,EADAC,EAAW/oB,OAAOgpB,eAAkBC,GAASjpB,OAAOgpB,eAAeC,GAASA,GAASA,EAAa,UAQtG1B,EAAoB2B,EAAI,SAASr1B,EAAO2F,GAEvC,GADU,EAAPA,IAAU3F,EAAQs1B,KAAKt1B,IAChB,EAAP2F,EAAU,OAAO3F,EACpB,GAAoB,kBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAP2F,GAAa3F,EAAM80B,WAAY,OAAO90B,EAC1C,GAAW,GAAP2F,GAAoC,oBAAf3F,EAAMu1B,KAAqB,OAAOv1B,CAC5D,CACA,IAAIw1B,EAAKrpB,OAAOspB,OAAO,MACvB/B,EAAoBkB,EAAEY,GACtB,IAAIE,EAAM,CAAC,EACXT,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAI5V,EAAiB,EAAP3Z,GAAY3F,EAAyB,iBAAXsf,KAAyB2V,EAAeU,QAAQrW,GAAUA,EAAU4V,EAAS5V,GACxHnT,OAAOypB,oBAAoBtW,GAASuW,SAAS11B,GAASu1B,EAAIv1B,GAAO,IAAOH,EAAMG,KAI/E,OAFAu1B,EAAa,QAAI,IAAM,EACvBhC,EAAoBqB,EAAES,EAAIE,GACnBF,CACR,C,KCxBA9B,EAAoBqB,EAAI,CAAClB,EAASiC,KACjC,IAAI,IAAI31B,KAAO21B,EACXpC,EAAoBqC,EAAED,EAAY31B,KAASuzB,EAAoBqC,EAAElC,EAAS1zB,IAC5EgM,OAAO6pB,eAAenC,EAAS1zB,EAAK,CAAE81B,YAAY,EAAMhjB,IAAK6iB,EAAW31B,IAE1E,ECNDuzB,EAAoBwC,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOb,MAAQ,IAAIc,SAAS,cAAb,EAChB,CAAE,MAAOt2B,GACR,GAAsB,kBAAXS,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBmzB,EAAoBqC,EAAI,CAACX,EAAKiB,IAAUlqB,OAAOmqB,UAAUC,eAAevC,KAAKoB,EAAKiB,GCClF3C,EAAoBkB,EAAKf,IACH,qBAAX2C,QAA0BA,OAAOC,aAC1CtqB,OAAO6pB,eAAenC,EAAS2C,OAAOC,YAAa,CAAEz2B,MAAO,WAE7DmM,OAAO6pB,eAAenC,EAAS,aAAc,CAAE7zB,OAAO,GAAO,E,MCA9D,IAAI02B,EAAkB,CACrB,IAAK,GAaNhD,EAAoBS,EAAEM,EAAKkC,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4BpjB,KACvD,IAKIkgB,EAAUgD,EALVvC,EAAW3gB,EAAK,GAChBqjB,EAAcrjB,EAAK,GACnBsjB,EAAUtjB,EAAK,GAGInE,EAAI,EAC3B,GAAG8kB,EAAS4C,MAAMl2B,GAAgC,IAAxB41B,EAAgB51B,KAAa,CACtD,IAAI6yB,KAAYmD,EACZpD,EAAoBqC,EAAEe,EAAanD,KACrCD,EAAoBO,EAAEN,GAAYmD,EAAYnD,IAGhD,GAAGoD,EAAS,IAAItvB,EAASsvB,EAAQrD,EAClC,CAEA,IADGmD,GAA4BA,EAA2BpjB,GACrDnE,EAAI8kB,EAAShyB,OAAQkN,IACzBqnB,EAAUvC,EAAS9kB,GAChBokB,EAAoBqC,EAAEW,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOjD,EAAoBS,EAAE1sB,EAAO,EAGjCwvB,EAAqBC,KAA8B,wBAAIA,KAA8B,yBAAK,GAC9FD,EAAmBpB,QAAQe,EAAqBO,KAAK,KAAM,IAC3DF,EAAmBj0B,KAAO4zB,EAAqBO,KAAK,KAAMF,EAAmBj0B,KAAKm0B,KAAKF,G,KC/CvF,IAAIG,EAAsB1D,EAAoBS,OAAE9xB,EAAW,CAAC,MAAM,IAAOqxB,EAAoB,QAC7F0D,EAAsB1D,EAAoBS,EAAEiD,E","sources":["components/common/search.tsx","utils.ts","api/api-utils.ts","api/cookies.ts","api/sections.ts","api/topic_info.ts","api/topic_messages.ts","api/topics_list.ts","api/index.ts","store/query-hooks/types.ts","store/query-hooks/use-sections.ts","store/hooks.ts","store/query-hooks/use-topics-list.ts","store/slices/login.ts","api/login.ts","store/slices/new_topic.ts","api/newtopic.ts","store/slices/options.ts","store/slices/tooltips.ts","store/slices/topic.ts","store/slices/new_message.ts","api/new_message.ts","store/query-hooks/use-topic-messages.ts","components/navigation/nav_bar.tsx","store/root.ts","components/login/logged_user.tsx","components/login/login_form.tsx","components/common/error.tsx","components/login/index.tsx","pages/topics_list/sections.tsx","pages/topics_list/header.tsx","pages/topics_list/table_header.tsx","pages/topics_list/row/author-cell.tsx","pages/topics_list/row/count-cell.tsx","pages/topics_list/row/forum-cell.tsx","pages/topics_list/row/last20-cell.tsx","pages/topics_list/row/last-user-cell.tsx","pages/topics_list/row/show_preview_button.tsx","pages/topics_list/row/pages.tsx","pages/topics_list/row/topic_name_cell.tsx","components/preview/preview_buttons.tsx","pages/topic/row/vote_item.tsx","pages/topic/row/vote_chart.tsx","pages/topic/row/vote.tsx","components/extensions/code_highlight.ts","components/extensions/code1c.tsx","components/extensions/link_to_post.tsx","components/extensions/link_to_user.tsx","components/extensions/youtube_link.tsx","components/extensions/custom_link.tsx","components/extensions/internal-image.tsx","pages/topic/row/processed_text.tsx","pages/topic/row/msg_text.tsx","pages/topic/row/user_ico.tsx","pages/topic/row/user_info.tsx","components/preview/preview_content.tsx","components/preview/topic_preview.tsx","pages/topics_list/row/index.tsx","components/common/pages.tsx","components/common/text_editor.tsx","pages/topics_list/new_topic.tsx","pages/topics_list/index.tsx","pages/topic/header.tsx","pages/topic/topic_info.tsx","pages/topic/row/index.tsx","pages/topic/footer.tsx","pages/topic/new_message.tsx","pages/topic/index.tsx","pages/topic/hooks/use-enable-updater.ts","pages/options/radio_option.tsx","pages/options/string_option.tsx","pages/options/formscheme.ts","pages/options/tab.tsx","pages/options/index.tsx","pages/approutes.tsx","components/navigation/nav_bar_footer.tsx","components/tooltips/tooltip_header.tsx","components/tooltips/tooltip_body.tsx","components/tooltips/tooltip_window.tsx","components/tooltips/tooltip.tsx","store/query-hooks/use-message-data.ts","components/tooltips/tooltips_container.tsx","App.tsx","index.tsx","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/jsonp chunk loading","../webpack/startup"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\n\r\nimport \"./search.css\";\r\nimport { useEventCallback } from \"usehooks-ts\";\r\n\r\nconst Search = (): React.ReactElement => {\r\n  const [searchEngine, setSearchEngine] = useState(\"Яндекс\");\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleTextChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setText(e.target.value);\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleKeyDown = useEventCallback(\r\n    (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n      if (e.key === \"Enter\") {\r\n        doSearch();\r\n      }\r\n    }\r\n  );\r\n\r\n  const doSearch = useEventCallback(() => {\r\n    let url: string;\r\n    switch (searchEngine) {\r\n      case \"Яндекс\":\r\n        url = `https://www.yandex.ru/search/?text=${text}&site=forum.mista.ru`;\r\n        break;\r\n      case \"Google\":\r\n        url = `https://www.google.ru/search?q=${text}+site:forum.mista.ru`;\r\n        break;\r\n    }\r\n\r\n    window.open(url);\r\n    setText(\"\");\r\n  });\r\n\r\n  return (\r\n    <InputGroup size=\"sm\">\r\n      <DropdownButton\r\n        id=\"search-engine\"\r\n        title=\"\"\r\n        size=\"sm\"\r\n        variant=\"light\"\r\n        onSelect={setSearchEngine}\r\n      >\r\n        <Dropdown.Item eventKey=\"Яндекс\">Яндекс</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"Google\">Google</Dropdown.Item>\r\n      </DropdownButton>\r\n      <FormControl\r\n        type=\"text\"\r\n        placeholder={`${searchEngine}: поиск`}\r\n        className=\"search-input input\"\r\n        onKeyDown={handleKeyDown}\r\n        onChange={handleTextChange}\r\n        value={text}\r\n      />\r\n      <InputGroup.Text className=\"search-button\" onClick={doSearch}>\r\n        <i className=\"fa fa-search input\" style={{ zIndex: 1000 }} />\r\n      </InputGroup.Text>\r\n    </InputGroup>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import dayjs from \"dayjs\";\r\n\r\nexport const toNumber = (\r\n  str: string | number | undefined | null,\r\n  defaultValue = 0\r\n) => {\r\n  if (!str) return defaultValue;\r\n  if (typeof str === \"number\") return str;\r\n\r\n  const number = parseInt(str, 10);\r\n  if (isNaN(number)) return defaultValue;\r\n  return number;\r\n};\r\n\r\nexport const groupBy = <T, K extends keyof any>(\r\n  list: T[],\r\n  getKey: (item: T) => K\r\n) =>\r\n  list.reduce((previous, currentItem) => {\r\n    const group = getKey(currentItem);\r\n    if (!previous[group]) previous[group] = [];\r\n    previous[group].push(currentItem);\r\n    return previous;\r\n  }, {} as Record<K, T[]>);\r\n\r\nexport const parseJSON = (text: string): {} => {\r\n  try {\r\n    return JSON.parse(text);\r\n  } catch (e) {}\r\n\r\n  try {\r\n    text = text\r\n      .replace(/\\\\</g, \"<\")\r\n      .replace(/\\\\>/g, \">\")\r\n      .replace(/\\\\&/g, \"&\")\r\n      .replace(/\\\\'/g, \"'\")\r\n      .replace(/\\\\\"/g, \"\")\r\n      .replace(/ \"/g, ' \\\\\"')\r\n      .replace(/\"\"/g, '\\\\\"\"')\r\n      .replace(/\\t/g, \"\\\\t\")\r\n      .replace(/\"(\\.| |\\?)/g, '\\\\\"$1');\r\n\r\n    //           console.log(text);\r\n    return JSON.parse(text);\r\n\r\n    //return eval(text);\r\n  } catch (e) {\r\n    console.error(e.message);\r\n    console.log(text);\r\n\r\n    return {};\r\n  }\r\n};\r\n\r\nexport const getPageNumber = (locationPage: string): number | \"last20\" => {\r\n  if (locationPage === \"last20\") return \"last20\";\r\n  return toNumber(locationPage, 1);\r\n};\r\n\r\nexport const getMaxPage = (count: number): number => {\r\n  if (count === -1 || count === undefined) return -1;\r\n  return Math.min(Math.ceil(count / 100), 10) || 1;\r\n};\r\n\r\nexport const childrenToText = (children: any): string[] => {\r\n  if (!children) return [\"\"];\r\n\r\n  return children.map((value) => {\r\n    if (typeof value === \"string\") {\r\n      return value;\r\n    } else if (value.type === \"br\") {\r\n      return \"<br>\";\r\n    } else if (\r\n      value.type.displayName === \"Connect(LinkToPost)\" ||\r\n      value.type.displayName === \"Connect(t)\"\r\n    ) {\r\n      return value.props.number;\r\n    } else {\r\n      console.log(value);\r\n      return value;\r\n    }\r\n  });\r\n};\r\n\r\nexport const extractTextFromHTML = (htmltext: string): string => {\r\n  const parser = new DOMParser();\r\n  const floatingElement = parser.parseFromString(htmltext, \"text/html\");\r\n  return (floatingElement.firstChild as HTMLElement).innerText;\r\n};\r\n\r\nexport function isToday(td: Date | number): boolean {\r\n  return dayjs(td).isSame(new Date(), \"day\");\r\n}\r\n\r\nexport const formattedTime = (time: number): string => {\r\n  if (time === 2147483648000) return \"\";\r\n\r\n  if (isToday(time)) {\r\n    return dayjs(time).format(\"HH:mm\");\r\n  } else {\r\n    return dayjs(time).format(\"DD.MM.YY\");\r\n  }\r\n};\r\n","import fetchJsonp from \"fetch-jsonp\";\r\nimport * as utils from \"src/utils\";\r\nimport { domain } from \".\";\r\n\r\nexport const paramsToString = (paramsPrefix: string, params?: {}): string => {\r\n  if (!params) return \"\";\r\n\r\n  let searchParams = new URLSearchParams();\r\n  for (let key in params) {\r\n    const value = params[key];\r\n    if (value !== undefined) searchParams.append(key, value);\r\n  }\r\n\r\n  let str = searchParams.toString();\r\n  if (str.length > 0) return paramsPrefix + str;\r\n  else return \"\";\r\n};\r\n\r\nexport const fetchJsonpAndGetJson = async (\r\n  url: string,\r\n  params?: {},\r\n  options?: {}\r\n): Promise<any> => {\r\n  let fullUrl = `${domain}/${url}${paramsToString(\"?\", params)}`;\r\n  const response = await fetchJsonp(fullUrl);\r\n  let responseJson = await response.json();\r\n  let json;\r\n  if (typeof responseJson === \"string\") {\r\n    try {\r\n      json = JSON.parse(responseJson);\r\n    } catch (e) {\r\n      json = utils.parseJSON(responseJson);\r\n    }\r\n  } else {\r\n    json = responseJson;\r\n  }\r\n  return json;\r\n};\r\n\r\nexport const fetchAndGetJson = async (\r\n  url: string,\r\n  params?: {},\r\n  init?: RequestInit\r\n): Promise<any> => {\r\n  let fullUrl = `${domain}/${url}${paramsToString(\"?\", params)}`;\r\n\r\n  if (!init)\r\n    init = {\r\n      mode: \"cors\",\r\n      credentials: \"same-origin\",\r\n    };\r\n\r\n  const response = await fetch(fullUrl, init);\r\n  return await response.json();\r\n};\r\n","import { urlCookies } from \".\";\r\nimport { fetchJsonpAndGetJson } from \"./api-utils\";\r\nimport { ILogin } from \"src/store\";\r\n\r\ntype IAPIResponse = {\r\n  cookie: {\r\n    entr_id: string;\r\n    entr_key: string;\r\n    entr_hash: string;\r\n    musthave: string;\r\n    hotlog: string;\r\n  };\r\n  session: {\r\n    entered: number;\r\n    user_id: string;\r\n    user_name: string;\r\n    user_hash: string;\r\n    is_moderator: number;\r\n    light_moderator: number;\r\n    section: string;\r\n    show_moderator_tools: number;\r\n    kb: string;\r\n    registered_unixtime: string;\r\n    guid: string;\r\n    last_error?: string;\r\n    user: {\r\n      id: string;\r\n      name: string;\r\n      is_moderator: boolean;\r\n      light_moderator: boolean;\r\n      kb: boolean;\r\n      section_owner: boolean;\r\n      section: string;\r\n      registered_unixtime: string;\r\n      balance: number;\r\n    };\r\n  };\r\n};\r\n\r\nfunction convertResponse(response: IAPIResponse): ILogin {\r\n  const { session } = response;\r\n\r\n  return {\r\n    userId: Number(session?.user_id),\r\n    userName: session?.user_name,\r\n    userHash: session?.user_hash,\r\n    lastError: session?.last_error,\r\n  };\r\n}\r\n\r\nasync function fetchCookies(): Promise<ILogin | undefined> {\r\n  const response = await fetchJsonpAndGetJson(urlCookies);\r\n  return convertResponse(response);\r\n}\r\n\r\nexport { fetchCookies };\r\n","import { groupBy } from \"src/utils\";\r\nimport { urlSections } from \".\";\r\nimport { fetchJsonpAndGetJson } from \"./api-utils\";\r\nimport type { ISectionItem } from \"src/store\";\r\n\r\ninterface IAPIResponse {\r\n  id: number;\r\n  forum: string;\r\n  shortn: string;\r\n  fulln: string;\r\n}\r\n\r\nfunction convertResponse(response: IAPIResponse): ISectionItem {\r\n  return {\r\n    id: response.id,\r\n    forum: response.forum,\r\n    code: response.shortn,\r\n    name: response.fulln,\r\n  };\r\n}\r\n\r\nexport const fetchSections = async (): Promise<{\r\n  items: ISectionItem[];\r\n  tree: { [key: string]: ISectionItem[] };\r\n}> => {\r\n  const list = await fetchJsonpAndGetJson(urlSections);\r\n  const items = list.map(convertResponse);\r\n  return {\r\n    items,\r\n    tree: groupBy(items, (item) => item.forum),\r\n  };\r\n};\r\n\r\nexport type TFetchSectionsData = Awaited<ReturnType<typeof fetchSections>>;\r\n","import { urlTopicInfo } from \".\";\r\nimport { fetchAndGetJson } from \"./api-utils\";\r\nimport type { ITopicInfo } from \"src/store\";\r\n\r\ninterface IAPIResponse {\r\n  id: string;\r\n  text: string;\r\n  forum: string;\r\n  section: string;\r\n  created: string;\r\n  user_id: string;\r\n  user_name: string;\r\n  updated: string;\r\n  updated_name: string;\r\n  answers_count: string;\r\n  down: number;\r\n  closed: number;\r\n  deleted: number;\r\n  is_voting: number;\r\n  voting: {\r\n    select: string;\r\n    result: number;\r\n  }[];\r\n}\r\n\r\nfunction convertResponse(response: IAPIResponse): ITopicInfo {\r\n  let voting = [];\r\n  if (response.voting)\r\n    voting = response.voting.map((x) => ({\r\n      text: x.select,\r\n      count: x.result,\r\n    }));\r\n\r\n  return {\r\n    id: parseInt(response.id),\r\n    title: response.text,\r\n    forum: response.forum,\r\n    sectionId: response.section,\r\n    created: parseInt(response.created) * 1000,\r\n    authorId: response.user_id,\r\n    author: response.user_name,\r\n    updated: parseInt(response.updated) * 1000,\r\n    lastUser: response.updated_name,\r\n    count: parseInt(response.answers_count),\r\n    down: response.down,\r\n    closed: response.closed,\r\n    deleted: response.deleted,\r\n    isVoting: response.is_voting === 1,\r\n    voting,\r\n  };\r\n}\r\n\r\nasync function fetchTopicInfo(id: number): Promise<ITopicInfo> {\r\n  const info = await fetchAndGetJson(urlTopicInfo, { id });\r\n  return convertResponse(info);\r\n}\r\n\r\nexport { fetchTopicInfo };\r\n","import { urlTopicMessages } from \".\";\r\nimport { fetchAndGetJson } from \"./api-utils\";\r\nimport type { ITopicMessage, ITopicMessagesList } from \"src/store\";\r\n\r\ninterface IAPIRequest {\r\n  id: number;\r\n  from?: number;\r\n  to?: number;\r\n}\r\n\r\nexport interface ITopicMessageRequest extends IAPIRequest {}\r\n\r\ninterface IAPIResponse {\r\n  id: string;\r\n  n: string;\r\n  user: string;\r\n  userId: string;\r\n  text: string;\r\n  utime: string;\r\n  vote: number;\r\n}\r\n\r\nfunction convertResponse(response: IAPIResponse): ITopicMessage {\r\n  return {\r\n    id: parseInt(response.id),\r\n    n: parseInt(response.n),\r\n    user: response.user,\r\n    userId: parseInt(response.userId),\r\n    text: response.text,\r\n    time: parseInt(response.utime) * 1000,\r\n    vote: response.vote,\r\n  };\r\n}\r\n\r\nasync function fetchTopicMessages(\r\n  params?: ITopicMessageRequest\r\n): Promise<ITopicMessagesList> {\r\n  const list = await fetchAndGetJson(urlTopicMessages, params);\r\n  return list.map(convertResponse);\r\n}\r\n\r\nasync function fetchTopicMessage(\r\n  id: number,\r\n  n: number\r\n): Promise<ITopicMessage> {\r\n  const to = n === 0 ? n + 1 : n;\r\n\r\n  const list = await fetchAndGetJson(urlTopicMessages, { id, from: n, to });\r\n  return list.map(convertResponse).find((item: ITopicMessage) => item.n === n);\r\n}\r\n\r\nexport { fetchTopicMessages, fetchTopicMessage };\r\n","import { toNumber } from \"src/utils\";\r\nimport { urlTopicsList } from \".\";\r\nimport { fetchAndGetJson } from \"./api-utils\";\r\n\r\nimport type { ITopicsList, ITopicsListItem } from \"src/store\";\r\n\r\nexport interface ITopicsListRequest {\r\n  itemsPerPage?: number | string | null;\r\n  page?: number | string | null;\r\n  beforeTime?: string | null;\r\n  forum?: string | null;\r\n  section?: string | null;\r\n  userId?: string | null;\r\n  myTopics?: string | null;\r\n}\r\n\r\ninterface IAPIRequest {\r\n  topics?: string;\r\n  section_short_name?: string;\r\n  forum?: string;\r\n  user_id?: string;\r\n  mytopics?: string;\r\n}\r\n\r\ninterface IAPIResponse {\r\n  id: number;\r\n  forum: string;\r\n  sect1: string;\r\n  sect2: string;\r\n  v8: string;\r\n  closed: number;\r\n  down: number;\r\n  paid: number;\r\n  text: string;\r\n  message: string;\r\n  created: number;\r\n  utime: number;\r\n  user: string;\r\n  user0: string;\r\n  is_voting: number;\r\n  answ: number;\r\n}\r\n\r\nfunction convertRequest(request: ITopicsListRequest): IAPIRequest {\r\n  const page = toNumber(request.page, 1);\r\n  const itemsCount = toNumber(request.itemsPerPage, 20) * page;\r\n\r\n  return {\r\n    topics: String(itemsCount),\r\n    section_short_name: request.section,\r\n    forum: request.forum,\r\n    user_id: request.userId,\r\n    mytopics: request.myTopics,\r\n  };\r\n}\r\n\r\nfunction convertResponse(response: IAPIResponse): ITopicsListItem {\r\n  return {\r\n    id: response.id,\r\n    forum: response.forum,\r\n    section: response.sect1,\r\n    sectionCode: response.sect2,\r\n    author: response.user0,\r\n    lastUser: response.user,\r\n    created: response.created * 1000,\r\n    updated: response.utime * 1000,\r\n    count: response.answ,\r\n    text: response.text,\r\n    closed: response.closed === 1,\r\n    down: response.down === 1,\r\n    pinned: response.utime === 2147483648,\r\n    isVoting: response.is_voting === 1,\r\n  };\r\n}\r\n\r\nasync function fetchTopicsList(\r\n  params?: ITopicsListRequest\r\n): Promise<ITopicsList> {\r\n  const request = convertRequest(params);\r\n\r\n  const itemsPerPage = toNumber(params?.itemsPerPage, 20);\r\n\r\n  const list = await fetchAndGetJson(urlTopicsList, request);\r\n  return list.map(convertResponse).slice(-itemsPerPage);\r\n}\r\n\r\nexport { fetchTopicsList };\r\nexport type TFetchTopicsListData = Awaited<ReturnType<typeof fetchTopicsList>>;\r\n","export const domain: string =\r\n  localStorage.getItem(\"domain\") || \"https://dev.mista.ru\";\r\n//export const domain = 'https://dev.mista.ru';\r\nexport const urlTopicsList: string =\r\n  localStorage.getItem(\"urlTopicsList\") || \"api/topic.php\";\r\nexport const urlTopicInfo: string =\r\n  localStorage.getItem(\"urlTopicInfo\") || \"ajax_gettopic.php\";\r\nexport const urlTopicMessages: string =\r\n  localStorage.getItem(\"urlTopicMessages\") || \"api/message.php\";\r\nexport const urlLogin: string =\r\n  localStorage.getItem(\"urlLogin\") || \"users.php?action=do_enter\";\r\nexport const urlLogout: string =\r\n  localStorage.getItem(\"urlLogout\") || \"users.php?action=exit\";\r\nexport const urlCookies: string =\r\n  localStorage.getItem(\"urlCookies\") || \"ajax_cookie.php\";\r\nexport const urlSections: string =\r\n  localStorage.getItem(\"urlSections\") || \"ajax_getsectionslist.php\";\r\nexport const urlNewMessage: string =\r\n  localStorage.getItem(\"urlNewMessage\") || \"topic.php?id=:id&page=1\";\r\nexport const urlNewTopic: string =\r\n  localStorage.getItem(\"urlNewTopic\") || \"index.php\";\r\nexport const urlAddBookmark: string =\r\n  localStorage.getItem(\"urlAddBookmark\") || \"ajax_addbookmark.php\";\r\nexport const urlSearch: string =\r\n  localStorage.getItem(\"urlSearch\") || \"ajax_find.php\";\r\n\r\nexport * from \"./cookies\";\r\nexport * from \"./login\";\r\nexport * from \"./new_message\";\r\nexport * from \"./newtopic\";\r\nexport * from \"./sections\";\r\nexport * from \"./topic_info\";\r\nexport * from \"./topic_messages\";\r\nexport * from \"./topics_list\";\r\n","export enum QueryKeys {\r\n  Sections = \"sections\",\r\n  TopicsList = \"topics-list\",\r\n  TopicMessages = \"topic-messages\",\r\n  TopicMessageData = \"topic-message-data\",\r\n  UpdateTopicMessages = \"update-topic-messages\",\r\n}\r\n\r\nexport interface TOptions {\r\n  enabled?: boolean;\r\n  refetchInterval?: number;\r\n}\r\n","import { useQuery, UseQueryOptions } from \"@tanstack/react-query\";\r\nimport { fetchSections, TFetchSectionsData } from \"src/api\";\r\nimport { QueryKeys } from \"./types\";\r\n\r\nexport const useSections = <TError = Error, TData = TFetchSectionsData>(\r\n  options?: Omit<\r\n    UseQueryOptions<TFetchSectionsData, TError, TData, [QueryKeys.Sections]>,\r\n    \"queryKey\" | \"queryFn\"\r\n  >\r\n) => {\r\n  return useQuery({\r\n    queryKey: [QueryKeys.Sections],\r\n    queryFn: fetchSections,\r\n    placeholderData: { items: [], tree: {} },\r\n    refetchOnWindowFocus: false,\r\n    ...options,\r\n  });\r\n};\r\n","import { useMemo } from \"react\";\r\nimport { ActionCreatorsMapObject, bindActionCreators } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"./types\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport const useActionCreators = (actions: ActionCreatorsMapObject) => {\r\n  const dispatch = useAppDispatch();\r\n  return useMemo(\r\n    () => bindActionCreators(actions, dispatch),\r\n    [actions, dispatch]\r\n  );\r\n};\r\n","import { useQuery, UseQueryOptions } from \"@tanstack/react-query\";\r\nimport { fetchTopicsList, TFetchTopicsListData } from \"src/api\";\r\nimport { QueryKeys } from \"./types\";\r\nimport { useAppSelector } from \"../hooks\";\r\n\r\ntype IProps = {\r\n  searchParams: URLSearchParams;\r\n};\r\n\r\nexport const useTopicsList = <TError = Error, TData = TFetchTopicsListData>(\r\n  { searchParams }: IProps,\r\n  options?: Omit<\r\n    UseQueryOptions<\r\n      TFetchTopicsListData,\r\n      TError,\r\n      TData,\r\n      [QueryKeys.TopicsList, ...string[]]\r\n    >,\r\n    \"queryKey\" | \"queryFn\"\r\n  >\r\n) => {\r\n  const itemsPerPage = useAppSelector(\r\n    (state) => state.options.items.topicsPerPage\r\n  );\r\n\r\n  return useQuery({\r\n    queryKey: [QueryKeys.TopicsList, ...Object.values(searchParams)],\r\n    queryFn: () => {\r\n      const params = Object.fromEntries(searchParams);\r\n      return fetchTopicsList({ itemsPerPage, ...params });\r\n    },\r\n    placeholderData: (previousData) => previousData ?? [],\r\n    refetchOnWindowFocus: false,\r\n    ...options,\r\n  });\r\n};\r\n","import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nimport { fetchLogin, fetchLogout, ILoginRequest } from \"src/api\";\r\nimport { fetchCookies } from \"src/api\";\r\n\r\nimport { RootState } from \"../types\";\r\n\r\nexport interface ILogin {\r\n  userId?: number;\r\n  userName?: string;\r\n  userHash?: string;\r\n  lastError?: string;\r\n}\r\n\r\nexport interface LoginState {\r\n  status: \"init\" | \"loading\" | \"success\" | \"error\";\r\n  logged: boolean;\r\n  userId?: number;\r\n  userName?: string;\r\n  userHash?: string;\r\n  lastError?: string;\r\n  error?: string;\r\n  lastUpdated?: number;\r\n  isFetching?: boolean;\r\n}\r\n\r\nconst initialState: LoginState = {\r\n  status: \"init\",\r\n  logged: false,\r\n};\r\n\r\nexport const checkLogin = createAsyncThunk(\"login/check\", async () => {\r\n  return await fetchCookies();\r\n});\r\n\r\nexport const doLogin = createAsyncThunk(\r\n  \"login/login\",\r\n  async (params: ILoginRequest, { dispatch }) => {\r\n    await fetchLogin(params);\r\n    return fetchCookies();\r\n  }\r\n);\r\n\r\nexport const doLogout = createAsyncThunk(\"login/logout\", async () => {\r\n  return await fetchLogout();\r\n});\r\n\r\nconst shouldLogin = ({ login }: RootState): boolean => {\r\n  if (!login) return true;\r\n  if (login.status === \"loading\") return false;\r\n\r\n  return true;\r\n};\r\n\r\nexport const doLoginIfNeeded =\r\n  (username: string, password: string): any =>\r\n  (dispatch: any, getState: any) => {\r\n    if (shouldLogin(getState())) {\r\n      return dispatch(doLogin({ username, password }));\r\n    }\r\n  };\r\n\r\nexport const checkLoginIfNeeded = (): any => (dispatch: any, getState: any) => {\r\n  if (shouldLogin(getState())) {\r\n    return dispatch(checkLogin());\r\n  }\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"login\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(doLogin.pending, (state) => {\r\n        state.status = \"loading\";\r\n        delete state.error;\r\n      })\r\n      .addCase(\r\n        doLogin.fulfilled,\r\n        (state, { payload }: PayloadAction<ILogin>) => {\r\n          state.status = \"success\";\r\n          state.userId = payload.userId;\r\n          state.userName = payload.userName;\r\n          state.userHash = payload.userHash;\r\n          state.logged = true;\r\n          delete state.error;\r\n        }\r\n      )\r\n      .addCase(doLogin.rejected, (state, { error }) => {\r\n        state.status = \"error\";\r\n        state.error = error?.message;\r\n      })\r\n      // logout\r\n      .addCase(doLogout.pending, (state) => {\r\n        state.status = \"loading\";\r\n        delete state.error;\r\n      })\r\n      .addCase(doLogout.fulfilled, (state) => {\r\n        state.status = \"success\";\r\n        state.logged = false;\r\n\r\n        delete state.userId;\r\n        delete state.userName;\r\n        delete state.userHash;\r\n        delete state.error;\r\n      })\r\n      .addCase(doLogout.rejected, (state, { error }) => {\r\n        state.status = \"error\";\r\n        state.error = error?.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { actions: loginActions, reducer: login } = slice;\r\n","import { domain, urlLogin, urlLogout } from \".\";\r\nimport { paramsToString } from \"./api-utils\";\r\n\r\nexport interface ILoginRequest {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport const fetchLogin = async (params: ILoginRequest): Promise<void> => {\r\n  await fetch(`${domain}/${urlLogin}`, {\r\n    method: \"POST\",\r\n    body: paramsToString(\"\", {\r\n      user_name: params.username,\r\n      user_password: params.password,\r\n    }),\r\n    mode: \"no-cors\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      Accept: \"text/html,application/xhtml+xml,application/xml\",\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n    redirect: \"follow\",\r\n  });\r\n};\r\n\r\nexport const fetchLogout = async (): Promise<void> => {\r\n  const fullUrl = `${domain}/${urlLogout}`;\r\n  await fetch(fullUrl, {\r\n    mode: \"no-cors\",\r\n    credentials: \"include\",\r\n  });\r\n};\r\n","import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nimport { fetchNewTopic, INewTopicRequest } from \"src/api\";\r\nimport { RootState } from \"../types\";\r\n\r\nexport interface ISectionItem {\r\n  id: number;\r\n  forum: string;\r\n  code: string;\r\n  name: string;\r\n}\r\n\r\nexport type NewTopicState = {\r\n  status: \"init\" | \"loading\" | \"success\" | \"error\";\r\n  section: ISectionItem;\r\n  text: string;\r\n  subject: string;\r\n  forum: string;\r\n  isVoting: boolean;\r\n  error?: string;\r\n};\r\n\r\nconst initialState: NewTopicState = {\r\n  status: \"init\",\r\n  section: null,\r\n  text: \"\",\r\n  subject: \"\",\r\n  forum: \"1C\",\r\n  isVoting: false,\r\n};\r\n\r\nexport type postNewTopicParams = {\r\n  subject: string;\r\n  text: string;\r\n  section: number;\r\n  forum: string;\r\n  isVoting: boolean;\r\n  votingItems?: Array<string>;\r\n  onSuccess?: () => void;\r\n};\r\n\r\nexport const postNewTopic = createAsyncThunk(\r\n  \"newTopic/post\",\r\n  async (params: postNewTopicParams) => {\r\n    let fetchParams: INewTopicRequest = {\r\n      message_text: params.text,\r\n      topic_text: params.subject,\r\n      target_section: String(params.section),\r\n      target_forum: params.forum.toLowerCase(),\r\n      action: \"new\",\r\n      rnd: Math.round(Math.random() * 10000000000),\r\n      voting: params.isVoting ? 1 : 0,\r\n    };\r\n\r\n    if (params.votingItems)\r\n      for (let i = 0; i < params.votingItems.length; i++) {\r\n        fetchParams[`section${i + 1}`] = params.votingItems[i];\r\n      }\r\n\r\n    await fetchNewTopic(fetchParams);\r\n    // if (params.onSuccess)\r\n    // params.onSuccess();\r\n  }\r\n);\r\n\r\nexport const shouldPost = ({ newTopic }: RootState): boolean => {\r\n  if (!newTopic) return false;\r\n  if (newTopic.status === \"loading\") return false;\r\n\r\n  return true;\r\n};\r\n\r\nexport const postNewTopicIfNeeded =\r\n  (params: postNewTopicParams) => (dispatch: any, getState: any) => {\r\n    const state = getState();\r\n    if (shouldPost(state)) {\r\n      return dispatch(postNewTopic(params));\r\n    }\r\n  };\r\n\r\nconst clear = (state: NewTopicState) => {\r\n  state.status = \"init\";\r\n  state.text = \"\";\r\n  state.subject = \"\";\r\n  state.forum = \"\";\r\n  state.isVoting = false;\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"newTopic\",\r\n  initialState,\r\n  reducers: {\r\n    clear,\r\n    changeSubject: (state, { payload }: PayloadAction<string>) => {\r\n      state.subject = payload;\r\n    },\r\n    changeText: (state, { payload }: PayloadAction<string>) => {\r\n      state.text = payload;\r\n    },\r\n    changeSection: (state, { payload }: PayloadAction<ISectionItem>) => {\r\n      state.section = payload;\r\n      state.forum = payload?.forum.toLowerCase();\r\n    },\r\n    showVoting: (state, { payload }: PayloadAction<boolean>) => {\r\n      state.isVoting = payload;\r\n    },\r\n    setError: (state, { payload }: PayloadAction<string>) => {\r\n      state.error = payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postNewTopic.pending, (state) => {\r\n        state.status = \"loading\";\r\n        delete state.error;\r\n      })\r\n      .addCase(postNewTopic.fulfilled, (state) => {\r\n        clear(state);\r\n        delete state.error;\r\n      })\r\n      .addCase(postNewTopic.rejected, (state, { error }) => {\r\n        state.status = \"error\";\r\n        state.error = error?.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { actions: newTopicActions, reducer: newTopic } = slice;\r\n","import { domain, urlNewTopic } from \".\";\r\nimport { paramsToString } from \"./api-utils\";\r\n\r\nexport interface INewTopicRequest {\r\n  action: \"new\";\r\n  rnd: number;\r\n  topic_text: string;\r\n  message_text: string;\r\n  target_section: string;\r\n  target_forum: string;\r\n  voting: number;\r\n  select1?: string;\r\n  select2?: string;\r\n  select3?: string;\r\n  select4?: string;\r\n  select5?: string;\r\n  select6?: string;\r\n  select7?: string;\r\n  select8?: string;\r\n  select9?: string;\r\n  select10?: string;\r\n}\r\n\r\nexport const fetchNewTopic = async (params: INewTopicRequest): Promise<any> => {\r\n  await fetch(`${domain}/${urlNewTopic}`, {\r\n    method: \"POST\",\r\n    body: paramsToString(\"\", params),\r\n    mode: \"no-cors\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n  });\r\n};\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface IOptionsItems {\r\n  theme: \"yellow\" | \"lightgray\" | \"dark\";\r\n  topicsPerPage: string;\r\n  autoRefreshTopicsList: string;\r\n  autoRefreshTopicsListInterval: string;\r\n  autoRefreshTopic: string;\r\n  autoRefreshTopicInterval: string;\r\n  tooltipDelay: string;\r\n  showTooltips: string;\r\n  showTooltipOnPostLink: string;\r\n  showYoutubeVideoTitle: string;\r\n  replaceCatalogMista: string;\r\n  fixBrokenLinks: string;\r\n}\r\n\r\nexport interface OptionsState {\r\n  voteColors: Array<string>;\r\n  items: IOptionsItems;\r\n  show?: boolean;\r\n}\r\n\r\nexport const defaultOptionsState: OptionsState = {\r\n  voteColors: [\r\n    \"#FF1616\", //1\r\n    \"#1A861A\", //2\r\n    \"#0023FF\", //3\r\n    \"#FF6B18\", //4\r\n    \"#9B3A6E\", //5\r\n    \"#567655\", //6\r\n    \"#233345\", //7\r\n    \"#CC0000\", //8\r\n    \"#00CCCC\", //9\r\n    \"#0000CC\", //10\r\n  ],\r\n  items: {\r\n    theme: \"lightgray\",\r\n    topicsPerPage: \"20\",\r\n    autoRefreshTopicsList: \"false\",\r\n    autoRefreshTopicsListInterval: \"60\",\r\n    autoRefreshTopic: \"true\",\r\n    autoRefreshTopicInterval: \"60\",\r\n    //tooltips\r\n    showTooltips: \"true\",\r\n    tooltipDelay: \"500\",\r\n    showTooltipOnPostLink: \"true\",\r\n    //links\r\n    showYoutubeVideoTitle: \"true\",\r\n    replaceCatalogMista: \"true\",\r\n    fixBrokenLinks: \"true\",\r\n  },\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"options\",\r\n  initialState: defaultOptionsState,\r\n  reducers: {\r\n    save: (state, { payload }: PayloadAction<IOptionsItems>) => {\r\n      for (let key in payload) {\r\n        const value = String(payload[key]);\r\n        state.items[key] = value;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { actions: optionsActions, reducer: options } = slice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface ITooltipKeys {\r\n  topicId: number;\r\n  number: number;\r\n}\r\n\r\nexport interface ICoords {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface ITooltipItem {\r\n  hash: string;\r\n  keys: ITooltipKeys;\r\n  coords: ICoords;\r\n  zIndex: number;\r\n}\r\n\r\nexport interface ITooltipsList extends Array<ITooltipItem> {}\r\n\r\nexport interface TooltipsState {\r\n  items: ITooltipsList;\r\n}\r\n\r\nconst initialState: TooltipsState = {\r\n  items: [],\r\n};\r\n\r\nconst show = (\r\n  state: TooltipsState,\r\n  { payload }: PayloadAction<{ keys: ITooltipKeys; coords: ICoords }>\r\n) => {\r\n  const hash = JSON.stringify(payload.keys);\r\n  const index = state.items.findIndex((item) => item.hash === hash);\r\n  let zIndex = 0;\r\n  if (state.items.length)\r\n    zIndex = state.items[state.items.length - 1].zIndex + 1;\r\n  if (index === -1)\r\n    state.items.push({\r\n      keys: payload.keys,\r\n      coords: payload.coords,\r\n      hash,\r\n      zIndex,\r\n    });\r\n  else {\r\n    //state.list = moveToEnd(state.list, index);\r\n    state.items[state.items.length - 1].zIndex = zIndex;\r\n  }\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: \"tooltips\",\r\n  initialState,\r\n  reducers: {\r\n    show,\r\n    close: (state, { payload }: PayloadAction<ITooltipKeys>) => {\r\n      const hash = JSON.stringify(payload);\r\n      state.items = state.items.filter((val) => val.hash !== hash);\r\n    },\r\n    closeAll: (state) => {\r\n      state.items = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { actions: tooltipsActions, reducer: tooltips } = slice;\r\n","import { fetchTopicMessage, fetchTopicMessages, fetchTopicInfo } from \"src/api\";\r\nimport { toNumber } from \"src/utils\";\r\n\r\nexport interface IVotingItem {\r\n  text: string;\r\n  count: number;\r\n}\r\n\r\nexport interface ITopicInfo {\r\n  id: number;\r\n  title: string;\r\n  forum?: string;\r\n  sectionId?: string;\r\n  created?: number;\r\n  authorId?: string;\r\n  author?: string;\r\n  updated?: number;\r\n  lastUser?: string;\r\n  count?: number;\r\n  down?: number;\r\n  closed?: number;\r\n  deleted?: number;\r\n  isVoting?: boolean;\r\n  voting?: IVotingItem[];\r\n}\r\n\r\nexport interface ITopicMessage {\r\n  id: number;\r\n  n: number;\r\n  user: string;\r\n  userId: number;\r\n  text: string;\r\n  time: number;\r\n  vote: number;\r\n}\r\n\r\nexport interface ITopicMessagesList extends Array<ITopicMessage> {}\r\n\r\nconst getFirstLastMessageNumber = (count: number, page: number | string) => {\r\n  if (page === \"last20\") {\r\n    if (count === -1) {\r\n      return [0, 1010];\r\n    } else {\r\n      return [Math.max(0, count - 19), count];\r\n    }\r\n  }\r\n\r\n  const pageNum = toNumber(page, 1) - 1;\r\n  return [pageNum * 100, pageNum * 100 + 99];\r\n};\r\n\r\nexport const fetchTopic = async ({\r\n  topicId,\r\n  page,\r\n  item0,\r\n}: {\r\n  topicId: number;\r\n  page: number | string;\r\n  item0?: ITopicMessage;\r\n}) => {\r\n  let info: ITopicInfo;\r\n  try {\r\n    info = await fetchTopicInfo(topicId);\r\n  } catch (e) {\r\n    console.error(e);\r\n    info = {\r\n      id: topicId,\r\n      title: \"\",\r\n      count: -1,\r\n    };\r\n  }\r\n\r\n  let [first, last] = getFirstLastMessageNumber(info.count, page);\r\n  if (first === 0 && !!item0) {\r\n    first = 1;\r\n  }\r\n\r\n  let items: ITopicMessagesList = await fetchTopicMessages({\r\n    id: topicId,\r\n    from: first,\r\n    to: last,\r\n  });\r\n\r\n  let _item0 = item0;\r\n  if (first === 0) {\r\n    _item0 = items.shift();\r\n  } else {\r\n    _item0 = await fetchTopicMessage(topicId, 0);\r\n  }\r\n\r\n  if (info.count === 0 && items.length > 0) {\r\n    info.count = items[items.length - 1].n;\r\n  }\r\n\r\n  if (page === \"last20\" && items.length > 20) {\r\n    items = items.slice(-20);\r\n  }\r\n\r\n  return {\r\n    info,\r\n    item0: _item0,\r\n    list: items,\r\n  };\r\n};\r\n\r\nexport type TFetchTopicData = Awaited<ReturnType<typeof fetchTopic>>;\r\n","import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { INewMessageRequest, fetchNewMessage } from \"src/api\";\r\n\r\nexport type NewMessageState = {\r\n  status: \"init\" | \"loading\" | \"success\" | \"error\";\r\n  text: string;\r\n  error?: string;\r\n};\r\n\r\nconst initialState: NewMessageState = {\r\n  status: \"init\",\r\n  text: \"\",\r\n};\r\n\r\nexport type PostNewmessageParams = {\r\n  text: string;\r\n  topicId: string;\r\n  voting_select?: number;\r\n  onSuccess?: () => void;\r\n};\r\n\r\nexport const postNewMessage = createAsyncThunk(\r\n  \"newMessage/post\",\r\n  async (params: PostNewmessageParams) => {\r\n    let fetchParams: INewMessageRequest = {\r\n      message_text: params.text,\r\n      action: \"new\",\r\n      topic_id: params.topicId,\r\n      rnd: Math.round(Math.random() * 10000000000),\r\n    };\r\n\r\n    if (params.voting_select) fetchParams.voting_select = params.voting_select;\r\n\r\n    await fetchNewMessage(fetchParams);\r\n\r\n    // if (params.onSuccess)\r\n    //   params.onSuccess();\r\n  }\r\n);\r\n\r\nconst slice = createSlice({\r\n  name: \"newMessage\",\r\n  initialState,\r\n  reducers: {\r\n    changeText: (state, { payload }: PayloadAction<string>) => {\r\n      state.text = payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(postNewMessage.pending, (state) => {\r\n        state.status = \"loading\";\r\n        delete state.error;\r\n      })\r\n      .addCase(postNewMessage.fulfilled, (state) => {\r\n        state.text = \"\";\r\n        delete state.error;\r\n      })\r\n      .addCase(postNewMessage.rejected, (state, { error }) => {\r\n        state.status = \"error\";\r\n        state.error = error?.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { actions: newMessageActions, reducer: newMessage } = slice;\r\n","import { domain, urlNewMessage } from \".\";\r\nimport { paramsToString } from \"./api-utils\";\r\n\r\n// New message\r\nexport interface INewMessageRequest {\r\n  message_text: string;\r\n  action: \"new\";\r\n  topic_id: string;\r\n  rnd: number;\r\n  voting_select?: number;\r\n  as_admin?: boolean;\r\n}\r\n\r\nexport const fetchNewMessage = async (\r\n  params: INewMessageRequest\r\n): Promise<any> => {\r\n  const url = urlNewMessage.replace(\":id\", params.topic_id);\r\n\r\n  const options: RequestInit = {\r\n    method: \"POST\",\r\n    body: paramsToString(\"\", params),\r\n    mode: \"no-cors\",\r\n    credentials: \"include\",\r\n    headers: {\r\n      Accept: \"text/html,application/xhtml+xml,application/xml\",\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n    redirect: \"follow\",\r\n  };\r\n\r\n  const result = await fetch(`${domain}/${url}`, options);\r\n  return result;\r\n};\r\n","import { useSearchParams } from \"react-router-dom\";\r\nimport { fetchTopic, TFetchTopicData } from \"../slices\";\r\nimport {\r\n  QueryClient,\r\n  useQuery,\r\n  useQueryClient,\r\n  UseQueryOptions,\r\n} from \"@tanstack/react-query\";\r\nimport { QueryKeys } from \"./types\";\r\nimport { fetchTopicMessages } from \"src/api\";\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n};\r\n\r\nexport const useTopicMessages = <TError = Error, TData = TFetchTopicData>(\r\n  { topicId }: IProps,\r\n  options?: Omit<\r\n    UseQueryOptions<\r\n      TFetchTopicData,\r\n      TError,\r\n      TData,\r\n      [QueryKeys.TopicMessages, number, ...string[]]\r\n    >,\r\n    \"queryKey\" | \"queryFn\"\r\n  >\r\n) => {\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const page = searchParams.get(\"page\");\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  return useQuery({\r\n    queryKey: [QueryKeys.TopicMessages, topicId, page],\r\n    queryFn: () => {\r\n      const cacheData = getCachedTopicData(queryClient, topicId);\r\n      return fetchTopic({ topicId, page, item0: cacheData?.item0 });\r\n    },\r\n    placeholderData: (previousData) => previousData,\r\n    refetchOnWindowFocus: false,\r\n    ...options,\r\n  });\r\n};\r\n\r\nexport const useUpdateMessages = <TError = Error, TData = TFetchTopicData>(\r\n  { topicId }: IProps,\r\n  options?: Omit<\r\n    UseQueryOptions<\r\n      Boolean,\r\n      TError,\r\n      TData,\r\n      [QueryKeys.UpdateTopicMessages, number]\r\n    >,\r\n    \"queryKey\" | \"queryFn\"\r\n  >\r\n) => {\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const page = searchParams.get(\"page\");\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  return useQuery({\r\n    queryKey: [QueryKeys.UpdateTopicMessages, topicId],\r\n    queryFn: async () => {\r\n      const cacheData = getCachedTopicData(queryClient, topicId);\r\n      if (!cacheData) return true;\r\n\r\n      const data = await fetchTopicMessages({\r\n        id: topicId,\r\n        from: cacheData.info.count + 1,\r\n        to: 1050,\r\n      });\r\n\r\n      if (data.length === 0) return true;\r\n\r\n      queryClient.setQueryData<TFetchTopicData>(\r\n        [QueryKeys.TopicMessages, topicId, page],\r\n        (prevData) => {\r\n          return {\r\n            info: {\r\n              ...prevData.info,\r\n              count: data.at(-1).n,\r\n            },\r\n            item0: prevData.item0,\r\n            list: [...prevData.list, ...data],\r\n          };\r\n        }\r\n      );\r\n\r\n      return true;\r\n    },\r\n    initialData: true,\r\n    refetchOnMount: false,\r\n    ...options,\r\n  });\r\n};\r\n\r\nexport const getCachedTopicData = (\r\n  queryClient: QueryClient,\r\n  topicId: number\r\n) => {\r\n  const topicQueries = queryClient.getQueriesData({\r\n    queryKey: [QueryKeys.TopicMessages, topicId],\r\n  });\r\n\r\n  if (topicQueries.length === 0) return undefined;\r\n\r\n  return topicQueries[0][1] as TFetchTopicData;\r\n};\r\n","import Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Link, useLocation, useSearchParams } from \"react-router-dom\";\r\n\r\nimport Search from \"src/components/common/search\";\r\n\r\nimport \"./nav_bar.css\";\r\nimport { useTopicsList } from \"src/store/query-hooks\";\r\n\r\nconst NavBar: React.FC = () => {\r\n  const location = useLocation();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const forum = searchParams.get(\"forum\");\r\n  const { refetch } = useTopicsList({ searchParams }, { enabled: false });\r\n\r\n  const onClick = (e: React.MouseEvent) => {\r\n    if (location.pathname === \"/\" && searchParams.size === 0) {\r\n      e.preventDefault();\r\n      refetch();\r\n    }\r\n  };\r\n\r\n  const internalLinks = [\r\n    { name: \"1C\", link: `/index.php?forum=1C` },\r\n    { name: \"IT\", link: `/index.php?forum=IT` },\r\n    { name: \"JOB\", link: `/index.php?forum=JOB` },\r\n    { name: \"LIFE\", link: `/index.php?forum=LIFE` },\r\n    { name: \"Настройки\", link: \"/options.php\" },\r\n  ];\r\n\r\n  const externalLinks = [\r\n    { name: \"Wiki\", link: \"https://wiki.mista.ru\" },\r\n    { name: \"Книга знаний\", link: \"https://kb.mista.ru\" },\r\n  ];\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" fixed=\"top\">\r\n      <Navbar.Brand as={Link} to={`/`} onClick={onClick}>\r\n        React.Mista\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse>\r\n        <Nav className=\"me-auto\">\r\n          {internalLinks.map((item, i) => (\r\n            <Nav.Item key={\"i\" + i}>\r\n              <Nav.Link to={item.link} active={item.name === forum} as={Link}>\r\n                {item.name}\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          ))}\r\n          {externalLinks.map((item, i) => (\r\n            <Nav.Item key={\"e\" + i}>\r\n              <Nav.Link href={item.link}>{item.name}</Nav.Link>\r\n            </Nav.Item>\r\n          ))}\r\n        </Nav>\r\n        <Form className=\"d-flex\">\r\n          <Search />\r\n        </Form>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport { options, login, tooltips, newTopic, newMessage } from \"./slices\";\r\n\r\nconst persistConfig = {\r\n  key: \"options\",\r\n  storage,\r\n};\r\n\r\nexport const reducer = combineReducers({\r\n  options: persistReducer(persistConfig, options),\r\n  login,\r\n  tooltips,\r\n  newTopic,\r\n  newMessage,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\n\r\nimport { loginActions, useActionCreators } from \"src/store\";\r\nimport { domain } from \"src/api\";\r\n\r\ntype IProps = {\r\n  userId: number;\r\n  userName: string;\r\n};\r\n\r\ntype HTMLProps = React.HTMLProps<HTMLSpanElement>;\r\nconst CustomToggle = React.forwardRef<HTMLSpanElement, HTMLProps>(\r\n  ({ children, onClick }, ref) => (\r\n    <span\r\n      ref={ref}\r\n      style={{ cursor: \"pointer\" }}\r\n      className=\"link\"\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        onClick(e);\r\n      }}\r\n    >\r\n      {children}\r\n    </span>\r\n  )\r\n);\r\n\r\nconst LoggedUser: React.FC<IProps> = ({ userId, userName }) => {\r\n  const actions = useActionCreators(loginActions);\r\n\r\n  const onLogout = (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n    actions.doLogout();\r\n  };\r\n\r\n  const onMenuSelect = (\r\n    eventKey: string,\r\n    event: React.SyntheticEvent\r\n  ): void => {\r\n    if (eventKey === \"exit\") {\r\n      onLogout(event);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ float: \"left\" }}>\r\n      <Dropdown id=\"dropdown-custom-menu\" onSelect={onMenuSelect}>\r\n        <span>Привет, </span>\r\n        <Dropdown.Toggle as={CustomToggle}>{userName} ▼</Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item\r\n            eventKey=\"profile\"\r\n            href={`${domain}/users.php?id=${userId}`}\r\n          >\r\n            Профиль\r\n          </Dropdown.Item>\r\n          <Dropdown.Item\r\n            eventKey=\"myTopics\"\r\n            href={`#/index.php?user_id=${userId}`}\r\n          >\r\n            Мои темы\r\n          </Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item eventKey=\"options\" href={`#/options.php`}>\r\n            Настройки\r\n          </Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item eventKey=\"exit\">Выход</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoggedUser;\r\n","import { FormEvent, useState } from \"react\";\r\nimport { FormControl, Button } from \"react-bootstrap\";\r\n\r\nimport { useAppDispatch } from \"src/store\";\r\nimport { doLoginIfNeeded } from \"src/store\";\r\n\r\nconst LoginForm: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onLogin = (event: FormEvent) => {\r\n    event.preventDefault();\r\n    dispatch(doLoginIfNeeded(username, password));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form name=\"enterform\" className=\"flex-row\" style={{ flexWrap: \"wrap\" }}>\r\n        <FormControl\r\n          id=\"username\"\r\n          type=\"text\"\r\n          placeholder=\"Имя\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          size=\"sm\"\r\n          className=\"input\"\r\n          style={{ marginRight: \"5px\", flex: \"0 1 300px\" }}\r\n        />\r\n        <FormControl\r\n          id=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Пароль\"\r\n          maxLength={20}\r\n          autoComplete=\"off\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          size=\"sm\"\r\n          className=\"input\"\r\n          style={{ marginRight: \"5px\", flex: \"0 1 300px\" }}\r\n        />\r\n        <Button size=\"sm\" variant=\"light\" className=\"button\" onClick={onLogin}>\r\n          Войти\r\n        </Button>\r\n      </form>\r\n      <p style={{ margin: \"0px\" }}>\r\n        Войти можно на сайте{\" \"}\r\n        <a href=\"https://forum.mista.ru/\">forum.mista.ru</a>\r\n      </p>\r\n      <a rel=\"nofollow\" href=\"https://forum.mista.ru/user_registration.php\">\r\n        Регистрация\r\n      </a>\r\n      <span style={{ margin: \"5px\" }}>|</span>\r\n      <a rel=\"nofollow\" href=\"https://forum.mista.ru/remember_password.php\">\r\n        Забыли пароль?\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import \"./error.css\";\r\n\r\ntype IProps = {\r\n  text: string;\r\n};\r\n\r\nconst ErrorElem: React.FC<IProps> = ({ text }) => {\r\n  if (!text) return null;\r\n\r\n  return (\r\n    <div className=\"error\" dangerouslySetInnerHTML={{ __html: text }}></div>\r\n  );\r\n};\r\n\r\nexport default ErrorElem;\r\n","import { useEffect } from \"react\";\r\nimport LoggedUser from \"./logged_user\";\r\nimport LoginForm from \"./login_form\";\r\nimport ErrorElem from \"../common/error\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"src/store\";\r\nimport { checkLoginIfNeeded } from \"src/store\";\r\n\r\nconst Login: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const logged = useAppSelector((state) => state.login.logged);\r\n  const userId = useAppSelector((state) => state.login.userId);\r\n  const userName = useAppSelector((state) => state.login.userName);\r\n  const error = useAppSelector((state) => state.login.error);\r\n\r\n  useEffect(() => {\r\n    dispatch(checkLoginIfNeeded());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {logged ? (\r\n        <LoggedUser userId={userId} userName={userName} />\r\n      ) : (\r\n        <LoginForm />\r\n      )}\r\n      {error && <ErrorElem text={error} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import CSS from \"csstype\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { ISectionItem } from \"src/store\";\r\nimport { useSections } from \"src/store/query-hooks\";\r\n\r\nexport type IProps = {\r\n  id: string;\r\n  defaultValue: string;\r\n  selected?: string;\r\n  style?: CSS.Properties;\r\n  size?: \"sm\" | \"lg\";\r\n  onChange?: (\r\n    e: React.ChangeEvent<HTMLElement>,\r\n    value: ISectionItem | undefined\r\n  ) => void;\r\n};\r\n\r\nconst Sections: React.FC<IProps> = ({\r\n  id,\r\n  defaultValue,\r\n  selected,\r\n  style,\r\n  size,\r\n  onChange,\r\n}) => {\r\n  const { data } = useSections();\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>): void => {\r\n    if (!onChange) return;\r\n\r\n    const code = e.currentTarget.value;\r\n    const item = data.items.find((item) => item.code === code);\r\n    onChange(e, item);\r\n  };\r\n\r\n  return (\r\n    <Form.Select\r\n      aria-label=\"Секция\"\r\n      onChange={handleChange}\r\n      value={selected}\r\n      style={style}\r\n      className=\"input\"\r\n      size={size}\r\n      id={id}\r\n    >\r\n      <option value=\"\">{defaultValue}</option>\r\n      {Object.keys(data.tree).map((forum) => (\r\n        <optgroup key={forum} label={forum}>\r\n          {data.tree[forum].map((item) => (\r\n            <option key={item.id} value={item.code}>\r\n              {item.name}\r\n            </option>\r\n          ))}\r\n        </optgroup>\r\n      ))}\r\n    </Form.Select>\r\n  );\r\n};\r\n\r\nexport default Sections;\r\n","import { useSearchParams } from \"react-router-dom\";\r\n\r\nimport Login from \"../../components/login\";\r\nimport Sections from \"./sections\";\r\nimport { ISectionItem } from \"src/store\";\r\n\r\nconst Header: React.FC = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const onSectionChange = (e, value: ISectionItem | undefined) => {\r\n    setSearchParams((prevSearchParams) => {\r\n      const newSearchParams = new URLSearchParams(prevSearchParams);\r\n      if (value) {\r\n        newSearchParams.set(\"section\", value.code);\r\n      } else {\r\n        newSearchParams.delete(\"section\");\r\n      }\r\n      return newSearchParams;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div className=\"header-left\">\r\n        <Login />\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <Sections\r\n          id=\"sect\"\r\n          defaultValue=\"--Все секции--\"\r\n          selected={searchParams.get(\"section\")}\r\n          onChange={onSectionChange}\r\n          size=\"sm\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","type IProps = {\r\n  onUpdateClick: () => void;\r\n  isLoading: boolean;\r\n};\r\n\r\nconst TableHeader: React.FC<IProps> = ({ isLoading, onUpdateClick }) => {\r\n  return (\r\n    <div\r\n      className=\"table-header\" /* style={{ position: \"sticky\", top: \"39px\" }} */\r\n    >\r\n      <div style={{ letterSpacing: \"-1px\" }}>Раздел</div>\r\n      <div></div>\r\n      <div>Тема</div>\r\n      <div>Re</div>\r\n      <div>Автор</div>\r\n      <div>\r\n        <span\r\n          style={{ cursor: \"pointer\" }}\r\n          title=\"Обновить список\"\r\n          onClick={onUpdateClick}\r\n        >\r\n          {isLoading ? \"Обновляется\" : \"Обновлено\"}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableHeader;\r\n","import { ITopicsListItem } from \"src/store\";\r\n\r\ntype IProps = {\r\n  item: ITopicsListItem;\r\n};\r\n\r\nconst AuthorCell: React.FC<IProps> = ({ item }) => (\r\n  <div className=\"cell-author\">\r\n    <div className=\"cell-author--inner\">\r\n      <i\r\n        aria-hidden=\"true\"\r\n        className=\"fa fa-user-circle\"\r\n        style={{ marginRight: \"3px\" }}\r\n      ></i>\r\n      {item.author}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default AuthorCell;\r\n","import React from \"react\";\r\nimport { ITopicsListItem } from \"src/store\";\r\n\r\ntype IProps = {\r\n  item: ITopicsListItem;\r\n} & React.HTMLAttributes<HTMLDivElement>;\r\n\r\nconst CountCell: React.FC<IProps> = ({ item, onClick }) => (\r\n  <div className=\"cell-answ\" onClick={onClick}>\r\n    <div className=\"cell-answ--inner\">\r\n      <i\r\n        className=\"fa fa-comments-o\"\r\n        aria-hidden=\"true\"\r\n        style={{ marginRight: \"3px\" }}\r\n      ></i>\r\n      <span>{item.count}</span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default CountCell;\r\n","import { ITopicsListItem } from \"src/store\";\r\n\r\ntype IProps = {\r\n  item: ITopicsListItem;\r\n};\r\n\r\nconst ForumCell: React.FC<IProps> = ({ item }) => (\r\n  <div className=\"cell-forum\">\r\n    <div className=\"cell-forum--inner\">{item.forum}</div>\r\n  </div>\r\n);\r\n\r\nexport default ForumCell;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ITopicsListItem } from \"src/store\";\r\n\r\ntype IProps = {\r\n  item: ITopicsListItem;\r\n};\r\n\r\nconst Last20Cell: React.FC<IProps> = ({ item }) => (\r\n  <div className=\"cell-last20\">\r\n    <Link\r\n      to={`/topic.php?id=${item.id}&page=last20#F`}\r\n      style={{\r\n        color: \"inherit\",\r\n        display: \"block\",\r\n        width: \"100%\",\r\n        textAlign: \"center\",\r\n      }}\r\n    >\r\n      <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n    </Link>\r\n  </div>\r\n);\r\n\r\nexport default Last20Cell;\r\n","import { useEffect, useState } from \"react\";\r\nimport { fetchTopicMessage } from \"src/api\";\r\nimport { ITopicsListItem } from \"src/store\";\r\nimport { formattedTime } from \"src/utils\";\r\n\r\ntype IProps = {\r\n  item: ITopicsListItem;\r\n};\r\n\r\nconst LastUserCell: React.FC<IProps> = ({ item }) => {\r\n  const [time, setTime] = useState(item.updated);\r\n\r\n  useEffect(() => {\r\n    if (!item.pinned) return;\r\n\r\n    const updateTime = async () => {\r\n      const msg = await fetchTopicMessage(item.id, item.count);\r\n      setTime(msg.time);\r\n    };\r\n\r\n    updateTime();\r\n  }, [item.pinned, item.id, item.count]);\r\n\r\n  useEffect(() => {\r\n    setTime(item.updated);\r\n  }, [item.updated]);\r\n\r\n  return (\r\n    <div className=\"cell-lastuser\">\r\n      <div className=\"cell-author--inner\">\r\n        <span className=\"cell-lastuser-time\">{formattedTime(time)}</span>\r\n        <span className=\"cell-lastuser-user\">{item.lastUser}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LastUserCell;\r\n","type IProps = {\r\n  expanded: boolean;\r\n  onClick: () => void;\r\n};\r\n\r\nconst ShowPreviewButton: React.FC<IProps> = ({ expanded, onClick }) => {\r\n  return (\r\n    <div className=\"cell-preview-link\" onClick={onClick}>\r\n      <span>\r\n        {expanded ? (\r\n          <i className=\"fa fa-minus-square-o agh\" aria-hidden=\"true\"></i>\r\n        ) : (\r\n          <i className=\"fa fa-plus-square-o agh\" aria-hidden=\"true\"></i>\r\n        )}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShowPreviewButton;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nimport { getMaxPage } from \"src/utils\";\r\n\r\ntype IProps = {\r\n  count: number;\r\n  topicId: number;\r\n};\r\n\r\nconst Pages: React.FC<IProps> = ({ count, topicId }) => {\r\n  let pages = [];\r\n  if (count > 100) {\r\n    let maxPage = getMaxPage(count);\r\n    for (let i = 1; i <= maxPage; i++) {\r\n      let href = `/topic.php?id=${topicId}&page=${i}`;\r\n      let text: string;\r\n      if (i > 3 && i < maxPage) text = \"•\";\r\n      else text = String(i);\r\n      pages.push(\r\n        <Link key={i} className=\"agh\" style={{ margin: \"3px\" }} to={href}>\r\n          {text}\r\n        </Link>\r\n      );\r\n    }\r\n  }\r\n\r\n  if (count > 20) {\r\n    let href = `/topic.php?id=${topicId}&page=last20#F`;\r\n    pages.push(\r\n      <Link key=\"last20\" className=\"agh\" style={{ margin: \"3px\" }} to={href}>\r\n        »\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return <span className=\"topic-pages\">{pages}</span>;\r\n};\r\n\r\nexport default Pages;\r\n","import classNames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Pages from \"./pages\";\r\nimport { ITopicsListItem, useAppSelector } from \"src/store\";\r\n\r\ntype IProps = {\r\n  data: ITopicsListItem;\r\n};\r\n\r\nconst addPrefix = (\r\n  text: string,\r\n  forum: string,\r\n  sectionCode: string\r\n): string => {\r\n  if (forum === \"life\" && !text.startsWith(\"OFF\")) {\r\n    return \"OFF: \" + text;\r\n  } else if (sectionCode === \"job\" && !text.startsWith(\"JOB\")) {\r\n    return \"JOB: \" + text;\r\n  } else if (sectionCode === \"v7\" && !text.startsWith(\"v7\")) {\r\n    return \"v7: \" + text;\r\n  }\r\n  return text;\r\n};\r\n\r\nconst TopicNameCell: React.FC<IProps> = ({ data }) => {\r\n  const loggedUserName = useAppSelector((state) => state.login.userName);\r\n\r\n  let text = addPrefix(data.text, data.forum, data.sectionCode);\r\n\r\n  return (\r\n    <div className=\"cell-title\">\r\n      <div className=\"cell-title--inner\">\r\n        {data.pinned && (\r\n          <i\r\n            className=\"fa fa-thumb-tack agh\"\r\n            aria-hidden=\"true\"\r\n            style={{ marginRight: \"5px\" }}\r\n          ></i>\r\n        )}\r\n        <Link\r\n          to={`/topic.php?id=${data.id}`}\r\n          className={classNames(\"agb\", \"mr5\", {\r\n            bold: data.count >= 100,\r\n            mytopics: data.author === loggedUserName,\r\n            pinned: data.pinned,\r\n          })}\r\n          dangerouslySetInnerHTML={{ __html: text }}\r\n          style={{ overflowWrap: \"anywhere\" }}\r\n        ></Link>\r\n        {data.isVoting && <span className=\"agh separator\">[±]</span>}\r\n        <Pages count={data.count} topicId={data.id} />\r\n        {data.closed && <span className=\"agh\">Ø</span>}\r\n        {data.down && <span className=\"agh\">↓</span>}\r\n        {data.section && (\r\n          <span className=\"topic-section\">\r\n            <span className=\"agh\" style={{ margin: \"0px 5px\" }}>\r\n              /\r\n            </span>\r\n            <Link\r\n              key=\"1\"\r\n              rel=\"nofollow\"\r\n              className=\"agh\"\r\n              to={`/index.php?section=${data.sectionCode}`}\r\n            >\r\n              {data.section}\r\n            </Link>\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopicNameCell;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nimport \"./topic_preview.css\";\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n  onFirst: () => void;\r\n  onLast: () => void;\r\n  onPrev: () => void;\r\n  onNext: () => void;\r\n  close: () => void;\r\n};\r\n\r\nconst PreviewButtons: React.FC<IProps> = ({\r\n  topicId,\r\n  onFirst,\r\n  onPrev,\r\n  onNext,\r\n  onLast,\r\n  close,\r\n}) => {\r\n  return (\r\n    <div className=\"topic-preview-rewind\">\r\n      <div\r\n        className=\"topic-preview-button flex-small\"\r\n        onClick={onFirst}\r\n        title=\"К первому\"\r\n      >\r\n        <i className=\"fa fa-angle-double-left\" aria-hidden=\"true\"></i>\r\n      </div>\r\n      <div\r\n        className=\"topic-preview-button flex-large\"\r\n        onClick={onPrev}\r\n        title=\"К предыдущему\"\r\n      >\r\n        <i className=\"fa fa-angle-left\" aria-hidden=\"true\"></i>\r\n      </div>\r\n      <div\r\n        className=\"topic-preview-button flex-large\"\r\n        onClick={onNext}\r\n        title=\"К следующему\"\r\n      >\r\n        <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n      </div>\r\n      <div\r\n        className=\"topic-preview-button flex-small\"\r\n        onClick={onLast}\r\n        title=\"К последнему\"\r\n      >\r\n        <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\r\n      </div>\r\n      <div className=\"topic-preview-button close-preview\" onClick={close}>\r\n        <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n        <i\r\n          className=\"fa fa-angle-left\"\r\n          aria-hidden=\"true\"\r\n          style={{ marginLeft: \"-2px\" }}\r\n        ></i>\r\n      </div>\r\n      <div className=\"topic-preview-button edit-preview\">\r\n        <Link to={`/topic.php?id=${topicId}&page=last20#F`}>\r\n          <i\r\n            className=\"fa fa-pencil\"\r\n            aria-hidden=\"true\"\r\n            style={{ color: \"var(--font-color)\" }}\r\n          ></i>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewButtons;\r\n","import CSS from \"csstype\";\r\n\r\nimport { domain } from \"src/api\";\r\nimport { IVotingItem } from \"src/store\";\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n  data: IVotingItem;\r\n  colors: string[];\r\n  total: number;\r\n  n: number;\r\n};\r\n\r\nconst VoteItem: React.FC<IProps> = ({ topicId, data, total, n, colors }) => {\r\n  const img = `${domain}/css/voting${n}.png`;\r\n\r\n  const percent = total ? Math.round((100 * data.count) / total) : 0;\r\n\r\n  const imgStyle: CSS.Properties = {\r\n    maxWidth: \"500px\",\r\n    width: \"100%\",\r\n    height: \"15px\",\r\n  };\r\n\r\n  return (\r\n    <li className=\"voting-item\">\r\n      <div className=\"voting-title\">\r\n        <a\r\n          rel=\"nofollow\"\r\n          style={{ textDecoration: \"none\" }}\r\n          href={`#/topic.php?id=${topicId}&sel=${n}`}\r\n        >\r\n          <b>\r\n            <span style={{ color: colors[n - 1] }}>{`${n}. ${data.text}`}</span>\r\n          </b>\r\n        </a>\r\n      </div>\r\n      <div className=\"voting-percentage\">\r\n        <b>\r\n          <span\r\n            style={{ color: colors[n - 1] }}\r\n          >{`${percent}% (${data.count})`}</span>\r\n        </b>\r\n      </div>\r\n      <div className=\"voting-bar\">\r\n        <div style={{ width: `${percent}%` }}>\r\n          <a href={img}>\r\n            <img src={img} style={imgStyle} alt={`вариант ${n}`} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default VoteItem;\r\n","import VoteItem from \"./vote_item\";\r\nimport { IVotingItem } from \"src/store\";\r\n\r\ntype IProps = {\r\n  items: IVotingItem[];\r\n  topicId: number;\r\n  colors: string[];\r\n};\r\n\r\nconst VoteChart: React.FC<IProps> = ({ items, topicId, colors }) => {\r\n  let total = Math.max(...items.map((item) => item.count));\r\n\r\n  return (\r\n    <ul style={{ paddingLeft: 0 }}>\r\n      {items\r\n        .filter((item) => item.text)\r\n        .map((data, i) => (\r\n          <VoteItem\r\n            key={i}\r\n            data={data}\r\n            total={total}\r\n            n={i + 1}\r\n            topicId={topicId}\r\n            colors={colors}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default VoteChart;\r\n","import { memo } from \"react\";\r\n\r\ntype IProps = {\r\n  colors: string[];\r\n  n: number;\r\n  text: string;\r\n};\r\n\r\nconst Vote: React.FC<IProps> = memo(({ colors, n, text }) => {\r\n  return (\r\n    <div style={{ marginTop: \"5px\" }}>\r\n      <b>\r\n        <span style={{ color: colors[n - 1] }}>{`${n}. ${text}`}</span>\r\n      </b>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Vote;\r\n","//https://infostart.ru/1c/tools/1598931/\r\n\r\nfunction highlight(text: string): string {\r\n  const keywords = new Set(\r\n    (\r\n      \"if|если|then|тогда|elsif|иначеесли|else|иначе|endif|конецесли\" +\r\n      \"|do|цикл|for|для|to|по|each|каждого|in|из|while|пока|enddo|конеццикла\" +\r\n      \"|procedure|процедура|endprocedure|конецпроцедуры|function|функция|endfunction\" +\r\n      \"|конецфункции|var|перем|export|экспорт|goto|перейти|and|и|or|или|not|не\" +\r\n      \"|val|знач|break|прервать|continue|продолжить|return|возврат|try|попытка|except|исключение\" +\r\n      \"|endtry|конецпопытки|raise|вызватьисключение|false|ложь|true|истина\" +\r\n      \"|undefined|неопределено|null|new|новый|execute|выполнить\" +\r\n      \"|асинх|async|ждать|wait\"\r\n    ).split(\"|\")\r\n  );\r\n\r\n  const Спецсиволы = new Set(\"():;.,=+-*<>?[]%/\".split(\"\"));\r\n  const НачалоТега = \"<span class=\";\r\n  const КонецТега = \"</span>\";\r\n\r\n  const мЦветФона = \"bg>\";\r\n  const мЦветЧисла = \"num>\";\r\n  const мЦветСтроки = \"str>\";\r\n  //const мЦветПараметра = \"par>\";\r\n  const мЦветКомментария = \"com>\";\r\n  const мЦветСпецСимвола = \"sp>\";\r\n  const мЦветПрепроцессора = \"pr>\";\r\n  const мЦветКлючевогоСлова1 = \"key>\";\r\n\r\n  let СтрокаРезультат: string;\r\n  let УстановленЦвет: boolean;\r\n  let ПоследнийЦвет: string | undefined;\r\n\r\n  let ВСтроке = false;\r\n  let Токен = \"\";\r\n\r\n  function ПустаяСтрока(Строка: string) {\r\n    return Строка.trim() === \"\";\r\n  }\r\n\r\n  function Сред(Строка: string, Нач: number, Длина: number) {\r\n    return Строка.substring(Нач - 1, Нач - 1 + Длина);\r\n  }\r\n\r\n  function Прав(Строка: string, Длина: number) {\r\n    return Строка.substring(Строка.length - Длина);\r\n  }\r\n\r\n  function isKeyword(token: string) {\r\n    return keywords.has(token.toLowerCase().trim());\r\n  }\r\n\r\n  function ДобавитьЧастьСтроки1С(Часть: string, Цвет: string) {\r\n    if (Часть === \" \" || ПоследнийЦвет === Цвет) {\r\n      СтрокаРезультат = СтрокаРезультат + Часть;\r\n    } else {\r\n      if (УстановленЦвет) {\r\n        СтрокаРезультат = СтрокаРезультат + КонецТега;\r\n        УстановленЦвет = false;\r\n      }\r\n\r\n      СтрокаРезультат = СтрокаРезультат + НачалоТега + Цвет + Часть;\r\n      УстановленЦвет = true;\r\n      ПоследнийЦвет = Цвет;\r\n    }\r\n  }\r\n\r\n  function РазукраситьСтроку(СтрокаКода: string) {\r\n    //  https://infostart.ru/profile/34707/public/\r\n    let ВСтрокеСкобка = false;\r\n    let ВСтрокеТильда = false;\r\n    let НачалоСтроки = 1;\r\n    let ТокенДоТочки = true;\r\n    // Заменяем 8 символьную табуляцию на 4 символьную пробелами\r\n\r\n    // Последовательно перебираются все символы строки кода\r\n    let Поз = 1;\r\n    for (Поз = 1; Поз <= СтрокаКода.length; Поз++) {\r\n      let ТекущийСимвол = СтрокаКода.charAt(Поз - 1);\r\n      if (ВСтроке) {\r\n        // Операции встрече символа \"кавычка\"\r\n        if (ТекущийСимвол === '\"') {\r\n          // Нашли парную кавычку - окрашиваем как строку\r\n          ДобавитьЧастьСтроки1С(\r\n            Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1),\r\n            мЦветСтроки\r\n          );\r\n          ВСтроке = false;\r\n          Токен = \"\";\r\n          ТокенДоТочки = true;\r\n        } else {\r\n          Токен = Токен + ТекущийСимвол;\r\n        }\r\n      } else if (ВСтрокеСкобка) {\r\n        // Операции встрече символа \"кавычка\" литерал\r\n        if (ТекущийСимвол === \"'\") {\r\n          // Нашли парную скобку - окрашиваем как комментарий\r\n          ДобавитьЧастьСтроки1С(\r\n            Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1),\r\n            мЦветСтроки\r\n          );\r\n          ВСтрокеСкобка = false;\r\n          Токен = \"\";\r\n          ТокенДоТочки = true;\r\n        } else {\r\n          Токен = Токен + ТекущийСимвол;\r\n        }\r\n      } else if (ТекущийСимвол === \" \") {\r\n        // Операции при встрече символа табуляции или пробела\r\n        if (!ПустаяСтрока(Токен)) {\r\n          // Пробел после токена, значит\r\n          // токен - ключевое слово...\r\n          if (ВСтрокеТильда) {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветСтроки);\r\n            ВСтрокеТильда = false;\r\n          } else if (isKeyword(Токен.trim())) {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветКлючевогоСлова1);\r\n          } else if (!isNaN(parseInt(Токен, 10))) {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветЧисла);\r\n          } else {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветФона);\r\n          }\r\n          Токен = \"\";\r\n        } else {\r\n          СтрокаРезультат = СтрокаРезультат + \" \";\r\n        }\r\n        ТокенДоТочки = true;\r\n      } else if (Спецсиволы.has(ТекущийСимвол)) {\r\n        // Встретился один из специальных символов\r\n        if (!ПустаяСтрока(Токен)) {\r\n          // Чтобы избежать окраски метода объекта с совпадающим именем\r\n          // с одним из ключевых слов, проверяем текущий символ на \".\"\r\n          if (ВСтрокеТильда) {\r\n            ДобавитьЧастьСтроки1С(Токен, мЦветСтроки);\r\n            ВСтрокеТильда = false;\r\n            ТокенДоТочки = ТекущийСимвол !== \".\";\r\n          } else if (ТокенДоТочки && isKeyword(Токен)) {\r\n            ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\r\n            ТокенДоТочки = ТекущийСимвол !== \".\";\r\n          } else {\r\n            // Не ключевое слово - значит число\r\n            if (!isNaN(parseInt(Токен, 10))) {\r\n              ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\r\n            } else {\r\n              ДобавитьЧастьСтроки1С(Токен, мЦветФона);\r\n            }\r\n            ТокенДоТочки = ТекущийСимвол !== \".\";\r\n          }\r\n          Токен = \"\";\r\n        }\r\n        // Один из специальных символов\r\n        if (ТекущийСимвол === \".\" && ПоследнийЦвет === мЦветЧисла) {\r\n          // Продолжение числа\r\n          ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветЧисла);\r\n          continue;\r\n        } else if (\r\n          ТекущийСимвол === \"=\" &&\r\n          Сред(СтрокаКода, Поз - 1, 1) === \"<\"\r\n        ) {\r\n          // Знак \"меньше или равно\" - вторая ошибка движка Инфостарт\r\n          ПоследнийЦвет = undefined;\r\n        } else if (\r\n          ТекущийСимвол === \"/\" &&\r\n          Сред(СтрокаКода, Поз + 1, 1) === \"/\"\r\n        ) {\r\n          // Проверяется на комментарий\r\n          ДобавитьЧастьСтроки1С(\r\n            Прав(СтрокаКода, СтрокаКода.length - Поз + 1),\r\n            мЦветКомментария\r\n          );\r\n          return;\r\n        }\r\n        ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветСпецСимвола);\r\n      } else if (ТекущийСимвол === '\"' || ТекущийСимвол === \"|\") {\r\n        // Операции встрече символа \"кавычка\"\r\n        // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\r\n        if (ПустаяСтрока(Токен)) {\r\n          НачалоСтроки = Поз;\r\n          ВСтроке = true;\r\n        } else {\r\n          // Ошибка синтаксиса\r\n          ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\r\n          Токен = \"\";\r\n        }\r\n        ТокенДоТочки = true;\r\n      } else if (ТекущийСимвол === \"'\") {\r\n        // Операции встрече символа \"кавычка\" литерал\r\n        // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\r\n        if (ПустаяСтрока(Токен)) {\r\n          НачалоСтроки = Поз;\r\n          ВСтрокеСкобка = true;\r\n        } else {\r\n          // Ошибка синтаксиса\r\n          ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\r\n          Токен = \"\";\r\n        }\r\n        ТокенДоТочки = true;\r\n      } else if (\r\n        ТекущийСимвол === \"#\" ||\r\n        (ТекущийСимвол === \"&\" && ПустаяСтрока(СтрокаРезультат))\r\n      ) {\r\n        // Встретился символ препроцессора\r\n        ДобавитьЧастьСтроки1С(\r\n          Прав(СтрокаКода, СтрокаКода.length - Поз + 1),\r\n          мЦветПрепроцессора\r\n        );\r\n        Поз = СтрокаКода.length;\r\n        break;\r\n      } else if (ТекущийСимвол === \"~\") {\r\n        Токен = Токен + ТекущийСимвол;\r\n        ВСтрокеТильда = true;\r\n      } else {\r\n        // Остальные символы\r\n        Токен = Токен + ТекущийСимвол;\r\n      }\r\n    }\r\n\r\n    if (ВСтроке) {\r\n      // Многострочная строка\r\n      ДобавитьЧастьСтроки1С(\r\n        Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1),\r\n        мЦветСтроки\r\n      );\r\n    } else if (ВСтрокеСкобка) {\r\n      // Незавершенный литерал\r\n      ДобавитьЧастьСтроки1С(\r\n        Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1),\r\n        мЦветСтроки\r\n      );\r\n    } else if (!ПустаяСтрока(Токен)) {\r\n      // Анализируем последний токен строки кода\r\n      if (isKeyword(Токен)) {\r\n        ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\r\n      } else if (!isNaN(parseInt(Токен, 10))) {\r\n        ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\r\n      } else {\r\n        ДобавитьЧастьСтроки1С(Токен, мЦветФона);\r\n      }\r\n    }\r\n  }\r\n\r\n  ВСтроке = false;\r\n  Токен = \"\";\r\n  УстановленЦвет = false;\r\n  ПоследнийЦвет = undefined;\r\n  СтрокаРезультат = \"\";\r\n\r\n  let result = [];\r\n\r\n  for (let СтрокаКода of text.split(\"\\n\")) {\r\n    if (ПустаяСтрока(СтрокаКода)) {\r\n      result.push(\"\");\r\n      continue;\r\n    }\r\n\r\n    СтрокаРезультат = \"\";\r\n    РазукраситьСтроку(СтрокаКода);\r\n    if (УстановленЦвет && !ВСтроке) {\r\n      СтрокаРезультат += \"</span>\";\r\n      УстановленЦвет = false;\r\n      ПоследнийЦвет = \"\";\r\n      Токен = \"\";\r\n    } else if (!ВСтроке) {\r\n      ПоследнийЦвет = \"\";\r\n      Токен = \"\";\r\n    }\r\n\r\n    result.push(СтрокаРезультат);\r\n  }\r\n\r\n  return result.join(\"\\n\");\r\n}\r\n\r\nexport default highlight;\r\n","import { useMemo, useState } from \"react\";\r\nimport { childrenToText } from \"src/utils\";\r\nimport highlight from \"./code_highlight\";\r\nimport \"./code1c.css\";\r\n\r\nconst trimNewLines = (str: string) => {\r\n  let start = 0;\r\n  let end = str.length;\r\n\r\n  // Remove leading newlines\r\n  while (start < end && (str[start] === \"\\n\" || str[start] === \"\\r\")) {\r\n    start++;\r\n  }\r\n\r\n  // Remove trailing newlines\r\n  while (end > start && (str[end - 1] === \"\\n\" || str[end - 1] === \"\\r\")) {\r\n    end--;\r\n  }\r\n\r\n  return str.substring(start, end);\r\n};\r\n\r\nconst prepareText = (text: string): string => {\r\n  // replace double new-lines\r\n  let newtext = text\r\n    .replace(/\\n<br>/g, \"\\n\")\r\n    .replace(/<br>\\n/g, \"\\n\")\r\n    .replace(/\\r<br>/g, \"\\n\")\r\n    .replace(/<br>\\r/g, \"\\n\")\r\n    .replace(/<br>/g, \"\\n\")\r\n    .replace(/&/g, \"&amp;\")\r\n    .replace(/</g, \"&lt;\")\r\n    .replace(/>/g, \"&gt\");\r\n\r\n  newtext = trimNewLines(newtext);\r\n  return highlight(newtext);\r\n};\r\n\r\nconst Code: React.FC<React.PropsWithChildren> = ({ children }) => {\r\n  const [hidden, setHidden] = useState(true);\r\n\r\n  const [text, linesCount] = useMemo(() => {\r\n    if (!children) return [\"\", 0];\r\n\r\n    let _text = childrenToText(children).join(\"\");\r\n    _text = prepareText(_text);\r\n\r\n    return [_text, _text.split(\"\\n\").length];\r\n  }, [children]);\r\n\r\n  const onShowClick = () => {\r\n    setHidden((prev) => !prev);\r\n  };\r\n\r\n  let preStyle: React.CSSProperties = {};\r\n\r\n  if (hidden && linesCount > 7) {\r\n    preStyle.overflow = \"hidden\";\r\n    preStyle.height = \"135px\";\r\n  } else {\r\n    preStyle.overflow = \"auto\";\r\n    preStyle.height = \"auto\";\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: \"5px\" }}>\r\n      <pre\r\n        className=\"code-pre\"\r\n        style={preStyle}\r\n        dangerouslySetInnerHTML={{ __html: text }}\r\n      ></pre>\r\n      {linesCount > 7 && (\r\n        <div className=\"expand-button-div\">\r\n          <span className=\"expand-button-span\" onClick={onShowClick}>\r\n            {hidden ? `Показать: ${linesCount} строк` : \"Скрыть\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Code;\r\n","import { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { getMaxPage, childrenToText, toNumber } from \"src/utils\";\r\nimport { fetchTopicInfo } from \"src/api\";\r\nimport { useActionCreators, useAppSelector } from \"src/store\";\r\nimport { ITooltipKeys, tooltipsActions } from \"src/store\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n  number: number;\r\n  style?: {};\r\n} & React.PropsWithChildren;\r\n\r\nconst LinkToPost: React.FC<IProps> = ({ topicId, number, children, style }) => {\r\n  const timerRef = useRef(null);\r\n  const actions = useActionCreators(tooltipsActions);\r\n\r\n  const [searchParams] = useSearchParams();\r\n  const currentTopicId = toNumber(searchParams.get(\"id\"), -1);\r\n\r\n  const tooltipDelay = useAppSelector(\r\n    (state) => +state.options.items.tooltipDelay\r\n  );\r\n\r\n  let initialText = \"\";\r\n  if (!children) initialText = String(number);\r\n  else initialText = childrenToText(children).join(\"\");\r\n\r\n  const [text, setText] = useState(initialText);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    if (!initialText.startsWith(\"http\")) {\r\n      setText(initialText);\r\n      return;\r\n    }\r\n\r\n    const run = async () => {\r\n      const { title } = await fetchTopicInfo(topicId);\r\n      if (isMounted) setText(title);\r\n    };\r\n\r\n    run();\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [initialText, topicId]);\r\n\r\n  const onMouseOver = (e: React.MouseEvent<HTMLElement>) => {\r\n    e.persist();\r\n    timerRef.current = setTimeout(() => showToolTip(e), tooltipDelay);\r\n  };\r\n\r\n  const onMouseOut = () => {\r\n    if (timerRef.current) clearTimeout(timerRef.current);\r\n  };\r\n\r\n  const onClick = (e: React.MouseEvent<HTMLElement>) => {\r\n    e.stopPropagation();\r\n    if (timerRef.current) clearTimeout(timerRef.current);\r\n    showToolTip(e);\r\n  };\r\n\r\n  const showToolTip = (e: React.MouseEvent<HTMLElement>) => {\r\n    const coords = {\r\n      x: e.pageX,\r\n      y: e.pageY - 50, // remove navbar margin-top\r\n    };\r\n\r\n    const keys: ITooltipKeys = {\r\n      topicId: +topicId,\r\n      number: +number,\r\n    };\r\n\r\n    actions.show({ keys, coords });\r\n  };\r\n\r\n  if (topicId === currentTopicId || !isNaN(+text))\r\n    return (\r\n      <span\r\n        onMouseOver={onMouseOver}\r\n        onMouseOut={onMouseOut}\r\n        onClick={onClick}\r\n        className=\"link\"\r\n        style={{ ...style }}\r\n        role=\"button\"\r\n      >\r\n        {text}\r\n      </span>\r\n    );\r\n  else {\r\n    const page = getMaxPage(number);\r\n\r\n    let pageParam = \"\";\r\n    if (page > 1) pageParam = `&page=${page}`;\r\n\r\n    return (\r\n      <span>\r\n        <a\r\n          href={`#/topic.php?id=${topicId}${pageParam}#${number}`}\r\n          style={{ ...style }}\r\n        >\r\n          {text}\r\n        </a>{\" \"}\r\n        (\r\n        <span\r\n          onMouseOver={onMouseOver}\r\n          onMouseOut={onMouseOut}\r\n          onClick={onClick}\r\n          className=\"link\"\r\n          role=\"button\"\r\n        >\r\n          {number}\r\n        </span>\r\n        )\r\n      </span>\r\n    );\r\n  }\r\n};\r\n\r\nexport default LinkToPost;\r\n","type IProps = {\r\n  href: string;\r\n} & React.PropsWithChildren;\r\n\r\nconst LinkToUser: React.FC<IProps> = ({ href, children }) => {\r\n  return (\r\n    <a href={href} className=\"registered-user\">\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default LinkToUser;\r\n","import { useEffect, useState } from \"react\";\r\n\r\ntype IProps = {\r\n  href: string;\r\n};\r\n\r\nconst getVideoId = (href: string): string | null => {\r\n  let fullHref = href;\r\n  if (href.search(/http/) === -1) fullHref = \"http://\" + fullHref;\r\n\r\n  try {\r\n    var url = new URL(fullHref);\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n\r\n  if (url.hostname.search(/youtube/) !== -1) {\r\n    return url.searchParams.get(\"v\");\r\n  } else if (url.hostname.search(/youtu\\.be/) !== -1) {\r\n    return url.pathname.substring(1);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\ntype HrefParams = {\r\n  hrefName: string;\r\n  title: string;\r\n  notFound: boolean;\r\n};\r\n\r\nconst getVideoParams = async (\r\n  videoId: string,\r\n  signal: AbortSignal\r\n): Promise<HrefParams> => {\r\n  const apiKey =\r\n    localStorage.getItem(\"youtubeApiKey\") ||\r\n    \"AIzaSyCztN2QW4Fxw_1YuAHBTOZdYLbzigPz25g\";\r\n  let apiUrl = `https://www.googleapis.com/youtube/v3/videos?key=${apiKey}&fields=items(snippet(title))&part=snippet&id=${videoId}`;\r\n  const response = await fetch(apiUrl, { signal });\r\n  const json = await response.json();\r\n\r\n  if (json.items.length === 0)\r\n    return {\r\n      hrefName: \"\",\r\n      title: \"\",\r\n      notFound: true,\r\n    };\r\n\r\n  const title = json.items[0].snippet.title;\r\n\r\n  let hrefName = title;\r\n  let maxLength = 50;\r\n  if (title.length > maxLength + 5)\r\n    hrefName = hrefName.substring(0, maxLength) + \"...\";\r\n\r\n  return {\r\n    hrefName,\r\n    title,\r\n    notFound: false,\r\n  };\r\n};\r\n\r\nconst YoutubeLink: React.FC<IProps> = ({ href }) => {\r\n  let [hrefName, setHrefName] = useState(href);\r\n  let [title, setTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    const run = async () => {\r\n      const videoId = getVideoId(href);\r\n      if (!videoId) return;\r\n\r\n      try {\r\n        const params = await getVideoParams(videoId, abortController.signal);\r\n\r\n        if (params.notFound) setHrefName(href + \" (видео не найдено)\");\r\n        else {\r\n          setHrefName(params.hrefName);\r\n          setTitle(params.title);\r\n        }\r\n      } catch (e) {\r\n        console.error(\"youtube\", videoId, e.message);\r\n      }\r\n    };\r\n\r\n    run();\r\n\r\n    return () => abortController.abort();\r\n  }, [href]);\r\n\r\n  const prefix = \"youtube\";\r\n  return <a href={href} title={title}>{`${prefix}: ${hrefName}`}</a>;\r\n};\r\n\r\nexport default YoutubeLink;\r\n","import URL from \"url-parse\";\r\n\r\nimport LinkToPost from \"./link_to_post\";\r\nimport LinkToUser from \"./link_to_user\";\r\nimport YoutubeLink from \"./youtube_link\";\r\n\r\nimport { childrenToText } from \"src/utils\";\r\nimport { useAppSelector } from \"src/store\";\r\n\r\ntype IProps = {\r\n  href: string;\r\n  parentText?: string;\r\n  target?: string;\r\n  class?: string;\r\n  rel?: string;\r\n} & React.PropsWithChildren;\r\n\r\nconst fixBrokenLink = (href: string, parentText: string): string => {\r\n  let escapedHref = href\r\n    .replace(/\\[/g, \"\\\\[\")\r\n    .replace(/\\]/g, \"\\\\]\")\r\n    .replace(/\\./g, \"\\\\.\")\r\n    .replace(/\\./g, \".\")\r\n    .replace(/\\*/g, \"\\\\*\")\r\n    .replace(/\\+/g, \"\\\\+\")\r\n    .replace(/\\(/g, \"\\\\(\")\r\n    .replace(/\\)/g, \"\\\\)\")\r\n    .replace(/\\?/g, \"\\\\?\")\r\n    .replace(/\\//g, \"\\\\/\");\r\n\r\n  try {\r\n    let regExp = new RegExp(\r\n      escapedHref + \"<\\\\/a>(\\\\)|[а-яёА-ЯЁ0-9#\\\\-\\\\+\\\\_\\\\%\\\\?=]*)\"\r\n    );\r\n    let arr = parentText.match(regExp);\r\n    if (arr && arr.length > 1) {\r\n      if (arr[1] === \")\" && href.search(\"\\\\(\") === -1) {\r\n        return href;\r\n      }\r\n      href = href + arr[1];\r\n      return href;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  return href;\r\n};\r\n\r\nconst isYoutube = (hostname: string): boolean => {\r\n  if (hostname.search(/youtube/) !== -1 || hostname.search(/youtu\\.be/) !== -1)\r\n    return true;\r\n  else return false;\r\n};\r\n\r\nconst isMistaCatalog = (hostname: string): boolean => {\r\n  if (hostname.search(/catalog\\.mista/) !== -1) return true;\r\n  else return false;\r\n};\r\n\r\nconst CustomLink: React.FC<IProps> = ({\r\n  href,\r\n  children,\r\n  parentText,\r\n  ...props\r\n}) => {\r\n  const showYoutubeVideoTitle = useAppSelector(\r\n    (state) => state.options.items.showYoutubeVideoTitle === \"true\"\r\n  );\r\n  const replaceCatalogMista = useAppSelector(\r\n    (state) => state.options.items.replaceCatalogMista === \"true\"\r\n  );\r\n  const fixBrokenLinks = useAppSelector(\r\n    (state) => state.options.items.fixBrokenLinks === \"true\"\r\n  );\r\n\r\n  try {\r\n    var url = new URL(href, true);\r\n  } catch (e) {\r\n    console.error((e as Error).message, href);\r\n    return <a href={href}>{href}</a>;\r\n  }\r\n\r\n  let newHref = href;\r\n  if (newHref.startsWith(\"/\")) {\r\n    url.set(\"protocol\", \"https\");\r\n    url.set(\"hostname\", \"forum.mista.ru\");\r\n    newHref = url.href;\r\n  }\r\n\r\n  if (url.hostname.search(/forum\\.mista.ru/) !== -1) {\r\n    if (url.pathname === \"/topic.php\") {\r\n      return (\r\n        <LinkToPost\r\n          topicId={url.query.id}\r\n          number={url.hash.replace(\"#\", \"\") || \"0\"}\r\n        >\r\n          {childrenToText(children)}\r\n        </LinkToPost>\r\n      );\r\n    } else if (url.pathname === \"/users.php\") {\r\n      return <LinkToUser href={url.href}>{children}</LinkToUser>;\r\n    }\r\n  }\r\n\r\n  if (\r\n    url.hostname === \"a-sitnikov.github.io\" &&\r\n    url.pathname === \"/react.mista/\"\r\n  ) {\r\n    if (Object.keys(url.query).length === 0) {\r\n      url = new URL(href.replace(/#\\//, \"\"), true);\r\n      if (url.pathname === \"/react.mista/topic.php\")\r\n        return (\r\n          <LinkToPost\r\n            topicId={url.query.id}\r\n            number={url.hash.replace(\"#\", \"\") || \"0\"}\r\n          >\r\n            {childrenToText(children)}\r\n          </LinkToPost>\r\n        );\r\n    }\r\n  }\r\n\r\n  if (showYoutubeVideoTitle && isYoutube(url.hostname))\r\n    return <YoutubeLink href={href} />;\r\n\r\n  if (replaceCatalogMista && isMistaCatalog(url.hostname)) {\r\n    url.set(\"hostname\", \"infostart.ru\");\r\n\r\n    return (\r\n      <a\r\n        target={props?.target}\r\n        className={props?.class}\r\n        rel={props?.rel}\r\n        href={url.href}\r\n      >\r\n        {url.href}{\" \"}\r\n      </a>\r\n    );\r\n  }\r\n\r\n  if (fixBrokenLinks && parentText) {\r\n    newHref = fixBrokenLink(newHref, parentText);\r\n  }\r\n\r\n  return (\r\n    <a\r\n      target={props?.target}\r\n      className={props?.class}\r\n      rel={props?.rel}\r\n      href={newHref}\r\n    >\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default CustomLink;\r\n","import dayjs from \"dayjs\";\r\nimport { memo } from \"react\";\r\nimport { PhotoView } from \"react-photo-view\";\r\nimport \"react-photo-view/dist/react-photo-view.css\";\r\n\r\ntype IProps = {\r\n  idx: string;\r\n  topicId: number;\r\n  topicDate: number;\r\n  messageNumber: number;\r\n};\r\n\r\nconst InternalImage: React.FC<IProps> = ({\r\n  idx,\r\n  topicId,\r\n  topicDate,\r\n  messageNumber,\r\n}) => {\r\n  const date = dayjs(topicDate).format(\"YYYY/MM/DD\");\r\n\r\n  //topics/files/2024/02/16/892137/2/1_preview.png\r\n  const filePath = `https://forum.mista.ru/topics/files/${date}/${topicId}/${messageNumber}`;\r\n  const preview = `${filePath}/${idx}_preview.png`;\r\n  const full = `${filePath}/${idx}.png`;\r\n\r\n  return (\r\n    <PhotoView src={full}>\r\n      <img\r\n        src={preview}\r\n        alt=\"\"\r\n        style={{ maxWidth: \"100%\", cursor: \"pointer\" }}\r\n      />\r\n    </PhotoView>\r\n  );\r\n};\r\n\r\nexport default memo(InternalImage);\r\n","import HtmlToReact from \"html-to-react\";\r\n\r\nimport Code from \"src/components/extensions/code1c\";\r\nimport LinkToPost from \"src/components/extensions/link_to_post\";\r\nimport CustomLink from \"src/components/extensions/custom_link\";\r\nimport InternalImage from \"src/components/extensions/internal-image\";\r\nimport { memo } from \"react\";\r\n\r\nconst processLinksToPosts = (text: string, topicId: number): string => {\r\n  const regexp = /(\\()(\\d+)(\\))(?![^<>]*<\\/)/gi; // (12)\r\n  return text.replace(regexp, (res, ...segments) => {\r\n    const number = segments[1];\r\n    return `(<link data-topicid='${topicId}' data-number='${number}'></link>)`;\r\n  });\r\n};\r\n\r\nconst processCode1C = (text: string): string => {\r\n  return text\r\n    .replace(/\\[1[CС]\\]/gi, \"<code>\") //[1C]\r\n    .replace(/<1[CС]>/gi, \"<code>\") //<1C>\r\n    .replace(/\\[\\/1[CС]\\]/gi, \"</code>\") //[/1C]\r\n    .replace(/<\\/1[CС]>/gi, \"</code>\"); //</1C>\r\n};\r\n\r\nconst processImages = (\r\n  text: string,\r\n  topicId: number,\r\n  topicDate: number,\r\n  messageNumber: number\r\n): string | undefined => {\r\n  const regexp = /\\[IMG_(\\d*)\\]/gi; // ([IMG_1])\r\n\r\n  return text.replace(regexp, (res, ...segments) => {\r\n    const idx = segments[0];\r\n    return `<int_img idx='${idx}'></int_img>`;\r\n  });\r\n};\r\n\r\nconst processText = (\r\n  text: string,\r\n  topicId: number,\r\n  topicDate: number,\r\n  messageNumber: number\r\n): string | undefined => {\r\n  if (!text) return text;\r\n\r\n  let newtext = processCode1C(text);\r\n  newtext = processLinksToPosts(newtext, topicId);\r\n  newtext = processImages(newtext, topicId, topicDate, messageNumber);\r\n\r\n  return newtext;\r\n};\r\n\r\nconst htmlToReactParser = HtmlToReact.Parser();\r\nconst processNodeDefinitions = HtmlToReact.ProcessNodeDefinitions();\r\nconst isValidNode = () => true;\r\n\r\nconst linkToPostProcessor = {\r\n  shouldProcessNode: (node: any): boolean => {\r\n    return node?.name === \"link\";\r\n  },\r\n  processNode: (\r\n    node: any,\r\n    children: any,\r\n    index: number\r\n  ): React.ReactElement => {\r\n    const topicId = node.attribs[\"data-topicid\"];\r\n    const number = node.attribs[\"data-number\"];\r\n    return <LinkToPost key={index} topicId={topicId} number={number} />;\r\n  },\r\n};\r\n\r\nconst codeProcessor = {\r\n  shouldProcessNode: (node: any) => {\r\n    return node?.name === \"code\" || node?.name === \"pre\";\r\n  },\r\n  processNode: (node: any, children: any, index: number) => {\r\n    return <Code key={index}>{children}</Code>;\r\n  },\r\n};\r\n\r\nconst linkProcessor = (processedHtml: string) => ({\r\n  // <custom link>\r\n  shouldProcessNode: (node: any) => {\r\n    return node?.name === \"a\";\r\n  },\r\n  processNode: function (node: any, children: any, index: number) {\r\n    const href = node.attribs[\"href\"];\r\n    return (\r\n      <CustomLink key={index} href={href} parentText={processedHtml}>\r\n        {children}\r\n      </CustomLink>\r\n    );\r\n  },\r\n});\r\n\r\nconst internalImageProcesor = (\r\n  topicId: number,\r\n  topicDate: number,\r\n  messageNumber: number\r\n) => ({\r\n  shouldProcessNode: (node: any) => {\r\n    return node?.name === \"int_img\";\r\n  },\r\n  processNode: function (node: any, children: any, index: number) {\r\n    const idx = node.attribs[\"idx\"];\r\n    return (\r\n      <InternalImage\r\n        key={index}\r\n        topicId={topicId}\r\n        topicDate={topicDate}\r\n        messageNumber={messageNumber}\r\n        idx={idx}\r\n      />\r\n    );\r\n  },\r\n});\r\n\r\nconst ProcessedText: React.FC<{\r\n  html: string;\r\n  topicId: number;\r\n  topicDate: number;\r\n  messageNumber: number;\r\n}> = ({ html, topicId, topicDate, messageNumber }) => {\r\n  const processedHtml = processText(html, topicId, topicDate, messageNumber);\r\n  const processingInstructions = [\r\n    linkToPostProcessor,\r\n    codeProcessor,\r\n    linkProcessor(processedHtml),\r\n    internalImageProcesor(topicId, topicDate, messageNumber),\r\n    {\r\n      // Anything else\r\n      shouldProcessNode: () => true,\r\n      processNode: processNodeDefinitions.processDefaultNode,\r\n    },\r\n  ];\r\n\r\n  const reactComponent = htmlToReactParser.parseWithInstructions(\r\n    processedHtml,\r\n    isValidNode,\r\n    processingInstructions\r\n  );\r\n\r\n  return <>{reactComponent}</>;\r\n};\r\n\r\nexport default memo(ProcessedText);\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport VoteChart from \"./vote_chart\";\r\nimport Vote from \"./vote\";\r\nimport { useAppSelector } from \"src/store\";\r\nimport { fetchTopicInfo } from \"src/api\";\r\nimport { PhotoProvider } from \"react-photo-view\";\r\nimport { useTopicMessages } from \"src/store/query-hooks\";\r\nimport ProcessedText from \"./processed_text\";\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n  topicDate: number;\r\n  n: number;\r\n  html: string;\r\n  vote: number;\r\n  style?: {};\r\n};\r\n\r\nconst MsgText: React.FC<IProps> = ({\r\n  topicId,\r\n  topicDate,\r\n  n,\r\n  html,\r\n  vote,\r\n  style,\r\n}) => {\r\n  const { data: info } = useTopicMessages(\r\n    { topicId },\r\n    { enabled: false, select: (data) => data?.info }\r\n  );\r\n  const voteColors = useAppSelector((state) => state.options.voteColors);\r\n\r\n  let initialVoteText: string = null;\r\n  if (vote && info.voting && topicId === info.id)\r\n    initialVoteText = info.voting[vote - 1].text;\r\n\r\n  const [voteText, setVoteText] = useState(initialVoteText);\r\n\r\n  useEffect(() => {\r\n    const getVoteText = async () => {\r\n      try {\r\n        const _info = await fetchTopicInfo(topicId);\r\n        setVoteText(_info.voting[vote - 1].text);\r\n      } catch (e) {\r\n        console.error(e.message);\r\n      }\r\n    };\r\n\r\n    if (vote && !initialVoteText) {\r\n      getVoteText();\r\n    }\r\n  }, [vote, initialVoteText, topicId]);\r\n\r\n  const showVoteChart = n === 0 && info.isVoting && info.voting;\r\n  const showVoteText = vote !== 0 && voteText !== null;\r\n\r\n  return (\r\n    <div className=\"message\" style={style}>\r\n      {showVoteChart && (\r\n        <VoteChart items={info.voting} topicId={topicId} colors={voteColors} />\r\n      )}\r\n      <div>\r\n        <PhotoProvider>\r\n          <ProcessedText\r\n            html={html}\r\n            topicId={topicId}\r\n            topicDate={topicDate}\r\n            messageNumber={n}\r\n          />\r\n        </PhotoProvider>\r\n      </div>\r\n      {showVoteText && <Vote text={voteText} n={vote} colors={voteColors} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MsgText;\r\n","import { useEffect, useState } from \"react\";\r\nimport type { Property } from \"csstype\";\r\nimport { domain } from \"src/api\";\r\nimport { ITopicMessage } from \"src/store\";\r\n\r\ntype IProps = {\r\n  data: ITopicMessage;\r\n};\r\n\r\nconst UserIco: React.FC<IProps> = ({ data }) => {\r\n  const [imgDisplay, setImgDisplay] = useState<Property.Display>(\"none\");\r\n\r\n  const onImageLoad = () => {\r\n    setImgDisplay(\"inline\");\r\n  };\r\n\r\n  const onImageError = () => {\r\n    setImgDisplay(\"none\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    setImgDisplay(\"none\");\r\n  }, [data.n]);\r\n\r\n  if (window.innerWidth <= 768) return null;\r\n\r\n  return (\r\n    <img\r\n      src={`${domain}/css/user_icons/${data.userId}_16x16.png`}\r\n      alt=\"user ico\"\r\n      onLoad={onImageLoad}\r\n      onError={onImageError}\r\n      style={{\r\n        display: imgDisplay,\r\n        marginBottom: \"4px\",\r\n        marginRight: \"1px\",\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UserIco;\r\n","import { useMemo } from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { useActionCreators } from \"src/store\";\r\nimport type { ITopicMessage } from \"src/store\";\r\nimport { newMessageActions } from \"src/store\";\r\nimport { domain } from \"src/api\";\r\n\r\nimport UserIco from \"./user_ico\";\r\n\r\ntype IProps = {\r\n  data: ITopicMessage;\r\n  isAuthor: boolean;\r\n  isYou: boolean;\r\n  isTooltip?: boolean;\r\n};\r\n\r\nconst UserInfo: React.FC<IProps> = ({ data, isAuthor, isYou, isTooltip }) => {\r\n  const actions = useActionCreators(newMessageActions);\r\n\r\n  const onClick = () => {\r\n    actions.changeText(`(${data.n})`);\r\n\r\n    let elem = document.getElementById(\"message_text\");\r\n    if (elem) window.scrollTo(0, elem.offsetTop);\r\n  };\r\n\r\n  let dataStr = useMemo(() => {\r\n    if (!data) return;\r\n\r\n    if (data.n === 0) {\r\n      return dayjs(data.time).format(\"DD.MM.YY - HH:mm\");\r\n    } else {\r\n      return (\r\n        <>\r\n          <span className=\"message-number\">{data.n}</span>\r\n          {\" - \" + dayjs(data.time).format(\"DD.MM.YY - HH:mm\")}\r\n        </>\r\n      );\r\n    }\r\n  }, [data]);\r\n\r\n  const userClassNames = classNames(\"registered-user\", {\r\n    \"is-author\": isAuthor,\r\n    \"is-you\": isYou,\r\n  });\r\n\r\n  return (\r\n    <div className=\"user-info\">\r\n      <UserIco data={data} />\r\n      <a\r\n        className={userClassNames}\r\n        href={`${domain}/users.php?id=${data.userId}`}\r\n      >\r\n        {data.user}\r\n      </a>\r\n      {isTooltip ? (\r\n        <div\r\n          className=\"ah\"\r\n          style={{ display: \"inline-block\", marginLeft: \"5px\" }}\r\n        >\r\n          {dataStr}\r\n        </div>\r\n      ) : (\r\n        <div className=\"message-time\">\r\n          <span className=\"ah\">{dataStr}</span>\r\n          <button className=\"button ah\" onClick={onClick}>\r\n            {dataStr}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { fetchTopicMessage } from \"src/api\";\r\n\r\nimport MsgText from \"src/pages/topic/row/msg_text\";\r\nimport UserInfo from \"src/pages/topic/row/user_info\";\r\n\r\nimport { ITopicMessage } from \"src/store\";\r\n\r\nimport \"./topic_preview.css\";\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n  n: number;\r\n  author: string;\r\n  loggedUserId: number;\r\n  onDataLoaded?: () => void;\r\n};\r\n\r\nconst PreviewContent: React.FC<IProps> = ({\r\n  topicId,\r\n  n,\r\n  author,\r\n  loggedUserId,\r\n  onDataLoaded,\r\n}) => {\r\n  const [data, setData] = useState<ITopicMessage | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const _data = await fetchTopicMessage(topicId, n);\r\n        if (_data) {\r\n          setData(_data);\r\n          setError(null);\r\n          if (onDataLoaded) onDataLoaded();\r\n        } else {\r\n          setData(null);\r\n          setError(`Не найдено сообщение ${n}`);\r\n        }\r\n      } catch (e) {\r\n        setData(null);\r\n        setError((e as Error).message);\r\n      }\r\n    };\r\n\r\n    getData();\r\n  }, [topicId, n, onDataLoaded]);\r\n\r\n  if (!data && !error) return null;\r\n\r\n  return (\r\n    <>\r\n      {data && (\r\n        <div className=\"preview-content\">\r\n          <div className=\"topic-preview-userinfo\">\r\n            <UserInfo\r\n              data={data}\r\n              isAuthor={data.user === author}\r\n              isYou={data.userId === loggedUserId}\r\n              isTooltip\r\n            />\r\n          </div>\r\n          <MsgText\r\n            topicId={topicId}\r\n            topicDate={data.time}\r\n            n={n}\r\n            html={data.text}\r\n            vote={data.vote}\r\n            style={{ overflowY: \"auto\", overflowWrap: \"break-word\" }}\r\n          />\r\n        </div>\r\n      )}\r\n      {error && <span>{error}</span>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PreviewContent;\r\n","import { useCallback, useState } from \"react\";\r\nimport { SwipeEventData, useSwipeable } from \"react-swipeable\";\r\nimport { fetchTopicInfo } from \"src/api\";\r\n\r\nimport PreviewButtons from \"./preview_buttons\";\r\nimport PreviewContent from \"./preview_content\";\r\nimport \"./topic_preview.css\";\r\nimport { useAppSelector } from \"src/store\";\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n  initialMsgNumber: number;\r\n  author: string;\r\n  close: () => void;\r\n};\r\n\r\nconst TopicPreview: React.FC<IProps> = ({\r\n  topicId,\r\n  initialMsgNumber,\r\n  author,\r\n  close,\r\n}) => {\r\n  const loggedUserId = useAppSelector((state) => state.login.userId);\r\n\r\n  const [deltaX, setDeltaX] = useState(0);\r\n  const [display, setDispaly] = useState(\"none\");\r\n  const [state, setState] = useState({\r\n    msgNumber: initialMsgNumber,\r\n    key: 0,\r\n  });\r\n\r\n  const onClickFirst = () => {\r\n    setState({\r\n      msgNumber: 0,\r\n      key: state.key,\r\n    });\r\n  };\r\n\r\n  const onClickNext = () => {\r\n    setState({\r\n      msgNumber: state.msgNumber + 1,\r\n      key: state.key,\r\n    });\r\n  };\r\n\r\n  const onClickPrev = () => {\r\n    if (state.msgNumber > 0)\r\n      setState({\r\n        msgNumber: state.msgNumber - 1,\r\n        key: state.key,\r\n      });\r\n  };\r\n\r\n  const onClickLast = async () => {\r\n    const info = await fetchTopicInfo(topicId);\r\n    setState({\r\n      msgNumber: info.count,\r\n      key: state.key,\r\n    });\r\n  };\r\n\r\n  const onSwiping = (eventData: SwipeEventData) => {\r\n    if (Math.abs(eventData.deltaX) < 35) setDeltaX(0);\r\n    else setDeltaX(eventData.deltaX);\r\n  };\r\n\r\n  const onSwiped = (eventData: SwipeEventData) => {\r\n    if (Math.abs(eventData.deltaX) > 150) {\r\n      if (eventData.dir === \"Left\") {\r\n        setState({\r\n          msgNumber: state.msgNumber + 1,\r\n          key: state.key + 1,\r\n        });\r\n      } else if (eventData.dir === \"Right\" && state.msgNumber > 0) {\r\n        setState({\r\n          msgNumber: state.msgNumber - 1,\r\n          key: state.key + 1,\r\n        });\r\n      }\r\n    }\r\n    setDeltaX(0);\r\n  };\r\n\r\n  const swipeable = useSwipeable({\r\n    onSwiping,\r\n    onSwiped,\r\n    delta: 15,\r\n  });\r\n\r\n  const onContentLoaded = useCallback(() => {\r\n    setDispaly(\"block\");\r\n  }, []);\r\n\r\n  let items = [state.msgNumber];\r\n\r\n  if (deltaX < 0) items.push(state.msgNumber + 1);\r\n  else if (deltaX > 0 && state.msgNumber > 0) items.push(state.msgNumber - 1);\r\n\r\n  const style: React.CSSProperties = {\r\n    transform: `translate3d(${deltaX}px, 0px, 0px)`,\r\n    flexDirection: deltaX > 0 ? \"row-reverse\" : \"row\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"preview-container\" style={{ display }}>\r\n      <div className=\"topic-preview\">\r\n        <PreviewButtons\r\n          topicId={topicId}\r\n          onFirst={onClickFirst}\r\n          onLast={onClickLast}\r\n          onNext={onClickNext}\r\n          onPrev={onClickPrev}\r\n          close={close}\r\n        />\r\n        <div className=\"preview-carousel\" {...swipeable} style={style}>\r\n          <div\r\n            className=\"preview-carousel-item\"\r\n            key={state.key}\r\n            style={{ order: 0 }}\r\n          >\r\n            <PreviewContent\r\n              topicId={topicId}\r\n              n={items[0]}\r\n              loggedUserId={loggedUserId}\r\n              author={author}\r\n              onDataLoaded={onContentLoaded}\r\n            />\r\n          </div>\r\n          {items.length > 1 && (\r\n            <div\r\n              className=\"preview-carousel-item\"\r\n              key={state.key + 1}\r\n              style={{ order: 1 }}\r\n            >\r\n              <PreviewContent\r\n                topicId={topicId}\r\n                n={items[1]}\r\n                loggedUserId={loggedUserId}\r\n                author={author}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopicPreview;\r\n","import { useState } from \"react\";\r\n\r\nimport AuthorCell from \"./author-cell\";\r\nimport CountCell from \"./count-cell\";\r\nimport ForumCell from \"./forum-cell\";\r\nimport Last20Cell from \"./last20-cell\";\r\nimport LastUserCell from \"./last-user-cell\";\r\nimport ShowPreviewButton from \"./show_preview_button\";\r\nimport TopicNameCell from \"./topic_name_cell\";\r\nimport TopicPreview from \"src/components/preview/topic_preview\";\r\n\r\nimport { ITopicsListItem } from \"src/store\";\r\n\r\ntype IProps = {\r\n  item: ITopicsListItem;\r\n};\r\n\r\nconst Row: React.FC<IProps> = ({ item }) => {\r\n  const [previewNumber, setPreviewNumber] = useState<number>();\r\n\r\n  const previewShowFirst = () => {\r\n    if (previewNumber === undefined) {\r\n      setPreviewNumber(0);\r\n    } else {\r\n      setPreviewNumber(undefined);\r\n    }\r\n  };\r\n\r\n  const previewShowLast = () => {\r\n    if (previewNumber === undefined || previewNumber !== item.count) {\r\n      setPreviewNumber(item.count);\r\n    } else {\r\n      setPreviewNumber(undefined);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"topics-list-row\">\r\n        <ForumCell item={item} />\r\n        <div className=\"cell-section\">{item.section}</div>\r\n        <CountCell item={item} onClick={previewShowLast} />\r\n        <ShowPreviewButton\r\n          expanded={previewNumber !== undefined}\r\n          onClick={previewShowFirst}\r\n        />\r\n        <TopicNameCell data={item} />\r\n        <AuthorCell item={item} />\r\n        <LastUserCell item={item} />\r\n        <Last20Cell item={item} />\r\n      </div>\r\n      {previewNumber !== undefined && (\r\n        <TopicPreview\r\n          topicId={item.id}\r\n          initialMsgNumber={previewNumber}\r\n          author={item.author}\r\n          close={() => setPreviewNumber(undefined)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import { Pagination } from \"react-bootstrap\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport \"./pages.css\";\r\n\r\ntype IProps = {\r\n  maxPage: number;\r\n  last20?: boolean;\r\n};\r\n\r\nconst Pages: React.FC<IProps> = ({ maxPage, last20 }) => {\r\n  const location = useLocation();\r\n  let pathName = location.pathname;\r\n  if (pathName === \"/\") pathName = \"/index.php\";\r\n\r\n  const locationParams = new URLSearchParams(location.search);\r\n\r\n  let currentPage: number | string;\r\n  const page = locationParams.get(\"page\");\r\n  if (!page) currentPage = 1;\r\n  else if (page === \"last20\") currentPage = \"last20\";\r\n  else currentPage = parseInt(page, 10) || 1;\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= maxPage; i++) {\r\n    locationParams.set(\"page\", String(i));\r\n    let href = \"#\" + pathName + \"?\" + locationParams.toString();\r\n\r\n    pages.push(\r\n      <Pagination.Item active={currentPage === i} key={i} href={href}>\r\n        {i}\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n\r\n  if (last20 === true) {\r\n    locationParams.set(\"page\", \"last20\");\r\n    let href = \"#\" + pathName + \"?\" + locationParams.toString();\r\n    pages.push(\r\n      <Pagination.Item\r\n        active={currentPage === \"last20\"}\r\n        key=\"last20\"\r\n        href={href}\r\n      >\r\n        »\r\n      </Pagination.Item>\r\n    );\r\n  }\r\n\r\n  return <Pagination style={{ margin: \"0px\" }}>{pages}</Pagination>;\r\n};\r\n\r\nexport default Pages;\r\n","import { useRef, RefObject, useCallback } from \"react\";\r\nimport { FormControl, Button, ButtonGroup, Form } from \"react-bootstrap\";\r\n\r\nimport \"./text_editor.css\";\r\n\r\ntype IProps = {\r\n  placeholder: string;\r\n  showVoting?: boolean;\r\n  isVoting?: boolean;\r\n  text: string;\r\n  isFetching: boolean;\r\n  formRef?: RefObject<HTMLFormElement>;\r\n  onChange?: (text: string) => void;\r\n  onShowVotingChange?: (show: boolean) => void;\r\n};\r\n\r\nconst TextEditor: React.FC<IProps> = ({\r\n  placeholder,\r\n  showVoting,\r\n  isVoting,\r\n  isFetching,\r\n  text,\r\n  formRef,\r\n  onChange,\r\n  onShowVotingChange,\r\n}) => {\r\n  const textAreaRef = useRef<HTMLTextAreaElement>();\r\n\r\n  const onButtonCode1c = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n\r\n    const openTag = \"[1C]\\n\";\r\n    const closeTag = \"\\n[/1C]\";\r\n\r\n    const textAreaNode = textAreaRef.current;\r\n\r\n    const start = textAreaNode.selectionStart;\r\n    const end = textAreaNode.selectionEnd;\r\n\r\n    const oldText = textAreaNode.value;\r\n    const len = oldText.length;\r\n    const selectedText = oldText.substring(start, end);\r\n    const replacement = openTag + selectedText + closeTag;\r\n    let newText =\r\n      oldText.substring(0, start) + replacement + oldText.substring(end, len);\r\n\r\n    if (onChange) onChange(newText);\r\n  };\r\n\r\n  const handleShowVotingChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      if (onShowVotingChange) onShowVotingChange(e.currentTarget.checked);\r\n    },\r\n    [onShowVotingChange]\r\n  );\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n      if (onChange) onChange(e.currentTarget.value);\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  const handleKeyUp = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (!formRef) return;\r\n    if (!formRef.current) return;\r\n\r\n    if (e.key === \"Enter\" && e.ctrlKey) {\r\n      formRef.current.dispatchEvent(\r\n        new Event(\"submit\", { cancelable: true, bubbles: true })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl\r\n        as=\"textarea\"\r\n        aria-label=\"Сообщение\"\r\n        placeholder={placeholder}\r\n        cols={70}\r\n        rows={3}\r\n        value={text}\r\n        onChange={handleChange}\r\n        onKeyUp={handleKeyUp}\r\n        ref={textAreaRef}\r\n        className=\"text-editor input\"\r\n        data-lpignore={true}\r\n      />\r\n      <div className=\"flex-row\">\r\n        <ButtonGroup>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"light\"\r\n            onClick={onButtonCode1c}\r\n            style={{ marginRight: \"5px\" }}\r\n            className=\"button\"\r\n          >\r\n            Код 1С\r\n          </Button>\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"light\"\r\n            disabled={isFetching}\r\n            type=\"submit\"\r\n            className=\"button\"\r\n          >\r\n            {isFetching ? \"Отправляется\" : \"Отправить\"}\r\n          </Button>\r\n        </ButtonGroup>\r\n        {showVoting && (\r\n          <Form.Check\r\n            id=\"show_voting\"\r\n            type=\"checkbox\"\r\n            checked={isVoting}\r\n            onChange={handleShowVotingChange}\r\n            label=\"Голосование\"\r\n            style={{ margin: \"auto 0px auto auto\" }}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextEditor;\r\n","import { useCallback, useState, useRef } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport { FormGroup } from \"react-bootstrap\";\r\nimport { useEventCallback } from \"usehooks-ts\";\r\n\r\nimport { useActionCreators, useAppDispatch, useAppSelector } from \"src/store\";\r\nimport { ISectionItem, newTopicActions, postNewTopicIfNeeded } from \"src/store\";\r\nimport { useSections } from \"src/store/query-hooks\";\r\n\r\nimport Sections from \"./sections\";\r\nimport TextEditor from \"src/components/common/text_editor\";\r\nimport ErrorElem from \"src/components/common/error\";\r\n\r\nimport \"./new_topic.css\";\r\n\r\ntype IProps = {\r\n  onSubmitSuccess?: any;\r\n};\r\n\r\nconst NewTopic: React.FC<IProps> = ({ onSubmitSuccess }) => {\r\n  const { data: sections } = useSections();\r\n\r\n  const newTopic = useAppSelector((state) => state.newTopic);\r\n\r\n  const [currentSection, setSection] = useState(null);\r\n  const [votes, setVotes] = useState(Array(10).fill(\"\"));\r\n\r\n  const formRef = useRef(null);\r\n  const dispatch = useAppDispatch();\r\n  const actions = useActionCreators(newTopicActions);\r\n\r\n  const onSectionChange = useEventCallback(\r\n    (e: React.SyntheticEvent, section: ISectionItem) => {\r\n      setSection(section);\r\n      actions.changeSection(section);\r\n    }\r\n  );\r\n\r\n  const onVoteTextChange =\r\n    (i: number) => (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      let votesCopy = votes.slice();\r\n      votesCopy[i] = e.target.value;\r\n      setVotes(votesCopy);\r\n    };\r\n\r\n  const onSubmit = useEventCallback((e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (!currentSection) {\r\n      actions.setError(\"Не выбрана секция\");\r\n      return;\r\n    }\r\n\r\n    let subject = newTopic.subject;\r\n    if (!subject) {\r\n      actions.setError(\"Не указана тема\");\r\n      return;\r\n    }\r\n\r\n    if (!newTopic.text) {\r\n      actions.setError(\"Не указано сообщение\");\r\n      return;\r\n    }\r\n\r\n    let params = {\r\n      subject,\r\n      text: newTopic.text,\r\n      section: currentSection.id,\r\n      forum: currentSection.forum,\r\n      isVoting: newTopic.isVoting,\r\n      votingItems: [],\r\n      onSuccess: this_onSubmitSuccess,\r\n    };\r\n\r\n    if (newTopic.isVoting) {\r\n      params.votingItems = [];\r\n      for (let i = 1; i <= 10; i++) {\r\n        let val = votes[i - 1];\r\n        if (val) {\r\n          params.votingItems.push(val);\r\n        }\r\n      }\r\n    }\r\n\r\n    dispatch(postNewTopicIfNeeded(params));\r\n  });\r\n\r\n  const onSubjectChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      actions.changeSubject(e.target.value);\r\n    },\r\n    [actions]\r\n  );\r\n\r\n  const onTextChange = useCallback(\r\n    (text: string) => {\r\n      actions.changeText(text);\r\n    },\r\n    [actions]\r\n  );\r\n\r\n  const onShowVotingChange = useCallback(\r\n    (show: boolean) => {\r\n      actions.showVoting(show);\r\n    },\r\n    [actions]\r\n  );\r\n\r\n  const this_onSubmitSuccess = () => {\r\n    actions.clear();\r\n\r\n    if (onSubmitSuccess) {\r\n      onSubmitSuccess();\r\n    }\r\n  };\r\n  let groupsElem = [];\r\n  for (let forum in sections.tree) {\r\n    groupsElem.push(\r\n      <option key={forum} value={forum.toLowerCase()}>\r\n        {forum}\r\n      </option>\r\n    );\r\n  }\r\n\r\n  let votingOptions = [];\r\n\r\n  if (newTopic.isVoting) {\r\n    votingOptions.push(<div key=\"p\">Варианты:</div>);\r\n    for (let i = 1; i <= 10; i++) {\r\n      votingOptions.push(\r\n        <InputGroup\r\n          key={i}\r\n          size=\"sm\"\r\n          style={{ marginBottom: \"3px\", width: \"100%\" }}\r\n        >\r\n          <InputGroup.Text style={{ width: \"40px\" }} className=\"input\">\r\n            {`${i}.`}\r\n          </InputGroup.Text>\r\n          <Form.Control\r\n            type=\"text\"\r\n            aria-label={`Вариант ${i}`}\r\n            maxLength={50}\r\n            className=\"input\"\r\n            value={votes[i - 1]}\r\n            onChange={onVoteTextChange(i - 1)}\r\n          />\r\n        </InputGroup>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className=\"new-topic-container\" onSubmit={onSubmit} ref={formRef}>\r\n      <div id=\"newtopic_form\" className=\"new-topic-text\">\r\n        <div>\r\n          <b>Новая тема:</b>\r\n        </div>\r\n        {newTopic.error && <ErrorElem text={newTopic.error} />}\r\n        <div className=\"flex-row\" style={{ marginBottom: \"3px\" }}>\r\n          <Form.Select\r\n            disabled\r\n            size=\"sm\"\r\n            value={newTopic.forum}\r\n            style={{ flex: \"0 1 90px\" }}\r\n            className=\"input\"\r\n          >\r\n            {groupsElem}\r\n          </Form.Select>\r\n          <Sections\r\n            id=\"target_section\"\r\n            defaultValue=\"Секция\"\r\n            selected={newTopic.section?.code}\r\n            size=\"sm\"\r\n            style={{ flex: \"1 1 auto\" }}\r\n            onChange={onSectionChange}\r\n          />\r\n        </div>\r\n        <Form.Control\r\n          type=\"text\"\r\n          aria-label=\"Тема\"\r\n          placeholder=\"Тема\"\r\n          size=\"sm\"\r\n          value={newTopic.subject}\r\n          onChange={onSubjectChange}\r\n          style={{ marginBottom: \"3px\" }}\r\n          className=\"input\"\r\n          maxLength={90}\r\n        />\r\n        <TextEditor\r\n          placeholder=\"Сообщение\"\r\n          showVoting={true}\r\n          isVoting={newTopic.isVoting}\r\n          text={newTopic.text}\r\n          isFetching={newTopic.status === \"loading\"}\r\n          onChange={onTextChange}\r\n          onShowVotingChange={onShowVotingChange}\r\n          formRef={formRef}\r\n        />\r\n      </div>\r\n      <FormGroup className=\"new-topic-voting\">{votingOptions}</FormGroup>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewTopic;\r\n","import { useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nimport { useTopicsList } from \"src/store/query-hooks\";\r\n\r\nimport Header from \"./header\";\r\nimport TableHeader from \"./table_header\";\r\nimport Row from \"./row\";\r\nimport Pages from \"src/components/common/pages\";\r\nimport NewTopic from \"./new_topic\";\r\nimport Error from \"src/components/common/error\";\r\n\r\nimport \"./topics_list.css\";\r\n\r\nconst TopicsList: React.FC = () => {\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const {\r\n    isFetching,\r\n    data: items,\r\n    error,\r\n    refetch,\r\n  } = useTopicsList({ searchParams });\r\n\r\n  useEffect(() => {\r\n    document.title = \"React.Mista\";\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [searchParams]);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {error && <Error text={error.message} />}\r\n      <div className=\"topic-list-table\">\r\n        <TableHeader onUpdateClick={refetch} isLoading={isFetching} />\r\n        {items.map((item) => (\r\n          <Row key={item.id} item={item} />\r\n        ))}\r\n        <div className=\"table-footer\">\r\n          <Pages maxPage={10} />\r\n        </div>\r\n      </div>\r\n      <div\r\n        id=\"F\"\r\n        className=\"newtopic\"\r\n        style={{ marginBottom: \"10px\", marginTop: \"5px\", position: \"relative\" }}\r\n      >\r\n        <NewTopic onSubmitSuccess={refetch} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopicsList;\r\n","import Login from \"src/components/login\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTopicMessages } from \"src/store/query-hooks\";\r\n\r\nconst forums = {\r\n  \"1c\": \"1С:Предприятие\",\r\n  life: \"О жизни\",\r\n  it: \"Информационные технологии\",\r\n  job: \"Работа\",\r\n};\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n};\r\n\r\nconst Header: React.FC<IProps> = ({ topicId }) => {\r\n  const { data: forum } = useTopicMessages(\r\n    { topicId },\r\n    {\r\n      enabled: false,\r\n      select: (data) => data?.info.forum,\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div className=\"header-left\">\r\n        <Login />\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <span id=\"forum_string\" className=\"bold120\">\r\n          <Link\r\n            to={`/index.php?forum=${forum}`}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            {forums[forum]}\r\n          </Link>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { domain, urlTopicInfo, urlTopicMessages } from \"src/api\";\r\nimport { useTopicMessages } from \"src/store/query-hooks\";\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n};\r\n\r\nconst TopicInfo: React.FC<IProps> = ({ topicId }) => {\r\n  const { data: title } = useTopicMessages(\r\n    { topicId },\r\n    { select: (data) => data?.info.title }\r\n  );\r\n\r\n  let yandexUrl =\r\n    \"https://www.yandex.ru/search/?text=\" + encodeURIComponent(title);\r\n\r\n  return (\r\n    <div className=\"topic-row\">\r\n      <div className=\"cell-userinfo\">\r\n        <div className=\"topic-tools\">\r\n          <a\r\n            title=\"API.info\"\r\n            href={`${domain}/${urlTopicInfo}?id=${topicId}`}\r\n            className=\"agh\"\r\n            style={{ display: \"block\", lineHeight: \"1em\" }}\r\n          >\r\n            i\r\n          </a>\r\n          <a\r\n            title=\"API.messages\"\r\n            href={`${domain}/${urlTopicMessages}?id=${topicId}&from=0&to=20`}\r\n            className=\"agh\"\r\n            style={{ display: \"block\", lineHeight: \"1em\" }}\r\n          >\r\n            m\r\n          </a>\r\n          {/*<a href=\"add_voting.php?topic_id=815217\" title=\"Добавить голосование\">vote</a> &nbsp;&nbsp;*/}\r\n        </div>\r\n      </div>\r\n      <div className=\"cell-message\">\r\n        <div className=\"flex-row\">\r\n          <div style={{ flex: 1, textAlign: \"center\" }}>\r\n            <a href={`https://forum.mista.ru/topic/${topicId}`}>\r\n              <h1\r\n                className=\"topic-title\"\r\n                dangerouslySetInnerHTML={{ __html: title }}\r\n              ></h1>\r\n            </a>\r\n            <div className=\"moder-action\"></div>\r\n          </div>\r\n          <div style={{ flex: \"0 0 20px\", position: \"relative\" }}>\r\n            <div className=\"div-va-middle\">\r\n              <a\r\n                rel=\"noopener noreferrer\"\r\n                href={yandexUrl}\r\n                title=\"Искать в Яндексе\"\r\n                target=\"_blank\"\r\n                className=\"yandex\"\r\n              >\r\n                Я\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopicInfo;\r\n","import UserInfo from \"./user_info\";\r\nimport MsgText from \"./msg_text\";\r\nimport { useAppSelector } from \"src/store\";\r\nimport { ITopicMessage } from \"src/store\";\r\nimport { useTopicMessages } from \"src/store/query-hooks\";\r\n\r\ntype IProps = {\r\n  item: ITopicMessage;\r\n  topicId: number;\r\n};\r\n\r\nconst Row: React.FC<IProps> = ({ item, topicId }) => {\r\n  const login = useAppSelector((state) => state.login);\r\n  const { data: topic } = useTopicMessages({ topicId }, { enabled: false });\r\n  const author = topic?.item0?.user || \"\";\r\n\r\n  if (!item) return null;\r\n\r\n  return (\r\n    <div className=\"topic-row\" id={String(item.n)}>\r\n      <div className=\"cell-userinfo\">\r\n        <UserInfo\r\n          data={item}\r\n          isAuthor={item.user === author}\r\n          isYou={item.user === login.userName}\r\n        />\r\n      </div>\r\n      <div className=\"cell-message\">\r\n        <MsgText\r\n          html={item.text}\r\n          topicId={topicId}\r\n          topicDate={item.time}\r\n          n={item.n}\r\n          vote={item.vote}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import { Button } from \"react-bootstrap\";\r\nimport { useUpdateMessages } from \"src/store/query-hooks\";\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n  isLastPage: boolean;\r\n};\r\n\r\nconst Footer: React.FC<IProps> = ({ topicId, isLastPage }) => {\r\n  const { isFetching, refetch } = useUpdateMessages(\r\n    { topicId },\r\n    { enabled: false }\r\n  );\r\n\r\n  const onBookmarkClick = () => {\r\n    //dispatch(addBookmark(info));\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex-row\" id=\"F\">\r\n      <div className=\"ta-left va-top\" style={{ width: \"50%\" }}>\r\n        <Button\r\n          onClick={onBookmarkClick}\r\n          disabled={false}\r\n          size=\"sm\"\r\n          className=\"button\"\r\n          variant=\"light\"\r\n        >\r\n          {\"Закладка\"}\r\n        </Button>\r\n      </div>\r\n      <div className=\"ta-right va-middle\" style={{ marginLeft: \"auto\" }}>\r\n        {isLastPage && (\r\n          <Button\r\n            onClick={() => refetch()}\r\n            disabled={isFetching}\r\n            size=\"sm\"\r\n            className=\"button\"\r\n            variant=\"light\"\r\n          >\r\n            {isFetching ? \"Обновляется\" : \"Обновить ветку\"}\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { ReactElement, useState, useCallback } from \"react\";\r\nimport { FormGroup, Form } from \"react-bootstrap\";\r\n\r\nimport TextEditor from \"src/components/common/text_editor\";\r\nimport { useActionCreators, useAppDispatch, useAppSelector } from \"src/store\";\r\nimport { newMessageActions, postNewMessage, newTopicActions } from \"src/store\";\r\n\r\nimport type { PostNewmessageParams } from \"src/store\";\r\nimport { useTopicMessages } from \"src/store/query-hooks\";\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n  onSubmitSuccess?: () => void;\r\n};\r\n\r\nconst NewMessage: React.FC<IProps> = ({ topicId, onSubmitSuccess }) => {\r\n  const [voting, setVoting] = useState<number | undefined>();\r\n  const dispatch = useAppDispatch();\r\n  const actions = useActionCreators(newMessageActions);\r\n\r\n  const {\r\n    data: { info },\r\n  } = useTopicMessages({ topicId });\r\n  const newMessage = useAppSelector((state) => state.newMessage);\r\n\r\n  const onSubmit = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    let params: PostNewmessageParams = {\r\n      text: newMessage.text,\r\n      topicId: String(info?.id),\r\n      onSuccess: afterSubmit,\r\n      voting_select: undefined,\r\n    };\r\n\r\n    if (voting) {\r\n      params.voting_select = voting;\r\n    }\r\n\r\n    dispatch(postNewMessage(params));\r\n  };\r\n\r\n  const afterSubmit = () => {\r\n    actions.changeText(\"\");\r\n    setVoting(undefined);\r\n\r\n    if (onSubmitSuccess) {\r\n      onSubmitSuccess();\r\n    }\r\n  };\r\n\r\n  const clearVoting = (e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n    setVoting(undefined);\r\n  };\r\n\r\n  const setVotingOption = (i: number) => {\r\n    setVoting(i);\r\n  };\r\n\r\n  const onTextChange = useCallback(\r\n    (text: string) => {\r\n      dispatch(newTopicActions.changeText(text));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  let votingElem: ReactElement;\r\n  if (info?.isVoting && info?.voting) {\r\n    let votingOptions = [];\r\n    for (let i = 1; i <= info.voting.length; i++) {\r\n      const item = info.voting[i - 1];\r\n      if (!item.text) continue;\r\n\r\n      votingOptions.push(\r\n        <Form.Check\r\n          type=\"radio\"\r\n          key={i}\r\n          name=\"voting\"\r\n          checked={voting === i}\r\n          onChange={() => setVotingOption(i)}\r\n          label={`${i}. ${item.text}`}\r\n        />\r\n      );\r\n    }\r\n\r\n    votingElem = (\r\n      <FormGroup>\r\n        <legend>\r\n          <small>\r\n            Ваш выбор:\r\n            <span\r\n              id=\"voting_clear\"\r\n              style={{ marginLeft: \"5px\", cursor: \"pointer\" }}\r\n              onClick={clearVoting}\r\n            >\r\n              очистить\r\n            </span>\r\n          </small>\r\n        </legend>\r\n        {votingOptions}\r\n        Обоснуйте свой выбор!\r\n      </FormGroup>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form style={{ marginTop: \"5px\" }} onSubmit={onSubmit}>\r\n      <div className=\"bold\">Добавить сообщение в тему:</div>\r\n      <div className=\"new-message-container\">\r\n        <div className=\"new-message-text\">\r\n          <TextEditor\r\n            isFetching={newMessage.status === \"loading\"}\r\n            text={newMessage.text}\r\n            placeholder=\"Сообщение\"\r\n            onChange={onTextChange}\r\n          />\r\n        </div>\r\n        <div className=\"new-message-voting\">{votingElem}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewMessage;\r\n","import { useEffect } from \"react\";\r\nimport { useLocation, useSearchParams } from \"react-router-dom\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"src/store\";\r\nimport { newMessageActions } from \"src/store\";\r\nimport { useTopicMessages, useUpdateMessages } from \"src/store/query-hooks\";\r\n\r\nimport Error from \"src/components/common/error\";\r\nimport Pages from \"src/components/common/pages\";\r\nimport Header from \"./header\";\r\nimport TopicInfo from \"./topic_info\";\r\nimport Row from \"../../pages/topic/row\";\r\nimport Footer from \"./footer\";\r\nimport NewMessage from \"./new_message\";\r\nimport {\r\n  getMaxPage,\r\n  extractTextFromHTML,\r\n  toNumber,\r\n  getPageNumber,\r\n} from \"src/utils\";\r\n\r\nimport \"./topic.css\";\r\nimport { useEnableUpdater } from \"./hooks/use-enable-updater\";\r\n\r\nconst Topic: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { hash } = useLocation();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const topicId = toNumber(searchParams.get(\"id\"), -1);\r\n  const { data, error, isPending } = useTopicMessages({ topicId });\r\n\r\n  const { info, item0, list: items = [] } = data ?? {};\r\n\r\n  const login = useAppSelector((state) => state.login);\r\n\r\n  const page = getPageNumber(searchParams.get(\"page\"));\r\n  const maxPage = getMaxPage(info?.count);\r\n\r\n  const isLastPage = page === \"last20\" || page === maxPage;\r\n  const { enableUpdater, refreshInterval } = useEnableUpdater({ isLastPage });\r\n\r\n  const { refetch: updateMessages } = useUpdateMessages(\r\n    { topicId },\r\n    {\r\n      refetchInterval: refreshInterval,\r\n      enabled: enableUpdater,\r\n    }\r\n  );\r\n\r\n  const onPostNewMessageSuccess = () => {\r\n    updateMessages();\r\n    dispatch(newMessageActions.changeText(\"\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (info?.title) {\r\n      document.title = extractTextFromHTML(info.title);\r\n    }\r\n  }, [info?.title]);\r\n\r\n  useEffect(() => {\r\n    if (isPending) return;\r\n    if (!hash) return;\r\n\r\n    const nodeHash = document.getElementById(hash.slice(1));\r\n    if (nodeHash) {\r\n      window.scrollTo(0, nodeHash.offsetTop);\r\n    }\r\n  }, [isPending, hash]);\r\n\r\n  return (\r\n    <div style={{ marginBottom: \"5px\" }}>\r\n      <Header topicId={topicId} />\r\n      {error && <Error text={error.message} />}\r\n      <div className=\"topic-table\">\r\n        <TopicInfo topicId={topicId} />\r\n        <Row item={item0} topicId={topicId} />\r\n        {items.map((item, i) => (\r\n          <Row key={item.n} item={item} topicId={topicId} />\r\n        ))}\r\n        {(maxPage > 1 || page === \"last20\") && (\r\n          <div className=\"table-footer\">\r\n            <Pages maxPage={maxPage} last20 />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Footer topicId={topicId} isLastPage={isLastPage} />\r\n      {login.logged && (\r\n        <NewMessage\r\n          topicId={topicId}\r\n          onSubmitSuccess={onPostNewMessageSuccess}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Topic;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useAppSelector } from \"src/store\";\r\nimport { toNumber } from \"src/utils\";\r\n\r\ntype IProps = {\r\n  isLastPage: boolean;\r\n};\r\n\r\nexport const useEnableUpdater = ({ isLastPage }: IProps) => {\r\n  const [enableRefresh, refreshInterval] = useAppSelector((state) => [\r\n    state.options.items.autoRefreshTopic,\r\n    toNumber(state.options.items.autoRefreshTopicInterval, 60) * 1000,\r\n  ]);\r\n\r\n  const [enableUpdater, setEnableUpdater] = useState(false);\r\n  useEffect(() => {\r\n    if (enableRefresh === \"true\" && isLastPage) {\r\n      setTimeout(() => setEnableUpdater(true), refreshInterval);\r\n    }\r\n  }, [enableRefresh, refreshInterval, isLastPage]);\r\n\r\n  return {\r\n    enableUpdater,\r\n    refreshInterval,\r\n  };\r\n};\r\n","import { Form } from \"react-bootstrap\";\r\n\r\ntype IProps = {\r\n  name: string;\r\n  label: string;\r\n  value: string;\r\n  values: Array<{ name: string; descr: string }>;\r\n  onChange: (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    name: string,\r\n    value: string\r\n  ) => void;\r\n  oneLine: boolean;\r\n};\r\n\r\nconst RadioOption: React.FC<IProps> = ({\r\n  name,\r\n  label,\r\n  value,\r\n  values,\r\n  oneLine,\r\n  onChange,\r\n}) => {\r\n  const onChangeValue = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    onChange(e, name, e.target.value);\r\n  };\r\n\r\n  return (\r\n    <span>\r\n      <span style={{ marginRight: \"5px\" }}> {label} </span>\r\n      {oneLine && <br />}\r\n      {values.map((item, i) => (\r\n        <Form.Check\r\n          key={i}\r\n          type=\"radio\"\r\n          id={item.name}\r\n          label={item.descr}\r\n          name={label}\r\n          checked={item.name === value}\r\n          value={item.name}\r\n          inline={oneLine}\r\n          onChange={onChangeValue}\r\n        ></Form.Check>\r\n      ))}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default RadioOption;\r\n","type IProps = {\r\n  name: string;\r\n  label: string;\r\n  value: string;\r\n  onChange: (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    name: string,\r\n    value: string\r\n  ) => void;\r\n  postfix?: string;\r\n};\r\n\r\nconst StringOption: React.FC<IProps> = ({\r\n  name,\r\n  value,\r\n  label,\r\n  postfix,\r\n  onChange,\r\n}) => {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    onChange(e, name, e.target.value);\r\n  };\r\n\r\n  return (\r\n    <label htmlFor={name} style={{ marginRight: \"5px\" }}>\r\n      <span style={{ marginRight: \"5px\" }}>{label}</span>\r\n      <input\r\n        type=\"string\"\r\n        name={name}\r\n        value={value}\r\n        onChange={handleChange}\r\n        className=\"input\"\r\n      />\r\n      {postfix !== undefined ? (\r\n        <span style={{ marginLeft: \"5px\" }}>{postfix}</span>\r\n      ) : null}\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default StringOption;\r\n","export const formTabs = [\r\n  {\r\n    tabName: \"Общие\",\r\n    rows: [\r\n      [\"theme\"],\r\n      [\"topicsPerPage\"],\r\n      [\"autoRefreshTopicsList\", \"autoRefreshTopicsListInterval\"],\r\n      [\"autoRefreshTopic\", \"autoRefreshTopicInterval\"],\r\n    ],\r\n  },\r\n  {\r\n    tabName: \"Тултипы\",\r\n    rows: [[\"showTooltips\", \"tooltipDelay\"], [\"showTooltipOnPostLink\"]],\r\n  },\r\n  {\r\n    tabName: \"Ссылки\",\r\n    rows: [\r\n      [\"showYoutubeVideoTitle\"],\r\n      [\"replaceCatalogMista\"],\r\n      [\"fixBrokenLinks\"],\r\n    ],\r\n  },\r\n];\r\n\r\nexport const formParams = {\r\n  theme: {\r\n    type: \"radio\",\r\n    label: \"Цветовая палитра:\",\r\n    oneLine: true,\r\n    values: [\r\n      { name: \"yellow\", descr: \"Золотая\" },\r\n      { name: \"lightgray\", descr: \"Серая\" },\r\n      { name: \"dark\", descr: \"Темная\" },\r\n    ],\r\n  },\r\n  topicsPerPage: {\r\n    type: \"number\",\r\n    label: \"Тем на странице (max 99):\",\r\n    min: 1,\r\n    max: 99,\r\n  },\r\n  autoRefreshTopicsList: {\r\n    type: \"checkbox\",\r\n    label: \"Автообновление списка тем\",\r\n  },\r\n  autoRefreshTopicsListInterval: {\r\n    type: \"number\",\r\n    label: \"\",\r\n    min: 60,\r\n    max: 1000000,\r\n    postfix: \"сек\",\r\n  },\r\n  autoRefreshTopic: {\r\n    type: \"checkbox\",\r\n    label: \"Автообновление темы\",\r\n  },\r\n  autoRefreshTopicInterval: {\r\n    type: \"number\",\r\n    label: \"\",\r\n    min: 60,\r\n    max: 1000000,\r\n    postfix: \"сек\",\r\n  },\r\n  //Tooltips\r\n  showTooltips: {\r\n    type: \"checkbox\",\r\n    label: \"Показывать тултипы, задержка\",\r\n    disabled: true,\r\n  },\r\n  tooltipDelay: {\r\n    type: \"number\",\r\n    max: 1000000,\r\n    label: \"\",\r\n    postfix: \"мс\",\r\n    disabled: true,\r\n  },\r\n  showTooltipOnPostLink: {\r\n    type: \"checkbox\",\r\n    label: \"Показывать тултип ссыки на другую ветку\",\r\n    disabled: true,\r\n  },\r\n  //links\r\n  showYoutubeVideoTitle: {\r\n    type: \"checkbox\",\r\n    label: \"Показывать наименования роликов youtube\",\r\n  },\r\n  replaceCatalogMista: {\r\n    type: \"checkbox\",\r\n    label: \"Обратно заменять catalog.mista.ru на infostart.ru\",\r\n  },\r\n  fixBrokenLinks: {\r\n    type: \"checkbox\",\r\n    label: \"Чинить поломанные ссылки (с русскими символами)\",\r\n  },\r\n};\r\n","type IProps = {\r\n  name: string;\r\n} & React.PropsWithChildren;\r\n\r\nconst Tab: React.FC<IProps> = ({ name, children }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"tab-header\">{name}</div>\r\n      <div className=\"tab-content\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tab;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Form, FormControl, Button } from \"react-bootstrap\";\r\n\r\nimport RadioOption from \"./radio_option\";\r\nimport StringOption from \"./string_option\";\r\n\r\nimport { formTabs, formParams } from \"./formscheme\";\r\nimport Tab from \"./tab\";\r\n\r\nimport { IOptionsItems, useAppDispatch, useAppSelector } from \"src/store\";\r\nimport { defaultOptionsState, optionsActions } from \"src/store\";\r\n\r\nimport \"./options.css\";\r\n\r\nconst Options: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const options = useAppSelector((state) => state.options);\r\n\r\n  const [state, setState] = useState({\r\n    items: options.items,\r\n  });\r\n\r\n  const closeForm = () => {\r\n    navigate(\"/#\");\r\n  };\r\n\r\n  const resetOptions = () => {\r\n    setState({\r\n      ...state,\r\n      items: Object.assign({}, defaultOptionsState.items),\r\n    });\r\n  };\r\n\r\n  const applyOptions = () => {\r\n    dispatch(optionsActions.save(state.items));\r\n    closeForm();\r\n  };\r\n\r\n  const onChange = (\r\n    e: React.FormEvent<HTMLElement>,\r\n    name: string,\r\n    value: IOptionsItems[keyof IOptionsItems]\r\n  ) => {\r\n    let items = Object.assign({}, state.items);\r\n    items[name] = value;\r\n    setState({\r\n      ...state,\r\n      items,\r\n    });\r\n  };\r\n\r\n  let tabs = [];\r\n  for (let tab of formTabs) {\r\n    let rows = [];\r\n    for (let i in tab.rows) {\r\n      const row = tab.rows[i];\r\n      let rowElem = [];\r\n      for (let name of row) {\r\n        const item = formParams[name];\r\n        if (!item) continue;\r\n\r\n        const value = state.items[name];\r\n\r\n        if (item.type === \"radio\") {\r\n          rowElem.push(\r\n            <RadioOption\r\n              key={name}\r\n              name={name}\r\n              label={item.label}\r\n              values={item.values}\r\n              value={value}\r\n              oneLine={item.oneLine}\r\n              onChange={onChange}\r\n            />\r\n          );\r\n        } else if (item.type === \"number\") {\r\n          if (item.label)\r\n            rowElem.push(\r\n              <label\r\n                htmlFor={name}\r\n                key={name + \"_label\"}\r\n                style={{ fontWeight: \"inherit\" }}\r\n              >\r\n                {item.label}\r\n              </label>\r\n            );\r\n\r\n          rowElem.push(\r\n            <div className=\"options-number\" key={name}>\r\n              <FormControl\r\n                type=\"number\"\r\n                min={item.min}\r\n                max={item.max}\r\n                value={value}\r\n                disabled={item.disabled}\r\n                onChange={(e) => onChange(e, name, e.target.value)}\r\n                className=\"input\"\r\n                size=\"sm\"\r\n              ></FormControl>\r\n              {item.postfix && (\r\n                <span\r\n                  key={name + \"_postfix\"}\r\n                  style={{ marginLeft: \"5px\", flex: \"0 0 auto\" }}\r\n                >\r\n                  {item.postfix}\r\n                </span>\r\n              )}\r\n            </div>\r\n          );\r\n        } else if (item.type === \"string\") {\r\n          rowElem.push(\r\n            <StringOption\r\n              key={name}\r\n              name={name}\r\n              label={item.label}\r\n              postfix={item.postfix}\r\n              value={value}\r\n              onChange={onChange}\r\n            />\r\n          );\r\n        } else if (item.type === \"checkbox\") {\r\n          rowElem.push(\r\n            <Form.Check\r\n              id={name}\r\n              type=\"checkbox\"\r\n              label={item.label}\r\n              key={name}\r\n              name={name}\r\n              checked={String(value) === \"true\"}\r\n              disabled={item.disabled}\r\n              onChange={(e) => onChange(e, name, String(e.target.checked))}\r\n              style={{ flex: \"0 0 auto\", margin: \"0px\", maxWidth: \"100%\" }}\r\n            />\r\n          );\r\n        }\r\n      }\r\n\r\n      rows.push(\r\n        <div key={i} className=\"options-row\">\r\n          {rowElem}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    tabs.push(\r\n      <Tab key={tab.tabName} name={tab.tabName}>\r\n        {rows}\r\n      </Tab>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"options-form\">\r\n      <div className=\"options-header\" style={{ cursor: \"default\" }}>\r\n        <b>Настройки</b>\r\n      </div>\r\n      {tabs}\r\n      <div className=\"button-row\">\r\n        <Button\r\n          id=\"applyOptions\"\r\n          size=\"sm\"\r\n          variant=\"light\"\r\n          style={{ margin: \"5px\" }}\r\n          className=\"button\"\r\n          onClick={applyOptions}\r\n        >\r\n          OK\r\n        </Button>\r\n        <Button\r\n          id=\"cancelOptions\"\r\n          size=\"sm\"\r\n          variant=\"light\"\r\n          style={{ margin: \"5px\", float: \"left\" }}\r\n          className=\"button\"\r\n          onClick={closeForm}\r\n        >\r\n          Отмена\r\n        </Button>\r\n        <Button\r\n          id=\"defaultOptions\"\r\n          size=\"sm\"\r\n          variant=\"light\"\r\n          style={{ margin: \"5px\", float: \"right\" }}\r\n          className=\"button\"\r\n          onClick={resetOptions}\r\n        >\r\n          Сбросить настройки\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import { Routes, Route } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport TopicsList from \"./topics_list\";\r\nimport Topic from \"./topic\";\r\nimport Options from \"./options\";\r\n\r\nconst AppRoutes: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <Routes>\r\n        <Route path=\"/\" element={<TopicsList />} />\r\n        <Route path=\"/index.php\" element={<TopicsList />} />\r\n        <Route path=\"/topic.php\" element={<Topic />} />\r\n        <Route path=\"/options.php\" element={<Options />} />\r\n      </Routes>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AppRoutes;\r\n","import { domain } from \"src/api\";\r\n\r\nconst NavBarFooter: React.FC = () => {\r\n  return (\r\n    <footer className=\"flex-row navbar-footer\">\r\n      <a href={`${domain}/rules.php`}>Правила</a>\r\n      <span className=\"separator\">|</span>\r\n      <a href={`${domain}/about.php`}>Описание</a>\r\n      <span className=\"separator\">|</span>\r\n      <b>\r\n        <a href={`${domain}/ad.php`}>Реклама на сайте</a>{\" \"}\r\n      </b>\r\n      <span className=\"separator\">|</span>\r\n      <a href={`${domain}/find.php`}>Поиск</a>\r\n      <span className=\"separator\">|</span>\r\n      <a rel=\"nofollow\" href={`${domain}/sections_list.php`}>\r\n        Секции\r\n      </a>\r\n      <span className=\"separator\">|</span>\r\n      <a rel=\"nofollow\" href={`${domain}/rating.php`}>\r\n        Рейтинг\r\n      </a>\r\n      <span className=\"separator\">|</span>\r\n      <a href=\"http://kb.mista.ru\">Книга знаний</a>\r\n      <span className=\"separator\">|</span>\r\n      <a href=\"http://wiki.mista.ru\">Вики-миста (КЗ2)</a>\r\n      <span className=\"separator\">|</span>\r\n      <a rel=\"nofollow\" href=\"http://m.mista.ru/\">\r\n        Мобильная\r\n      </a>\r\n      <span className=\"separator\">|</span>\r\n      <a href={`${domain}/archive.php`}>Архив</a>\r\n      <span className=\"separator\">|</span>\r\n      <a href={`${domain}/moders.php`}>Модераторы</a>\r\n      <span className=\"separator\">|</span>\r\n      <a href={`${domain}/users_gallery.php`}>Галерея</a>\r\n      <span className=\"separator\">|</span>\r\n      <a href={`${domain}/ban_list.php`}>Баны</a>\r\n      <span className=\"separator\">|</span>\r\n      <span>18+</span>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default NavBarFooter;\r\n","type IProps = {\r\n  closeWindow?: (e: React.SyntheticEvent<HTMLDivElement>) => void;\r\n} & React.PropsWithChildren;\r\n\r\nconst TooltipHeader: React.FC<IProps> = ({ children, closeWindow }) => {\r\n  return (\r\n    <div className=\"tooltip-header\">\r\n      {children}\r\n      <div\r\n        className=\"tooltip-close\"\r\n        onClick={closeWindow}\r\n        onTouchEnd={closeWindow}\r\n      >\r\n        <i className=\"fa fa-angle-right\" aria-hidden=\"true\"></i>\r\n        <i\r\n          className=\"fa fa-angle-left\"\r\n          aria-hidden=\"true\"\r\n          style={{ marginLeft: \"-2px\" }}\r\n        ></i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TooltipHeader;\r\n","type IProps = {\r\n  onScroll?: (delta: number) => void;\r\n} & React.PropsWithChildren;\r\n\r\nconst TooltipBody: React.FC<IProps> = ({ children, onScroll }) => {\r\n  let startX = 0;\r\n\r\n  const onTouchStart = (e: React.TouchEvent<HTMLElement>) => {\r\n    startX = e.nativeEvent.changedTouches[0].clientX;\r\n  };\r\n\r\n  const onTouchEnd = (e: React.TouchEvent<HTMLElement>) => {\r\n    if (!onScroll) return;\r\n\r\n    let endX = e.nativeEvent.changedTouches[0].clientX;\r\n    if (Math.abs(endX - startX) > 100) onScroll(-endX + startX);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"tooltip-text\"\r\n      onTouchStart={onTouchStart}\r\n      onTouchEnd={onTouchEnd}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TooltipBody;\r\n","import { Children, ReactElement } from \"react\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nimport TooltipHeader from \"./tooltip_header\";\r\nimport TooltipBody from \"./tooltip_body\";\r\n\r\nimport \"./tooltip.css\";\r\n\r\nimport { useActionCreators } from \"src/store\";\r\nimport { ITooltipItem, tooltipsActions } from \"src/store\";\r\n\r\ntype IProps = {\r\n  tooltip: ITooltipItem;\r\n  zIndex?: number;\r\n} & React.PropsWithChildren;\r\n\r\nconst TooltipWindow: React.FC<IProps> = ({ tooltip, zIndex, children }) => {\r\n  const actions = useActionCreators(tooltipsActions);\r\n\r\n  const onCloseClick = () => {\r\n    actions.close(tooltip.keys);\r\n  };\r\n\r\n  const { coords } = tooltip;\r\n\r\n  let axis: \"both\" | \"x\" | \"y\" | \"none\";\r\n  let position: {\r\n    top: number;\r\n    left: number;\r\n  };\r\n\r\n  if (window.innerWidth <= 768) {\r\n    axis = \"y\";\r\n    position = { top: coords.y, left: 5 };\r\n  } else {\r\n    axis = \"both\";\r\n    position = {\r\n      top: coords.y,\r\n      left: Math.min(coords.x, window.innerWidth - 670),\r\n    };\r\n  }\r\n\r\n  let [header, body] = Children.toArray(children);\r\n\r\n  return (\r\n    <Draggable\r\n      axis={axis}\r\n      handle=\".tooltip-header\"\r\n      defaultClassNameDragging=\"dragging\"\r\n      key={zIndex}\r\n    >\r\n      <div className=\"tooltip-window\" style={{ ...position }}>\r\n        <TooltipHeader closeWindow={onCloseClick}>\r\n          {(header as ReactElement).props.children}\r\n        </TooltipHeader>\r\n        <TooltipBody>{(body as ReactElement).props.children}</TooltipBody>\r\n      </div>\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default TooltipWindow;\r\n","import { ITooltipItem } from \"src/store\";\r\nimport { useMessageData } from \"src/store/query-hooks\";\r\n\r\nimport MsgText from \"src/pages/topic/row/msg_text\";\r\nimport UserInfo from \"src/pages/topic/row/user_info\";\r\n\r\nimport TooltipWindow from \"./tooltip_window\";\r\nimport TooltipHeader from \"./tooltip_header\";\r\nimport TooltipBody from \"./tooltip_body\";\r\n\r\nimport \"./tooltip.css\";\r\n\r\ntype IProps = {\r\n  tooltip: ITooltipItem;\r\n};\r\n\r\nconst Tooltip: React.FC<IProps> = ({ tooltip }) => {\r\n  const { keys } = tooltip;\r\n\r\n  const {\r\n    data: item,\r\n    isPending,\r\n    isError,\r\n    error,\r\n  } = useMessageData({ topicId: keys.topicId, number: keys.number });\r\n\r\n  if (isPending) return null;\r\n\r\n  return (\r\n    <TooltipWindow tooltip={tooltip}>\r\n      <TooltipHeader>\r\n        {isError ? (\r\n          <b>Ошибка</b>\r\n        ) : (\r\n          <UserInfo\r\n            data={item}\r\n            isAuthor={false}\r\n            isYou={false}\r\n            isTooltip={true}\r\n          />\r\n        )}\r\n      </TooltipHeader>\r\n      <TooltipBody>\r\n        <MsgText\r\n          n={item?.n}\r\n          vote={item?.vote}\r\n          html={isError ? error.message : item.text}\r\n          topicId={keys.topicId}\r\n          topicDate={item?.time}\r\n          style={{ maxHeight: \"min(550px, 80vh)\", overflowY: \"auto\" }}\r\n        />\r\n      </TooltipBody>\r\n    </TooltipWindow>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import { useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport { QueryKeys } from \"./types\";\r\nimport { getCachedTopicData } from \"./use-topic-messages\";\r\nimport { fetchTopicMessage } from \"src/api\";\r\n\r\ntype IProps = {\r\n  topicId: number;\r\n  number: number;\r\n};\r\n\r\nexport const useMessageData = ({ topicId, number }: IProps) => {\r\n  const queryClient = useQueryClient();\r\n\r\n  return useQuery({\r\n    queryKey: [QueryKeys.TopicMessageData, topicId, number],\r\n    queryFn: async () => {\r\n      const cachedTopicData = getCachedTopicData(queryClient, topicId);\r\n\r\n      if (cachedTopicData) {\r\n        if (number === 0) {\r\n          return cachedTopicData.item0;\r\n        } else {\r\n          const item = cachedTopicData.list.find((item) => item.n === number);\r\n          if (item) {\r\n            return item;\r\n          }\r\n        }\r\n      }\r\n\r\n      const item = await fetchTopicMessage(topicId, number);\r\n      if (item === undefined) {\r\n        throw new Error(`Сообщение ${number} не найдено`);\r\n      }\r\n\r\n      return item;\r\n    },\r\n    refetchOnWindowFocus: false,\r\n  });\r\n};\r\n","import { useRef } from \"react\";\r\nimport { useOnClickOutside } from \"usehooks-ts\";\r\n\r\nimport { useActionCreators, useAppSelector } from \"src/store\";\r\nimport { tooltipsActions } from \"src/store\";\r\n\r\nimport Tooltip from \"./tooltip\";\r\n\r\nconst TooltipsContainer: React.FC = () => {\r\n  const items = useAppSelector((state) => state.tooltips.items);\r\n  const actions = useActionCreators(tooltipsActions);\r\n  const ref = useRef(null);\r\n\r\n  const handleClickOutside = () => {\r\n    actions.closeAll();\r\n  };\r\n\r\n  useOnClickOutside(ref, handleClickOutside);\r\n\r\n  return (\r\n    <div ref={ref}>\r\n      {items.map((item) => {\r\n        return <Tooltip key={item.hash} tooltip={item} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TooltipsContainer;\r\n","import { useLayoutEffect } from \"react\";\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport NavBar from \"./components/navigation/nav_bar\";\r\nimport AppRoutes from \"./pages/approutes\";\r\nimport NavBarFooter from \"./components/navigation/nav_bar_footer\";\r\nimport TooltipsContainer from \"./components/tooltips/tooltips_container\";\r\nimport { useAppSelector } from \"./store\";\r\n\r\nconst App: React.FC = () => {\r\n  const theme = useAppSelector((state) => state.options.items.theme);\r\n\r\n  useLayoutEffect(() => {\r\n    document.body.setAttribute(\"data-theme\", theme);\r\n  }, [theme]);\r\n\r\n  return (\r\n    <HashRouter>\r\n      <NavBar />\r\n      <AppRoutes />\r\n      <NavBarFooter />\r\n      <TooltipsContainer />\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createRoot } from \"react-dom/client\";\r\nimport { Provider } from \"react-redux\";\r\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { store, persistor } from \"src/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nconst Root = ({ store }): React.ReactElement => (\r\n  <QueryClientProvider client={queryClient}>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </QueryClientProvider>\r\n);\r\n\r\nconst container = document.getElementById(\"root\");\r\nconst root = createRoot(container!);\r\nroot.render(<Root store={store} />);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_mista\"] = self[\"webpackChunkreact_mista\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [216], () => (__webpack_require__(5268)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Search","searchEngine","setSearchEngine","useState","text","setText","handleTextChange","useCallback","e","target","value","handleKeyDown","useEventCallback","key","doSearch","url","concat","window","open","_jsxs","InputGroup","size","children","DropdownButton","id","title","variant","onSelect","_jsx","Dropdown","Item","eventKey","FormControl","type","placeholder","className","onKeyDown","onChange","Text","onClick","style","zIndex","toNumber","str","defaultValue","arguments","length","undefined","number","parseInt","isNaN","groupBy","list","getKey","reduce","previous","currentItem","group","push","getMaxPage","count","Math","min","ceil","childrenToText","map","displayName","props","console","log","formattedTime","time","td","dayjs","isSame","Date","format","paramsToString","paramsPrefix","params","searchParams","URLSearchParams","append","toString","fetchJsonpAndGetJson","async","options","fullUrl","domain","response","fetchJsonp","json","responseJson","JSON","parse","replace","error","message","utils","fetchAndGetJson","init","mode","credentials","fetch","fetchCookies","session","userId","Number","user_id","userName","user_name","userHash","user_hash","lastError","last_error","convertResponse","urlCookies","forum","code","shortn","name","fulln","fetchSections","items","urlSections","tree","item","fetchTopicInfo","voting","x","select","result","sectionId","section","created","authorId","author","updated","lastUser","updated_name","answers_count","down","closed","deleted","isVoting","is_voting","urlTopicInfo","n","user","utime","vote","fetchTopicMessages","urlTopicMessages","fetchTopicMessage","to","from","find","sect1","sectionCode","sect2","user0","answ","pinned","fetchTopicsList","request","page","itemsCount","itemsPerPage","topics","String","section_short_name","mytopics","myTopics","convertRequest","urlTopicsList","slice","localStorage","getItem","urlLogin","urlLogout","urlNewMessage","urlNewTopic","QueryKeys","useSections","useQuery","_objectSpread","queryKey","Sections","queryFn","placeholderData","refetchOnWindowFocus","useAppDispatch","useDispatch","useAppSelector","useSelector","useActionCreators","actions","dispatch","useMemo","bindActionCreators","useTopicsList","_ref","state","topicsPerPage","TopicsList","Object","values","fromEntries","previousData","checkLogin","createAsyncThunk","doLogin","method","body","username","user_password","password","headers","Accept","redirect","fetchLogin","doLogout","fetchLogout","shouldLogin","_ref2","login","status","createSlice","initialState","logged","reducers","extraReducers","builder","addCase","pending","fulfilled","_ref3","payload","rejected","_ref4","_ref5","loginActions","reducer","postNewTopic","fetchParams","message_text","topic_text","subject","target_section","target_forum","toLowerCase","action","rnd","round","random","votingItems","i","fetchNewTopic","clear","changeSubject","changeText","changeSection","showVoting","setError","_ref6","_ref7","newTopicActions","newTopic","defaultOptionsState","voteColors","theme","autoRefreshTopicsList","autoRefreshTopicsListInterval","autoRefreshTopic","autoRefreshTopicInterval","showTooltips","tooltipDelay","showTooltipOnPostLink","showYoutubeVideoTitle","replaceCatalogMista","fixBrokenLinks","save","optionsActions","show","hash","stringify","keys","index","findIndex","coords","close","filter","val","closeAll","tooltipsActions","tooltips","fetchTopic","info","topicId","item0","first","last","getFirstLastMessageNumber","max","pageNum","_item0","shift","postNewMessage","topic_id","voting_select","fetchNewMessage","newMessageActions","newMessage","useTopicMessages","useSearchParams","get","queryClient","useQueryClient","TopicMessages","cacheData","getCachedTopicData","useUpdateMessages","UpdateTopicMessages","data","setQueryData","prevData","at","initialData","refetchOnMount","topicQueries","getQueriesData","NavBar","location","useLocation","refetch","enabled","Navbar","bg","expand","fixed","Brand","as","Link","pathname","preventDefault","Toggle","Collapse","Nav","link","active","href","Form","persistConfig","storage","combineReducers","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","CustomToggle","React","ref","cursor","float","onMenuSelect","event","onLogout","Menu","Divider","LoginForm","setUsername","setPassword","flexWrap","marginRight","flex","maxLength","autoComplete","Button","doLoginIfNeeded","getState","margin","rel","dangerouslySetInnerHTML","__html","Login","useEffect","_Fragment","LoggedUser","ErrorElem","selected","Select","currentTarget","label","Header","setSearchParams","onSectionChange","prevSearchParams","newSearchParams","set","delete","isLoading","onUpdateClick","letterSpacing","color","display","width","textAlign","setTime","msg","updateTime","expanded","pages","maxPage","loggedUserName","addPrefix","startsWith","classNames","bold","overflowWrap","Pages","onFirst","onPrev","onNext","onLast","marginLeft","total","colors","img","percent","textDecoration","src","maxWidth","height","alt","paddingLeft","VoteItem","memo","marginTop","keywords","Set","split","Спецсиволы","НачалоТега","КонецТега","мЦветФона","мЦветЧисла","мЦветСтроки","мЦветКлючевогоСлова1","СтрокаРезультат","УстановленЦвет","ПоследнийЦвет","ВСтроке","Токен","ПустаяСтрока","Строка","trim","Сред","Нач","Длина","substring","Прав","isKeyword","token","has","ДобавитьЧастьСтроки1С","Часть","Цвет","РазукраситьСтроку","СтрокаКода","ВСтрокеСкобка","ВСтрокеТильда","НачалоСтроки","ТокенДоТочки","Поз","ТекущийСимвол","charAt","join","hidden","setHidden","linesCount","_text","newtext","start","end","trimNewLines","highlight","prepareText","preStyle","overflow","onShowClick","prev","timerRef","useRef","currentTopicId","initialText","isMounted","run","onMouseOver","persist","current","setTimeout","showToolTip","onMouseOut","clearTimeout","stopPropagation","pageX","y","pageY","pageParam","role","hrefName","setHrefName","setTitle","abortController","AbortController","videoId","fullHref","search","URL","hostname","getVideoId","signal","apiKey","apiUrl","notFound","snippet","getVideoParams","abort","parentText","_objectWithoutProperties","_excluded","newHref","LinkToPost","query","LinkToUser","isMistaCatalog","class","fixBrokenLink","escapedHref","regExp","RegExp","arr","match","YoutubeLink","InternalImage","idx","topicDate","messageNumber","date","filePath","preview","full","PhotoView","htmlToReactParser","HtmlToReact","processNodeDefinitions","isValidNode","linkToPostProcessor","shouldProcessNode","node","processNode","attribs","codeProcessor","Code","linkProcessor","processedHtml","CustomLink","internalImageProcesor","ProcessedText","html","processText","processCode1C","processLinksToPosts","res","processImages","processingInstructions","processDefaultNode","reactComponent","parseWithInstructions","initialVoteText","voteText","setVoteText","_info","getVoteText","showVoteChart","showVoteText","VoteChart","PhotoProvider","Vote","imgDisplay","setImgDisplay","innerWidth","onLoad","onImageLoad","onError","onImageError","marginBottom","isAuthor","isYou","isTooltip","dataStr","userClassNames","UserIco","elem","document","getElementById","scrollTo","offsetTop","loggedUserId","onDataLoaded","setData","_data","getData","UserInfo","MsgText","overflowY","initialMsgNumber","deltaX","setDeltaX","setDispaly","setState","msgNumber","swipeable","useSwipeable","onSwiping","eventData","abs","onSwiped","dir","delta","onContentLoaded","transform","flexDirection","PreviewButtons","onClickFirst","onClickNext","onClickPrev","order","PreviewContent","previewNumber","setPreviewNumber","ForumCell","CountCell","previewShowLast","ShowPreviewButton","previewShowFirst","TopicNameCell","AuthorCell","LastUserCell","Last20Cell","TopicPreview","last20","pathName","locationParams","currentPage","Pagination","isFetching","formRef","onShowVotingChange","textAreaRef","handleShowVotingChange","checked","handleChange","cols","rows","onKeyUp","ctrlKey","dispatchEvent","Event","cancelable","bubbles","ButtonGroup","textAreaNode","selectionStart","selectionEnd","oldText","len","replacement","newText","disabled","Check","_newTopic$section","onSubmitSuccess","sections","currentSection","setSection","votes","setVotes","Array","fill","onVoteTextChange","votesCopy","onSubmit","onSuccess","this_onSubmitSuccess","shouldPost","postNewTopicIfNeeded","onSubjectChange","onTextChange","groupsElem","votingOptions","Control","TextEditor","FormGroup","Error","TableHeader","Row","position","NewTopic","forums","life","it","job","yandexUrl","encodeURIComponent","lineHeight","_topic$item","topic","isLastPage","onBookmarkClick","setVoting","afterSubmit","clearVoting","setVotingOption","votingElem","Topic","isPending","locationPage","enableUpdater","refreshInterval","enableRefresh","setEnableUpdater","useEnableUpdater","updateMessages","refetchInterval","htmltext","DOMParser","parseFromString","firstChild","innerText","nodeHash","TopicInfo","Footer","NewMessage","onPostNewMessageSuccess","oneLine","onChangeValue","descr","inline","postfix","htmlFor","formTabs","tabName","formParams","Options","navigate","useNavigate","closeForm","assign","tabs","tab","row","rowElem","RadioOption","fontWeight","StringOption","Tab","applyOptions","resetOptions","AppRoutes","Container","Routes","Route","path","element","NavBarFooter","closeWindow","onTouchEnd","onScroll","startX","onTouchStart","nativeEvent","changedTouches","clientX","endX","tooltip","axis","top","left","header","Children","toArray","Draggable","handle","defaultClassNameDragging","TooltipHeader","onCloseClick","TooltipBody","isError","TopicMessageData","cachedTopicData","useMessageData","TooltipWindow","maxHeight","TooltipsContainer","useOnClickOutside","handleClickOutside","Tooltip","App","useLayoutEffect","setAttribute","HashRouter","QueryClient","Root","QueryClientProvider","client","Provider","PersistGate","loading","container","createRoot","render","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","j","every","splice","r","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","this","then","ns","create","def","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}