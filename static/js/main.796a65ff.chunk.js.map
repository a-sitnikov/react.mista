{"version":3,"sources":["registerServiceWorker.js","utils.js","api.js","actions/topics_list.js","reducers/topics_list.js","reducers/topic.js","reducers/login.js","reducers/sections.js","reducers/bookmark.js","reducers/banner.js","reducers/new_topic.js","reducers/new_message.js","reducers/tooltips.js","reducers/search.js","reducers/topic_preview.js","reducers/options.js","reducers/index.js","components/common/search.js","components/nav_bar.js","actions/login.js","components/login/logged_user.js","components/login/login_form.js","components/common/error.js","components/login/index.js","actions/sections.js","components/topics_list/section_select.js","components/topics_list/header.js","components/topics_list/row/pages.js","components/topics_list/row/topic_name_cell.js","actions/tooltips.js","components/extensions/link_to_post.js","components/topics_list/row/preview_link.js","components/topics_list/row/index.js","components/common/pages.js","actions/new_topic.js","components/common/text_editor.js","components/topics_list/new_topic.js","components/extensions/code_highlight.js","components/extensions/code1c.js","components/extensions/link_to_user.js","components/extensions/youtube_link.js","components/extensions/custom_link.js","components/topic/row/vote_item.js","components/topic/row/vote_chart.js","components/topic/row/vote.js","components/topic/row/msg_text.js","components/preview/preview_header.js","components/preview/topic_preview.js","components/topics_list/index.js","actions/topic.js","components/topic/header.js","components/topic/topic_info.js","components/topic/row/user_info.js","actions/new_message.js","components/topic/row/index.js","actions/bookmark.js","components/topic/footer.js","components/topic/new_message.js","components/topic/index.js","components/options/radio_option.js","components/options/string_option.js","components/options/index.js","actions/options.js","components/container.js","components/nav_bar_footer.js","components/tooltips/tooltip_header.js","components/tooltips/tooltip_body.js","components/tooltips/tooltip_window.js","components/tooltips/tooltip.js","components/tooltips/tooltips_list.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","groupBy","xs","key","reduce","rv","x","push","parseJSON","text","replace","JSON","parse","e","message","getMaxPage","answ","Math","min","ceil","childrenToText","children","map","value","type","displayName","props","number","domain","localStorage","getItem","urlTopicsList","urlTopicInfo","urlTopicMessages","urlLogin","urlLogout","urlCookies","urlSections","urlNewMessage","urlNewTopic","urlAddBookmark","getTopicsList","params","a","fetchJsonpAndGetJson","json","defaultInfo","id","answers_count","getTopicInfo","getTopicMessages","getMessage","n","from","to","length","data","find","val","String","getTopicMessagesCount","info","getLogin","getLogout","action","getCookies","getSections","postNewMessage","url","topic_id","fetch","method","body","paramsToString","mode","credentials","headers","redirect","result","postNewTopic","postBookmark","paramsPrefix","arr","undefined","join","fullUrl","fetchJsonp","response","responseJson","utils","receiveTopicsList","items","receivedAt","Date","fetchTopicsListIfNeeded","dispatch","getState","topicsList","isFetching","shouldFetchTopicsList","page","reqestParams","topicsPerPage","options","topicsCount","topics","section","section_short_name","forum","user_id","mytopics","API","slice","fetchTopicsList","defaultTopicsListState","lastUpdated","ind","findIndex","item","topicId","Object","assign","showPreview","defaultTopicState","topic","item0","concat","defaultLoginState","logged","login","userid","username","hashkey","defaultSectionsState","tree","sections","forEach","shortn","fulln","defaultBookmarkState","bookmark","banner","defaultNewTopicState","subject","isVoting","newTopic","toLowerCase","defaultNewMessageState","newMessage","defaultTooltipsState","tooltips","hash","tooltip","stringify","keys","i","coords","filter","defaultSearchState","search","defaultTopicPreviewState","topicPreview","user","userId","utime","vote","readOption","name","defaultValue","defaultOptionsState","voteColors","theme","autoRefreshTopicsList","autoRefreshTopicsListInterval","autoRefreshTopic","autoRefreshTopicInterval","showTooltips","tooltipDelay","showTooltipOnTopicsList","showTooltipOnPostLink","showYoutubeVideoTitle","replaceCatalogMista","fixBrokenLinks","setItem","rootReducer","combineReducers","Search","doSearch","bind","onKeyPress","onSearchEngineChange","onSearchTextChange","searchEngine","this","open","setState","eventKey","target","InputGroup","size","Prepend","DropdownButton","title","style","marginRight","variant","Dropdown","Item","onSelect","FormControl","placeholder","paddingRight","onChange","Append","marginLeft","marginTop","marginBottom","cursor","onClick","className","zIndex","Component","NavBar","locationParams","queryString","menuItems","link","Nav","Link","href","Navbar","bg","expand","fixed","Brand","Toggle","aria-controls","Collapse","Form","inline","connect","withRouter","loginComplete","loginFailed","shouldLogin","checkLogin","cookie","session","last_error","trim","user_name","entr_hash","doLoginIfNeeded","encodeURIComponent","password","doLogin","CustomToggle","React","forwardRef","ref","color","preventDefault","LoggedUser","onMenuSelect","event","onLogout","userName","float","as","bsRole","Menu","Divider","LoginForm","onLogin","current","createRef","flexWrap","flex","maxLength","autoComplete","Button","margin","rel","ErrorElem","dangerouslySetInnerHTML","__html","Login","elem","receiveSections","fetchSectionsIfNeeded","shouldfetchSections","action2","SectionSelect","selected","sectionsElem","group","label","Control","Header","onSectionSelect","history","Pages","pages","maxPage","TopicNameCell","classes","classNames","user0","is_voting","closed","down","sectionHref","sect2","sect1","substr","overflowWrap","closeTooltip","LinkToPost","onMouseOver","persist","timer","setTimeout","showToolTip","stopPropagation","clearTimeout","onMouseOut","showTooltip","isPreview","pageX","y","pageY","startsWith","pageParam","isNaN","PreviewLink","expanded","time","td","d","getDate","getMonth","getFullYear","today","dateFormat","display","width","textAlign","currentPage","baseUrl","last20","parseInt","Pagination","active","postNewTopicIfNeeded","shouldPostNewTopic","fetchParams","message_text","topic_text","target_section","target_forum","rnd","round","random","voting","votingItems","onSuccess","TextEditor","onButtonCode1c","textArea","start","selectionStart","end","selectionEnd","oldText","len","replacement","substring","newText","formName","onVotingChange","checked","ctrlKey","parent","parentNode","tagName","toUpperCase","dispatchEvent","Event","showVoting","cols","rows","ButtonGroup","disabled","Check","NewTopic","onSectionChange","currentSection","onSubmit","onSubmitSuccess","refs","onSubjectChange","groupsElem","votingOptions","Text","readOnly","onSend","FormGroup","highlight","СтрокаРезультат","УстановленЦвет","ПоследнийЦвет","keywords","Set","split","Спецсиволы","ВСтроке","Токен","ПустаяСтрока","Строка","Сред","Нач","Длина","Прав","isKeyword","token","has","ДобавитьЧастьСтроки1С","Часть","Цвет","РазукраситьСтроку","СтрокаКода","ВСтрокеСкобка","ВСтрокеТильда","НачалоСтроки","ТокенДоТочки","Поз","ТекущийСимвол","charAt","lenth","Code","onShowClick","hidden","textArr","buttonText","buttonShow","linesCount","preStyle","overflow","height","LinkToUser","YoutubeLink","hrefName","v","videoId","apiKey","apiUrl","snippet","getVideoId","getVideoParams","CustomLink","parentText","escapedHref","regExp","RegExp","URL","newHref","set","pathname","query","class","fixBrokenLink","VoteItem","total","colors","img","percent","textDecoration","select","src","maxWwidth","alt","VoteChart","sum","Vote","voteOption","MsgText","res","txt","processCode1C","processLinksToPosts","voteElement","voteChart","html","processedHtml","processText","componentsMap","code","textComponent","activeHtml","PreviewHeader","date","onFirst","onPrev","onNext","onLast","TopicPreview","fetchData","onClickFirst","onClickNext","onClickPrev","onClickLast","maxHeight","overflowY","TopicsList","updateTopicsList","onPostNewTopicSuccess","scrollTo","document","position","top","receiveTopic","now","closeTopic","shouldFetch","fetchTopicIfNeeded","_item0","first","_items","last","fetchTopic","fetchNewMessagesIfNeeded","fetchNewMessages","TopicInfo","yandexUrl","lineHeight","UserInfo","getElementById","offsetTop","dataStr","isAuthor","isYou","userClassNames","Row","author","addBookmark","Footer","onBookmarkClick","onRefreshClick","updateButton","NewMessage","voting_select","clearVoting","setVotingOption","votingElem","Topic","autoUpdate","updateTopic","onPostNewMessageSuccess","scrolledToHash","setInterval","nodeHash","clearInterval","errorElem","RadioOption","values","oneLine","valuesElem","htmlFor","descr","StringOption","postfix","Options","closeForm","applyOptions","resetOptions","resetOptiopns","onTabClick","optionsParams","max","form","tabName","activeTab","textContent","tabs","tab","row","rowElem","fontWeight","bsSize","Container","routes","exact","path","component","NavBarFooter","TooltipHeader","closeWindow","onTouchEnd","TooltipBody","onScroll","startX","onTouchStart","nativeEvent","changedTouches","clientX","endX","abs","TooltipWindow","onCloseClick","onWheel","deltaY","axis","innerWidth","left","Children","toArray","header","handle","defaultClassNameDragging","Tooltip","delta","TooltipsList","App","middleware","thunk","store","createStore","reducer","applyMiddleware","Root","ReactDOM","render","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.796a65ff.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nexport function today(td) {\n    var d = new Date();\n    return td.getDate() === d.getDate() && td.getMonth() === d.getMonth() && td.getFullYear() === d.getFullYear();\n}\n\nexport const groupBy = function (xs, key) {\n    return xs.reduce(function (rv, x) {\n        (rv[x[key]] = rv[x[key]] || []).push(x);\n        return rv;\n    }, {});\n};\n\nexport const parseJSON = (text) => {\n    try {\n        text = text\n            .replace(/\\\\</g, '<')\n            .replace(/\\\\>/g, '>')\n            .replace(/\\\\&/g, '&')\n            .replace(/\\\\'/g, \"'\")\n            .replace(/\\\\\"/g, \"\")\n            .replace(/ \"/g, ' \\\\\"')\n            .replace(/\"\"/g, '\\\\\"\"')\n            .replace(/\"(\\.| |\\?)/g, '\\\\\"$1')\n\n        //           console.log(text);\n        return JSON.parse(text);\n\n        //return eval(text);\n    } catch (e) {\n        console.error(e.message);\n        console.log(text);\n\n        return {};\n    }\n}\n\nexport const getMaxPage = (answ) => Math.min(Math.ceil(answ / 100), 10) || 1;\n\nexport const encodeText = (text) => {\n    text = text\n        .replace(/&/g, '%26')\n        .replace(/\\+/g, '%2B')\n\n    return text;\n}\n\nexport const compare = (obj1, obj2) => {\n\n    for (let key in obj2) {\n        if (obj1[key] !== obj2[key])\n            return false\n    }\n\n    return true;\n}\n\nexport const join = (obj, str) => {\n\n    let res = [];\n    for (let key in obj) {\n        res.push('' + key + ':' + obj[key]);\n    }\n\n    return res.join(str);\n}\n\nexport const childrenToText = (children) => {\n\n    if (!children) return children;\n\n    return children.map(value => {\n        if (typeof(value) === 'string') {\n            return value;\n        } else if (value.type === 'br') {\n            return '<br>'\n        } else if (value.type.displayName === 'Connect(LinkToPost)' || value.type.displayName === 'Connect(t)') {\n            return value.props.number;\n        } else {  \n            console.log(value);\n            return value;\n        }    \n    })    \n}","//@flow\nimport fetchJsonp from 'fetch-jsonp'\nimport * as utils from './utils'\n\nexport const domain = localStorage.getItem('domain') || 'https://forum.mista.ru';\n//export const domain = 'https://dev.mista.ru';\nexport const urlTopicsList    = localStorage.getItem('urlTopicsList') || 'api/topic.php';\nexport const urlTopicInfo     = localStorage.getItem('urlTopicInfo') || 'ajax_gettopic.php';\nexport const urlTopicMessages = localStorage.getItem('urlTopicMessages') || 'api/message.php';\nexport const urlLogin         = localStorage.getItem('urlLogin') || 'ajax_login.php';\nexport const urlLogout        = localStorage.getItem('urlLogout') || 'users.php'; // users.php?&action=exit\nexport const urlCookies       = localStorage.getItem('urlCookies') || 'ajax_cookie.php';\nexport const urlSections      = localStorage.getItem('urlSections') || 'ajax_getsectionslist.php';\nexport const urlNewMessage    = localStorage.getItem('urlNewMessage') || 'topic.php?id=:id&page=1';\nexport const urlNewTopic      = localStorage.getItem('urlNewTopic') || 'index.php';\nexport const urlAddBookmark   = localStorage.getItem('urlAddBookmark') || 'ajax_addbookmark.php';\nexport const urlSearch        = localStorage.getItem('urlSearch') || 'ajax_find.php';\n\n// Topics list\nexport type RequestTopicsList = {\n    topics?:   number, // число тем, которые нужно вернуть (по умолчанию - 20);\n    utime?:    number, // время (в формате unixtime) после которого надо вернуть ветки;\n    callback?: string, // если указано, то ответ заворачивается в вызов функции, имя которой передано в параметре (реализация JSONP)\n    forum?:    string, // раздел форума (1c|it|life);\n    section_short_name?: string,\n    user_id?:  string,\n    mytopics?: string\n}\n\nexport type ResponseTopicsListItem = {\n    id: number,\n    forum: string,\n    sect1: string,\n    sect2: string,\n    v8: string,\n    closed: number,\n    down: number,\n    text: string,\n    utime: number,\n    created: number,\n    user: string,\n    user0: string,\n    is_voting: number,\n    answ: number\n}\n\nexport type ResponseTopicsList = Array<ResponseTopicsListItem>;\n\nexport const getTopicsList = async (params: RequestTopicsList): Promise<ResponseTopicsList> =>  {\n    const json = await fetchJsonpAndGetJson(urlTopicsList, params);\n    return json;\n} \n\n\n// Topics info\nexport type RequestInfo = {\n    id: string // идентификатор (topic_id) темы\n}\n\nexport type ResponseVoteItem = {\n    select: string,\n    result: number\n}\n\nexport type ResponseInfo = {\n    id: string,\n    text: string,\n    forum?: string,\n    section?: string,\n    created?: string,\n    user_id?: string,\n    user_name?: string,\n    answers_count: string,\n    down?: number,\n    closed?: number,\n    deleted?: number,\n    is_voting?: number,\n    voting?: Array<ResponseVoteItem>\n}\n\nexport const defaultInfo = {\n    id: \"\",\n    text: \"\",\n    answers_count: \"\"\n}\n\nexport const getTopicInfo = async (params: RequestInfo): Promise<ResponseInfo> =>  {\n    const json = await fetchJsonpAndGetJson(urlTopicInfo, params);\n    return json;\n} \n\n\n// Topic messages\nexport type RequestMessages = {\n    id:    number | string, // идентификатор (topic_id) темы\n    from?: number, // с какого сообщения. если не указан, то с первого\n    to?:   number  // до какого сообщения. если не указан, то from+10\n}\n\nexport type ResponseMessage = {\n    id:    string,\n    n:     string,\n    user:  string,\n    userId: string,\n    text:  string,\n    utime: string,\n    vote:  number\n}\n\nexport type ResponseMessages = Array<ResponseMessage>;\n\nexport const getTopicMessages = async (params: RequestMessages): Promise<ResponseMessages> =>  {\n    const json = await fetchJsonpAndGetJson(urlTopicMessages, params);\n    return json;\n} \n\nexport const getMessage = async (id: number | string, n: number): Promise<?ResponseMessage> =>  {\n    const json = await getTopicMessages({\n        id, \n        from: n, \n        to: n+1}\n        );\n\n    let data;\n    if (json && json.length > 0)\n        data = json.find(val => val.n === String(n));\n\n    return data;\n} \n\nexport const getTopicMessagesCount = async (id: number | string): number => {\n    const info = await getTopicInfo({id: String(id)});\n    return +info.answers_count;\n}\n\n// Login\nexport type RequestLogin = {\n    username:  string, // логин (ник) пользователя\n    password:  string, // пароль пользователя\n    callback?: string, // если указано, то ответ заворачивается в вызов функции, имя которой передано в параметре (реализация JSONP)\n}\n\nexport type ResponseLogin = {\n    userid: string,\n    username: string,\n    hashkey: string,\n    error: string\n}\n\nexport const getLogin = async (params: RequestLogin): Promise<ResponseLogin> =>  {\n    const json = await fetchJsonpAndGetJson(urlLogin, params);\n    return json;\n} \n\nexport const getLogout = async(): Promise<any> => {\n    const params = { action: \"exit\" };\n    await fetchJsonpAndGetJson(urlLogout, params);\n}\n\n\n// Cookies\nexport type ResponseCookies = {\n    cookie: {\n        entr_id: string,\n        entr_key: string,\n        entr_hash: string\n    },\n    session: {\n        user_id: string,\n        user_name: string,\n        user_hash: string,\n        is_moderator: number,\n        light_moderator: number,\n        section: string,\n        show_moderator_tools: number,\n        last_error?: string   \n    }\n}\n\nexport const getCookies = async (): Promise<ResponseCookies> =>  {\n    const json = await fetchJsonpAndGetJson(urlCookies);\n    return json;\n} \n\n\n// Sections\nexport type ResponseSection = {\n    id: number,\n    forum: string,\n    shortn: string,\n    fulln: string,\n    id: number\n}\n\nexport type ResponseSections = Array<ResponseSection>;\n\nexport const getSections = async (): Promise<ResponseSections> =>  {\n    const json = await fetchJsonpAndGetJson(urlSections);\n    return json;\n} \n\n\n// New message\nexport type RequestNewMessage = {\n    message_text: string,\n    action:       \"new\", \n    topic_id:     string,\n    rnd:          number,\n    voting_select?: number,\n    as_admin?: boolean    \n}\n\nexport const postNewMessage = async (params: RequestNewMessage): Promise<any> =>  {\n\n    let url = urlNewMessage.replace(':id', params.topic_id);\n\n    let result = await fetch(`${domain}/${url}`, {\n        method: 'POST',\n        body: paramsToString('', params),\n        mode: 'no-cors',\n        credentials: 'include',\n        headers: {\n            'Accept': 'text/html,application/xhtml+xml,application/xml',\n            'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: 'follow'\n    });\n    \n    return result;\n} \n\n\n// New topic\nexport type RequestNewTopic = {\n    action:         \"new\", \n    rnd:            number,\n    topic_text:     string,\n    message_text:   string,\n    target_section: string, \n    target_forum:   string,\n    voting:         number,\n    select1?:       string,    \n    select2?:       string,    \n    select3?:       string,    \n    select4?:       string,    \n    select5?:       string,    \n    select6?:       string,    \n    select7?:       string,    \n    select8?:       string,    \n    select9?:       string,    \n    select10?:      string\n}\n\nexport const postNewTopic = async (params: RequestNewTopic): Promise<any> =>  {\n\n    await fetch(`${domain}/${urlNewTopic}`, {\n        method: 'POST',\n        body: paramsToString('', params),\n        mode: 'no-cors',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        }    \n    });\n} \n\n\n//Bookmark\nexport type RequestBookmark = {\n    id: string\n}\n\nexport const postBookmark = async (params: RequestBookmark) => {\n\n    await fetch(`${domain}/${urlAddBookmark}`, {\n        method: 'POST',\n        body: paramsToString('', params),\n        mode: 'no-cors',\n        credentials: 'include',\n    });\n}\n\n\n//Search\nexport type RequestSearch = {\n    keywords: string\n}\n\nexport type ResponseSearch = {\n\n}\n\nexport const postSearch = async (params: RequestSearch) => {\n\n    await fetch(`${domain}/${urlSearch}`, {\n        method: 'POST',\n        body: paramsToString('', params),\n        mode: 'no-cors',\n        credentials: 'include',\n    });\n}\n\nexport const paramsToString = (paramsPrefix: string, params: ?{}): string => {\n\n    if (!params)\n        return '';\n\n    let arr = [];\n    for (let key in params) {\n        if (params[key] !== undefined)\n            arr.push(key + '=' + params[key]);\n    }\n\n    if (arr.length > 0)\n        return paramsPrefix + arr.join('&');\n    else    \n        return '';\n}\n\nexport const fetchJsonpAndGetJson = async (url: string, params: any): Promise<any> => {\n\n    let fullUrl = `${domain}/${url}${paramsToString('?', params)}`; \n    const response =  await fetchJsonp(fullUrl);\n    let responseJson = await response.json();\n    let json;\n    if (typeof(responseJson) === 'string') {\n        \n        try {\n             json = JSON.parse(responseJson)    \n        } catch(e) {\n            json = utils.parseJSON(responseJson);\n        }\n    } else {\n        json = responseJson;\n    }\n    return json;\n}\n","//@flow\nimport * as API from '../api'\nimport type { RequestTopicsList, ResponseTopicsList } from 'src/api'\nimport type { State } from 'src/reducers'\n\nexport const REQUEST_TOPICS_LIST = 'REQUEST_TOPICS_LIST';\nexport const RECEIVE_TOPICS_LIST = 'RECEIVE_TOPICS_LIST';\nexport const RECEIVE_TOPICS_LIST_FAILED = 'RECEIVE_TOPICS_LIST_FAILED';\nexport const TOGGLE_PREVIEW = 'TOGGLE_PREVIEW';\n\nexport type typeREQUEST_TOPICS_LIST = {\n    type: typeof REQUEST_TOPICS_LIST\n}\n\nexport type typeRECEIVE_TOPICS_LIST = {\n    type: typeof RECEIVE_TOPICS_LIST,\n    items: ResponseTopicsList,\n    receivedAt: Date\n}\n\nexport type typeRECEIVE_TOPICS_LIST_FAILED = {\n    type: typeof RECEIVE_TOPICS_LIST_FAILED,\n    error: string,\n    receivedAt: Date\n}\n\nexport type typeTOGGLE_PREVIEW = {\n    type: typeof TOGGLE_PREVIEW,\n    topicId: string\n}\n\nexport type TopicsListAction = typeREQUEST_TOPICS_LIST | typeRECEIVE_TOPICS_LIST | typeRECEIVE_TOPICS_LIST_FAILED | typeTOGGLE_PREVIEW;\n\nexport const requestTopicsList = (): typeREQUEST_TOPICS_LIST => ({\n    type: REQUEST_TOPICS_LIST\n})\n\nexport const receiveTopicsList = (data: ResponseTopicsList): typeRECEIVE_TOPICS_LIST => ({\n    type: RECEIVE_TOPICS_LIST,\n    items: data,\n    receivedAt: new Date()\n})\n\nconst fetchTopicsList = (params: any) => async (dispatch: any, getState: any) => {\n\n    dispatch(requestTopicsList())\n\n    const page = params.page || 1;\n    let reqestParams: RequestTopicsList = {};\n\n    let topicsPerPage = +getState().options.items.topicsPerPage;\n    if (topicsPerPage > 99) topicsPerPage = 99;\n\n    let topicsCount = page * topicsPerPage;\n    reqestParams.topics = topicsCount;\n\n    if (params.section)\n        reqestParams.section_short_name = params.section;\n\n    if (params.forum)\n        reqestParams.forum = params.forum;\n\n    if (params.user_id)\n        reqestParams.user_id = params.user_id;\n\n    if (params.mytopics)\n        reqestParams.mytopics = params.mytopics;\n\n    try {\n        const json = await API.getTopicsList(reqestParams);\n\n        let data = json.slice(-topicsPerPage);\n        dispatch(receiveTopicsList(data));\n    } catch(e) {\n        \n        let action: TopicsListAction = {\n            type: RECEIVE_TOPICS_LIST_FAILED,\n            error: e.message,\n            receivedAt: new Date()            \n        }\n        dispatch(action);\n        console.error(e);\n    }   \n\n}\n\nconst shouldFetchTopicsList = (state: State) => {\n    const topicsList = state.topicsList;\n    if (!topicsList) {\n        return true\n    }\n    if (topicsList.isFetching) {\n        return false\n    }\n    return true\n}\n\nexport const fetchTopicsListIfNeeded = (params: any) => (dispatch: any, getState: any) => {\n    if (shouldFetchTopicsList(getState())) {\n        return dispatch(fetchTopicsList(params));\n    }\n}\n","//@flow\nimport type { TopicsListAction } from 'src/actions/topics_list'\nimport type { ResponseTopicsListItem } from 'src/api'\n\nimport { REQUEST_TOPICS_LIST, RECEIVE_TOPICS_LIST, RECEIVE_TOPICS_LIST_FAILED, TOGGLE_PREVIEW } from 'src/actions/topics_list'\n\nexport type TopicsListItem = {\n    ...ResponseTopicsListItem,\n    showPreview: boolean\n}\n\nexport type TopicsListState = {\n  isFetching: boolean;\n  items: Array<TopicsListItem>,\n  error?: string,\n  lastUpdated?: Date\n};\n\nexport const defaultTopicsListState = {\n    isFetching: false,\n    items: []\n}\n\nconst topicsList = (state: TopicsListState = defaultTopicsListState, action: TopicsListAction) => {\n\n    switch (action.type) {\n        case REQUEST_TOPICS_LIST:\n            return {\n                ...state,\n                error: null,\n                isFetching: true\n            }\n        case RECEIVE_TOPICS_LIST:\n            return {\n                ...state,\n                isFetching: false,\n                items: action.items,\n                lastUpdated: action.receivedAt\n            }\n        case RECEIVE_TOPICS_LIST_FAILED:\n            return {\n                ...state,\n                isFetching: false,\n                error: action.error,\n                lastUpdated: action.receivedAt\n            }\n        case TOGGLE_PREVIEW:\n            let items = state.items.slice();\n            const ind = items.findIndex(item => item.id === action.topicId);\n            \n            let item = Object.assign({}, items[ind]);\n            item.showPreview = !item.showPreview;\n            items[ind] = item;\n\n            return {\n                ...state,\n                items\n            }\n        default:\n            return state\n    }\n}\n\nexport default topicsList;","//@flow \nimport { defaultInfo } from 'src/api'\nimport type { ResponseInfo, ResponseMessages, ResponseMessage } from 'src/api'\nimport type { TopicAction } from 'src/actions/topic'\n\nexport type TopicState = {\n  isFetching: boolean;\n  info: ResponseInfo,\n  item0?: ResponseMessage,\n  items: ResponseMessages,\n  lastUpdated?: Date,\n  error?: ?string\n};\n\nexport const defaultTopicState = {\n    isFetching: false,\n    info: defaultInfo,\n    items: []\n}\n\nconst topic = (state: TopicState = defaultTopicState, action: TopicAction) => {\n    switch (action.type) {\n        case 'REQUEST_TOPIC':\n            return {\n                ...state,\n                isFetching: true,\n                error: null\n            }\n        case 'RECEIVE_TOPIC':\n            return {\n                ...state,\n                isFetching: false,\n                info: action.info,\n                item0: action.item0,\n                items: action.items,\n                lastUpdated: action.receivedAt,\n                error: null\n            }\n        case 'RECEIVE_TOPIC_FAILED':\n            return {\n                ...state,\n                isFetching: false,\n                lastUpdated: action.receivedAt,\n                error: action.error\n            }\n        case 'REQUEST_NEW_MESSAGES':\n            return {\n                ...state,\n                isFetching: true\n            }\n            \n        case 'RECEIVE_NEW_MESSAGES':\n\n            let info = state.info;\n            if (action.items.length > 0) {\n                info.answers_count = action.items[action.items.length - 1].n;\n            }\n\n            return {\n                ...state,\n                isFetching: false,\n                items: state.items.concat(action.items),\n                info,\n                lastUpdated: action.receivedAt\n            }\n\n        case 'CLOSE_TOPIC': \n        \n            return {\n                ...state,\n                items: [],\n                info: defaultInfo,\n                item0: null,\n                lastUpdated: null,\n                error: null            \n            }\n        default:\n            return state\n    }\n}\n\nexport default topic;","//@flow \nimport type { LoginAction } from 'src/actions/login'\n\nexport type LoginState = {\n  isFetching: boolean;\n  logged: ?boolean,\n  userid?: string,\n  username?: string,\n  hashkey?: string,\n  error?: string\n};\n\nexport const defaultLoginState = {\n    isFetching: false,\n    logged: undefined\n}\n\nconst login = (state: LoginState = defaultLoginState, action: LoginAction) => {\n    switch (action.type) {\n        case 'LOGIN_START':\n            return {\n                ...state,\n                isFetching: true\n            }\n        case 'LOGIN_COMPLETE':\n            return {\n                ...state,\n                isFetching: false,\n                logged: true,\n                error: null,\n                ...action.data\n            }\n         case 'LOGIN_FAILED':\n            return {\n                isFetching: false,\n                logged: false,\n                error: action.error\n            }\n        case 'LOGOUT_COMPLETE':\n            return {\n                ...state,\n                userid: undefined,\n                username: undefined,\n                hashkey: undefined,\n                logged: false\n            }\n        default:\n            return state\n    }\n}\n\nexport default login;","//@flow \nimport type { ResponseSections } from 'src/api'\nimport type { SectionsAction } from 'src/actions/sections'\n\nimport { groupBy } from 'src/utils'\n\nexport type SectionsState = {\n  isFetching: boolean;\n  items: ResponseSections,\n  tree: {[string]: any},\n  map: {[string]: any},\n  lastUpdated?: Date,\n  error?: ?string\n};\n\nexport const defaultSectionsState = {\n    isFetching: false,\n    items: [],\n    tree: {},\n    map: {}\n}\n\nconst sections = (state: SectionsState = defaultSectionsState, action: SectionsAction) => {\n    switch (action.type) {\n        case 'REQUEST_SECTIONS':\n            return {\n                ...state,\n                isFetching: true\n            }\n        case 'RECEIVE_SECTIONS':\n\n            let map = {};\n            action.items.forEach(val => {\n                map[val.shortn] = val.fulln\n            });\n\n            return {\n                ...state,\n                isFetching: false,\n                items: action.items,\n                tree: groupBy(action.items, 'forum'),\n                map,\n                lastUpdated: action.receivedAt\n            }\n        default:\n            return state\n    }\n}\n\nexport default sections;","//@flow\nimport type { AddBookmarkAction } from 'src/actions/bookmark'\n\nexport type BookmarkState = {\n  isFetching: boolean\n};\n\nexport const defaultBookmarkState = {\n  isFetching: false\n};\n\nconst bookmark = (state: BookmarkState = defaultBookmarkState, action: AddBookmarkAction) => {\n    switch (action.type) {\n        case 'ADD_BOOKMARK_START':\n            return {\n                ...state,\n                isFetching: true\n            }\n        case 'ADD_BOOKMARK_COMPLETE':\n        case 'ADD_BOOKMARK_FAIL':\n            return {\n                ...state,\n                isFetching: false\n            }\n        default:\n            return state\n    }\n}\n\nexport default bookmark;","\nconst banner = (state = {\n    isFetching: false,\n    banner: {}\n}, action) => {\n    switch (action.type) {\n        case 'REQUEST_BANNER':\n            return {\n                ...state,\n                isFetching: true\n            }\n        case 'RECEIVE_BANNER':\n            return {\n                ...state,\n                isFetching: false,\n                banner: action.banner,\n                lastUpdated: action.receivedAt\n            }\n        default:\n            return state\n    }\n}\n\nexport default banner;","//@flow\nimport type { NewTopicAction } from '../actions/new_topic'\nimport type { ResponseSection } from 'src/api'\n\nexport type NewTopicState = {\n    isFetching: boolean;\n    section: ?ResponseSection,\n    text: string,\n    subject: string,\n    forum: string,\n    isVoting: boolean,\n    error?: string\n};\n\nexport const defaultNewTopicState = {\n    isFetching: false,\n    section: null,\n    text: '',\n    subject: '',\n    forum: '1C',\n    isVoting: false\n}\n\nconst newTopic = (state: NewTopicState = defaultNewTopicState, action: NewTopicAction) => {\n    switch (action.type) {\n        case 'POST_NEW_TOPIC_START':\n            return {\n                ...state,\n                isFetching: true,\n                error: null\n            }\n        case 'POST_NEW_TOPIC_COMPLETE':\n            return {\n                ...state,\n                isFetching: false\n            }\n       case 'POST_NEW_TOPIC_ERROR':\n            return {\n                ...state,\n                isFetching: false,\n                error: action.error\n            }\n        case 'NEW_TOPIC_SECTION':\n            return {\n                ...state,\n                section: action.section,\n                forum: action.section.forum.toLowerCase()\n            }\n        case 'NEW_TOPIC_TEXT':\n            return {\n                ...state,\n                text: action.text\n            }\n        case 'NEW_TOPIC_SUBJECT':\n            return {\n                ...state,\n                subject: action.text\n            }\n        case 'NEW_TOPIC_CLEAR':\n            return {\n                ...state,\n                text: '',\n                subject: '',\n                isVoting: false\n            }\n        case 'SHOW_VOTING':\n            return {\n                ...state,\n                isVoting: action.data\n            }\n        default:\n            return state\n    }\n}\n\nexport default newTopic;","//@flow\nimport type { NewMessageAction } from 'src/actions/new_message'\n\nexport type NewMessageState = {\n    isFetching: boolean;\n    text: string\n};\n\nexport const defaultNewMessageState = {\n    isFetching: false,\n    text: ''\n}\n\nconst newMessage = (state: NewMessageState = defaultNewMessageState, action: NewMessageAction) => {\n    switch (action.type) {\n        case 'POST_NEW_MESSAGE_START':\n            return {\n                ...state,\n                isFetching: true\n            }\n        case 'POST_NEW_MESSAGE_COMPLETE':\n            return {\n                ...state,\n                isFetching: false\n            }\n        case 'NEW_MESSAGE_TEXT':\n            return {\n                ...state,\n                text: action.text\n            }\n        case 'ADD_MESSAGE_TEXT':\n            return {\n                ...state,\n                text: state.text + action.text\n            }\n       default:\n            return state\n    }\n}\n\nexport default newMessage;","//@flow\nimport type { TooltipItem, TooltipsAction } from 'src/actions/tooltips'\n\nexport type TooltipItemState = {\n    i: number,\n    hash: string\n} & TooltipItem\n\nexport type TooltipsState = {\n    items: Array<TooltipItemState>\n};\n\nexport const defaultTooltipsState: TooltipsState = {\n    items: []\n}\n\nconst tooltips = (state: TooltipsState = defaultTooltipsState, action: TooltipsAction) => {\n    let hash: string;\n    let items: Array<TooltipItemState>;\n    let tooltip;\n    switch (action.type) {\n        case 'CREATE_TOOLTIP':\n\n            items = state.items.slice();\n\n            hash = JSON.stringify(action.keys);\n            var ind = items.findIndex(val => val.hash === hash);\n            if (ind === - 1)\n                items.push({\n                    i: 0,\n                    keys: action.keys,\n                    hash,\n                    coords: action.coords\n                });\n            else {   \n                tooltip = Object.assign({}, items[ind]);\n                tooltip.coords = action.coords;\n                //to reset draggable position\n                tooltip.i += 1;\n                items[ind] = tooltip;\n            }\n\n            return {\n                ...state,\n                items\n            }\n        case 'CLOSE_TOOLTIP':\n            hash = JSON.stringify(action.keys);\n            return {\n                ...state,\n                items: state.items.filter(val => val.hash !== hash)\n            }\n        case 'CLEAR_TOOLTIPS':\n            if (state.items.length === 0)\n                return state\n            else     \n                return {\n                    ...state,\n                    items: []\n                }\n\n        default:\n            return state\n    }\n}\n\nexport default tooltips;","//@flow \nimport type { SearchAction } from '../actions/search'\n\nexport type SearchState = {\n  isFetching: boolean;\n  items: Array<*>,\n  lastUpdated?: Date\n}\n\nexport const defaultSearchState = {\n    isFetching: false,\n    items: []\n}\n\nconst search = (state: SearchState = defaultSearchState, action: SearchAction) => {\n    switch (action.type) {\n        case 'REQUEST_SEARCH':\n            return {\n                ...state,\n                isFetching: true\n            }\n        case 'RECEIVE_SEARCH_RESULTS':\n            return {\n                ...state,\n                isFetching: false,\n                items: action.items,\n                lastUpdated: action.receivedAt\n            }\n        default:\n            return state\n    }\n}\n\nexport default search;","//@flow\nimport type { TopicPreviewAction } from 'src/actions/topic_preview'\nimport type { ResponseMessage } from 'src/api'\n\nexport type TopicPreviewState = {\n    items: {[string]: ResponseMessage | null}\n};\n\nexport const defaultTopicPreviewState = {\n    items: {}\n};\n\nconst topicPreview = (state: TopicPreviewState = defaultTopicPreviewState, action: TopicPreviewAction) => {\n\n    let previewItem;\n\n    switch (action.type) {\n         case 'SHOW_PREVIEW':\n\n            previewItem = state[action.topicId];\n            if (previewItem === undefined)\n                state.items[action.topicId] = {\n                    n: '0',\n                    id: action.topicId,\n                    text: '',\n                    user: '',\n                    userId: '',\n                    utime: '0',\n                    vote: 0\n                };    \n            return {\n                ...state,\n            }\n         case 'CLOSE_PREVIEW': {\n            delete state.items[action.topicId];\n            return {\n                ...state\n            }\n         }\n        case 'RECEIVE_PREVIEW_TEXT':\n\n            previewItem = state.items[action.topicId];\n            if (previewItem === undefined)\n                return state;\n            else\n                state.items[action.topicId] = action.message;        \n            \n            return {\n                ...state,\n            }\n        default:\n            return state\n    }\n}\n\nexport default topicPreview;","\nexport type Column = {\n    name: string,\n    className?: string,\n    width?: string\n}\n\nexport type OptionsItems = {\n    theme: 'theme-yellow' | 'theme-lightgray',\n    topicsPerPage: string,\n    autoRefreshTopicsList: string,\n    autoRefreshTopicsListInterval: string,\n    autoRefreshTopic: string,\n    autoRefreshTopicInterval: string,\n    contetnMaxWidth: string\n}\n\nexport type OptionsState = {\n    show: boolean,\n    voteColors: Array<string>,\n    listColumns: Array<Column>,\n    showTitle: boolean,\n    items: OptionsItems    \n};\n\nfunction readOption(name, defaultValue) {\n    return window.localStorage.getItem(name) || defaultValue;\n}\n\nexport const defaultOptionsState = {\n    voteColors: [\n        \"#FF1616\", //1\n        \"#1A861A\", //2\n        \"#0023FF\", //3\n        \"#FF6B18\", //4\n        \"#9B3A6E\", //5\n        \"#567655\", //6\n        \"#233345\", //7\n        \"#CC0000\", //8\n        \"#00CCCC\", //9\n        \"#0000CC\", //10\n    ],\n    items: {\n        theme: 'theme-lightgray',\n        topicsPerPage: '20',\n        autoRefreshTopicsList: 'false',\n        autoRefreshTopicsListInterval: '60',\n        autoRefreshTopic: 'true',\n        autoRefreshTopicInterval: '60',\n        //tooltips\n        showTooltips: 'true',\n        tooltipDelay: '500',\n        showTooltipOnTopicsList: 'true',\n        showTooltipOnPostLink: 'true',\n        //links\n        showYoutubeVideoTitle: 'true',\n        replaceCatalogMista: 'true',\n        fixBrokenLinks: 'true',\n    }    \n}\n\nconst options = (state: OptionsState = defaultOptionsState, action: any) => {\n\n    switch (action.type) {\n\n        case 'READ_OPTIONS': \n            \n            let items = Object.assign({}, defaultOptionsState.items);\n            for (let key in items) {\n                items[key] = readOption(key, defaultOptionsState.items[key]);\n            }\n\n            return {\n                ...state,\n                items\n            }\n\n        case 'SAVE_OPTIONS': \n\n            for (let key in action.options) {\n                window.localStorage.setItem(key, String(action.options[key]));\n            }\n\n            return {\n                ...state,\n                items: action.options\n            }\n        default:\n            return state\n    }\n}\n\nexport default options;","//@flow\nimport { combineReducers } from 'redux'\n\nimport topicsList from './topics_list'\nimport type { TopicsListState } from './topics_list'\n\nimport topic from './topic'\nimport type { TopicState } from './topic'\n\nimport login from './login'\nimport type { LoginState } from './login'\n\nimport sections from './sections'\nimport type { SectionsState } from './sections'\n\nimport bookmark from './bookmark'\nimport type { BookmarkState } from './bookmark'\n\nimport banner from './banner'\nimport newTopic from './new_topic'\nimport type { NewTopicState } from './new_topic'\n\nimport newMessage from './new_message'\nimport type { NewMessageState } from './new_message'\n\nimport tooltips from './tooltips'\nimport type { TooltipsState } from './tooltips'\n\nimport search from './search'\nimport type { SearchState } from './search'\n\nimport topicPreview from './topic_preview'\nimport type { TopicPreviewState } from './topic_preview'\n\nimport options from './options'\nimport type { OptionsState } from './options'\n\nexport type State = {\n    topicsList: TopicsListState,\n    sections: SectionsState,\n    topic: TopicState,\n    login: LoginState,\n    banner: any,\n    bookmark: BookmarkState,\n    newTopic: NewTopicState,\n    newMessage: NewMessageState,\n    tooltips: TooltipsState,\n    search: SearchState,\n    topicPreview: TopicPreviewState,\n    options: OptionsState        \n}\n\nconst rootReducer = combineReducers({\n    topicsList,\n    sections,\n    topic,\n    login,\n    banner,\n    bookmark,\n    newTopic,\n    newMessage,\n    tooltips,\n    search,\n    topicPreview,\n    options\n})\n\nexport default rootReducer;","//@flow\nimport React, { Component } from 'react'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\n\nimport './search.css'\n\ntype Props = {};\n\nclass Search extends Component<Props> {\n\n    state: any;\n    doSearch: () => void;\n    onKeyPress: (e: any) => void;\n    onSearchEngineChange: (e: any) => void;\n    onSearchTextChange: (e: any) => void;\n\n    constructor(props: Props) {\n        super(props);\n        this.doSearch = this.doSearch.bind(this);\n        this.onKeyPress = this.onKeyPress.bind(this);\n        this.onSearchEngineChange = this.onSearchEngineChange.bind(this);\n        this.onSearchTextChange = this.onSearchTextChange.bind(this);\n\n        this.state = {\n            searchEngine: 'Яндекс',\n            text: ''\n        }\n    }\n\n    doSearch() {\n        \n        let url;\n        let text = this.state.text;\n\n        if (this.state.searchEngine === 'Яндекс') {\n            url = `https://www.yandex.ru/search/?text=${text}&site=mista.ru`;\n\n        } else if (this.state.searchEngine === 'Google') {\n            url = `https://www.google.ru/search?q=${text}+site:mista.ru`\n        }    \n\n        window.open(url);\n        \n        this.setState({\n            ...this.state,\n            text: ''\n        });        \n    }\n\n    onSearchEngineChange(eventKey: string) {\n        this.setState({\n            ...this.state,\n            searchEngine: eventKey\n        })\n    }\n    \n    onSearchTextChange(e: any) {\n        this.setState({\n            ...this.state,\n            text: e.target.value\n        })\n    }\n\n    onKeyPress(e: any) {\n        if (e.key === 'Enter') {\n            this.doSearch();\n        }        \n    }\n\n    render() {\n\n        return (\n            <InputGroup size=\"sm\">\n                <InputGroup.Prepend>   \n                    <DropdownButton id=\"search-engine\" title=\"\" size=\"sm\" style={{marginRight: \"2px\"}} variant=\"light\">\n                        <Dropdown.Item eventKey=\"Яндекс\" onSelect={this.onSearchEngineChange}>Яндекс</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"Google\" onSelect={this.onSearchEngineChange}>Google</Dropdown.Item>\n                    </DropdownButton> \n                </InputGroup.Prepend>   \n                <FormControl \n                    type=\"text\" \n                    placeholder={`${this.state.searchEngine}: поиск`} \n                    style={{marginRight: \"4px\", paddingRight: \"27px\"}}\n                    onKeyPress={this.onKeyPress}\n                    onChange={this.onSearchTextChange}\n                    value={this.state.text}\n                />\n                <InputGroup.Append style={{marginLeft: \"-25px\", marginTop: \"auto\", marginBottom: \"auto\", cursor: \"pointer\"}} onClick={this.doSearch}>\n                    <i className=\"fa fa-search\" style={{zIndex: 1000}}/>\n                </InputGroup.Append>\n            </InputGroup>\n        )\n    }\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Form from 'react-bootstrap/Form'\nimport queryString from 'query-string'\nimport { withRouter } from 'react-router-dom'\n\nimport Search from 'src/components/common/search'\nimport { fetchTopicsListIfNeeded } from 'src/actions/topics_list'\n\nimport './nav_bar.css'\n\nclass NavBar extends Component {\n\n    onClick = (e) => {\n        const { dispatch, location } = this.props;\n        let locationParams = queryString.parse(location.search);\n        dispatch(fetchTopicsListIfNeeded(locationParams));\n    }\n\n    render() {\n\n        const menu = [\n            { name: '1С', link: `${window.hash}/index.php?forum=1C` },\n            { name: 'IT', link: `${window.hash}/index.php?forum=IT` },\n            { name: 'JOB', link: `${window.hash}/index.php?forum=JOB` },\n            { name: 'LIFE', link: `${window.hash}/index.php?forum=LIFE` },\n            { name: 'Wiki', link: 'https://wiki.mista.ru' },\n            { name: 'Книга знаний', link: 'https://kb.mista.ru' },\n        ];\n\n        const menuItems = menu.map((item, i) => {\n            return (\n                <Nav.Item key={i}>\n                    <Nav.Link href={item.link}>\n                        {item.name}\n                    </Nav.Link>\n                </Nav.Item>\n            )\n        });\n        \n        return (\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" fixed=\"top\">\n                <Navbar.Brand\n                    href={`${window.hash}`} \n                    onClick={this.onClick}>\n                    React.Mista\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse>\n                    <Nav className=\"mr-auto\">\n                        {menuItems}\n                    </Nav>\n                    <Form inline>\n                        <Search />\n                    </Form>\n               </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nexport default connect()(withRouter(NavBar));","//@flow\nimport * as API from 'src/api'\nimport type { RequestLogin, ResponseLogin } from 'src/api'\nimport type { State } from 'src/reducers'\n\nexport type LOGIN_START = {\n    type: 'LOGIN_START',\n}\n\nexport type LOGIN_COMPLETE = {\n    type: 'LOGIN_COMPLETE',\n    data: {\n        error: string,\n        userid: string,\n        username: string,\n        hashkey: string        \n    }\n}\n\nexport type CHECK_LOGIN_START = {\n    type: 'CHECK_LOGIN_START'\n}\n\nexport type LOGOUT_START = {\n    type: 'LOGOUT_START'\n}\n\nexport type LOGOUT_COMPLETE = {\n    type: 'LOGOUT_COMPLETE'\n}\n\nexport type LOGIN_FAILED = {\n    type: 'LOGIN_FAILED',\n    error: string\n}\n\n\nexport type LoginAction = LOGIN_START | LOGIN_COMPLETE | LOGIN_FAILED | CHECK_LOGIN_START | LOGOUT_START | LOGOUT_COMPLETE;\n\nexport const loginStart = (): LOGIN_START => {\n\n    return {\n        type: 'LOGIN_START'\n    }\n}\n\nexport const loginComplete = (json: ResponseLogin): LOGIN_COMPLETE => {\n\n    return {\n        type: 'LOGIN_COMPLETE',\n        data: json\n    }\n}\n\nexport const loginFailed = (error: string): LOGIN_FAILED => {\n\n    return {\n        type: 'LOGIN_FAILED',\n        error\n    }\n}\n\nexport const checkLoginStart = (): CHECK_LOGIN_START => {\n\n    return {\n        type: 'CHECK_LOGIN_START'\n    }\n}\n\nexport const logoutStart = (): LOGOUT_START => {\n\n    return {\n        type: 'LOGOUT_START'\n    }\n}\n\nexport const logoutComplete = (): LOGOUT_COMPLETE => {\n\n    return {\n        type: 'LOGOUT_COMPLETE'\n    }\n}\n\nconst shouldLogin = (state: State): boolean => {\n    const { login } = state;\n    if (!login) {\n        return true\n    }\n    if (login.isFetching) {\n        return false\n    }\n    return true\n}\n\nexport const checkLogin = (params: any) => async (dispatch: any) => {\n\n    dispatch(checkLoginStart());\n\n    let json;\n    try {\n        json = await API.getCookies();\n    } catch(e) {\n        dispatch(loginFailed(e.message));\n        return;   \n    }  \n    const { cookie, session } = json;\n\n    if (session && session.user_id) {\n\n        let error = (session.last_error || '').trim();\n        if (error === 'Не указано сообщение.') error = '';\n        dispatch(loginComplete({\n            error,\n            userid: session.user_id,\n            username: session.user_name,\n            hashkey: cookie.entr_hash\n        }));\n   } else  \n        dispatch(loginFailed(''));\n}\n\nexport const checkLoginIfNeeded = (params: any) => (dispatch: any, getState: any) => {\n    if (shouldLogin(getState())) {\n        return dispatch(checkLogin(params))\n    }\n}\n\nexport const doLogout = (params: any) => async (dispatch: any) => {\n\n    dispatch(logoutStart());\n\n    try {\n        API.getLogout();\n    } catch(e) {\n        \n        dispatch(logoutComplete());\n        checkLogin();\n\n    }    \n\n}\n\nexport const doLogin = (params: RequestLogin) => async (dispatch: any) => {\n\n    dispatch(loginStart());\n\n    try {\n\n        const json = await API.getLogin({\n            username: encodeURIComponent(params.username),\n            password: encodeURIComponent(params.password)    \n        })\n        if (!json.error) {\n            dispatch(loginComplete(json));\n        } else {\n            dispatch(loginFailed(\n                'ОШИБКА: Вход не выполнен! Возможно указан неверный пароль.'\n                ));            \n        }\n\n    } catch (err) {\n        console.error('Login error :', err);\n        dispatch(loginFailed(err.message));           \n    }\n\n}\n\nexport const doLoginIfNeeded = (params: RequestLogin) => (dispatch: any, getState: any) => {\n    if (shouldLogin(getState())) {\n        return dispatch(doLogin(params))\n    }\n}","//@flow\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Dropdown } from 'react-bootstrap'\n\nimport { doLogout } from 'src/actions/login'\nimport { domain } from 'src/api'\n\nimport type { DefaultProps } from 'src/components'\n\ntype LoggedUserProps = {\n    userId: string,\n    userName: string    \n}\n\ntype Props = LoggedUserProps & DefaultProps;\n\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n  <span\n    ref={ref} \n    style={{ cursor: \"pointer\", color: \"#00C\" }} \n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n  </span>\n));\n\nclass LoggedUser extends Component<Props> {\n\n    onLogout;\n\n    constructor(props: Props) {\n        super(props);\n        this.onLogout = this.onLogout.bind(this);\n    }\n    \n    onLogout(event: any) {\n\n        event.preventDefault();\n\n        const { dispatch } = this.props;\n        dispatch(doLogout());  \n    }\n\n    onMenuSelect = (eventKey: any, event: Object): any => {\n\n        if (eventKey === 'exit') {\n           this.onLogout(event);\n        }\n\n    }\n\n    render() {\n\n        const { userId, userName } = this.props;\n        return (\n            <div style={{float: \"left\"}}>\n                <Dropdown id=\"dropdown-custom-menu\" onSelect={this.onMenuSelect}>\n                    <span>Привет, </span>\n                    <Dropdown.Toggle as={CustomToggle} bsRole=\"toggle\">{userName} ▼</Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item eventKey=\"profile\" href={`${domain}/users.php?id=${userId}`}>Профиль</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"myTopics\" href={`${window.hash}/index.php?user_id=${userId}`}>Мои темы</Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"options\" href={`${window.hash}/options.php`}>Настройки</Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"exit\">Выход</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n            </div>\n        )\n    }\n}\n\nexport default connect()(withRouter(LoggedUser));","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { FormControl, Button } from 'react-bootstrap'\n\nimport { doLoginIfNeeded } from 'src/actions/login'\n\nimport type { DefaultProps } from 'src/components'\nimport type { LoginState } from 'src/reducers/login'\nimport type { State } from 'src/reducers'\n\ntype Props = LoginState & DefaultProps;\n\nclass LoginForm extends Component<Props> {\n\n    username: any;\n    password: any;\n\n    constructor(props) {\n        super(props);\n        this.username = React.createRef();  \n        this.password = React.createRef();  \n    }\n        \n    onLogin = (event) => {\n\n        event.preventDefault();\n\n        const { dispatch } = this.props;\n\n        const params = {\n            username: this.username.current.value,\n            password: this.password.current.value\n        }\n        dispatch(doLoginIfNeeded(params));  \n    }\n\n    render() {\n\n        return (\n            <div>\n                <form name=\"enterform\" className=\"flex-row\" style={{flexWrap: \"wrap\"}}>\n                    <FormControl \n                        type=\"text\" \n                        placeholder=\"Имя\" \n                        ref={this.username} \n                        size=\"sm\" \n                        style={{marginRight: \"5px\", flex: \"0 1 300px\"}}\n                    />\n                    <FormControl \n                        type=\"password\" \n                        placeholder=\"Пароль\" \n                        maxLength=\"20\" \n                        autoComplete=\"off\" \n                        ref={this.password}\n                        size=\"sm\" \n                        style={{marginRight: \"5px\", flex: \"0 1 300px\"}}\n                    />\n                    <Button \n                        size=\"sm\"\n                        variant=\"light\" \n                        onClick={this.onLogin}\n                    >Войти</Button>\n                </form>\n                <p style={{margin: \"0px\"}}>Войти можно на сайте <a href=\"https://forum.mista.ru/\">forum.mista.ru</a></p>\n                <a rel=\"nofollow\" href=\"https://forum.mista.ru/user_registration.php\">Регистрация</a>\n                <span style={{ margin: \"5px\" }}>|</span>\n                <a rel=\"nofollow\" href=\"https://forum.mista.ru/remember_password.php\">Забыли пароль?</a>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): LoginState => {\n    return state.login;\n}\n\nexport default connect(mapStateToProps)(LoginForm);","//@flow\nimport React from 'react'\n\nimport './error.css'\n\ntype Props = {\n    text: ?string\n}\n\nconst ErrorElem = (props: Props) => {\n    if (!props.text)\n        return null;\n\n    return (\n        <div className=\"error\" dangerouslySetInnerHTML={{__html: props.text}}></div>\n    )    \n}\n\nexport default ErrorElem;","//@flow\nimport React, { Fragment, Component } from 'react'\nimport { connect } from 'react-redux'\nimport LoggedUser from './logged_user'\nimport LoginForm from './login_form'\nimport ErrorElem from '../common/error'\n\nimport { checkLoginIfNeeded } from 'src/actions/login'\n\nimport type { State } from 'src/reducers'\nimport type { DefaultProps } from 'src/components'\nimport type { LoginState } from 'src/reducers/login'\n\ntype Props = LoginState & DefaultProps;\n\nclass Login extends Component<Props> {\n\n    componentDidMount() {\n        const { dispatch } = this.props;\n        dispatch(checkLoginIfNeeded());        \n    }\n\n    render() {\n\n        const { logged, userid, username, error, dispatch } = this.props;\n\n        let elem;\n        if (logged === true) \n            elem = <LoggedUser dispatch={dispatch} userId={userid} userName={username} />\n        else if (logged === false)\n            elem = <LoginForm /> \n        else \n            elem = null;   \n\n        return (\n            <Fragment>\n                {elem}\n                {error && <ErrorElem text={error} />}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): LoginState => {\n    \n    return state.login;\n}\n\nexport default connect(mapStateToProps)(Login);","//@flow\nimport * as API from 'src/api'\nimport type { ResponseSections } from 'src/api'\nimport type { State } from 'src/reducers'\n\nexport type REQUEST_SECTIONS = {\n    type: 'REQUEST_SECTIONS',\n}\n\nexport type RECEIVE_SECTIONS = {\n    type: 'RECEIVE_SECTIONS',\n    items: ResponseSections,\n    receivedAt: Date\n}\n\nexport type SectionsAction = REQUEST_SECTIONS | RECEIVE_SECTIONS;\n\nexport const requestSections = (): REQUEST_SECTIONS => ({\n    type: 'REQUEST_SECTIONS'\n})\n\nexport const receiveSections = (json: ResponseSections): RECEIVE_SECTIONS => ({\n    type: 'RECEIVE_SECTIONS',\n    items: json,\n    receivedAt: new Date()\n})\n\nexport const fetchSections = () => async (dispatch: any) => {\n\n    let action1 = requestSections();\n    dispatch(action1);\n\n    const json: ResponseSections = await API.getSections();\n    \n    let action2 = receiveSections(json);\n    dispatch(action2);\n\n}\n\nconst shouldfetchSections = (state: State): boolean => {\n    \n    const sections = state.sections;\n    \n    if (!sections) \n        return true\n    \n    if (sections.isFetching) \n        return false\n    \n    if (sections.items.length > 0)\n        return false;\n\n    return true\n}\n\nexport const fetchSectionsIfNeeded = () => (dispatch: any, getState: any) => {\n    if (shouldfetchSections(getState())) {\n      return dispatch(fetchSections());\n    }\n  }","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Form from 'react-bootstrap/Form'\n\nimport { fetchSectionsIfNeeded } from 'src/actions/sections'\n\nimport type { ResponseSection, ResponseSections } from 'src/api'\n\nimport type { DefaultProps } from 'src/components'\nimport type { State } from 'src/reducers'\n\ntype SectionSelectProps = {\n    defaultValue: string,\n    selected: string,\n    className: string,\n    id: string,\n    style?: {},\n    size: ?string,\n    onChange: (e: any, section: ResponseSection | null) => void\n}\n\ntype StateProps = {\n    items: ResponseSections,\n    tree: {}\n}\n\ntype Props = SectionSelectProps & StateProps & DefaultProps;\n\nexport class SectionSelect extends Component<Props> {\n\n    onChange: any;\n\n    constructor(props: Props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        const { dispatch } = this.props;\n        dispatch(fetchSectionsIfNeeded());\n    }\n\n    onChange(event: any) {\n\n        const { items, onChange } = this.props;\n\n        if (onChange) {\n            const shortn = event.target.value;\n            const arr = items.filter(val => val.shortn === shortn);\n            if (arr.length > 0) \n                onChange(event, arr[0]);\n            else    \n                onChange(event, null);\n        }    \n    }\n\n    render() {\n\n        const { id, tree, defaultValue, selected, style, size } = this.props;\n        \n        let sectionsElem = [];\n        for (let forum in tree) {\n\n            let group =\n                <optgroup key={forum} label={forum}>\n                    {tree[forum].map((item, i) => (\n                        <option key={item.id} value={item.shortn} >\n                            {item.fulln}\n                        </option>\n                    ))}\n                </optgroup>\n\n            sectionsElem.push(group);\n        }\n\n        return  (\n            <Form.Control as=\"select\" \n                onChange={this.onChange}\n                value={selected}\n                style={{color: \"black\", ...style}}\n                size={size}\n                id={id}\n            >\n                <option value=\"\">{defaultValue}</option>\n                {sectionsElem}\n            </Form.Control>    \n        )\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    const { items, tree } = state.sections;\n\n    return {\n        items,\n        tree\n    }\n}\n\nexport default connect(mapStateToProps)(SectionSelect);","//@flow\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport queryString from 'query-string'\n\nimport Login from '../login'\nimport SectionSelect from './section_select'\nimport { fetchSectionsIfNeeded } from 'src/actions/sections'\n\nimport type { DefaultProps } from 'src/components'\n\ntype StateProps = {\n}\n\ntype Props = StateProps & DefaultProps;\n\nclass Header extends Component<Props> {\n\n    onSectionSelect: () => void;\n\n    constructor(props) {\n        super(props);\n        this.onSectionSelect = this.onSectionSelect.bind(this);\n    }\n\n    componentDidMount() {\n        const { dispatch } = this.props;\n        dispatch(fetchSectionsIfNeeded());\n    }\n    \n    onSectionSelect(event, value) {\n        if (value)\n            this.props.history.push(`/index.php?section=${value.shortn}`);\n        else\n            this.props.history.push(`/`);\n    }\n\n    render() {\n\n        const { location } = this.props;\n        const params = queryString.parse(location.search);\n\n        return (\n            <div className=\"flex-row\">\n                <div className=\"user-td\">\n                    <Login />\n                </div>\n                <div className=\"section-td\" style={{marginLeft: \"auto\"}}>\n                    <SectionSelect \n                        defaultValue=\"--Все секции--\" \n                        selected={params.section} \n                        onChange={this.onSectionSelect}\n                        size=\"sm\" \n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect()(withRouter(Header));","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { getMaxPage } from 'src/utils'\n\n\nconst Pages = (props) => {\n\n    const { answ, topicId } = props;\n\n    let pages = [];\n    if (answ > 100) {\n        let maxPage = getMaxPage(answ);\n        for (let i = 1; i <= maxPage; i++) {\n            let href = `/topic.php?id=${topicId}&page=${i}`;\n            let text;\n            if (i > 3 && i < maxPage)\n                text = '•';\n            else\n                text = i;\n            pages.push(<Link key={i}  className=\"agh\" style={{ margin: \"3px\" }} to={href}>{text}</Link>);\n        }\n    }\n\n    if (answ > 20) {\n        let href = `/topic.php?id=${topicId}&page=last20#F`;\n        pages.push(<Link key=\"last20\" className=\"agh\" style={{ margin: \"3px\" }} to={href}>»</Link>);\n    }\n\n    return (\n        <span className=\"topic-pages\">\n            {pages}\n        </span>\n    )\n}\n\nexport default Pages;","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport classNames from 'classnames'\nimport { Link } from 'react-router-dom'\n\nimport type { ResponseTopicsListItem } from 'src/api'\nimport type { State } from 'src/reducers'\n\nimport type { LoginState } from 'src/reducers/login'\nimport type { DefaultProps } from 'src/components/index'\nimport type { TopicPreviewState } from 'src/reducers/topic_preview'\n\nimport Pages from './pages';\n\ntype TopicNameCellProps = {\n    data: ResponseTopicsListItem,\n    preview: ?number\n};\n\ntype StateProps = {\n    login: LoginState,\n    topicPreview: TopicPreviewState\n};\n\ntype Props = TopicNameCellProps & StateProps & DefaultProps;\n\nclass TopicNameCell extends Component<Props> {\n\n    componentDidMount(){\n\n    }\n\n    render() {\n\n        const { data, login } = this.props;\n\n        let href = `/topic.php?id=${data.id}`;\n        let classes = classNames('agb', 'mr5', {\n            'bold': data.answ >= 100,\n            'mytopics': data.user0 === login.username\n        });\n\n        let isVoting;\n        if (data.is_voting === 1) {\n            isVoting = <span className=\"agh separator\">[±]</span>\n        }\n        \n        let sectionHref = `/index.php?section=${data.sect2}`;\n        let section;\n\n        if (data.sect1) {\n            section = (\n            <span className=\"topic-section\">\n                <span className=\"agh\" style={{margin: \"0px 5px\"}}>/</span>\n                <Link key=\"1\" rel=\"nofollow\" className=\"agh\" to={sectionHref} >{data.sect1}</Link>\n            </span>    \n            )\n        }\n\n        let closed;\n        let down;\n        let text = data.text;\n        if (data.closed)\n            closed = <span className=\"agh\">Ø</span>\n\n        if (data.down === 1)\n            down = <span className=\"agh\">↓</span>\n\n        if (data.sect2 === 'job' && text.substr(0, 3) !== 'JOB')\n            text = 'JOB: ' + text;\n\n        else if (data.forum === 'life' && text.substr(0, 3) !== 'OFF')\n            text = 'OFF: ' + text;\n\n        else if (data.sect2 === 'v7' && text.substr(0, 2) !== 'v7')\n            text = 'v7: ' + text;\n\n        return (\n            <div className=\"cell-title\">\n                <Link to={href} className={classes} dangerouslySetInnerHTML={{ __html: text }} style={{overflowWrap: \"anywhere\"}}></Link>\n                {isVoting}\n                <Pages answ={data.answ} topicId={data.id} />\n                {closed}\n                {down}\n                {section}\n            </div>\n        )\n\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    return {\n        login: state.login,\n        topicPreview: state.topicPreview\n    }\n}\n\nexport default connect(mapStateToProps)(TopicNameCell);","//@flow\nimport type { State } from '../reducers'\n\nexport type TooltipKeysTopic = {\n    type: 'TOPIC' | 'TOPIC_PREVIEW',\n    topicId: string,\n    number: number      \n}\n\nexport type TooltipKeys = TooltipKeysTopic\n\nexport type Coords = {\n    x: number, \n    y: number    \n}\n\nexport type TooltipItem = {\n    keys: TooltipKeys,\n    coords: Coords\n}\n\nexport type CREATE_TOOLTIP = {\n    type: 'CREATE_TOOLTIP',\n} & TooltipItem\n\nexport type CLEAR_TOOLTIPS = {\n    type: 'CLEAR_TOOLTIPS',\n}\n\nexport type CLOSE_TOOLTIP = {\n    type: 'CLOSE_TOOLTIP',\n    keys: TooltipKeys\n}\n\nexport type TooltipsAction = CREATE_TOOLTIP | CLOSE_TOOLTIP | CLEAR_TOOLTIPS;\n\nexport const showTooltip = (keys: TooltipKeys, coords: Coords) => async (dispatch: any) => {\n\n    if (keys.type === 'TOPIC' || keys.type === 'TOPIC_PREVIEW' ) {\n\n        const action: CREATE_TOOLTIP = {\n            type: 'CREATE_TOOLTIP',\n            keys,\n            coords\n        }\n        dispatch(action);\n\n    }\n}\n\nexport const closeTooltip = (keys: TooltipKeys) => (dispatch: any) => {\n    dispatch({\n        type: 'CLOSE_TOOLTIP',\n        keys\n    });\n}\n\nexport const clearTooltipsIfNeeded = (params: {}) => (dispatch: any, getState: any) => {\n    const state: State = getState(); \n    if (state.tooltips.items.length > 0) {\n        \n        const action: CLEAR_TOOLTIPS = {\n            type: 'CLEAR_TOOLTIPS'\n        };\n        \n        dispatch(action);\n    }    \n}","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { showTooltip } from '../../actions/tooltips'\n\nimport { getMaxPage, childrenToText } from 'src/utils';\nimport { getTopicInfo } from 'src/api'\n\nimport type { State } from 'src/reducers'\nimport type { DefaultProps } from 'src/components'\nimport type { ResponseInfo, ResponseMessages } from 'src/api'\n\ntype LinkToPostProps = {\n    topicId: string,\n    number: number,\n    isPreview: boolean,\n    style: {}\n}\n\ntype StateProps = {\n    info: ResponseInfo,\n    items: ResponseMessages,\n    tooltipDelay: string\n}\n\ntype Props = LinkToPostProps & StateProps & DefaultProps;\n\nclass LinkToPost extends Component<Props, {text: string}> {\n\n    timer;\n\n    constructor(props) {\n        super(props);\n\n        const { children, number } = this.props;\n        if (children)\n            this.state = {text: childrenToText(children).join('')};\n        else    \n            this.state = {text: String(number)};\n    }\n\n    UNSAFE_componentWillReceiveProps(props) {\n        if (!props.children) {\n            this.setState({text: String(props.number)});\n        }\n    }\n\n    componentDidMount() {\n\n        if (this.state.text.startsWith(\"http\")) {\n\n          const { topicId } = this.props;\n          getTopicInfo({id: topicId})\n            .then(response => {\n                this.setState({\n                    text: response.text\n                })\n            });\n\n        }\n    }\n\n    onMouseOver = (event) => {\n        event.persist();\n        const { tooltipDelay } = this.props;\n        this.timer = setTimeout(() => this.showToolTip(event), +tooltipDelay);\n    }\n    \n    onClick = (event) => {\n        event.stopPropagation();\n        clearTimeout(this.timer);\n        this.showToolTip(event);\n    }\n\n    onMouseOut = (event) => {\n        clearTimeout(this.timer);\n    }\n\n    showToolTip = (e) => {\n        const { topicId, number, dispatch, isPreview } = this.props;\n\n        const coords = {\n            x: e.pageX,\n            y: e.pageY - 50 // remove navbar margin-top\n        }\n\n        const keys = {\n            type: isPreview ? 'TOPIC_PREVIEW' : 'TOPIC',\n            topicId,\n            number          \n        }\n        \n        dispatch(showTooltip(\n            keys,\n            coords\n        ));\n    }\n\n    render() {\n\n        const { topicId, number, style, info } = this.props;\n        const page = getMaxPage(number);\n\n        let pageParam = '';\n        if (page > 1)\n            pageParam = `&page=${page}`;\n\n        let a;\n        if (topicId === info.id || !isNaN(this.state.text) )\n            a = (\n                <span\n                    onMouseOver={this.onMouseOver}\n                    onMouseOut={this.onMouseOut}\n                    onClick={this.onClick}\n                    style={{ cursor: \"pointer\", color: \"#00C\", ...style}}\n                >{this.state.text}</span>\n            )\n        else \n            a = (\n                <span>\n                    <a href={`${window.hash}/topic.php?id=${topicId}${pageParam}#${number}`}\n                        style={{...style}}\n                    >{this.state.text}</a>{' '} \n                    (<span onMouseOver={this.onMouseOver}\n                        onMouseOut={this.onMouseOut}\n                        onClick={this.onClick}\n                        style={{cursor:\"pointer\", color: \"#00C\"}}\n                     >{number}</span>)               \n                </span>\n            )\n\n        return a;\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    const {\n        items, info\n    } = state.topic;\n\n    return {\n        items,\n        info,\n        tooltipDelay: state.options.items['tooltipDelay']\n    }\n}\n\nexport default connect(mapStateToProps)(LinkToPost);","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport type { DefaultProps } from 'src/components'\n\ntype PreviewLinkProps = {\n    topicId: string,\n    expanded: boolean\n};\n\ntype Props = PreviewLinkProps & DefaultProps;\n\nclass PreviewLink extends Component<Props> {\n\n    onClick = () => {\n        const { topicId, dispatch } = this.props;\n\n        dispatch({\n            type: 'TOGGLE_PREVIEW',\n            topicId \n        });\n    }\n\n    render() {\n\n        const { expanded } = this.props;\n        let text;\n        if (expanded)\n            text = '-'\n        else\n            text = '+'    \n\n        return (\n            <div className=\"cell-preview-link\" onClick={this.onClick}>\n                <span>{text}</span>\n            </div>\n        )        \n    }\n\n}\n\nexport default connect()(PreviewLink);","//@flow\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport dateFormat from 'dateformat'\n\nimport TopicNameCell from './topic_name_cell';\nimport LinkToPost from 'src/components/extensions/link_to_post'\nimport PreviewLink from './preview_link'\n\nimport { today } from 'src/utils'\n\nimport type { State } from 'src/reducers'\nimport type { TopicsListItem } from 'src/reducers/topics_list'\nimport type { LoginState } from 'src/reducers/login'\nimport type { DefaultProps } from 'src/components/index'\n\ntype RowProps = {\n    columns: any,\n    data: TopicsListItem\n}\n\ntype StateProps = {\n    login: LoginState,\n    showTooltipOnTopicsList: string\n}\n\ntype Props = RowProps & StateProps & DefaultProps;\n\nconst Row = (props: Props) => {\n\n    const { data, showTooltipOnTopicsList } = props;\n    let time = new Date(+data.utime * 1000);\n    if (today(time)) {\n        time = dateFormat(time, 'HH:MM')\n    } else {\n        time = dateFormat(time, 'dd.mm.yy');\n    }\n    return (\n        <div className=\"topics-list-row\">\n            {/*{cells}*/}\n            <div className=\"cell-forum\">\n                {data.forum}\n            </div>\n            <div className=\"cell-section\">\n                {data.sect1}\n            </div>\n            <div className=\"cell-answ\">\n                { showTooltipOnTopicsList === 'true' ?\n                    <LinkToPost topicId={data.id} number={data.answ} style={{color: \"black\"}} isPreview/>\n                    :\n                    data.answ\n                }\n            </div>\n            <PreviewLink topicId={data.id} expanded={data.showPreview}/>\n            <TopicNameCell data={data}/>\n            <div className=\"cell-author\">\n                {data.user0}\n            </div>\n            <div className=\"cell-lastuser\">\n                <div style={{display: \"flex\"}}>\n                    <span className=\"cell-lastuser-time\">{time}</span>\n                    <span className=\"cell-lastuser-user\">{data.user}</span>\n                </div>\n            </div>\n            <div className=\"cell-last20\">\n                <Link to={`/topic.php?id=${String(data.id)}&page=last20`} style={{color: \"inherit\", display: \"block\", width: \"100%\", textAlign: \"center\"}}>{'>'}</Link>\n            </div>\n        </div>\n    )\n\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    return {\n        login: state.login,\n        showTooltipOnTopicsList: state.options.items.showTooltipOnTopicsList\n    }\n}\n\nexport default connect(mapStateToProps)(Row);","//@flow\nimport React, { Component } from 'react'\nimport { Pagination } from 'react-bootstrap'\n\nimport { paramsToString } from 'src/api'\n\ntype FooterProps = {\n    locationParams: { page?: string },\n    baseUrl: string,\n    maxPage: number,\n    last20?: boolean\n}\n\ntype Props = FooterProps;\n\nclass Pages extends Component<Props> {\n\n    render() {\n\n        const { locationParams, baseUrl, maxPage, last20 } = this.props;\n        let currentPage;\n        if (!locationParams.page) \n            currentPage = 1;\n        else if (locationParams.page === \"last20\")\n            currentPage = \"last20\";\n        else\n            currentPage = parseInt(locationParams.page, 10) || 1;\n        \n        let pages = [];\n        for (let i = 1; i <= maxPage; i++) {\n            let params = {...locationParams, page: i };\n            let href = `${window.hash}/${baseUrl}` + paramsToString('?', params);\n\n            pages.push(<Pagination.Item active={currentPage === i} key={i} href={href}>{i}</Pagination.Item>);\n        }\n\n        if (last20 === true) {\n            let params = {...locationParams, page: \"last20\" };\n            let href = `${window.hash}/${baseUrl}` + paramsToString('?', params);\n            pages.push(<Pagination.Item active={currentPage === \"last20\"} key=\"last20\" href={href}>»</Pagination.Item>);\n        }\n\n        return (\n            <Pagination style={{margin: \"0px\"}}>\n                {pages}\n            </Pagination>            \n        )\n    }\n}\n\nexport default Pages;","//@flow\nimport * as API from '../api'\nimport type { RequestNewTopic } from 'src/api'\nimport type { State } from 'src/reducers'\nimport type { ResponseSection } from 'src/api'\n\nexport type postNewTopicParams = {\n    subject: string,\n    text: string,\n    section: number,\n    forum: string,\n    isVoting: boolean,\n    votingItems?: Array<string>,\n    onSuccess?: () => void\n};\n\nexport type POST_NEW_TOPIC_START = {\n    type: 'POST_NEW_TOPIC_START'\n}\n\nexport type POST_NEW_TOPIC_COMPLETE = {\n    type: 'POST_NEW_TOPIC_COMPLETE'\n}\n\nexport type POST_NEW_TOPIC_ERROR = {\n    type: 'POST_NEW_TOPIC_ERROR',\n    error: string\n}\n\nexport type NEW_TOPIC_TEXT = {\n    type: 'NEW_TOPIC_TEXT',\n    text: string\n}\n\nexport type NEW_TOPIC_SUBJECT = {\n    type: 'NEW_TOPIC_SUBJECT',\n    text: string\n}\n\nexport type NEW_TOPIC_CLEAR = {\n    type: 'NEW_TOPIC_CLEAR'\n}\n\nexport type NEW_TOPIC_SHOW_VOTING = {\n    type: 'SHOW_VOTING',\n    data: boolean\n}\n\nexport type NEW_TOPIC_SECTION = {\n    type: 'NEW_TOPIC_SECTION',\n    section: ResponseSection\n}\n\nexport type NewTopicAction = POST_NEW_TOPIC_START | POST_NEW_TOPIC_COMPLETE | POST_NEW_TOPIC_ERROR | \n    NEW_TOPIC_CLEAR | NEW_TOPIC_TEXT | NEW_TOPIC_SUBJECT| NEW_TOPIC_SHOW_VOTING | NEW_TOPIC_SECTION;\n\nexport const shouldPostNewTopic = (state: State): boolean => {\n    const newTopic = state.newTopic;\n    if (!newTopic) {\n        return false\n    }\n    if (newTopic.isFetching) {\n        return false\n    }\n    return true\n}\n\nexport const postNewTopicIfNeeded = (params: postNewTopicParams) => (dispatch: any, getState: any) => {\n    if (shouldPostNewTopic(getState())) {\n        return dispatch(postNewTopic(params));\n    }\n}\n\nconst postNewTopic = (params: postNewTopicParams) => async (dispatch: any) => {\n\n    dispatch({\n        type: 'POST_NEW_TOPIC_START'\n    });\n\n    let fetchParams: RequestNewTopic = {\n        message_text: encodeURIComponent(params.text),\n        topic_text: encodeURIComponent(params.subject),\n        target_section: String(params.section),\n        target_forum: params.forum.toLowerCase(),\n        action: 'new',\n        rnd: Math.round(Math.random() * 10000000000),\n        voting: params.isVoting ? 1 : 0\n    };\n\n    if (params.votingItems) \n        for (let i=0; i<params.votingItems.length; i++) {\n            fetchParams[`section${i+1}`] = params.votingItems[i];\n        }\n    \n    await API.postNewTopic(fetchParams);\n        \n    dispatch({\n        type: 'POST_NEW_TOPIC_COMPLETE'\n    });\n\n    if (params.onSuccess)\n          params.onSuccess();    \n}","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { FormControl, Button, ButtonGroup, Form } from 'react-bootstrap'\n\nimport type { DefaultProps } from 'src/index'\n\nimport './text_editor.css'\n\ntype TextEditorProps = {\n    placeholder: string,\n    showVoting: boolean,\n    isVoting: boolean,\n    text: string,\n    isFetching: boolean,\n    formName: string,\n    onChange?: (e: any, text: string) => void,   \n}\n\ntype Props = TextEditorProps & DefaultProps;\n\nclass TextEditor extends Component<Props> {\n\n    textArea;\n\n    constructor(props) {\n        super(props);\n        this.textArea = React.createRef();\n    }\n\n    onButtonCode1c = (e) => {\n\n        e.preventDefault();\n\n        var openTag = '[1C]\\n';\n        var closeTag = '\\n[/1C]';\n\n        var textArea = this.textArea.current;\n\n        var start = textArea.selectionStart;\n        var end = textArea.selectionEnd;\n\n        var oldText = textArea.value;\n        var len = oldText.length;\n        var selectedText = oldText.substring(start, end);\n        var replacement = openTag + selectedText + closeTag;\n        var newText = oldText.substring(0, start) + replacement + oldText.substring(end, len);\n\n        const { dispatch, formName } = this.props;\n        dispatch({\n            type: formName + '_TEXT',\n            text: newText\n        })\n\n    }\n\n    onVotingChange = (e) => {\n        const { dispatch } = this.props;\n        dispatch({\n            type: 'SHOW_VOTING',\n            data: e.target.checked\n        })\n    }\n\n    onChange = (e) => {\n        const { dispatch, formName } = this.props;\n        dispatch({\n            type: formName + '_TEXT',\n            text: e.target.value\n        })\n    }\n\n    onKeyPress = (e) => {\n\n        if (e.key === 'Enter' && e.ctrlKey) {\n            let parent =  this.textArea.current.parentNode;\n            while (parent.tagName.toUpperCase() !== \"FORM\") {\n                parent = parent.parentNode;\n            }\n            parent.dispatchEvent(new Event(\"submit\"));\n        }\n    }\n\n    render() {\n\n        const { placeholder, showVoting, isVoting, isFetching, text } = this.props;\n\n        return (\n            <div>\n                <FormControl \n                    as=\"textarea\" \n                    placeholder={placeholder} \n                    cols=\"70\" rows=\"3\"\n                    value={text}\n                    onChange={this.onChange}\n                    onKeyPress={this.onKeyPress}\n                    ref={this.textArea}\n                    className=\"text-editor\"\n                />\n                <div className=\"flex-row\">\n                    <ButtonGroup>\n                        <Button \n                            size=\"sm\"\n                            variant=\"light\" \n                            onClick={this.onButtonCode1c} \n                            style={{marginRight: \"5px\"}}\n                            >Код 1С</Button>\n                        <Button\n                            size=\"sm\"\n                            variant=\"light\"\n                            disabled={isFetching}\n                            type=\"submit\"\n                            >\n                            {isFetching ? 'Отправляется' : 'Отправить'}\n                        </Button>\n                    </ButtonGroup>\n                    {showVoting &&\n                        <Form.Check \n                            type=\"checkbox\"\n                            checked={isVoting} \n                            onChange={this.onVotingChange}\n                            label=\"Голосование\" \n                            style={{margin: \"auto 0px auto auto\"}} />\n                    }\n                </div>\n            </div>\n        )\n\n    }\n}\n\nexport default connect()(TextEditor);","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Form from 'react-bootstrap/Form'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FormGroup } from 'react-bootstrap'\n\nimport type { ResponseSection } from 'src/api'\n\nimport type { DefaultProps } from 'src/components'\nimport type { State } from 'src/reducers'\nimport type { SectionsState } from 'src/reducers/sections'\nimport type { NewTopicState } from 'src/reducers/new_topic'\n\nimport { postNewTopicIfNeeded } from 'src/actions/new_topic'\nimport type { NewTopicAction, postNewTopicParams } from 'src/actions/new_topic'\n\nimport SectionSelect from './section_select'\nimport TextEditor from '../common/text_editor'\nimport ErrorElem from '../common/error'\n\nimport './new_topic.css'\n\ntype StateProps = {\n    sections: SectionsState, \n    newTopic: NewTopicState,\n}    \n\ntype NewTopicProps = {\n    onSubmitSuccess?: () => void\n};\n\ntype Props = NewTopicProps & StateProps & DefaultProps;\n\nclass NewTopic extends Component<Props> {\n\n    currentSection: ?ResponseSection;\n\n    onSectionChange = (e: any, section: ResponseSection) => {\n        const { dispatch } = this.props;\n        this.currentSection = section;\n        \n        const action: NewTopicAction = {\n            type: 'NEW_TOPIC_SECTION',\n            section\n        };\n\n        dispatch(action);\n    }\n\n    onSubmit = (e) => {\n        \n        e.preventDefault();\n        const { dispatch, newTopic } = this.props;\n\n        let action: NewTopicAction;\n        if (!this.currentSection) {\n            action = {\n                type: 'POST_NEW_TOPIC_ERROR',\n                error: 'Не выбрана секция'\n            };\n            dispatch(action);\n            return;\n        }\n\n        let subject = newTopic.subject; \n        if (!subject) {\n            action = {\n                type: 'POST_NEW_TOPIC_ERROR',\n                error: 'Не указана тема'\n            };\n            dispatch(action);\n            return;            \n        }\n\n        if (!newTopic.text) {\n            action = {\n                type: 'POST_NEW_TOPIC_ERROR',\n                error: 'Не указано сообщение'\n            };\n            dispatch(action);\n            return;\n\n        }\n        \n        let params: postNewTopicParams = {\n            subject,\n            text: newTopic.text,\n            section: this.currentSection.id,\n            forum: this.currentSection.forum,\n            isVoting: newTopic.isVoting,\n            votingItems: [],\n            onSuccess: this.onSubmitSuccess\n        };\n\n        if (newTopic.isVoting) {\n            params.votingItems = [];\n            for (let i = 1; i <= 10; i++) {\n                let val = this.refs[`vote${i}`].value;\n                if (val) {\n                    params.votingItems.push(val);\n                }\n            }           \n        }\n\n        dispatch(postNewTopicIfNeeded(params));\n    }\n    \n    onSubjectChange = (e) => {\n \n        const { dispatch } = this.props;\n        dispatch({\n            type: 'NEW_TOPIC_SUBJECT',\n            text: e.target.value\n        });\n       \n    }\n\n\n    onSubmitSuccess = () => {\n\n        const { dispatch } = this.props;\n        dispatch({\n            type: 'NEW_TOPIC_CLEAR',\n            text: ''\n        });\n\n        if (this.props.onSubmitSuccess) {\n            this.props.onSubmitSuccess();\n        }\n    }\n\n    render() {\n\n        const { sections, newTopic } = this.props;\n\n        let groupsElem = [];\n        for (let forum in sections.tree) {\n            groupsElem.push(<option key={forum} value={forum.toLowerCase()}>{forum}</option>);\n        }\n\n        let votingOptions = [];\n\n        if (newTopic.isVoting) {\n            votingOptions.push(<div key=\"p\">Варианты:</div>);\n            for (let i = 1; i <= 10; i++) {\n                votingOptions.push(\n                    <InputGroup key={i} size=\"sm\" style={{marginBottom: \"3px\", width: \"100%\"}}>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text\n                                style={{width:\"40px\"}}>\n                                {`${i}.`}\n                            </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control \n                            type=\"text\" \n                            maxLength=\"50\" \n                            ref={`vote${i}`} \n                            style={{color: \"black\"}}\n                        />\n                    </InputGroup>    \n                );\n            }\n        }\n\n        return (\n            <form className=\"new-topic-container\" onSubmit={this.onSubmit}>\n                <div id=\"newtopic_form\"  className=\"new-topic-text\">\n                    <div><b>Новая тема:</b></div>\n                    {newTopic.error && <ErrorElem text={newTopic.error} />}\n                    <div className=\"flex-row\" style={{ marginBottom: \"3px\" }}>\n                        <Form.Control as=\"select\"\n                            size=\"sm\"\n                            readOnly={true} \n                            value={newTopic.forum}\n                            style={{ flex: \"0 1 90px\", color: \"black\" }}\n                        >\n                            {groupsElem}                       \n                        </Form.Control>\n                        <SectionSelect\n                            defaultValue=\"Секция\"\n                            id=\"target_section\"\n                            size=\"sm\"\n                            style={{ flex: \"1 1 auto\" }}\n                            onChange={this.onSectionChange}\n                        />\n                    </div>\n                    <Form.Control \n                        type=\"text\"\n                        size=\"sm\"\n                        value={newTopic.subject}\n                        onChange={this.onSubjectChange}\n                        style={{ marginBottom: \"3px\", color: \"black\" }}\n                        placeholder=\"Тема\"\n                        maxLength=\"90\"\n                    />                        \n                    <TextEditor\n                        placeholder=\"Сообщение\"\n                        showVoting={true}\n                        isVoting={newTopic.isVoting}\n                        onSend={this.onSend}\n                        text={newTopic.text} \n                        isFetching={newTopic.isFetching}\n                        formName=\"NEW_TOPIC\"\n                    />\n                </div>\n                <FormGroup className=\"new-topic-voting\">\n                    {votingOptions}\n                </FormGroup>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    return {\n        sections: state.sections,\n        newTopic: state.newTopic\n    }\n}\n\nexport default connect(mapStateToProps)(NewTopic);"," \nfunction highlight(text) {\n\n    const keywords = new Set(\n        \"|if|если|then|тогда|elsif|иначеесли|else|иначе|endif|конецесли|do|цикл|for|для|to|по|each|каждого|in|из|while|пока|enddo|конеццикла|procedure|процедура|endprocedure|конецпроцедуры|function|функция|endfunction|конецфункции|var|перем|export|экспорт|goto|перейти|and|и|or|или|not|не|val|знач|break|прервать|continue|продолжить|return|возврат|try|попытка|except|исключение|endtry|конецпопытки|raise|вызватьисключение|false|ложь|true|истина|undefined|неопределено|null|new|новый|execute|выполнить|\"\n            .split('|')\n    );\n\n    const Спецсиволы = new Set(\"():;.,=+-*<>?[]%/\".split(''));\n    const НачалоТега = \"<span class=\";\n    const КонецТега = \"</span>\";\n\n    const мЦветФона = \"bg>\";\n    const мЦветЧисла = \"num>\";\n    const мЦветСтроки = \"str>\";\n    //const мЦветПараметра = \"par>\";\n    const мЦветКомментария = \"com>\";\n    const мЦветСпецСимвола = \"sp>\";\n    const мЦветПрепроцессора = \"pr>\";\n    const мЦветКлючевогоСлова1 = \"key>\";\n\n\n    let СтрокаРезультат;\n    let УстановленЦвет;\n    let ПоследнийЦвет;\n\n    let ВСтроке = false;\n    let Токен = \"\";\n\n    function ПустаяСтрока(Строка) {\n        return Строка.trim() === '';\n    }\n\n    function Сред(Строка, Нач, Длина) {\n        return Строка.substr(Нач - 1, Длина);\n    }\n\n    function Прав(Строка, Длина) {\n        return Строка.substr(-Длина);\n    }\n\n    function isKeyword(token) {\n        return keywords.has(token.toLowerCase().trim());\n    }\n\n    function ДобавитьЧастьСтроки1С(Часть, Цвет) {\n\n        if (Часть === \" \" || ПоследнийЦвет === Цвет) {\n            СтрокаРезультат = СтрокаРезультат + Часть;\n        } else {\n            if (УстановленЦвет) {\n                СтрокаРезультат = СтрокаРезультат + КонецТега;\n                УстановленЦвет = false;\n            };\n\n            СтрокаРезультат = СтрокаРезультат + НачалоТега + Цвет + Часть;\n            УстановленЦвет = true;\n            ПоследнийЦвет = Цвет;\n        };\n    }\n\n    function РазукраситьСтроку(СтрокаКода) {\n\n        //  https://infostart.ru/profile/34707/public/\n        let ВСтрокеСкобка = false;\n        let ВСтрокеТильда = false;\n        let НачалоСтроки = 1;\n        let ТокенДоТочки = true;\n        // Заменяем 8 символьную табуляцию на 4 символьную пробелами\n\n        // Последовательно перебираются все символы строки кода\n        let Поз = 1;\n        for (Поз = 1; Поз <= СтрокаКода.length; Поз++) {\n\n            let ТекущийСимвол = СтрокаКода.charAt(Поз - 1);\n            if (ВСтроке) {\n\n                // Операции встрече символа \"кавычка\"\n                if (ТекущийСимвол === '\"') {\n                    // Нашли парную кавычку - окрашиваем как строку\n                    ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n                    ВСтроке = false;\n                    Токен = \"\";\n                    ТокенДоТочки = true;\n                } else {\n                    Токен = Токен + ТекущийСимвол;\n                };\n\n            } else if (ВСтрокеСкобка) {\n\n                // Операции встрече символа \"кавычка\" литерал\n                if (ТекущийСимвол === \"'\") {\n                    // Нашли парную скобку - окрашиваем как комментарий\n                    ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n                    ВСтрокеСкобка = false;\n                    Токен = \"\";\n                    ТокенДоТочки = true;\n                } else {\n                    Токен = Токен + ТекущийСимвол;\n                };\n\n            } else if (ТекущийСимвол === \" \") {\n                // Операции при встрече символа табуляции или пробела\n                if (!ПустаяСтрока(Токен)) {\n                    // Пробел после токена, значит\n                    // токен - ключевое слово...\n                    if (ВСтрокеТильда) {\n                        ДобавитьЧастьСтроки1С(Токен + \" \", мЦветСтроки);\n                        ВСтрокеТильда = false;\n\n                    } else if (isKeyword(Токен.trim())) {\n                        ДобавитьЧастьСтроки1С(Токен + \" \", мЦветКлючевогоСлова1);\n\n                    } else if (!isNaN(parseInt(Токен, 10))) {\n                        ДобавитьЧастьСтроки1С(Токен + \" \", мЦветЧисла);\n\n                    } else {\n                        ДобавитьЧастьСтроки1С(Токен + \" \", мЦветФона);\n                    };\n                    Токен = \"\";\n                } else {\n                    СтрокаРезультат = СтрокаРезультат + \" \";\n                };\n                ТокенДоТочки = true;\n\n            } else if (Спецсиволы.has(ТекущийСимвол)) {\n\n                // Встретился один из специальных символов\n                if (!ПустаяСтрока(Токен)) {\n                    // Чтобы избежать окраски метода объекта с совпадающим именем\n                    // с одним из ключевых слов, проверяем текущий символ на \".\"\n                    if (ВСтрокеТильда) {\n\n                        ДобавитьЧастьСтроки1С(Токен, мЦветСтроки);\n                        ВСтрокеТильда = false;\n                        ТокенДоТочки = (ТекущийСимвол !== \".\");\n\n                    } else if (ТокенДоТочки && isKeyword(Токен)) {\n                        ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\n                        ТокенДоТочки = (ТекущийСимвол !== \".\");\n\n                    } else {\n                        // Не ключевое слово - значит число\n                        if (!isNaN(parseInt(Токен, 10))) {\n                            ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\n\n                        } else {\n                            ДобавитьЧастьСтроки1С(Токен, мЦветФона);\n                        };\n                        ТокенДоТочки = (ТекущийСимвол !== \".\");\n                    };\n                    Токен = \"\";\n                };\n                // Один из специальных символов\n                if (ТекущийСимвол === \".\" && ПоследнийЦвет === мЦветЧисла) {\n                    // Продолжение числа\n                    ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветЧисла);\n                    continue;\n\n                } else if (ТекущийСимвол === \"=\" && Сред(СтрокаКода, Поз - 1, 1) === \"<\") {\n                    // Знак \"меньше или равно\" - вторая ошибка движка Инфостарт\n                    ПоследнийЦвет = undefined;\n\n                } else if (ТекущийСимвол === \"/\" && Сред(СтрокаКода, Поз + 1, 1) === \"/\") {\n                    // Проверяется на комментарий\n                    ДобавитьЧастьСтроки1С(Прав(СтрокаКода, СтрокаКода.length - Поз + 1), мЦветКомментария);\n                    return;\n                };\n                ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветСпецСимвола);\n\n            } else if (ТекущийСимвол === '\"' || ТекущийСимвол === \"|\") {\n\n                // Операции встрече символа \"кавычка\"\n                // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\n                if (ПустаяСтрока(Токен)) {\n                    НачалоСтроки = Поз;\n                    ВСтроке = true;\n                } else {\n                    // Ошибка синтаксиса\n                    ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\n                    Токен = \"\";\n                };\n                ТокенДоТочки = true;\n\n            } else if (ТекущийСимвол === \"'\") {\n\n                // Операции встрече символа \"кавычка\" литерал\n                // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\n                if (ПустаяСтрока(Токен)) {\n                    НачалоСтроки = Поз;\n                    ВСтрокеСкобка = true;\n                } else {\n                    // Ошибка синтаксиса\n                    ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\n                    Токен = \"\";\n                };\n                ТокенДоТочки = true;\n\n            } else if (ТекущийСимвол === \"#\" || (ТекущийСимвол === \"&\" && ПустаяСтрока(СтрокаРезультат))) {\n\n                // Встретился символ препроцессора\n                ДобавитьЧастьСтроки1С(Прав(СтрокаКода, СтрокаКода.length - Поз + 1), мЦветПрепроцессора);\n                Поз = СтрокаКода.lenth;\n                break;\n\n            } else if (ТекущийСимвол === \"~\") {\n                Токен = Токен + ТекущийСимвол;\n                ВСтрокеТильда = true;\n            } else {\n                // Остальные символы\n                Токен = Токен + ТекущийСимвол;\n            }\n        }\n\n        if (ВСтроке) {\n\n            // Многострочная строка\n            ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n\n        } else if (ВСтрокеСкобка) {\n\n            // Незавершенный литерал\n            ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n\n        } else if (!ПустаяСтрока(Токен)) {\n\n            // Анализируем последний токен строки кода\n            if (isKeyword(Токен)) {\n                ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\n\n            } else if (!isNaN(parseInt(Токен, 10))) {\n                ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\n\n            } else {\n                ДобавитьЧастьСтроки1С(Токен, мЦветФона);\n            };\n\n        };\n\n    }\n\n    ВСтроке = false;\n    Токен = \"\";\n    УстановленЦвет = false;\n    ПоследнийЦвет = undefined;\n    СтрокаРезультат = '';\n\n    let result = [];\n\n    for (let СтрокаКода of text.split('\\n')) {\n\n        if (ПустаяСтрока(СтрокаКода)) {\n            result.push('');\n            continue;\n        }\n\n        СтрокаРезультат = '';\n        РазукраситьСтроку(СтрокаКода);\n        if (УстановленЦвет && !ВСтроке) {\n            СтрокаРезультат += '</span>';\n            УстановленЦвет = false;\n            ПоследнийЦвет = '';\n            Токен = '';\n        } else if (!ВСтроке) {\n            ПоследнийЦвет = '';\n            Токен = '';\n        }\n\n        result.push(СтрокаРезультат);\n    }\n\n    return result.join('\\n');\n}\n\nexport default highlight;","import React, { Component } from 'react'\nimport { childrenToText } from 'src/utils'\nimport highlight from './code_highlight'\nimport './code1c.css'\n    \nclass Code extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onShowClick = this.onShowClick.bind(this);\n        this.state = {hidden: true};\n\n        const { children } = props;\n        if (children) {\n\n            const textArr = childrenToText(children);\n            this.text = textArr.join('');\n\n            // replace double new-lines\n            this.text = this.text\n                .replace(/\\n<br>/g, '\\n')\n                .replace(/<br>\\n/g, '\\n')\n                .replace(/\\r<br>/g, '\\n')\n                .replace(/<br>\\r/g, '\\n')\n                .replace(/<br>/g, '\\n');\n\n            // remove all leading|ending new-lines\n            while (this.text[0] === '\\n') {\n                this.text = this.text.substr(1);\n            }\n\n            while (this.text.substr(-1)=== '\\n') {\n                this.text = this.text.substr(0, this.text.length - 1);\n            }            \n            \n            this.text = highlight(this.text);\n        }\n    }\n\n    onShowClick() {\n        this.setState({\n            hidden: !this.state.hidden\n        })\n    }\n\n    render() {\n\n        let buttonText;\n        let linesCount = 0;\n        if (this.text)\n            linesCount = this.text.split(\"\\n\").length;\n\n        if (this.state.hidden)\n            buttonText = `Показать: ${linesCount} строк`;\n        else\n            buttonText = 'Скрыть';\n\n        let buttonShow;\n        if (linesCount > 7)\n            buttonShow = (\n                <div className=\"expand-button-div\">\n                    <span className=\"expand-button-span\" onClick={this.onShowClick}>{buttonText}</span>\n                </div>    \n            );\n\n        let preStyle =  { \n        } \n        \n        if (this.state.hidden && linesCount > 7) {\n            preStyle.overflow = \"hidden\";\n            preStyle.height   = \"135px\";\n        } else {\n            preStyle.overflow = \"auto\";\n            preStyle.height   = \"auto\";\n        }    \n\n        return (\n            <div style={{marginTop: \"5px\"}}>\n                <pre className=\"code-pre\" style={preStyle} dangerouslySetInnerHTML={{ __html: this.text }}>\n                </pre>\n                {buttonShow}\n            </div>\n        )\n    }\n\n}\n\nexport default Code;","//@flow\nimport React, { Component } from 'react'\n\ntype LinkToUserProps = {\n    href: string,\n    children: any\n}\n\nclass LinkToUser extends Component<LinkToUserProps> {\n\n    render() {\n        const { href, children } = this.props;\n        return <a href={href} className=\"registered-user\">{children}</a>\n    }\n}\n\nexport default LinkToUser;","//@flow\nimport React, { Component } from 'react'\nimport queryString from 'query-string'\n\ntype YoutubeLinkProps = {\n    href: string,\n}\n\nclass YoutubeLink extends Component<YoutubeLinkProps> {\n\n    state: any;\n\n    constructor(props: YoutubeLinkProps) {\n        super(props);\n        this.state = {hrefName: props.href, title: ''};\n    }\n\n    getVideoId(href: string): ?string {\n        \n        if (href.search(/youtube/) !== -1) {\n            let arr = href.split('?');\n            return queryString.parse(arr[1]).v;\n        }    \n\n        if (href.search(/youtu\\.be/) !==-1) {\n            let arr =  href.match(/e\\/(.+?)(&|\\?|$)/);\n\n            if (arr && arr.length > 1) \n                return arr[1];\n        }    \n        return null;    \n    }\n\n    async getVideoParams(videoId: string): any {\n        \n        const apiKey = localStorage.getItem('youtubeApiKey') || 'AIzaSyCztN2QW4Fxw_1YuAHBTOZdYLbzigPz25g';\n        let apiUrl = `https://www.googleapis.com/youtube/v3/videos?key=${apiKey}&fields=items(snippet(title))&part=snippet&id=${videoId}`;\n        const response = await fetch(apiUrl);\n        const json = await response.json();\n\n        let title = json.items[0].snippet.title;\n        let hrefName = title;\n        let maxLength = 50;\n        if (title.length > maxLength + 5) \n            hrefName = hrefName.substring(0, maxLength) + '...'       \n\n        return {\n            hrefName,\n            title\n        }\n    }\n\n    async componentDidMount() {\n        \n        const { href } = this.props;\n        const videoId = this.getVideoId(href);\n        if (!videoId)\n            return;\n\n        try {\n            const params = await this.getVideoParams(videoId);\n            this.setState({\n                ...params\n            });\n\n        } catch(e) {\n            console.error('youtube', e.message);\n        }\n    }\n\n    render() {\n        let prefix = 'youtube';\n        return <a href={this.props.href} title={this.state.title}>{`${prefix}: ${this.state.hrefName}`}</a>\n    }\n}\n\nexport default YoutubeLink;","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport URL from 'url-parse'\n\nimport LinkToPost from './link_to_post'\nimport LinkToUser from './link_to_user'\nimport YoutubeLink from './youtube_link'\n\nimport type { DefaultProps } from 'src/components'\n\nimport { childrenToText } from 'src/utils'\n\ntype CustomLinkProps = {\n    href: string,\n    parentText: string,\n    target: string,\n    class: string,\n    rel: string,\n    showTooltipOnPostLink: string,\n    showYoutubeVideoTitle: string,\n    replaceCatalogMista: string,\n    fixBrokenLinks: string,\n}\n\ntype Props = CustomLinkProps & DefaultProps;\n\nclass CustomLink extends Component<Props> {\n\n    fixBrokenLink(href: string, parentText: string): string {\n        let escapedHref = href\n            .replace(/\\[/g, '\\\\[')\n            .replace(/\\]/g, '\\\\]')\n            .replace(/\\./g, '\\\\.')\n            .replace(/\\./g, '.')\n            .replace(/\\*/g, '\\\\*')\n            .replace(/\\+/g, '\\\\+')\n            .replace(/\\(/g, '\\\\(')\n            .replace(/\\)/g, '\\\\)')\n            .replace(/\\?/g, '\\\\?')\n            .replace(/\\//g, '\\\\/');\n\n            try {\n                let regExp = new RegExp(escapedHref + '<\\\\/a>(\\\\)|[а-яёА-ЯЁ0-9#\\\\-\\\\+\\\\_\\\\%\\\\?=]*)');\n                let arr = parentText.match(regExp);\n                if (arr && arr.length > 1) {\n                    if (arr[1] === ')' &&  href.search('\\\\(') === -1) {\n                        return href;\n                    }\n                    href = href + arr[1];\n                    return href;\n                }\n            } catch(e) {\n                console.error(e);\n            }\n        return href;    \n    }\n\n    render() {\n\n        const { href, children, parentText, \n            showTooltipOnPostLink, showYoutubeVideoTitle, replaceCatalogMista, fixBrokenLinks } = this.props;\n\n        try {\n            var url = new URL(href, true);\n        } catch(error) {\n            console.error(error.message, href);\n            return <a href={href}>{href}</a>;\n        }\n\n\n        let newHref = href;\n        if (newHref.startsWith('/') ) {\n            url.set('protocol', 'https')\n            url.set('hostname', 'www.forum.mista.ru')\n            newHref = url.href;\n        }\n        \n        if (showTooltipOnPostLink === 'true') {\n            if (url.hostname.search(/forum\\.mista.ru/) !== -1) {\n                \n                if (url.pathname === '/topic.php') {\n                    return (                \n                        <LinkToPost topicId={url.query.id} number={url.hash.replace('#', '') || \"0\"}>\n                            {childrenToText(children)}\n                        </LinkToPost>           \n                    )\n                } else if (url.pathname === '/users.php') {\n                    return (                \n                        <LinkToUser href={url.href} >\n                            {children}\n                        </LinkToUser>    \n                    )\n                }  \n            }    \n            \n            if (url.hostname === 'a-sitnikov.github.io' && \n                url.pathname === '/react.mista/') {\n\n                if (Object.keys(url.query).length === 0) {\n                    \n                    url = new URL(href.replace(/#\\//, ''), true);\n                    if (url.pathname === '/react.mista/topic.php')\n                        return (                \n                            <LinkToPost topicId={url.query.id} number={url.hash.replace('#', '') || \"0\"}>\n                                {childrenToText(children)}\n                            </LinkToPost>           \n                        )           \n                }        \n            }\n        }    \n\n        if (showYoutubeVideoTitle === 'true')\n            if (url.hostname.search(/youtube/) !== -1\n                || url.hostname.search(/youtu\\.be/) !== -1) {\n                return <YoutubeLink href={href} />\n            }\n\n        if (replaceCatalogMista === 'true') \n            if (url.hostname.search(/catalog\\.mista/) !== -1) {\n                url.set('hostname', 'infostart.ru')\n\n                return (\n                    <a target={this.props.target} \n                        className={this.props.class} \n                        rel={this.props.rel} \n                        href={url.href} >{url.href} </a>\n                )\n            }\n\n        if (fixBrokenLinks === 'true' && parentText) {\n            newHref = this.fixBrokenLink(newHref, parentText);\n        }\n\n        return (\n            <a target={this.props.target} \n               className={this.props.class} \n               rel={this.props.rel} \n               href={newHref} >{children}</a>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n    const {\n        showTooltipOnPostLink,\n        showYoutubeVideoTitle,\n        replaceCatalogMista,\n        fixBrokenLinks\n    } = state.options.items;\n\n    return {\n        showTooltipOnPostLink,\n        showYoutubeVideoTitle,\n        replaceCatalogMista,\n        fixBrokenLinks\n    }\n}\n\nexport default connect(mapStateToProps)(CustomLink);","//@flow\nimport React from 'react'\nimport { domain } from 'src/api'\n\nimport type { ResponseVoteItem } from 'src/api'\n\ntype Props = {\n    topicId: string,\n    data: ResponseVoteItem,\n    colors: Array<string>,    \n    total: number,\n    n: number\n}\n\nconst VoteItem = (props: Props) => {\n\n    const { topicId, data, total, n, colors } = props;\n\n    const img = `${domain}/css/voting${n}.png`;\n\n    let percent = 0;\n\n    if (total) {\n        percent = Math.round(100 * data.result / total);\n    }\n\n    const imgStyle = { maxWwidth: \"500px\", width: \"100%\", height: \"15px\" };\n\n    return (\n        <div className=\"voting-item\">\n            <div className=\"voting-title\">\n                <a rel=\"nofollow\" style={{ textDecoration: \"none\" }} href={`${window.hash}/topic.php?id=${topicId}&sel=${n}`}>\n                    <b><span style={{ color: colors[n-1] }}>{`${n}. ${data.select}`}</span></b>\n                </a>\n            </div>\n            <div className=\"voting-percentage\">\n                {/*<div className=\"div-va-middle\">*/}\n                    <b><span style={{ color: colors[n-1] }}>{`${percent}% (${data.result})`}</span></b>\n                {/*</div>*/}\n            </div>\n            <div className=\"voting-bar\">\n                <div style={{width:`${percent}%`}}>\n                    <a href={img}>\n                        <img src={img} style={imgStyle} alt={`п${n}`} />\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default VoteItem;","//@flow\nimport React from 'react'\nimport VoteItem from './vote_item'\nimport type { ResponseVoteItem } from 'src/api'\n\ntype Props = {\n    items: Array<ResponseVoteItem>,\n    topicId: string,\n    colors: Array<string>    \n}\n\nconst VoteChart = (props: Props) => {\n\n    const { items, topicId, colors } = props;\n\n    let total = items.reduce((sum, e) => sum + e.result, 0);    \n\n    return (\n        <div style={{marginBottom: \"10px\" }}>\n            {items.filter(val => val.select).map((data, i) => <VoteItem key={i} data={data} total={total} n={i+1} topicId={topicId} colors={colors}/>)}\n        </div>    \n    )\n}\n\nexport default VoteChart;","import React, { Component } from 'react'\n\nclass Vote extends Component {\n\n    render() {\n        const { colors, info, vote } = this.props;\n\n        const voteOption = info[vote - 1];\n        return (\n            <div style={{marginTop: \"5px\"}}>\n                <b><span style={{ color: colors[vote-1] }}>{`${vote}. ${voteOption.select}`}</span></b>\n            </div>\n        )\n    }\n}\n\nexport default Vote;","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport activeHtml from 'react-active-html';\n\nimport Code from 'src/components/extensions/code1c'\nimport LinkToPost from 'src/components/extensions/link_to_post'\nimport CustomLink from 'src/components/extensions/custom_link'\n\nimport VoteChart from './vote_chart'\nimport Vote from './vote'\n\nimport type { ResponseInfo, ResponseMessage } from 'src/api'\nimport type { DefaultProps } from 'src/components/index'\nimport type { State } from 'src/reducers'\n\ntype MsgTextProps = {\n    topicId: string,\n    n: string,\n    html: string,\n    vote: number,\n    data: ResponseMessage,\n    style: {}\n}\n\ntype StateProps = {\n    info: ResponseInfo,\n    showTooltips: string,\n    voteColors: Array<string>\n}\n\ntype Props = MsgTextProps & StateProps & DefaultProps;\n\nclass MsgText extends Component<Props> {\n\n    processLinksToPosts(text: string): string {\n\n        const { topicId } = this.props;\n\n        const regexp = /(\\()(\\d+)(\\))/gi; // (12)\n        return text.replace(regexp, (res, ...segments) => {\n            const number = segments[1];\n            return `(<link data-topicid='${topicId}' data-number='${number}' ></link>)`\n        });\n    }\n\n    processCode1C(text: string): string {\n\n        const regexp = /(\\[1[CС]\\])((.|\\n|\\r)*?)(\\[\\/1[CС]\\])/gi; // [1C] text [/1C]\n        return text.replace(regexp, (res, ...segments) => {\n            let txt = segments[1];\n\n            //remove first <br>\n            if (txt.substr(0, 4) === \"<br>\")\n                txt = txt.substr(4);\n            return `<code>${txt}</code>`\n        });\n    }\n    \n    processText(text: ?string): ?string {\n\n        if (!text)\n            return text;\n\n        const { showTooltips } = this.props;\n\n        text = this.processCode1C(text);\n\n        if (showTooltips === 'true')\n            text = this.processLinksToPosts(text);\n            \n        return text;\n    }\n\n    render() {\n        const { topicId, n, html, vote, info, style, voteColors } = this.props;\n\n        let voteElement;\n        if (vote && info.voting && topicId === info.id) {\n            let voteOption = info.voting[vote - 1];\n            if (voteOption)\n                voteElement = <Vote info={info.voting} vote={vote} colors={voteColors}/>\n        }\n\n        let voteChart;\n        if (n === \"0\" && info.is_voting === 1 && info.voting) {\n            voteChart = <VoteChart items={info.voting} topicId={topicId} colors={voteColors} />\n        }\n\n        let processedHtml = this.processText(html);\n        const componentsMap = {\n            link: props => <LinkToPost topicId={props['data-topicid']} number={props['data-number']}  key={props.key}/>,\n            code: props => <Code {...props} />,\n            a: props => <CustomLink {...props} parentText={processedHtml}/>\n        };\n        let textComponent = activeHtml(processedHtml, componentsMap);\n\n        return (\n            <div className=\"message\" style={{...style }}>\n                {voteChart}\n                <div>\n                    {textComponent}\n                </div>\n                {voteElement}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    const { info } = state.topic;\n    \n    return {\n        info,\n        voteColors: state.options.voteColors,\n        showTooltips: state.options.items['showTooltips']\n    }\n}\n\nexport default connect(mapStateToProps)(MsgText);","//@flow\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport dateFormat from 'dateformat'\n\nimport './topic_preview.css'\n\ntype TopicPreviewProps = {\n    user: ?string,\n    utime: ?number,\n    topicId: string,\n    n: number,\n    onFirst: any,   \n    onLast: any,   \n    onPrev: any,   \n    onNext: any\n}\n\nclass PreviewHeader extends Component<TopicPreviewProps> {\n\n    render() {\n        const { user, utime, topicId, n } = this.props;\n\n        if (utime)\n            var date = new Date(utime*1000);\n\n        return (\n            <div>\n                <span className=\"plus-nav\" onClick={this.props.onFirst}>[← </span>\n                <span className=\"plus-nav\" onClick={this.props.onPrev}> « </span>\n                <Link className=\"plus-nav\" title={`Перейти к сообщению ${n}`} to={`/topic.php?id=${topicId}#${n}`}>{n}</Link>\n                <span className=\"plus-nav\" onClick={this.props.onNext}> » </span>\n                <span className=\"plus-nav\" onClick={this.props.onLast}> →]</span>\n                <b style={{margin: \"auto 5px\"}}>{user}</b>\n                <span className=\"agh\">{dateFormat(date, 'dd.mm.yy - HH:MM')}</span>\n            </div>\n        )    \n    }\n\n}\n\nexport default PreviewHeader;","//@flow\nimport React, { Component } from 'react'\n\nimport * as API from 'src/api'\n\nimport MsgText from 'src/components/topic/row/msg_text'\n\nimport PreviewHeader from './preview_header'\nimport './topic_preview.css'\n\ntype TopicPreviewProps = {\n    topicId: string,\n    n: number   \n}\n\ntype Props = TopicPreviewProps;\ntype State = {\n    n: number,\n    data: ?any,\n    error: ?string    \n}\n\nclass TopicPreview extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            n: props.n,\n            data: null,\n            error: null\n        }\n    }\n\n    async componentDidMount() {\n        await this.fetchData(this.state.n);\n    }\n\n    fetchData = async (n: number) => {\n        let data, error;\n        try {\n            data = await API.getMessage(this.props.topicId, n);\n            if (!data)\n                error = `Сообщение не найдено ${n}`;\n\n        } catch(e) {\n            error = e.message\n        };\n        this.setState({\n            n,\n            data,\n            error\n        })\n    }\n\n    onClickFirst = () => {\n        this.fetchData(0);\n    }\n    \n    onClickNext = () => {\n        this.fetchData(this.state.n + 1);\n    }\n\n    onClickPrev = () => {\n        if (this.state.n > 0)\n            this.fetchData(this.state.n - 1);\n    }\n\n    onClickLast = async () => {\n        const n = await API.getTopicMessagesCount(this.props.topicId);\n        this.fetchData(n);\n    }\n\n    render() {\n        const { topicId } = this.props;\n        const { data, error, n } = this.state;\n        if (!data && !error)\n            return null;\n\n        if (data)\n            var { user, utime } = data;\n\n        return (\n            <div className=\"topic-preview\">\n                <PreviewHeader \n                    user={user}\n                    utime={+utime}\n                    topicId={topicId}\n                    n={n}\n                    onFirst={this.onClickFirst}\n                    onLast={this.onClickLast}\n                    onNext={this.onClickNext}\n                    onPrev={this.onClickPrev}\n                />\n                {data && <MsgText \n                    data={data} \n                    html={data.text} \n                    topicId={topicId} \n                    style={{maxHeight: \"500px\", overflowY: \"auto\", overflowWrap: \"break-word\"}}\n                />}\n                {error && <p>{error}</p>}\n            </div>\n        )    \n    }\n\n}\n\nexport default TopicPreview;","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport queryString from 'query-string'\n\nimport type { State } from 'src/reducers'\nimport type { DefaultProps, Location } from 'src/components'\n\nimport type { TopicsListState } from 'src/reducers/topics_list'\nimport type { SectionsState } from 'src/reducers/sections'\nimport type { LoginState } from 'src/reducers/login'\n\nimport { fetchTopicsListIfNeeded } from 'src/actions/topics_list'\n\nimport Header from './header'\nimport Row from './row'\nimport Pages from 'src/components/common/pages'\nimport NewTopic from './new_topic'\nimport Error from 'src/components/common/error'\n\nimport TopicPreview from 'src/components/preview/topic_preview'\n\nimport './topics_list.css'\n\ntype StateProps = {\n    topicsList: TopicsListState,\n    sections: SectionsState,\n    login: LoginState,\n    topicsPerPage: string,\n    autoRefreshTopicsList: string,\n    autoRefreshTopicsListInterval: string\n}\n\ntype Props = {\n    fetchTopicsListIfNeeded: any\n} & DefaultProps & StateProps;\n\nclass TopicsList extends Component<Props> {\n    \n    location: Location;\n    locationParams: { page?: string };\n    page: string;\n    timer: any;\n\n    constructor(props: Props) {\n        super(props);\n        this.locationParams = { page: '1' };\n    }\n\n    componentDidMount() {\n\n        let { location } = this.props;\n\n        this.location = location;\n        this.updateTopicsList();\n        \n    }\n    \n    componentWillUnmount() {\n        clearTimeout(this.timer);\n    }\n\n    UNSAFE_componentWillReceiveProps(props: Props) {\n        \n        const { location, topicsPerPage } = props;\n\n        if (this.location.search !== location.search \n            || this.props.topicsPerPage !== topicsPerPage) {\n\n            this.location = location;\n            this.updateTopicsList();\n            window.scrollTo(0, 0);\n        }\n\n        document.title = 'React.Mista';\n    }\n\n    updateTopicsList = () => {\n        \n        const { fetchTopicsListIfNeeded } = this.props;       \n        let { autoRefreshTopicsList, autoRefreshTopicsListInterval } = this.props;\n\n        this.locationParams = queryString.parse(this.location.search);\n        fetchTopicsListIfNeeded(this.locationParams);\n\n        if (autoRefreshTopicsList === 'true') {\n            \n            autoRefreshTopicsListInterval = +autoRefreshTopicsListInterval;\n            if (autoRefreshTopicsListInterval < 60) autoRefreshTopicsListInterval = 60;\n\n            clearTimeout(this.timer);\n            this.timer = setTimeout(this.updateTopicsList, autoRefreshTopicsListInterval * 1000);\n        }        \n    }\n\n    onPostNewTopicSuccess = () => {\n        this.updateTopicsList();\n    }\n\n    render() {\n\n        const { topicsList, sections } = this.props;\n\n        let rows = [];\n        for (let item of topicsList.items) {\n            \n            rows.push(<Row key={item.id} data={item}/>);\n            if (item.showPreview)\n                rows.push(\n                    <div key={`preview${String(item.id)}`} className=\"preview-container\">\n                        <TopicPreview topicId={String(item.id)} n={0}/>\n                    </div>\n                )\n        }\n\n        return (\n            <div>\n                <Header history={this.props.history} />\n                {topicsList.error && (<Error text={topicsList.error} />)}\n                <div className=\"table\">\n                    <div className=\"th\" style={{position:\"sticky\", top:\"39px\"}}>\n                        <div>Раздел</div>\n                        <div>Re</div>\n                        <div></div>\n                        <div>Тема</div>\n                        <div>Автор</div>\n                        <div><span style={{cursor: \"pointer\"}} title=\"Обновить список\" onClick={this.updateTopicsList}>{topicsList.isFetching ? \"Обновляется\" : \"Обновлено\"}</span></div>\n                    </div>\n                    {rows}\n                    <div className=\"tf\">\n                        <Pages baseUrl='index.php' locationParams={this.locationParams} maxPage={10}/>\n                    </div>    \n                </div>\n                <div id=\"F\" className=\"newtopic\" style={{ marginBottom: \"10px\", marginTop: \"5px\", position: 'relative' }}>\n                    <NewTopic sections={sections.items} onSubmitSuccess={this.onPostNewTopicSuccess} locationParams={this.locationParams}/>\n                </div>    \n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    return {\n        topicsList: state.topicsList,\n        sections: state.sections,\n        login: state.login,\n        topicsPerPage: state.options.items.topicsPerPage,\n        autoRefreshTopicsList: state.options.items.autoRefreshTopicsList,\n        autoRefreshTopicsListInterval: state.options.items.autoRefreshTopicsListInterval,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchTopicsListIfNeeded: (...params) => dispatch(fetchTopicsListIfNeeded(...params)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicsList);","//@flow\nimport * as API from 'src/api'\nimport type { Dispatch } from 'redux'\n\nimport type { ResponseInfo, ResponseMessage, ResponseMessages } from 'src/api'\n\nexport type REQUEST_TOPIC = {\n    type: 'REQUEST_TOPIC'\n}\n\nexport type RECEIVE_TOPIC = {\n    type: 'RECEIVE_TOPIC',\n    info: ResponseInfo, \n    item0: ResponseMessage, \n    items: ResponseMessages,\n    receivedAt: Date\n}\n\nexport type RECEIVE_TOPIC_FAILED = {\n    type: 'RECEIVE_TOPIC_FAILED',\n    error: any,\n    receivedAt: Date\n}\n\nexport type REQUEST_NEW_MESSAGES = {\n    type: 'REQUEST_NEW_MESSAGES'\n}\n\nexport type RECEIVE_NEW_MESSAGES = {\n    type: 'RECEIVE_NEW_MESSAGES',\n    items: ResponseMessages,\n    receivedAt: Date\n}\n\nexport type CLOSE_TOPIC = {\n    type: 'CLOSE_TOPIC'\n}\n\n\nexport type TopicAction = REQUEST_TOPIC | RECEIVE_TOPIC | RECEIVE_TOPIC_FAILED | CLOSE_TOPIC | REQUEST_NEW_MESSAGES | RECEIVE_NEW_MESSAGES;\n\nexport const requestTopic = () => ({\n    type: 'REQUEST_TOPIC'\n})\n\nexport const receiveTopic = (info: ResponseInfo, item0: ?ResponseMessage, items: ResponseMessages) => {\n    \n    return {\n        type: 'RECEIVE_TOPIC',\n        info,\n        item0,\n        items,\n        receivedAt: Date.now()\n    }\n}\n\nexport const closeTopic = () => {\n\n    return {\n        type: 'CLOSE_TOPIC',\n    }\n}\n\nexport const fetchTopic = (params: any, item0: ?ResponseMessage) => async (dispatch: Dispatch<*>) => {\n\n    dispatch(requestTopic())\n\n    let info;\n    try {\n        info = await API.getTopicInfo({id: params.id});\n    } catch(e) {\n        console.error(e);\n        info = {\n            id: params.id,\n            text: '',\n            answers_count: \"0\"\n        };\n    }   \n\n    try {    \n        let page = params.page || 1;\n\n        let _item0 = item0;\n        let _items;\n        if (page === 'last20') {\n\n            if (+info.answers_count > 21) {\n\n                if (!_item0) {\n                    let items = await API.getTopicMessages({\n                        id: params.id,\n                        from: 0,\n                        to: 1\n                    }); \n                    _item0 = items[0];\n                }    \n\n                let first = +info.answers_count - 20;\n                _items = await API.getTopicMessages({\n                    id: params.id,\n                    from: first,\n                    to: 1010\n                }); \n\n            } else {\n                let items = await API.getTopicMessages({\n                    id: params.id,\n                    from: 0,\n                    to: 1010\n                });               \n                _item0 = items[0];\n                _items = items.slice(1);\n            }\n\n        } else {\n\n            page = +page;\n            let first = 0;\n            let last = page * 100 - 1;\n\n            if (page > 1) {\n\n                first = (page - 1) * 100;\n                if (!_item0) {\n                    let items = await API.getTopicMessages({\n                        id: params.id,\n                        from: 0,\n                        to: 1\n                    });\n                    _item0 = items[0];\n                }\n\n                _items = await API.getTopicMessages({\n                    id: params.id,\n                    from: first,\n                    to: last\n                });                \n\n            } else {\n                if (_item0)\n                    first = 1;\n                else\n                    first = 0;\n\n                let items = await API.getTopicMessages({\n                    id: params.id,\n                    from: first,\n                    to: last\n                });  \n\n                if (_item0) {\n                    _items = items;\n                } else {\n                    _item0 = items[0];\n                    _items = items.slice(1);\n                }\n            }\n        \n        }\n    \n        if (info.answers_count === \"0\" && _items.length > 0)\n            info.answers_count = _items[_items.length - 1].n;\n\n        if (page === 'last20' && _items.length > 20) {\n            _items = _items.slice(-20);\n        }\n\n       dispatch(receiveTopic(info, _item0, _items));\n\n    } catch (error) {\n\n        console.error('Failed to fetch topic:', error);\n\n        dispatch({\n            type: 'RECEIVE_TOPIC_FAILED',\n            error,\n            receivedAt: Date.now()\n        });\n\n    }\n}\n\nconst shouldFetch = (state) => {\n    const topic = state.topic;\n    if (!topic) {\n        return true\n    }\n    if (topic.isFetching) {\n        return false\n    }\n    return true\n}\n\nexport const fetchTopicIfNeeded = (params: any, item0: ?ResponseMessage) => (dispatch: Dispatch<*>, getState: any) => {\n    if (shouldFetch(getState())) {\n        return dispatch(fetchTopic(params, item0));\n    }\n}\n\nexport type FetchNewMessageseParams = {\n    id: number | string,\n    last: number    \n}\n\nexport const fetchNewMessages = (params: FetchNewMessageseParams) => async (dispatch: Dispatch<*>) => {\n\n    dispatch({\n        type: 'REQUEST_NEW_MESSAGES'\n    });\n\n    try {\n        const json = await API.getTopicMessages({\n            id: params.id,\n            from: params.last + 1,\n            to: 1002\n        });\n\n        dispatch({\n            type: 'RECEIVE_NEW_MESSAGES',\n            items: json,\n            receivedAt: Date.now()\n        });\n\n    } catch (error) {\n        console.error('Failed to fetch new messages:', error);\n\n        dispatch({\n            type: 'RECEIVE_NEW_MESSAGES_FAILED',\n            error,\n            receivedAt: Date.now()\n        });\n    }\n\n}\n\nexport const fetchNewMessagesIfNeeded = (params: FetchNewMessageseParams) => (dispatch: Dispatch<*>, getState: any) => {\n    if (shouldFetch(getState())) {\n        return dispatch(fetchNewMessages(params));\n    }\n}","// @flow\nimport * as React from 'react'\nimport { connect } from 'react-redux'\n\nimport Login from '../login'\n\ntype Props = {\n    info: { forum: string }\n}\n\nclass Header extends React.Component<Props> {\n\n    render() {\n\n        const { info } = this.props;\n\n        const forums = {\n            '1c': '1С:Предприятие',\n            'life': 'О жизни',\n            'it': 'Информационные технологии',\n            'job': 'Работа'\n        };\n\n        return (\n\n            <div className=\"flex-row\">\n                <div className=\"user-td\">\n                    <Login />\n                </div>\n                <div className=\"section-td\">\n                    <span id=\"forum_string\" className=\"bold120\">\n                        <a rel=\"nofollow\" href={`${window.hash}/index.php?forum=${info.forum}`} style={{ textDecoration: \"none\" }}>{forums[info.forum]}</a>\n                    </span>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n\n    const {\n        info\n    } = state.topic || {\n        info: {\n            forum: ''\n        }\n    }\n\n    return {\n        info\n    }\n}\n\nexport default connect(mapStateToProps)(Header);","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { defaultTopicState } from 'src/reducers/topic'\n\nimport type { State } from 'src/reducers'\nimport type { ResponseInfo } from 'src/api'\nimport { domain, urlTopicInfo, urlTopicMessages} from 'src/api'\n\ntype StateProps = {\n    info: ResponseInfo\n}\n\nclass TopicInfo extends Component<StateProps> {\n\n    render() {\n\n        const { info } = this.props;\n\n        let yandexUrl = \"https://www.yandex.ru/yandsearch?rpt=rad&text=\" + encodeURIComponent(info.text);\n\n        return (\n            <div className=\"topic-row\">\n                <div className=\"cell-userinfo\">\n                    <div className=\"topic-tools\">\n                        <a title=\"API.info\" href={`${domain}/${urlTopicInfo}?id=${info.id}`} className=\"agh\" style={{display: \"block\", lineHeight: \"1em\"}}>i</a>\n                        <a title=\"API.messages\" href={`${domain}/${urlTopicMessages}?id=${info.id}&from=0&to=20`} className=\"agh\" style={{display: \"block\", lineHeight: \"1em\"}}>m</a>\n                        {/*<a href=\"add_voting.php?topic_id=815217\" title=\"Добавить голосование\">vote</a> &nbsp;&nbsp;*/}\n                    </div>\n                </div>\n                <div className=\"cell-message\">\n                    <div className=\"flex-row\">\n                        <div style={{ flex: 1, textAlign: \"center\" }}>\n                            <a href={`https://www.forum.mista.ru/topic.php?id=${info.id}`}>\n                                <h1 className=\"topic-title \" dangerouslySetInnerHTML={{ __html: info.text }}></h1>\n                            </a>\n                            <div className=\"moder-action\"></div>\n                        </div>\n                        <div style={{ flex: \"0 0 20px\", position: \"relative\" }}>\n                            <div className=\"div-va-middle\">\n                                <a rel=\"noopener noreferrer\" href={yandexUrl} title=\"Искать в Яндексе\" target=\"_blank\" className=\"yandex\">Я</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    const {\n        info\n    } = state.topic || defaultTopicState;\n\n    return {\n        info\n    }\n}\n\nexport default connect(mapStateToProps)(TopicInfo);","//@flow\nimport React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport dateFormat from 'dateformat'\nimport classNames from 'classnames'\nimport { domain } from 'src/api'\n\nimport { addMessageText } from 'src/actions/new_message'\n\nimport type { ResponseMessage } from 'src/api'\nimport type { DefaultProps } from 'src/index'\n\ntype UserInfoProps = {\n    data: ResponseMessage,\n    isAuthor: boolean,\n    isYou?: boolean\n}\n\ntype Props = UserInfoProps & DefaultProps;\n\nclass UserInfo extends Component<Props> {\n\n    onClick;\n\n    constructor() {\n        super();\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick() {\n        const { dispatch, data } = this.props;\n        dispatch(addMessageText(`(${data.n})`));\n        \n        let elem = document.getElementById('message_text'); \n        if (elem)\n            window.scrollTo(0, elem.offsetTop);        \n    }\n\n    render() {\n        const { data, isAuthor, isYou } = this.props;\n        const href = `${domain}/users.php?id=${data.userId}`;\n        let dataStr;\n        if (!data) {\n            dataStr = '';\n        } else if (data.n === \"0\") {\n            dataStr = dateFormat(new Date(+data.utime * 1000), 'dd.mm.yy - HH:MM');\n        } else {\n            dataStr = (\n            <Fragment>\n                <span className=\"message-number\">{data.n}</span>{' - ' + dateFormat(new Date(+data.utime * 1000), 'dd.mm.yy - HH:MM')}\n            </Fragment>\n            )\n        }    \n\n        const userClassNames = classNames(\"registered-user\", {\n            \"is-author\": isAuthor,\n            \"is-you\": isYou\n        });\n\n        return (\n            <div className=\"user-info\">\n                <a className={userClassNames} href={href}>{data.user}</a>\n                <div className=\"message-time\">\n                    <span className=\"ah\" >{dataStr}</span>\n                    <button className=\"button ah\" onClick={this.onClick}>{dataStr}</button>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default connect()(UserInfo);","//@flow\nimport * as API from '../api'\nimport type { RequestNewMessage } from 'src/api'\n\nexport type POST_NEW_MESSAGE_START = {\n    type: 'POST_NEW_MESSAGE_START'\n}\n\nexport type POST_NEW_MESSAGE_COMPLETE = {\n    type: 'POST_NEW_MESSAGE_COMPLETE'\n}\n\nexport type NEW_MESSAGE_TEXT = {\n    type: 'NEW_MESSAGE_TEXT',\n    text: string\n}\n\nexport type ADD_MESSAGE_TEXT = {\n    type: 'ADD_MESSAGE_TEXT',\n    text: string\n}\n\n\nexport type NewMessageAction = POST_NEW_MESSAGE_START | POST_NEW_MESSAGE_COMPLETE | NEW_MESSAGE_TEXT | ADD_MESSAGE_TEXT;\n\nexport type PostNewmessageParams = {\n    text: string,\n    topicId: string, \n    voting_select?: number,\n    onSuccess?: () => void    \n}\n\nexport const postNewMessage = (params: PostNewmessageParams) => async (dispatch: any) => {\n\n    dispatch({\n        type: 'POST_NEW_MESSAGE_START'\n    });\n\n    let fetchParams: RequestNewMessage = {\n        message_text: encodeURIComponent(params.text),\n        action: \"new\",\n        topic_id: params.topicId,\n        rnd: Math.round(Math.random() * 10000000000)    \n    };\n\n    if (params.voting_select)\n        fetchParams.voting_select = params.voting_select;\n\n    try {\n            await API.postNewMessage(fetchParams);\n            await dispatch({\n                type: 'POST_NEW_MESSAGE_COMPLETE'\n            });\n            if (params.onSuccess)\n                params.onSuccess();\n\n    } catch (err) {\n        console.error(\"Failed to post new message: \" + err);\n    }\n}\n\nexport const addMessageText = (text: string) => (dispatch: any) => {\n    dispatch({\n            type: 'ADD_MESSAGE_TEXT',\n            text\n        })\n}","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport UserInfo from './user_info'\nimport MsgText from './msg_text'\n\nimport type { ResponseMessage } from 'src/api'\nimport type { State } from 'src/reducers'\nimport type { LoginState } from 'src/reducers/login'\nimport type { DefaultProps } from 'src/components'\n\ntype RowProps = {\n    data: ResponseMessage\n}\n\ntype StateProps = {\n    topicId: string,\n    author: string,\n    login: LoginState\n}\n\ntype Props = RowProps & StateProps & DefaultProps;\n\nclass Row extends Component<Props> {\n\n    render() {\n        const { data, author, topicId, login } = this.props;\n\n        if (!data)\n            return null;\n\n        return (\n            <div className=\"topic-row\" id={data.n}>\n                <div className=\"cell-userinfo\">\n                    <UserInfo data={data} isAuthor={data.user === author} isYou={data.user === login.username}/>\n                </div>\n                <div className=\"cell-message\">\n                    <MsgText data={data} html={data.text} topicId={topicId} n={data.n} vote={+data.vote}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    const {\n        info,\n        item0,\n    } = state.topic || {\n        info: {},\n        item0: {},\n    }\n\n    return {\n        topicId: info.id,\n        author: item0 ? item0.user : '',\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps)(Row);","//@flow\nimport * as API from 'src/api'\nimport type { RequestBookmark } from 'src/api'\n\nexport type ADD_BOOKMARK_START = {\n    type: 'ADD_BOOKMARK_START'\n}\n\nexport type ADD_BOOKMARK_COMPLETE = {\n    type: 'ADD_BOOKMARK_COMPLETE'\n}\n\nexport type ADD_BOOKMARK_FAIL = {\n    type: 'ADD_BOOKMARK_FAIL'\n}\n\nexport type AddBookmarkAction = ADD_BOOKMARK_START | ADD_BOOKMARK_COMPLETE | ADD_BOOKMARK_FAIL;\n\n\nexport const addBookmark = (params: RequestBookmark) => async (dispatch: any) => {\n\n    dispatch({\n        type: \"ADD_BOOKMARK_START\"\n    });\n\n    try {\n        await API.postBookmark(params);\n        \n        dispatch({\n            type: \"ADD_BOOKMARK_COMPLETE\"\n        });\n\n    } catch (err) {\n        console.error('Error adding bookmark:', err);\n        dispatch({\n            type: \"ADD_BOOKMARK_FAIL\"\n        });\n    }\n\n}   \n","//@flow\nimport * as React from 'react'\nimport { connect } from 'react-redux'\nimport type { Dispatch } from 'redux'\nimport { Button } from 'react-bootstrap'\n\nimport { fetchNewMessagesIfNeeded } from 'src/actions/topic'\nimport { addBookmark } from 'src/actions/bookmark'\nimport { getMaxPage } from 'src/utils'\n\ntype FooterProps = {\n    info: any,\n    dispatch: Dispatch<*>,\n    bookmark: any,\n    isFetching: boolean,\n    params: any\n}\n\nclass Footer extends React.Component<FooterProps> {\n\n     onBookmarkClick = () => {\n        const { info, dispatch } = this.props;\n        dispatch(addBookmark(info));\n    }\n\n    onRefreshClick = () => {\n        \n        const { info, dispatch } = this.props;\n        \n        dispatch(fetchNewMessagesIfNeeded({\n            id: info.id,\n            last: parseInt(info.answers_count, 10)\n        }));\n\n    }\n\n    render() {\n\n        const { info, bookmark, isFetching, params } = this.props;\n        const maxPage = getMaxPage(info.answers_count);\n\n        let updateButton;\n        let page = params.page || 1;\n        if (page === 'last20' || page === maxPage )    \n            updateButton = \n            <Button \n                onClick={this.onRefreshClick} \n                disabled={bookmark.isFetching} \n                size=\"sm\"\n                variant=\"light\">\n                {isFetching ? 'Обновляется': 'Обновить ветку'}\n            </Button>\n\n        return (\n            <div className=\"flex-row\" id=\"F\">\n                <div className=\"ta-left va-top\" style={{ width: \"50%\" }}>\n                    <Button \n                        onClick={this.onBookmarkClick} \n                        disabled={bookmark.isFetching} \n                        size=\"sm\"\n                        variant=\"light\">\n                        {bookmark.isFetching ? 'Подождите...' : 'Закладка'}\n                    </Button>\n                </div>\n                <div className=\"ta-right va-middle\" style={{ marginLeft: \"auto\" }}>\n                    {updateButton}\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n\n    const {\n        isFetching,\n        lastUpdated,\n        info,\n    } = state.topic || {\n        isFetching: true,\n        info: {},\n    }\n\n    return {\n        info,\n        isFetching,\n        lastUpdated,\n        bookmark: state.bookmark || {}\n    }\n}\n\nexport default connect(mapStateToProps)(Footer);","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { FormGroup, Form } from 'react-bootstrap'\n\nimport TextEditor from 'src/components/common/text_editor'\nimport { postNewMessage } from 'src/actions/new_message'\n\nimport type { State } from 'src/reducers'\nimport type { NewMessageState } from 'src/reducers/new_message'\n\nimport type { ResponseInfo } from 'src/api'\nimport type { DefaultProps } from 'src/index'\n\ntype NewMessageProps = {\n    onSubmitSuccess?: () => void\n}\n\ntype StateProps = {\n    info: ResponseInfo,\n    newMessage: NewMessageState\n}\n\ntype Props = NewMessageProps & StateProps & DefaultProps;\n\nclass NewMessage extends Component<Props> {\n\n    constructor(props) {\n        super(props);\n        this.state = { voting: undefined };\n    }\n\n    onSubmit = (e) => {\n\n        e.preventDefault();\n        console.log('submitted');\n\n        const { dispatch, info, newMessage } = this.props;\n        \n        let params = {\n            text: newMessage.text,\n            topicId: info.id,\n            onSuccess: this.onSubmitSuccess,\n            voting_select: undefined\n        };\n\n        if (this.state.voting) {\n            params.voting_select = this.state.voting;\n        }\n\n        dispatch(postNewMessage(params));\n    }\n\n    onSubmitSuccess = () => {\n\n        const { dispatch } = this.props;\n\n        dispatch({\n            type: 'NEW_MESSAGE_TEXT',\n            text: ''\n        });\n        \n        this.setState({\n            ...this.state,\n            voting: undefined\n        });\n        \n        if (this.props.onSubmitSuccess) {\n            this.props.onSubmitSuccess();\n        }\n    }\n\n    clearVoting = (e) => {\n\n        e.preventDefault();\n\n        this.setState({\n            ...this.state,\n            voting: undefined\n        })\n\n    }\n\n    setVotingOption = (i) => {\n        this.setState({\n            ...this.state,\n            voting: i\n        })\n    }\n\n    render() {\n\n        const { info, newMessage } = this.props;\n\n        let votingElem;\n        if (info.is_voting && info.voting) {\n\n            let votingOptions = [];\n            for (let i = 1; i <= info.voting.length; i++) {\n\n                const item = info.voting[i - 1];\n                if (!item.select)\n                    continue;\n\n                votingOptions.push(\n                    <Form.Check \n                        type=\"radio\"\n                        key={i} \n                        name=\"voting\" \n                        checked={this.state.voting === i} \n                        onChange={() => this.setVotingOption(i)}\n                        label={`${i}. ${item.select}`}\n                    />\n                );\n            }\n\n\n            votingElem = (\n                <FormGroup>\n                    <legend>\n                        <small>Ваш выбор:\n                        <span href=\"\" id=\"voting_clear\" style={{ marginLeft: \"5px\", cursor: \"pointer\" }} onClick={this.clearVoting}>очистить</span>\n                        </small>\n                    </legend>                \n                    {votingOptions}\n                    Обоснуйте свой выбор!\n                </FormGroup>\n            );\n\n        }\n\n        return (\n            <form style={{marginTop: \"5px\"}} onSubmit={this.onSubmit}> \n                <div className=\"bold\">Добавить сообщение в тему:</div>\n                <div className=\"new-message-container\">\n                    <div className=\"new-message-text\">\n                        <TextEditor \n                            isFetching={newMessage.isFetching} \n                            text={newMessage.text} \n                            placeholder=\"Сообщение\"\n                            formName=\"NEW_MESSAGE\"\n                        />\n                    </div>\n                    <div className=\"new-message-voting\">\n                        {votingElem}\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    return {\n        info: state.topic.info,\n        newMessage: state.newMessage\n    };\n\n}\n\nexport default connect(mapStateToProps)(NewMessage);","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport queryString from 'query-string'\nimport { fetchTopicIfNeeded, fetchNewMessagesIfNeeded, closeTopic } from 'src/actions/topic'\n\nimport type { DefaultProps, Location } from 'src/components'\nimport type { ResponseInfo, ResponseMessage, ResponseMessages } from 'src/api'\nimport type { State } from 'src/reducers'\nimport type { LoginState } from 'src/reducers/login'\nimport { OptionsItems } from 'src/reducers/options'\n\nimport Pages from 'src/components/common/pages'\nimport Header from './header'\nimport TopicInfo from './topic_info'\nimport Row from './row'\nimport Footer from './footer'\nimport NewMessage from './new_message';\nimport { getMaxPage } from 'src/utils';\n\nimport  './topic.css'\n\ntype TopicLocationParams = {\n    id: string,\n    page?: string,\n    hash?: string\n}\n\ntype StateProps = {\n    login: LoginState,\n    info: ResponseInfo,\n    item0?: ResponseMessage,\n    items: ResponseMessages,\n    error?: any,\n    options: OptionsItems\n}\n\ntype Props = {\n    fetchTopicIfNeeded: any,\n    fetchNewMessagesIfNeeded: any,\n    closeTopic: any\n} & DefaultProps & StateProps\n\nclass Topic extends Component<Props> {\n\n    locationParams: TopicLocationParams;\n    location: Location;\n    timer;\n    scrolledToHash: boolean;\n    nodeF: any;\n\n    constructor() {\n        super();\n        this.locationParams = {id: ''};\n        this.scrolledToHash = false;\n    }\n\n    componentDidMount() {\n        \n        this.location = this.props.location;\n        this.updateTopic();\n\n        if (this.props.options.autoRefreshTopic === 'true') {\n            \n            let autoRefreshTopicInterval = +this.props.options.autoRefreshTopicInterval;\n            if (autoRefreshTopicInterval < 60) autoRefreshTopicInterval = 60;\n\n            this.timer = setInterval(this.autoUpdate, autoRefreshTopicInterval * 1000);\n        }\n        \n    }\n\n    componentDidUpdate() {\n        const { location: {hash}, items } = this.props;\n        if (!this.scrolledToHash && \n            hash &&\n            items.length > 0){\n\n            this.scrolledToHash = true;\n            let nodeHash = document.getElementById(hash.slice(1));\n            if (nodeHash)\n                setTimeout(() => window.scrollTo(0, nodeHash.offsetTop), 1);\n        }\n    }\n\n    componentWillUnmount() {\n\n        const { closeTopic } = this.props;\n\n        clearInterval(this.timer);\n        closeTopic();\n    }\n\n    UNSAFE_componentWillReceiveProps(props: Props) {\n        \n        if (props.info.text && document.title !== props.info.text) {\n            let title = props.info.text;\n            title = title.replace(/&quot;/g, '\"');\n            \n            document.title = title;\n        }\n\n        if (this.location.search !== props.location.search) {\n            this.location = props.location;\n            this.updateTopic();\n            window.scrollTo(0, 0);\n        }\n    }\n    \n    autoUpdate = () => {\n        const { info, fetchNewMessagesIfNeeded } = this.props;\n        const isLastPage = (this.locationParams.page === 'last20' || this.locationParams.page === getMaxPage(+info.answers_count));\n\n        if (isLastPage) \n            fetchNewMessagesIfNeeded({\n                id: info.id,\n                last: parseInt(info.answers_count, 10)\n            })\n    }\n\n    updateTopic = () => {\n       \n        let { fetchTopicIfNeeded, item0 } = this.props;\n        let locationParams = queryString.parse(this.location.search);\n\n        if (!locationParams.page)\n            locationParams.page = 1;\n\n        else if (locationParams.page !== 'last20')  {\n            locationParams.page = +locationParams.page;\n            if (isNaN(locationParams.page))\n                locationParams.page = 1;\n        }  \n\n        if (locationParams.id !== this.locationParams.id)\n            item0 = null;\n\n        this.locationParams = locationParams;\n        fetchTopicIfNeeded(this.locationParams, item0);\n    }\n\n    onPostNewMessageSuccess = () => {\n\n        const { fetchNewMessagesIfNeeded, info } = this.props;\n\n        const isLastPage = (this.locationParams.page === 'last20' || this.locationParams.page === getMaxPage(+info.answers_count));\n\n        if (isLastPage)\n            fetchNewMessagesIfNeeded({\n                id: info.id,\n                last: parseInt(info.answers_count, 10)\n            });\n\n    }\n\n    render() {\n        const { login, items, item0, info, error } = this.props;\n\n        let errorElem;\n        if (error)\n            errorElem = (\n                <div >\n                    <p className=\"error\">ОШИБКА</p>\n                    <p className=\"error\">{error.message}</p>\n                </div>\n            )\n\n        const maxPage = getMaxPage(+info.answers_count);\n\n        return (\n            <div style={{marginBottom: \"5px\"}}>\n                {errorElem}\n                <Header currentPage={this.locationParams.page} />\n                <div className=\"topic-table\">\n                    <TopicInfo />\n                    <Row key='0' data={item0}/>\n                    {items.map((item, i) => (\n                        <Row key={item.n} data={item}/>\n                    ))}                \n                    { (maxPage > 1 || this.locationParams.page === \"last20\") && \n                        <div className=\"tf\">\n                            <Pages baseUrl='topic.php' locationParams={this.locationParams} maxPage={maxPage} last20/>\n                        </div>                    \n                    }\n                </div>\n                <Footer params={this.locationParams}/>\n                {login.logged &&\n                <NewMessage onSubmitSuccess={this.onPostNewMessageSuccess}/>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    const {\n        isFetching,\n        lastUpdated,\n        info,\n        item0,\n        items,\n        error\n    } = state.topic;\n\n    return {\n        login: state.login,\n        info,\n        item0,\n        items,\n        isFetching,\n        lastUpdated,\n        error,\n        options: state.options.items\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchTopicIfNeeded: (...params) => dispatch(fetchTopicIfNeeded(...params)),\n    fetchNewMessagesIfNeeded: (...params) => dispatch(fetchNewMessagesIfNeeded(...params)),\n    closeTopic: (...params) => dispatch(closeTopic(...params))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Topic);","//@flow\nimport React, { Component } from 'react'\n\ntype RadioOptionProps = {\n    name: string,\n    label: string,\n    value: string,\n    values: Array<{name: string, descr: string}>,\n    onChange: any,\n    oneLine: boolean\n}\n\nclass RadioOption extends Component<RadioOptionProps> {\n    \n    onChange: (e: any) => void;\n\n    constructor(props: RadioOptionProps) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(e: any) {\n        const { name } = this.props;\n        this.props.onChange(e, name, e.target.value);\n    }\n\n    render() {\n\n        const { name, label, values, oneLine } = this.props;\n\n        let valuesElem = [];\n        for (let i=0; i<values.length; i++) {\n            let item = values[i];\n            valuesElem.push(\n                <label key={i} htmlFor={item.name} style={{marginRight: \"5px\"}}>\n                    <input type=\"radio\" name={name} value={item.name} checked={item.name === this.props.value} onChange={this.onChange}/>\n                    {item.descr}\n                </label>\n                );    \n        }\n\n        return (\n            <span>\n                <span style={{marginRight: \"5px\"}}>{label}</span>\n                {oneLine ? null : <br/>}   \n                {valuesElem}\n            </span>\n        );\n    }\n}\n\nexport default RadioOption;","//@flow\nimport React, { Component } from 'react'\n\ntype StringOptionProps = {\n    name: string,\n    label: string,\n    value: string,\n    onChange: any,\n    postfix: ?string\n}\n\nclass StringOption extends Component<StringOptionProps> {\n    \n    onChange: (e: any) => void;\n\n    constructor(props: StringOptionProps) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(e: any) {\n        const { name } = this.props;\n        this.props.onChange(e, name, e.target.value);\n    }\n\n    render() {\n\n        const { name, value, label, postfix } = this.props;\n\n        return (\n            <label htmlFor={name} style={{marginRight: \"5px\"}}>\n                <span style={{marginRight: \"5px\"}}>{label}</span>\n                <input type=\"string\" name={name} value={value} onChange={this.onChange}/>\n                {postfix !== undefined ? \n                    <span style={{marginLeft: \"5px\"}}>{postfix}</span>\n                : null}\n            </label>\n        );\n    }\n}\n\nexport default StringOption;","//@flow\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Form, FormControl, Button } from 'react-bootstrap'\n\nimport RadioOption from './radio_option'\nimport StringOption from './string_option'\n\nimport { saveOptions } from 'src/actions/options'\n\nimport type { State } from 'src/reducers'\nimport type { OptionsState } from 'src/reducers/options'\nimport { defaultOptionsState } from 'src/reducers/options'\n\nimport './options.css'\n\nclass Options extends Component<OptionsState> {\n\n    optionsParams: any;\n    state: any;\n    setState;\n    closeForm;\n    applyOptions;\n    resetOptions;\n    onChange;\n    onTabClick;\n    form: any;\n\n    constructor(props) {\n        super(props);\n        this.closeForm    = this.closeForm.bind(this);\n        this.applyOptions = this.applyOptions.bind(this);\n        this.resetOptions = this.resetOptiopns.bind(this);\n        this.onChange     = this.onChange.bind(this);\n        this.onTabClick   = this.onTabClick.bind(this);\n\n        this.state = {\n            items: props.options.items\n        };\n        \n        this.optionsParams = {\n            'theme': {\n                type: 'radio', \n                label: 'Цветовая палитра:', \n                oneLine: true,\n                values: [\n                    {name: 'theme-yellow', descr: 'Золотая'}, \n                    {name: 'theme-lightgray', descr: 'Серая'}\n                    ]\n            },\n            'topicsPerPage': {\n                type: 'number',\n                label: 'Тем на странице (max 99):',\n                min: 1,\n                max: 99\n            },\n            'autoRefreshTopicsList': {\n                type: 'checkbox',\n                label: 'Автообновление списка тем'\n            },\n            'autoRefreshTopicsListInterval': {\n                type: 'number',\n                label: '',\n                min: 60,\n                max: 1000000,\n                postfix: 'сек'\n            },                                   \n            'autoRefreshTopic': {\n                type: 'checkbox',\n                label: 'Автообновление темы'\n            },\n            'autoRefreshTopicInterval': {\n                type: 'number',\n                label: '',\n                min: 60,\n                max: 1000000,\n                postfix: 'сек'\n            },               \n            //Tooltips   \n            'showTooltips': {\n                type: 'checkbox',\n                label: 'Показывать тултипы, задержка'\n            },\n            'tooltipDelay': {\n                type: 'number',\n                max: 1000000,\n                label: '',\n                postfix: 'мс'\n            },                                    \n            'showTooltipOnTopicsList': {\n                type: 'checkbox',\n                label: 'Показывать тултипы на главной странице, при наведении на кол-во ответов'\n            },    \n            'showTooltipOnPostLink': {\n                type: 'checkbox',\n                label: 'Показывать тултип ссыки на другую ветку'\n            },\n            //links   \n            'showYoutubeVideoTitle': {\n                type: 'checkbox',\n                label: 'Показывать наименования роликов youtube'\n            },    \n            'replaceCatalogMista': {\n                type: 'checkbox',\n                label: 'Обратно заменять catalog.mista.ru на infostart.ru'\n            },   \n            'fixBrokenLinks': {\n                type: 'checkbox',\n                label: 'Чинить поломанные ссылки (с русскими символами)'\n            },   \n        }\n        \n        this.form = [\n            {\n                tabName: 'Общие', \n                rows: [ \n                    ['theme'],\n                    ['topicsPerPage'],\n                    ['autoRefreshTopicsList', 'autoRefreshTopicsListInterval'],\n                    ['autoRefreshTopic', 'autoRefreshTopicInterval'],\n                ]  \n            },\n            {\n                tabName: 'Тултипы',\n                rows: [\n                    ['showTooltips', 'tooltipDelay'],\n                    ['showTooltipOnTopicsList'],\n                    ['showTooltipOnPostLink']\n                ]    \n            },\n            {\n                tabName: 'Ссылки',\n                rows: [\n                    ['showYoutubeVideoTitle'],\n                    ['replaceCatalogMista'],\n                    ['fixBrokenLinks'],\n                ]    \n            }            \n        ]\n\n    }\n\n    closeForm(){\n        const { history } = this.props;\n        history.push('/' + window.hash);\n    }\n    \n    resetOptiopns(){\n        this.setState({\n            items: Object.assign({}, defaultOptionsState.items)\n        })\n    }\n\n    applyOptions(){\n\n        const { dispatch } = this.props;\n        dispatch(saveOptions(this.state.items));\n        this.closeForm();       \n    }\n\n    onTabClick(e){\n        this.setState({\n            activeTab: e.target.textContent\n        });\n    }\n\n    onChange(e, name, value) {\n\n        let items = Object.assign({}, this.state.items);\n        items[name] = value;\n        this.setState({\n            ...this.state,\n            items\n        })\n    }\n\n    render() {\n\n        let tabs = [];\n        for (let tab of this.form) {\n            \n            let rows = [];\n            for (let i in tab.rows) {\n                \n                const row = tab.rows[i];\n                let rowElem = [];\n                for (let name of row) {\n\n                    const item = this.optionsParams[name];\n                    if (!item) continue;\n\n                    const value = this.state.items[name];\n\n                    if (item.type === 'radio') {\n                        rowElem.push(\n                            <RadioOption \n                                key={name} \n                                name={name} \n                                label={item.label} \n                                values={item.values} \n                                value={value}\n                                oneLine={item.oneLine}\n                                onChange={this.onChange}\n                            />\n                        );\n                    } else if (item.type === 'number') {\n\n                        if (item.label)\n                            rowElem.push(\n                                <label \n                                    htmlFor={name} \n                                    key={name + '_label'} \n                                    style={{fontWeight: \"inherit\"}}>\n                                    {item.label}\n                                </label>\n                            );\n\n                        rowElem.push(\n                            <FormControl\n                                key={name}\n                                type=\"number\"\n                                min={item.min}\n                                max={item.max}\n                                value={value}\n                                onChange={(e) => this.onChange(e, name, e.target.value)}\n                                style={{flex: \"0 0 100px\", marginLeft: \"5px\"}}\n                                bsSize=\"sm\"\n                            >\n                            </FormControl>\n                        );\n                        \n                        if (item.postfix) {\n                            rowElem.push(\n                                <span key={name + '_postfix'} style={{marginLeft: \"5px\", flex: \"0 0 auto\",}}>{item.postfix}</span>\n                            )    \n                        };\n\n                    } else if (item.type === 'string') {\n                        rowElem.push(\n                            <StringOption \n                                key={name} \n                                name={name} \n                                label={item.label} \n                                postfix={item.postfix}\n                                value={value}\n                                onChange={this.onChange}\n                            />\n                        );\n                    } else if (item.type === 'checkbox') {\n                        rowElem.push(\n                            <Form.Check \n                                type=\"checkbox\"\n                                label={item.label}\n                                key={name}\n                                name={name} \n                                checked={String(value) === 'true'}\n                                onChange={(e) => this.onChange(e, name, e.target.checked)}\n                                style={{flex: \"0 0 auto\", margin: \"0px\"}}\n                            />\n                        );\n                    }\n                }\n\n                rows.push(\n                    <div key={i} className=\"options-row\">\n                        {rowElem}\n                    </div>\n                    );\n\n            }\n\n            tabs.push(\n                <div key={tab.tabName}>\n                    <div className=\"tab-header\">\n                        {tab.tabName}\n                    </div>\n                    <div className=\"tab-content\">                    \n                        {rows}\n                    </div>\n                </div>\n            );\n        }\n\n\n        return (\n                <div className=\"options-form\">\n                    <div className=\"options-header\" style={{cursor: \"default\"}}>\n                        <b>Настройки</b>\n                    </div>\n                    {tabs}\n                    <div className=\"button-row\">\n                        <Button id=\"applyOptions\" size=\"sm\" variant=\"light\" style={{margin: \"5px\"}} onClick={this.applyOptions}>OK</Button>\n                        <Button id=\"cancelOptions\" size=\"sm\" variant=\"light\" style={{margin: \"5px\", float: \"left\"}} onClick={this.closeForm}>Отмена</Button>\n                        <Button id=\"defaultOptions\" size=\"sm\" variant=\"light\" style={{margin: \"5px\", float: \"right\"}} onClick={this.resetOptions}>Сбросить настройки</Button>\n                    </div>                    \n                </div>\n        )\n    }\n\n}    \n\nconst mapStateToProps = (state: State): OptionsState => {\n\n    return {\n        options: state.options\n    };\n\n}\n\nexport default connect(mapStateToProps)(withRouter(Options));","//@flow\nimport type { OptionsItems } from 'src/reducers/options'\n\nexport type READ_OPTIONS = {\n    type: 'READ_OPTIONS',\n}\nexport type SAVE_OPTIONS = {\n    type: 'SAVE_OPTIONS',\n    options: OptionsItems\n}\n\nexport type OptionsAction = READ_OPTIONS | SAVE_OPTIONS;\n\nexport const readOptions = () => (dispatch: any) => {\n\n    let action: OptionsAction = {\n        type: 'READ_OPTIONS'\n    };\n    dispatch(action);\n\n}\n\nexport const saveOptions = (options: OptionsItems) => (dispatch: any) => {\n\n    let action: OptionsAction = {\n        type: 'SAVE_OPTIONS',\n        options\n    };\n    dispatch(action);\n\n}\n","import { HashRouter, Switch, Route } from 'react-router-dom'\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport TopicsList from './topics_list'\nimport Topic from './topic'\nimport Options from './options'\nimport { clearTooltipsIfNeeded } from '../actions/tooltips'\n\nclass Container extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.onClick = this.onClick.bind(this);\n\n    }\n\n    onClick() {\n        const { dispatch } = this.props;\n        dispatch(clearTooltipsIfNeeded());\n    }\n\n    render() {\n\n       const routes =\n            <Switch>\n                <Route exact path='/' component={TopicsList} />\n                <Route path='/index.php' component={TopicsList} />\n                <Route path='/topic.php' component={Topic} />\n                <Route path='/options.php' component={Options} />\n            </Switch>\n\n        if (window.hash)\n\n            return (\n                <div onClick={this.onClick} style={{flex: \"auto\"}}>\n                    <div className=\"container\" >\n                        <HashRouter>\n                            {routes}\n                        </HashRouter >\n                    </div>    \n                </div>\n            )\n\n        else\n            return (\n                <div onClick={this.onClick} style={{flex: \"auto\"}}>\n                    <div className=\"container\">\n                        {routes}\n                    </div>\n                </div>\n            )\n    }\n\n}\n\nexport default connect()(Container);","import React from 'react'\nimport { domain } from 'src/api'\n\nconst NavBarFooter = (props) => {\n\n    return (\n        <footer className=\"flex-row navbar-footer\">\n            <a href={`${domain}/rules.php`}>Правила</a>\n            <span className=\"separator\">|</span>\n            <a href={`${domain}/about.php`}>Описание</a>\n            <span className=\"separator\">|</span>\n            <b><a href={`${domain}/ad.php`}>Реклама на сайте</a>  </b>\n            <span className=\"separator\">|</span>\n            <a href={`${domain}/find.php`}>Поиск</a>\n            <span className=\"separator\">|</span>\n            <a rel=\"nofollow\" href={`${domain}/sections_list.php`}>Секции</a>\n            <span className=\"separator\">|</span>\n            <a rel=\"nofollow\" href={`${domain}/rating.php`}>Рейтинг</a>\n            <span className=\"separator\">|</span>\n            <a href=\"http://kb.mista.ru\">Книга знаний</a>\n            <span className=\"separator\">|</span>\n            <a href=\"http://wiki.mista.ru\">Вики-миста (КЗ2)</a>\n            <span className=\"separator\">|</span>\n            <a rel=\"nofollow\" href=\"http://m.mista.ru/\">Мобильная</a>\n            <span className=\"separator\">|</span>\n            <a href={`${domain}/archive.php`}>Архив</a>\n            <span className=\"separator\">|</span>\n            <a href={`${domain}/moders.php`}>Модераторы</a>\n            <span className=\"separator\">|</span>\n            <a href={`${domain}/users_gallery.php`}>Галерея</a>\n            <span className=\"separator\">|</span>\n            <span>18+</span>\n        </footer>\n    )\n}\n\nexport default NavBarFooter;","import React from 'react'\n\nconst TooltipHeader = ({children, closeWindow}) => {\n    return (\n        <div className=\"tooltip-header\">\n            {children}\n            <div className=\"tooltip-close\" onClick={closeWindow} onTouchEnd={closeWindow}>\n                <span className=\"tooltip-close-x\">x</span>\n            </div>\n        </div>\n    )\n}\n\nexport default TooltipHeader;","import React from 'react'\n\nconst TooltipBody = ({children, onScroll}) => {\n    \n    var startX = 0;\n\n    function onTouchStart(e) {\n        startX = e.nativeEvent.changedTouches[0].clientX;\n    }\n    \n    function onTouchEnd(e) {\n        let endX = e.nativeEvent.changedTouches[0].clientX;\n        if (Math.abs(endX - startX) > 150)\n            onScroll(endX - startX);\n    }\n\n    return (\n        <div className=\"tooltip-text\" onTouchStart={onTouchStart} onTouchEnd={onTouchEnd}>\n            {children}\n        </div>\n    )\n}\n\nexport default TooltipBody;","//@flow\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport Draggable from 'react-draggable';\n\nimport TooltipHeader from './tooltip_header'\nimport TooltipBody from './tooltip_body'\n\nimport './tooltip.css'\n\nimport { closeTooltip } from 'src/actions/tooltips'\n\nimport type { DefaultProps } from 'src/index'\nimport type { TooltipItemState } from 'src/reducers/tooltips'\n\ntype TooltipProps = {\n    tooltip: TooltipItemState\n}\n\ntype Props = TooltipProps & DefaultProps;\n\nclass TooltipWindow extends Component<Props> {\n    \n    onCloseClick = () => {\n        const { dispatch, tooltip } = this.props;\n        dispatch(closeTooltip(tooltip.keys));\n    }\n    \n    onWheel = (e) => {\n        e.preventDefault();\n        this.props.onScroll(-e.nativeEvent.deltaY);\n    }\n\n    render() {\n        const { coords, i } = this.props.tooltip;\n\n        let axis;\n        let position;\n        if (window.innerWidth <= 768 ) {\n            axis = \"y\";\n            position = {top: coords.y, left: 5};\n        } else {\n            axis = \"both\";\n            position = {top: coords.y, left: Math.min(coords.x, window.innerWidth - 670)}\n        }\n        \n        let [header, body] = React.Children.toArray(this.props.children);\n\n        return (\n            <Draggable\n                axis={axis}\n                handle=\".tooltip-header\"\n                defaultClassNameDragging=\"dragging\"\n                key={i}>\n\n                <div className=\"tooltip-window\" style={{ ...position }} onWheel={this.onWheel}>\n                    <TooltipHeader closeWindow={this.onCloseClick}>\n                        {header.props.children}\n                    </TooltipHeader>\n                    <TooltipBody onScroll={this.props.onScroll}>\n                        {body.props.children}\n                    </TooltipBody>\n                </div>\n            </Draggable>\n        )\n    }\n}\n\nexport default connect()(TooltipWindow);","//@flow\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport * as API from 'src/api'\n\nimport MsgText from '../topic/row/msg_text'\nimport UserInfo from '../topic/row/user_info';\n\nimport TooltipWindow from './tooltip_window'\nimport TooltipHeader from './tooltip_header'\nimport TooltipBody from './tooltip_body'\nimport './tooltip.css'\n\nimport type { DefaultProps } from 'src/index'\nimport type { TooltipItemState } from 'src/reducers/tooltips'\n\ntype TooltipProps = {\n    tooltip: TooltipItemState,\n    topicId: string,\n    number: number\n}\n\ntype Props = TooltipProps & DefaultProps;\n\nclass Tooltip extends Component<Props> {\n    \n    data: any;\n    text: string;\n    fetchData: any;\n    state: any;\n\n    constructor(props) {\n        super();\n        \n        const { keys, info, items, item0 } = props;\n\n        let text = '';\n        let data;\n        if (keys.topicId === info.id) {\n            if (keys.number === 0)\n                data = item0;\n            else\n                data = items.find(item => item.n === String(keys.number));\n\n            if (data)\n                text = data.text;\n        }\n\n        this.state ={\n            data,\n            text,\n            number: keys.number\n        }\n    }\n\n    fetchData = async (number) => {\n\n        if (number < 0) return;\n\n        let data;\n        let text = '';\n        const topicId = this.props.keys.topicId;\n\n        try {\n            data = await API.getMessage(topicId, number);\n            if (data)                \n                text = data.text;\n            else \n                text = `Сообщение не найдено ${number}`;\n\n        } catch (e) {\n            text = e.message;\n        }\n\n        // $FlowFixMe\n        this.setState({ data, text, number });\n    }\n \n    onScroll = (delta) => {\n\n        const { keys } = this.props.tooltip;\n        if (keys.type !== 'TOPIC_PREVIEW') return;\n        if (delta > 0) {\n            this.fetchData(this.state.number + 1)\n        } else {\n            this.fetchData(this.state.number - 1)\n        }\n    }\n\n    componentDidMount() {\n\n        if (!this.state.data)\n            this.fetchData(this.state.number);\n\n    }\n    \n    render() {\n       const { keys } = this.props.tooltip;\n\n        if (!this.state.text)\n            return null;\n\n        let header;\n        if (!this.state.data) {\n            header = <b>Заголовок</b>\n        } else {\n            header = <UserInfo data={this.state.data} isAuthor={false}/>\n        }   \n\n        if (keys.type === 'TOPIC' || keys.type === 'TOPIC_PREVIEW') \n            return (\n                <TooltipWindow tooltip={this.props.tooltip} onScroll={this.onScroll}>\n                    <TooltipHeader>\n                        {header}\n                    </TooltipHeader>\n                    <TooltipBody>\n                        <MsgText \n                            data={this.state.data} \n                            html={this.state.text} \n                            topicId={keys.topicId} \n                            style={{maxHeight: \"min(550px, 80vh)\", overflowY: \"auto\"}} \n                        />\n                    </TooltipBody>\n                </TooltipWindow>\n            )\n    }\n}\nconst mapStateToProps = (state) => {\n\n    const {\n        info,\n        items,\n        item0\n    } = state.topic;\n\n    return {\n        info,\n        items,\n        item0\n    }\n}\n\nexport default connect(mapStateToProps)(Tooltip);","//@flow\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport Tooltip from './tooltip'\n\nimport type { State } from 'src/reducers'\nimport type { TooltipItemState } from 'src/reducers/tooltips'\nimport type { DefaultProps } from 'src/index'\n\ntype StateProps = {\n    items: Array<TooltipItemState>\n}\n\ntype Props = StateProps & DefaultProps;\n\nclass TooltipsList extends Component<Props> {\n\n    render() {\n\n        const { items } = this.props;\n\n        return (\n            <div>\n                {items.map((item, i) => {\n                    return (\n                        <Tooltip key={item.hash} tooltip={item} keys={item.keys}>\n                        </Tooltip>\n                    )}\n                )}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    const {\n        items\n    } = state.tooltips\n\n    return {\n        items,\n    }\n}\n\nexport default connect(mapStateToProps)(TooltipsList);","//@flow\nimport React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux'\nimport NavBar from './components/nav_bar';\nimport Container from './components/container';\nimport NavBarFooter from './components/nav_bar_footer';\nimport TooltipsList from './components/tooltips/tooltips_list';\n\nimport { readOptions } from 'src/actions/options'\n\nimport type { State } from 'src/reducers'\nimport type { DefaultProps } from 'src/components'\n\ntype StateProps = {\n  theme: string   \n}\n\ntype Props = StateProps & DefaultProps\n\nclass App extends Component<Props> {\n \n  constructor(props) {\n    super(props);\n    // for github pages\n    window.hash = '#';\n    props.dispatch(readOptions());\n  }\n\n  UNSAFE_componentWillMount() {\n      const { theme } = this.props;\n      if (document.body)\n        document.body.className = theme;\n  }\n  \n  UNSAFE_componentWillReceiveProps(props) {\n      const { theme } = props;\n      if (document.body)\n        document.body.className = theme;\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <NavBar />\n        <Container />\n        <NavBarFooter />\n        <TooltipsList />\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    return {\n        theme: state.options.items.theme\n    }\n}\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\n\nimport thunk from 'redux-thunk'\n\n// eslint-disable-next-line \nimport { createLogger } from 'redux-logger'\n\nimport reducer from './reducers'\nimport './index.css';\nimport App from './App';\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== 'production') {\n    //middleware.push(createLogger())\n}\n\nconst store = createStore(\n    reducer,\n    applyMiddleware(...middleware)\n)\n\nconst Root = ({ store }) => (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(<Root store={store} />,\n    document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}