{"version":3,"sources":["registerServiceWorker.js","components/common/search.js","utils.ts","api/index.ts","api/topicslist.ts","data/topicslist/actions.ts","components/nav_bar.js","data/topicslist/reducer.ts","data/topicslist/index.ts","data/topic/index.ts","api/topicinfo.ts","api/topicMessages.ts","data/topic/actions.ts","data/topic/reducer.ts","api/sections.ts","data/sections/actions.ts","data/sections/reducer.ts","data/sections/index.ts","data/options/actions.js","data/options/reducer.js","api/cookies.ts","api/login.ts","data/login/actions.ts","data/login/reducer.ts","data/login/index.ts","data/tooltips/actions.ts","data/tooltips/reducer.ts","data/tooltips/index.ts","data/newtopic/actions.js","data/newtopic/reducer.js","data/newmessage/actions.js","data/newmessage/reducer.js","data/topic_preview/actions.js","data/store.ts","data/topic_preview/reducer.js","components/login/logged_user.tsx","components/login/login_form.js","components/common/error.js","components/login/index.tsx","components/topics_list/sections.tsx","components/topics_list/header.tsx","components/topics_list/row/pages.tsx","components/topics_list/row/topic_name_cell.tsx","components/extensions/link_to_post.js","components/topics_list/row/preview_link.js","components/topics_list/row/index.tsx","components/common/pages.js","components/common/text_editor.js","components/topics_list/new_topic.js","components/extensions/code_highlight.js","components/topic/index.js","components/options/index.js","components/extensions/code1c.js","components/extensions/link_to_user.js","components/extensions/youtube_link.js","components/extensions/custom_link.js","components/topic/row/vote_item.js","components/topic/row/vote_chart.js","components/topic/row/vote.js","components/topic/row/msg_text.js","components/preview/preview_header.js","components/preview/topic_preview.js","components/topics_list/index.tsx","components/topic/header.tsx","components/topic/topic_info.tsx","components/topic/row/user_info.js","components/topic/row/index.js","components/topic/footer.tsx","components/topic/new_message.js","components/options/radio_option.js","components/options/string_option.js","components/container.tsx","components/nav_bar_footer.js","components/tooltips/tooltip_header.js","components/tooltips/tooltip_body.js","components/tooltips/tooltip_window.js","components/tooltips/tooltip.js","components/tooltips/tooltips_list.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Search","useState","searchEngine","setSearchEngine","text","setText","doSearch","url","open","InputGroup","size","Prepend","DropdownButton","id","title","style","marginRight","className","variant","Dropdown","Item","eventKey","onSelect","FormControl","type","placeholder","paddingRight","onKeyPress","e","key","onChange","target","value","Append","marginLeft","marginTop","marginBottom","cursor","onClick","zIndex","parseJSON","JSON","parse","replace","console","error","message","log","getMaxPage","count","Math","min","ceil","childrenToText","children","map","displayName","props","number","domain","localStorage","getItem","urlTopicsList","urlTopicInfo","urlTopicMessages","urlLogin","urlLogout","urlCookies","urlSections","urlNewMessage","urlNewTopic","postNewMessage","params","a","topic_id","fetch","method","body","paramsToString","mode","credentials","headers","redirect","result","postNewTopic","paramsPrefix","arr","undefined","push","length","join","fetchJsonpAndGetJson","fullUrl","fetchJsonp","response","json","responseJson","utils","fetchAndGetJson","options","convertResponse","forum","section","sect1","sectionCode","sect2","author","user0","lastUser","user","created","updated","utime","answ","closed","down","isVoting","is_voting","showPreview","fetchTopicsList","list","requestTopicsList","createAction","receiveTopicsList","payload","receiveTopicsListFailed","clearTopicsList","togglePreview","getTopicsListIfNeeded","dispatch","getState","state","topicsList","isFetching","shouldGetTopicsList","page","reqestParams","topicsPerPage","items","topicsCount","topics","section_short_name","user_id","mytopics","API","data","slice","getTopicsList","connect","useLocation","useDispatch","menuItems","name","link","hash","item","i","Nav","Link","href","Navbar","bg","expand","fixed","Brand","Toggle","aria-controls","Collapse","Form","inline","reducer","createReducer","builder","addCase","action","toString","lastUpdated","Date","getTime","ind","findIndex","Object","assign","defaultInfo","initialState","info","voting","x","select","parseInt","sectionId","authorId","user_name","updated_name","answers_count","deleted","fetchTopicInfo","n","userId","time","vote","fetchTopicMessages","fetchTopicMessage","to","from","find","requestTopic","receiveTopic","item0","receiveTopicFailed","clearTopicMessages","requestNewMessages","receiveNewMessages","receiveNewMessagesFailed","shouldFetch","topic","getTopicIfNeeded","_item0","first","_items","last","getTopic","getNewMessagesIfNeeded","getNewMessages","concat","code","shortn","fulln","fetchSections","requestSections","receiveSections","receiveSectionsFailed","getSectionsIfNeeded","sections","shouldGetSections","tree","getKey","reduce","previous","currentItem","group","readOptions","saveOptions","defaultOptionsState","voteColors","theme","autoRefreshTopicsList","autoRefreshTopicsListInterval","autoRefreshTopic","autoRefreshTopicInterval","showTooltips","tooltipDelay","showTooltipOnTopicsList","showTooltipOnPostLink","showYoutubeVideoTitle","replaceCatalogMista","fixBrokenLinks","readOption","defaultValue","readAllOptions","String","setItem","session","Number","userName","userHash","user_hash","lastError","last_error","fetchCookies","fetchLogin","username","user_password","password","fetchLogout","loginStart","loginComplete","loginFailed","logoutStart","logoutComplete","checkLoginStart","shouldLogin","login","checkLogin","trim","doLoginIfNeeded","encodeURIComponent","doLogin","logged","createTooltip","keys","coords","closeTooltip","clearTooltips","stringify","index","filter","val","postNewTopicStart","postNewTopicComplete","postNewTopicError","newTopicText","newTopicClear","newTopicSubject","newTopicSection","newTopicShowVoting","show","postNewTopicIfNeeded","newTopic","shouldPostNewTopic","fetchParams","message_text","topic_text","subject","target_section","target_forum","toLowerCase","rnd","round","random","votingItems","onSuccess","defaultNewTopicState","postNewMessageStart","postNewMessageComplete","newMessageText","addMessageText","topicId","closePreview","requestPreviewText","recievePreviewText","tooltips","newMessage","topicPreview","store","configureStore","middleware","getDefaultMiddleware","logger","devTools","process","useAppDispatch","useSelector","CustomToggle","React","forwardRef","ref","preventDefault","LoggedUser","onLogout","event","float","as","Menu","Divider","LoginForm","onLogin","current","createRef","flexWrap","this","flex","maxLength","autoComplete","Button","margin","rel","Component","ErrorElem","dangerouslySetInnerHTML","__html","connector","elem","useEffect","selected","sectionsElem","label","Control","currentTarget","Header","navigate","useNavigate","queryString","search","Pages","pages","maxPage","classes","classNames","sectionHref","substring","overflowWrap","LinkToPost","onMouseOver","persist","timer","setTimeout","showToolTip","stopPropagation","clearTimeout","onMouseOut","showTooltip","isPreview","pageX","y","pageY","setState","startsWith","then","pageParam","isNaN","expanded","timeF","td","d","getDate","getMonth","getFullYear","today","dateFormat","aria-hidden","color","display","width","textAlign","currentPage","locationParams","baseUrl","last20","Pagination","active","TextEditor","onButtonCode1c","textArea","start","selectionStart","end","selectionEnd","oldText","len","replacement","newText","formName","onVotingChange","checked","ctrlKey","parent","parentElement","tagName","toUpperCase","dispatchEvent","Event","cancelable","bubbles","showVoting","cols","rows","ButtonGroup","disabled","Check","NewTopic","onSectionChange","currentSection","onSubmit","onSubmitSuccess","refs","onSubjectChange","groupsElem","votingOptions","Text","readOnly","FormGroup","highlight","scrolledToHash","СтрокаРезультат","УстановленЦвет","ПоследнийЦвет","keywords","Set","split","Спецсиволы","мЦветФона","мЦветЧисла","мЦветСтроки","мЦветКлючевогоСлова1","ВСтроке","Токен","ПустаяСтрока","Строка","Сред","Нач","Длина","substr","Прав","isKeyword","token","has","ДобавитьЧастьСтроки1С","Часть","Цвет","РазукраситьСтроку","СтрокаКода","ВСтрокеСкобка","ВСтрокеТильда","НачалоСтроки","ТокенДоТочки","Поз","ТекущийСимвол","charAt","Code","onShowClick","bind","hidden","textArr","buttonText","buttonShow","linesCount","preStyle","overflow","height","LinkToUser","getVideoId","fullHref","URL","searchParams","get","pathname","getVideoParams","videoId","apiKey","apiUrl","snippet","hrefName","YoutubeLink","run","CustomLink","parentText","escapedHref","regExp","RegExp","newHref","set","query","class","fixBrokenLink","VoteItem","total","colors","img","percent","textDecoration","src","maxWwidth","alt","VoteChart","sum","Vote","voteOption","MsgText","res","txt","processCode1C","processLinksToPosts","voteElement","voteChart","html","processedHtml","processText","componentsMap","textComponent","activeHtml","PreviewHeader","date","onFirst","onPrev","onNext","onLast","TopicPreview","fetchData","onClickFirst","onClickNext","onClickPrev","onClickLast","getTopicMessagesCount","maxHeight","overflowY","updateTopicsList","document","position","top","letterSpacing","yandexUrl","lineHeight","UserInfo","getElementById","scrollTo","offsetTop","onImageLoad","dataStr","isAuthor","isYou","isTooltip","imgElem","timeElem","userClassNames","innerWidth","onLoad","Row","updateButton","NewMessage","voting_select","clearVoting","setVotingOption","votingElem","closeTopic","clearText","htmltext","DOMParser","parseFromString","firstChild","innerText","updateTopic","nodeHash","RadioOption","values","oneLine","valuesElem","htmlFor","descr","StringOption","postfix","Options","closeForm","resetOptions","applyOptions","onTabClick","activeTab","textContent","optionsParams","max","form","tabName","tabs","tab","row","rowElem","fontWeight","Container","path","element","NavBarFooter","TooltipHeader","closeWindow","onTouchEnd","TooltipBody","onScroll","startX","onTouchStart","nativeEvent","changedTouches","clientX","endX","abs","TooltipWindow","onCloseClick","tooltip","onWheel","deltaY","axis","left","Children","toArray","header","handle","defaultClassNameDragging","onWheelCapture","Tooltip","delta","TooltipsList","setAttribute","Root","ReactDOM","render"],"mappings":"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","file":"static/js/main.c15d0a7a.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","//@flow\r\nimport React, { Component, useState } from 'react'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n\r\nimport './search.css'\r\n\r\nconst Search = () => {\r\n\r\n  const [searchEngine, setSearchEngine] = useState('Яндекс');\r\n  const [text, setText] = useState('');\r\n\r\n  function onKeyPress(e: any) {\r\n    if (e.key === 'Enter') {\r\n      doSearch();\r\n    }\r\n  }\r\n\r\n  function doSearch() {\r\n\r\n    let url;\r\n    if (searchEngine === 'Яндекс') {\r\n      url = `https://www.yandex.ru/search/?text=${text}&site=forum.mista.ru`;\r\n\r\n    } else if (searchEngine === 'Google') {\r\n      url = `https://www.google.ru/search?q=${text}+site:forum.mista.ru`\r\n    }\r\n\r\n    window.open(url);\r\n\r\n    setText('');\r\n\r\n  }\r\n\r\n  return (\r\n    <InputGroup size=\"sm\">\r\n      <InputGroup.Prepend>\r\n        <DropdownButton id=\"search-engine\" title=\"\" size=\"sm\" style={{ marginRight: \"2px\" }} className='button' variant=\"light\">\r\n          <Dropdown.Item eventKey=\"Яндекс\" onSelect={() => setSearchEngine(\"Яндекс\")}>Яндекс</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"Google\" onSelect={() => setSearchEngine(\"Google\")}>Google</Dropdown.Item>\r\n        </DropdownButton>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        type=\"text\"\r\n        placeholder={`${searchEngine}: поиск`}\r\n        style={{ marginRight: \"4px\", paddingRight: \"27px\" }}\r\n        className='input'\r\n        onKeyPress={onKeyPress}\r\n        onChange={e => setText(e.target.value)}\r\n        value={text}\r\n      />\r\n      <InputGroup.Append style={{ marginLeft: \"-25px\", marginTop: \"auto\", marginBottom: \"auto\", cursor: \"pointer\" }} onClick={doSearch}>\r\n        <i className=\"fa fa-search input\" style={{ zIndex: 1000 }} />\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  )\r\n\r\n}\r\n\r\nexport default (Search: any);","\r\nexport function today(td: Date): boolean {\r\n  var d = new Date();\r\n  return td.getDate() === d.getDate() && td.getMonth() === d.getMonth() && td.getFullYear() === d.getFullYear();\r\n}\r\n\r\nexport const groupBy = (list, getKey) =>\r\n  list.reduce((previous, currentItem) => {\r\n    const group = getKey(currentItem);\r\n    if (!previous[group]) previous[group] = [];\r\n    previous[group].push(currentItem);\r\n    return previous;\r\n  }, {})\r\n\r\nexport const parseJSON = (text: string): {} => {\r\n\r\n  try {\r\n    return JSON.parse(text);\r\n  } catch (e) {\r\n\r\n  }\r\n\r\n  try {\r\n    text = text\r\n      .replace(/\\\\</g, '<')\r\n      .replace(/\\\\>/g, '>')\r\n      .replace(/\\\\&/g, '&')\r\n      .replace(/\\\\'/g, \"'\")\r\n      .replace(/\\\\\"/g, \"\")\r\n      .replace(/ \"/g, ' \\\\\"')\r\n      .replace(/\"\"/g, '\\\\\"\"')\r\n      .replace(/\\t/g, '\\\\t')\r\n      .replace(/\"(\\.| |\\?)/g, '\\\\\"$1')\r\n\r\n    //           console.log(text);\r\n    return JSON.parse(text);\r\n\r\n    //return eval(text);\r\n  } catch (e) {\r\n    console.error(e.message);\r\n    console.log(text);\r\n\r\n    return {};\r\n  }\r\n}\r\n\r\nexport const getMaxPage = (count: number): number => Math.min(Math.ceil(count / 100), 10) || 1;\r\n\r\nexport const childrenToText = (children) => {\r\n\r\n  if (!children) return children;\r\n\r\n  return children.map(value => {\r\n    if (typeof (value) === 'string') {\r\n      return value;\r\n    } else if (value.type === 'br') {\r\n      return '<br>'\r\n    } else if (value.type.displayName === 'Connect(LinkToPost)' || value.type.displayName === 'Connect(t)') {\r\n      return value.props.number;\r\n    } else {\r\n      console.log(value);\r\n      return value;\r\n    }\r\n  })\r\n}\r\n\r\nexport const extractTextFromHTML = (htmltext: string): string => {\r\n  const parser = new DOMParser();\r\n  const floatingElement = parser.parseFromString(htmltext, 'text/html');\r\n  return floatingElement.firstChild.innerText;\r\n}","import fetchJsonp from 'fetch-jsonp'\r\nimport * as utils from 'src/utils'\r\n\r\nexport const domain: string = localStorage.getItem('domain') || 'https://forum.mista.ru';\r\n//export const domain = 'https://dev.mista.ru';\r\nexport const urlTopicsList: string = localStorage.getItem('urlTopicsList') || 'api/topic.php';\r\nexport const urlTopicInfo: string = localStorage.getItem('urlTopicInfo') || 'ajax_gettopic.php';\r\nexport const urlTopicMessages: string = localStorage.getItem('urlTopicMessages') || 'api/message.php';\r\nexport const urlLogin: string = localStorage.getItem('urlLogin') || 'users.php?action=do_enter';\r\nexport const urlLogout: string = localStorage.getItem('urlLogout') || 'users.php?action=exit';\r\nexport const urlCookies: string = localStorage.getItem('urlCookies') || 'ajax_cookie.php';\r\nexport const urlSections: string = localStorage.getItem('urlSections') || 'ajax_getsectionslist.php';\r\nexport const urlNewMessage: string = localStorage.getItem('urlNewMessage') || 'topic.php?id=:id&page=1';\r\nexport const urlNewTopic: string = localStorage.getItem('urlNewTopic') || 'index.php';\r\nexport const urlAddBookmark: string = localStorage.getItem('urlAddBookmark') || 'ajax_addbookmark.php';\r\nexport const urlSearch: string = localStorage.getItem('urlSearch') || 'ajax_find.php';\r\n\r\n// New message\r\nexport type RequestNewMessage = {\r\n  message_text: string,\r\n  action: \"new\",\r\n  topic_id: string,\r\n  rnd: number,\r\n  voting_select?: number,\r\n  as_admin?: boolean\r\n}\r\n\r\nexport const postNewMessage = async (params: RequestNewMessage): Promise<any> => {\r\n\r\n  let url = urlNewMessage.replace(':id', params.topic_id);\r\n\r\n  let result = await fetch(`${domain}/${url}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Accept': 'text/html,application/xhtml+xml,application/xml',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: 'follow'\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n\r\n// New topic\r\nexport type RequestNewTopic = {\r\n  action: \"new\",\r\n  rnd: number,\r\n  topic_text: string,\r\n  message_text: string,\r\n  target_section: string,\r\n  target_forum: string,\r\n  voting: number,\r\n  select1?: string,\r\n  select2?: string,\r\n  select3?: string,\r\n  select4?: string,\r\n  select5?: string,\r\n  select6?: string,\r\n  select7?: string,\r\n  select8?: string,\r\n  select9?: string,\r\n  select10?: string\r\n}\r\n\r\nexport const postNewTopic = async (params: RequestNewTopic): Promise<any> => {\r\n\r\n  await fetch(`${domain}/${urlNewTopic}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    }\r\n  });\r\n}\r\n\r\n\r\n//Bookmark\r\nexport type RequestBookmark = {\r\n  id: string\r\n}\r\n\r\nexport const postBookmark = async (params: RequestBookmark) => {\r\n\r\n  await fetch(`${domain}/${urlAddBookmark}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n  });\r\n}\r\n\r\nexport const paramsToString = (paramsPrefix: string, params?: {}): string => {\r\n\r\n  if (!params)\r\n    return '';\r\n\r\n  let arr = [];\r\n  for (let key in params) {\r\n    if (params[key] !== undefined)\r\n      arr.push(key + '=' + params[key]);\r\n  }\r\n\r\n  if (arr.length > 0)\r\n    return paramsPrefix + arr.join('&');\r\n  else\r\n    return '';\r\n}\r\n\r\nexport const fetchJsonpAndGetJson = async (url: string, params?: {}): Promise<any> => {\r\n\r\n  let fullUrl = `${domain}/${url}${paramsToString('?', params)}`;\r\n  const response = await fetchJsonp(fullUrl);\r\n  let responseJson = await response.json();\r\n  let json;\r\n  if (typeof (responseJson) === 'string') {\r\n\r\n    try {\r\n      json = JSON.parse(responseJson)\r\n    } catch (e) {\r\n      json = utils.parseJSON(responseJson);\r\n    }\r\n  } else {\r\n    json = responseJson;\r\n  }\r\n  return json;\r\n}\r\n\r\nexport const fetchAndGetJson = async (url: string, params?: {}, options?: {}): Promise<any> => {\r\n\r\n  let fullUrl = `${domain}/${url}${paramsToString('?', params)}`;\r\n  const response = await fetch(fullUrl, options);\r\n  return await response.json();\r\n  \r\n}","import { fetchAndGetJson, urlTopicsList } from '.'\r\n\r\nimport type { ITopicsList, ITopicsListItem } from 'src/data/topicslist'\r\n\r\nexport interface IRequest {\r\n  itemsPerPage?: number | null,\r\n  page?: number | null,\r\n  beforeTime?: string | null,\r\n  forum?: string | null,\r\n  section?: string | null,\r\n  user_id?: string | null,\r\n  myTopics?: string | null\r\n}\r\n\r\ninterface IAPIRequest {\r\n  topics?: number | null,\r\n  utime?: string | null,\r\n  forum?: string | null,\r\n  section_short_name?: string | null,\r\n  user_id?: string | null,\r\n  mytopics?: string | null\r\n}\r\n\r\ninterface IAPIResponse {\r\n  id: number,\r\n  forum: string,\r\n  sect1: string,\r\n  sect2: string,\r\n  v8: string,\r\n  closed: number,\r\n  down: number,\r\n  paid: number,\r\n  text: string,\r\n  message: string,\r\n  created: number,\r\n  utime: number,\r\n  user: string,\r\n  user0: string,\r\n  is_voting: number,\r\n  answ: number\r\n}\r\n\r\nfunction convertRequest(request?: IRequest): IAPIRequest {\r\n\r\n  const itemsPerPage: number = request?.itemsPerPage ?? 20;\r\n  const page: number = request?.page ?? 1;\r\n  const count = itemsPerPage * page;\r\n\r\n  return ({\r\n    topics: count,\r\n    utime: request?.beforeTime,\r\n    forum: request?.forum,\r\n    section_short_name: request?.section,\r\n    user_id: request?.user_id,\r\n    mytopics: request?.myTopics\r\n  })\r\n\r\n}\r\n\r\nfunction convertResponse(response: IAPIResponse): ITopicsListItem {\r\n\r\n  return ({\r\n    id: response.id,\r\n    forum: response.forum,\r\n    section: response.sect1,\r\n    sectionCode: response.sect2,\r\n    author: response.user0,\r\n    lastUser: response.user,\r\n    created: response.created * 1000,\r\n    updated: response.utime * 1000,\r\n    count: response.answ,\r\n    text: response.text,\r\n    closed: response.closed === 1,\r\n    down: response.down === 1,\r\n    isVoting: response.is_voting === 1,\r\n    showPreview: false\r\n  })\r\n\r\n}\r\n\r\nasync function fetchTopicsList(params?: IRequest): Promise<ITopicsList> {\r\n\r\n  //const request = convertRequest(params);\r\n\r\n  const list = await fetchAndGetJson(urlTopicsList, params);\r\n  return list.map(convertResponse);\r\n\r\n}\r\n\r\nexport { fetchTopicsList }","import { createAction } from '@reduxjs/toolkit'\r\n\r\nimport * as API from 'src/api/topicslist'\r\nimport { domain, urlTopicsList } from 'src/api/index';\r\n\r\nimport { RootState } from '../store';\r\n\r\nexport const requestTopicsList = createAction('REQUEST_TOPICS_LIST');\r\nexport const receiveTopicsList = createAction('RECEIVE_TOPICS_LIST', list => ({\r\n  payload: {\r\n    list\r\n  },\r\n  error: false\r\n}));\r\nexport const receiveTopicsListFailed = createAction('RECEIVE_TOPICS_LIST', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\nexport const clearTopicsList = createAction('CLEAR_TOPICS_LIST');\r\nexport const togglePreview = createAction('TOGGLE_PREVIEW', id => ({\r\n  payload : {\r\n    id\r\n  }\r\n}));\r\n\r\nconst getTopicsList = (params: any) => async (dispatch: any, getState: any) => {\r\n\r\n  dispatch(requestTopicsList())\r\n\r\n  const page = params.page || 1;\r\n  let reqestParams: any = {};\r\n\r\n  let topicsPerPage = +getState().options.items.topicsPerPage;\r\n  if (topicsPerPage > 99) topicsPerPage = 99;\r\n\r\n  let topicsCount = page * topicsPerPage;\r\n  reqestParams.topics = topicsCount;\r\n\r\n  if (params.section)\r\n    reqestParams.section_short_name = params.section;\r\n\r\n  if (params.forum)\r\n    reqestParams.forum = params.forum;\r\n\r\n  if (params.user_id)\r\n    reqestParams.user_id = params.user_id;\r\n\r\n  if (params.mytopics)\r\n    reqestParams.mytopics = params.mytopics;\r\n\r\n  try {\r\n    const json = await API.fetchTopicsList(reqestParams);\r\n\r\n    let data = json.slice(-topicsPerPage);\r\n    dispatch(receiveTopicsList(data));\r\n\r\n  } catch (e) {\r\n\r\n    dispatch(receiveTopicsListFailed(`${e.message} ${domain}/${urlTopicsList}`));\r\n    console.error(e.message);\r\n\r\n  }\r\n\r\n}\r\n\r\nconst shouldGetTopicsList = (state: RootState) => {\r\n  const topicsList = state.topicsList;\r\n  if (!topicsList) {\r\n    return true\r\n  }\r\n  if (topicsList.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const getTopicsListIfNeeded = (params: any): any => (dispatch: any, getState: any) => {\r\n  if (shouldGetTopicsList(getState())) {\r\n    return dispatch(getTopicsList(params));\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Form from 'react-bootstrap/Form'\r\nimport queryString from 'query-string'\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport Search from 'src/components/common/search'\r\nimport { getTopicsListIfNeeded } from 'src/data/topicslist/actions'\r\n\r\nimport './nav_bar.css'\r\n\r\nconst NavBar = (props) => {\r\n\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const onClick = (e) => {\r\n    dispatch(getTopicsListIfNeeded({}));\r\n  }\r\n\r\n  const menu = [\r\n    { name: '1С', link: `${window.hash}/index.php?forum=1C` },\r\n    { name: 'IT', link: `${window.hash}/index.php?forum=IT` },\r\n    { name: 'JOB', link: `${window.hash}/index.php?forum=JOB` },\r\n    { name: 'LIFE', link: `${window.hash}/index.php?forum=LIFE` },\r\n    { name: 'Wiki', link: 'https://wiki.mista.ru' },\r\n    { name: 'Книга знаний', link: 'https://kb.mista.ru' },\r\n  ];\r\n\r\n  const menuItems = menu.map((item, i) => {\r\n    return (\r\n      <Nav.Item key={i}>\r\n        <Nav.Link href={item.link}>\r\n          {item.name}\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" fixed=\"top\">\r\n      <Navbar.Brand\r\n        href={`${window.hash}`}\r\n        onClick={onClick}>\r\n        React.Mista\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse>\r\n        <Nav className=\"mr-auto\">\r\n          {menuItems}\r\n        </Nav>\r\n        <Form inline>\r\n          <Search />\r\n        </Form>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default connect()(NavBar);","import { createReducer } from '@reduxjs/toolkit'\r\nimport { initialState } from '.'\r\nimport { requestTopicsList, receiveTopicsList, clearTopicsList, togglePreview } from './actions'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(requestTopicsList, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveTopicsList, (state, action) => {\r\n\r\n      if (action.error) {\r\n        state.error = action.payload.toString();\r\n      } else {\r\n        state.items = action.payload.list;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(clearTopicsList, (state) => {\r\n      state.items = [];\r\n      state.isFetching = false;\r\n      delete state.error;\r\n      delete state.lastUpdated;\r\n    })\r\n    .addCase(togglePreview, (state, action) => {\r\n      let items = state.items.slice();\r\n      const ind = items.findIndex(item => item.id === action.payload.id);\r\n\r\n      let item = Object.assign({}, items[ind]);\r\n      item.showPreview = !item.showPreview;\r\n      items[ind] = item;\r\n      state.items = items;\r\n    })    \r\n})\r\n\r\nexport default reducer;\r\n","export interface ITopicsListItem {\r\n  id: number,\r\n  author: string,\r\n  lastUser: string,\r\n  forum: string,\r\n  sectionCode: string,\r\n  section: string,\r\n  count: number,\r\n  text: string,\r\n  created: number,\r\n  updated: number,\r\n  closed: boolean,\r\n  down: boolean,\r\n  isVoting: boolean,\r\n  showPreview: boolean\r\n}\r\n\r\nexport interface ITopicsList extends Array<ITopicsListItem> { }\r\n\r\nexport interface ITopicsListState {\r\n  isFetching: boolean;\r\n  items: ITopicsList,\r\n  error?: string,\r\n  lastUpdated?: number\r\n}\r\n\r\nexport const initialState: ITopicsListState = {\r\n  isFetching: false,\r\n  items: []\r\n}","export interface IVotingItem {\r\n  text: string,\r\n  count: number\r\n}\r\n\r\nexport interface ITopicInfo {\r\n    id: number,\r\n    title: string,\r\n    forum?: string,\r\n    sectionId?: string,\r\n    created?: number,\r\n    authorId?: string,\r\n    author?: string,\r\n    updated?: number,\r\n    lastUser?: string,\r\n    count?: number,\r\n    down?: number,\r\n    closed?: number,\r\n    deleted?: number,\r\n    isVoting?: number,\r\n    voting?: IVotingItem[]\r\n  }\r\n\r\nexport interface ITopicMessage {\r\n  id: number,\r\n  n: number,\r\n  user: string,\r\n  userId: string,\r\n  text: string,\r\n  time: number,\r\n  vote: number\r\n}\r\n\r\nexport interface ITopicMessagesList extends Array<ITopicMessage> {}\r\n\r\nexport interface ITopicState {\r\n  isFetching: boolean;\r\n  items: ITopicMessagesList,\r\n  item0?: ITopicMessage,\r\n  info?: ITopicInfo,\r\n  error?: string,\r\n  lastUpdated?: number\r\n}\r\n\r\nexport const defaultInfo: ITopicInfo = {\r\n  id: 0,\r\n  title: \"\",\r\n  count: 0\r\n}\r\n\r\nexport const initialState: ITopicState = {\r\n  isFetching: false,\r\n  items: [],\r\n  info: defaultInfo\r\n}\r\n\r\n","import { fetchAndGetJson, urlTopicInfo } from '.'\r\nimport type { ITopicInfo } from 'src/data/topic'\r\n\r\ninterface IAPIResponse {\r\n  id: string,\r\n  text: string,\r\n  forum: string,\r\n  section: string,\r\n  created: string,\r\n  user_id: string,\r\n  user_name: string,\r\n  updated: string,\r\n  updated_name: string,\r\n  answers_count: string,\r\n  down: number,\r\n  closed: number,\r\n  deleted: number,\r\n  is_voting: number,\r\n  voting: {\r\n    select: string,\r\n    result: number\r\n  }[]\r\n}  \r\n\r\nfunction convertResponse(response: IAPIResponse): ITopicInfo {\r\n\r\n  let voting = response.voting.map(x => ({\r\n    text: x.select,\r\n    count: x.result\r\n  }));\r\n\r\n  return ({\r\n    id: parseInt(response.id),\r\n    title: response.text,\r\n    forum: response.forum,\r\n    sectionId: response.section,\r\n    created: parseInt(response.created) * 1000,\r\n    authorId: response.user_id,\r\n    author: response.user_name,\r\n    updated: parseInt(response.updated) * 1000,\r\n    lastUser: response.updated_name,\r\n    count: parseInt(response.answers_count),\r\n    down: response.down,\r\n    closed: response.closed,\r\n    deleted: response.deleted,\r\n    isVoting: response.is_voting,\r\n    voting\r\n  })\r\n\r\n}\r\n\r\nasync function fetchTopicInfo(id: number): Promise<ITopicInfo> {\r\n\r\n  const info = await fetchAndGetJson(urlTopicInfo, { id });\r\n  return convertResponse(info);\r\n\r\n}\r\n\r\nexport { fetchTopicInfo }","\r\nimport { fetchAndGetJson, urlTopicMessages } from '.'\r\nimport type { ITopicMessage, ITopicMessagesList } from 'src/data/topic'\r\n\r\ninterface IAPIRequest {\r\n  id: number,\r\n  from?: number,\r\n  to?: number\r\n}\r\n\r\nexport interface IRequest extends IAPIRequest {}\r\n\r\ninterface IAPIResponse {\r\n  id: string,\r\n  n: string,\r\n  user: string,\r\n  userId: string,\r\n  text: string,\r\n  utime: string,\r\n  vote: number\r\n}  \r\n\r\nfunction convertResponse(response: IAPIResponse): ITopicMessage {\r\n\r\n  return ({\r\n    id: parseInt(response.id),\r\n    n: parseInt(response.n),\r\n    user: response.user,\r\n    userId: response.userId,\r\n    text: response.text,\r\n    time: parseInt(response.utime) * 1000,\r\n    vote: response.vote\r\n  })\r\n\r\n}\r\n\r\nasync function fetchTopicMessages(params?: IRequest): Promise<ITopicMessagesList> {\r\n\r\n  const list = await fetchAndGetJson(urlTopicMessages, params);\r\n  return list.map(convertResponse);\r\n\r\n}\r\n\r\nasync function fetchTopicMessage(id: number, n: number): Promise<ITopicMessage> {\r\n\r\n  const to = (n === 0) ? n+1 : n;\r\n\r\n  const list = await fetchAndGetJson(urlTopicMessages, {id, from: n, to});\r\n  return list.map(convertResponse).find((item: ITopicMessage) => item.n === n);\r\n\r\n}\r\n\r\nexport { fetchTopicMessages, fetchTopicMessage }","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nimport { fetchTopicInfo } from 'src/api/topicinfo'\r\nimport { fetchTopicMessage, fetchTopicMessages } from 'src/api/topicMessages'\r\nimport { ITopicInfo } from '.';\r\n\r\nexport const requestTopic = createAction('REQUEST_TOPIC');\r\nexport const receiveTopic = createAction('RECEIVE_TOPIC', (info, item0, list) => ({\r\n  payload: {\r\n    info,\r\n    item0,\r\n    list\r\n  },\r\n  error: false\r\n}));\r\nexport const receiveTopicFailed = createAction('RECEIVE_TOPIC', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\nexport const clearTopicMessages = createAction('CLEAR_TOPIC_MESSAGES');\r\n\r\nexport const requestNewMessages = createAction('REQUEST_NEW_MESSAGES');\r\nexport const receiveNewMessages = createAction('RECEIVE_NEW_MESSAGES', (list) => ({\r\n  payload: {\r\n    list\r\n  },\r\n  error: false\r\n}));\r\nexport const receiveNewMessagesFailed = createAction('RECEIVE_NEW_MESSAGES', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\n\r\nexport const getTopic = (params: any, item0: any): any => async (dispatch: any) => {\r\n\r\n  dispatch(requestTopic())\r\n\r\n  let info: ITopicInfo;\r\n  try {\r\n    info = await fetchTopicInfo(params.id);\r\n  } catch (e) {\r\n    console.error(e);\r\n    info = {\r\n      id: params.id,\r\n      title: '',\r\n      count: 0\r\n    };\r\n  }\r\n  try {\r\n    let page = params.page || 1;\r\n\r\n    let _item0 = item0;\r\n    let _items;\r\n    if (page === 'last20') {\r\n\r\n      if (info.count > 21) {\r\n\r\n        if (!_item0) {\r\n          _item0 = await fetchTopicMessage(params.id, 0);\r\n        }\r\n\r\n        let first = info.count - 20;\r\n        _items = await fetchTopicMessages({\r\n          id: params.id,\r\n          from: first,\r\n          to: 1010\r\n        });\r\n\r\n      } else {\r\n        let items = await fetchTopicMessages({\r\n          id: params.id,\r\n          from: 0,\r\n          to: 1010\r\n        });\r\n        _item0 = items[0];\r\n        _items = items.slice(1);\r\n      }\r\n\r\n    } else {\r\n\r\n      page = +page;\r\n      let first = 0;\r\n      let last = page * 100 - 1;\r\n\r\n      if (page > 1) {\r\n\r\n        first = (page - 1) * 100;\r\n        if (!_item0) {\r\n          _item0 = await fetchTopicMessage(params.id, 0);\r\n        }\r\n\r\n        _items = await fetchTopicMessages({\r\n          id: params.id,\r\n          from: first,\r\n          to: last\r\n        });\r\n\r\n      } else {\r\n        if (_item0)\r\n          first = 1;\r\n        else\r\n          first = 0;\r\n\r\n        let items = await fetchTopicMessages({\r\n          id: params.id,\r\n          from: first,\r\n          to: last\r\n        });\r\n\r\n        if (_item0) {\r\n          _items = items;\r\n        } else {\r\n          _item0 = items[0];\r\n          _items = items.slice(1);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    if (info.count === 0 && _items.length > 0)\r\n      info.count = _items[_items.length - 1].n;\r\n\r\n    if (page === 'last20' && _items.length > 20) {\r\n      _items = _items.slice(-20);\r\n    }\r\n\r\n    dispatch(receiveTopic(info, _item0, _items));\r\n\r\n  } catch (error) {\r\n\r\n    console.error('Failed to fetch topic:', error);\r\n    dispatch(receiveTopicFailed(error));\r\n\r\n  }\r\n}\r\n\r\nconst shouldFetch = (state) => {\r\n  const topic = state.topic;\r\n  if (!topic) {\r\n    return true\r\n  }\r\n  if (topic.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const getTopicIfNeeded = (params: any, item0: any): any => (dispatch: any, getState: any) => {\r\n  if (shouldFetch(getState())) {\r\n    return dispatch(getTopic(params, item0));\r\n  }\r\n}\r\n\r\nexport type FetchNewMessageseParams = {\r\n  id: number | string,\r\n  last: number\r\n}\r\n\r\nexport const getNewMessages = (params: any): any => async (dispatch: any) => {\r\n\r\n  dispatch(requestNewMessages());\r\n\r\n  try {\r\n    const list = await fetchTopicMessages({\r\n      id: params.id,\r\n      from: +params.last + 1,\r\n      to: 1010\r\n    });\r\n    dispatch(receiveNewMessages(list));\r\n\r\n  } catch (error) {\r\n    console.error('Failed to fetch new messages:', error);\r\n    dispatch(receiveNewMessagesFailed(error));\r\n  }\r\n\r\n}\r\n\r\nexport const getNewMessagesIfNeeded = (params: FetchNewMessageseParams): any => (dispatch: any, getState: any) => {\r\n  if (shouldFetch(getState())) {\r\n    return dispatch(getNewMessages(params));\r\n  }\r\n}","//@flow \r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { defaultInfo, initialState } from '.';\r\n\r\nimport { requestTopic, receiveTopic, clearTopicMessages, requestNewMessages, receiveNewMessages } from './actions'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(requestTopic, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveTopic, (state, action) => {\r\n\r\n      if (action.error) {\r\n        state.error = action.error.toString();\r\n      } else {\r\n        state.items = action.payload.list;\r\n        state.item0 = action.payload.item0;\r\n        state.info = action.payload.info;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(clearTopicMessages, (state) => {\r\n      state.items = [];\r\n      state.info = defaultInfo;\r\n      delete state.item0;\r\n      delete state.error;\r\n    })\r\n    .addCase(requestNewMessages, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveNewMessages, (state, action) => {\r\n      if (action.error) {\r\n        state.error = action.payload.toString();\r\n      } else {\r\n        state.isFetching = false;\r\n        state.items = state.items.concat(action.payload.list);\r\n        if (state.items.length > 0)\r\n          state.info.count = state.items[state.items.length - 1].n;\r\n      }\r\n    })\r\n})\r\n\r\nexport default reducer;","import { fetchJsonpAndGetJson, urlSections } from '.'\r\nimport type { ISectionsList, ISectionItem } from 'src/data/sections'\r\n\r\ninterface IAPIResponse {\r\n  id: number,\r\n  forum: string,\r\n  shortn: string,\r\n  fulln: string\r\n}\r\n\r\nfunction convertResponse(response: IAPIResponse): ISectionItem {\r\n\r\n  return ({\r\n    id: response.id,\r\n    forum: response.forum,\r\n    code: response.shortn,\r\n    name: response.fulln,\r\n  })\r\n\r\n}\r\n\r\nexport const fetchSections = async (): Promise<ISectionsList> => {\r\n  const list = await fetchJsonpAndGetJson(urlSections);\r\n  return list.map(convertResponse);\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nimport { fetchSections } from 'src/api/sections'\r\nimport { RootState } from '../store';\r\n\r\nexport const requestSections = createAction('REQUEST_SECTIONS');\r\nexport const receiveSections = createAction('RECEIVE_SECTIONS', list => ({\r\n  payload: {\r\n    list,\r\n  },\r\n  error: false\r\n}));\r\n\r\nexport const receiveSectionsFailed = createAction('RECEIVE_SECTIONS', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\n\r\nexport const getSections = () => async (dispatch: any) => {\r\n\r\n  dispatch(requestSections());\r\n\r\n  try {\r\n    \r\n    const list = await fetchSections();\r\n    dispatch(receiveSections(list));\r\n\r\n  } catch (e) {\r\n\r\n    dispatch(receiveSectionsFailed(e.message));\r\n    console.error(e);\r\n\r\n  }\r\n\r\n}\r\n\r\nconst shouldGetSections = (state: RootState): boolean => {\r\n\r\n  const sections = state.sections;\r\n\r\n  if (!sections)\r\n    return true\r\n\r\n  if (sections.isFetching)\r\n    return false\r\n\r\n  if (sections.items.length > 0)\r\n    return false;\r\n\r\n  return true\r\n}\r\n\r\nexport const getSectionsIfNeeded = (): any => (dispatch: any, getState: any) => {\r\n  if (shouldGetSections(getState())) {\r\n    return dispatch(getSections());\r\n  }\r\n}","import { createReducer } from '@reduxjs/toolkit'\r\n\r\nimport { requestSections, receiveSections } from './actions'\r\nimport { groupBy } from 'src/utils'\r\nimport { initialState } from '.'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(requestSections, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveSections, (state, action) => {\r\n\r\n      if (action.error) {\r\n        state.error = action.payload.toString();\r\n      } else {\r\n        state.items = action.payload.list;\r\n        state.tree = groupBy(state.items, item => item.forum);\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n})\r\n\r\nexport default reducer;\r\n","export interface ISectionItem {\r\n  id: number;\r\n  forum: string,\r\n  code: string,\r\n  name: string,\r\n}\r\n\r\nexport interface ISectionsList extends Array<ISectionItem> {}\r\n\r\nexport interface ISectionsTree{\r\n  [key: string]: ISectionItem[]\r\n}\r\n\r\nexport interface ISectionsListState {\r\n  isFetching: boolean;\r\n  items: ISectionsList,\r\n  tree?: {},\r\n  error?: string,\r\n  lastUpdated?: number\r\n}\r\n\r\nexport const initialState: ISectionsListState = {\r\n  isFetching: false,\r\n  items: [],\r\n  tree: {}\r\n}\r\n","import { createAction } from '@reduxjs/toolkit'\r\nimport type { OptionsItems } from 'src/data/options/reducer'\r\n\r\nexport const readOptions = createAction('READ_OPTIONS');\r\nexport const saveOptions = createAction('SAVE_OPTIONS', options => ({\r\n  payload: {\r\n    options,\r\n  }\r\n}));\r\n","//@flow\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { readOptions, saveOptions } from './actions'\r\n\r\nexport type Column = {\r\n  name: string,\r\n  className?: string,\r\n  width?: string\r\n}\r\n\r\nexport type OptionsItems = {\r\n  theme: 'yellow' | 'lightgray' | 'dark',\r\n  topicsPerPage: string,\r\n  autoRefreshTopicsList: string,\r\n  autoRefreshTopicsListInterval: string,\r\n  autoRefreshTopic: string,\r\n  autoRefreshTopicInterval: string,\r\n  contetnMaxWidth?: string,\r\n  tooltipDelay: string,\r\n  showTooltips: string,\r\n  showTooltipOnTopicsList: string\r\n}\r\n\r\nexport type OptionsState = {\r\n  voteColors: Array<string>,\r\n  items: OptionsItems,\r\n  show?: boolean\r\n};\r\n\r\nexport const defaultOptionsState: OptionsState = {\r\n  voteColors: [\r\n    \"#FF1616\", //1\r\n    \"#1A861A\", //2\r\n    \"#0023FF\", //3\r\n    \"#FF6B18\", //4\r\n    \"#9B3A6E\", //5\r\n    \"#567655\", //6\r\n    \"#233345\", //7\r\n    \"#CC0000\", //8\r\n    \"#00CCCC\", //9\r\n    \"#0000CC\", //10\r\n  ],\r\n  items: {\r\n    theme: 'lightgray',\r\n    topicsPerPage: '20',\r\n    autoRefreshTopicsList: 'false',\r\n    autoRefreshTopicsListInterval: '60',\r\n    autoRefreshTopic: 'true',\r\n    autoRefreshTopicInterval: '60',\r\n    //tooltips\r\n    showTooltips: 'true',\r\n    tooltipDelay: '500',\r\n    showTooltipOnTopicsList: 'true',\r\n    showTooltipOnPostLink: 'true',\r\n    //links\r\n    showYoutubeVideoTitle: 'true',\r\n    replaceCatalogMista: 'true',\r\n    fixBrokenLinks: 'true',\r\n  }\r\n}\r\n\r\nconst readOption = (name, defaultValue) => {\r\n  return window.localStorage.getItem(name) || defaultValue;\r\n}\r\n\r\nconst readAllOptions = () => {\r\n  \r\n  let state: OptionsState = defaultOptionsState;\r\n  for (let key in state.items) {\r\n    state.items[key] = readOption(key, state.items[key]);\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nconst reducer = createReducer(readAllOptions(), (builder) => {\r\n  builder\r\n    .addCase(readOptions, (state) => {\r\n      let items = Object.assign({}, defaultOptionsState.items);\r\n      for (let key in items) {\r\n        items[key] = readOption(key, defaultOptionsState.items[key]);\r\n      }\r\n      state.items = items;\r\n    })\r\n    .addCase(saveOptions, (state, action) => {\r\n      for (let key in action.payload.options) {\r\n        const value = String(action.payload.options[key]); \r\n        window.localStorage.setItem(key, value);\r\n        state.items[key] = value;\r\n      }\r\n    })\r\n  })\r\n\r\nexport default reducer;","import { fetchJsonpAndGetJson, urlCookies } from '.'\r\nimport { ILogin } from 'src/data/login';\r\n\r\nexport type IAPIResponse = {\r\n  cookie: {\r\n    entr_id: string,\r\n    entr_key: string,\r\n    entr_hash: string,\r\n    musthave: string,\r\n    hotlog: string\r\n  },\r\n  session: {\r\n    entered: number,\r\n    user_id: string,\r\n    user_name: string,\r\n    user_hash: string,\r\n    is_moderator: number,\r\n    light_moderator: number,\r\n    section: string,\r\n    show_moderator_tools: number,\r\n    kb: string,\r\n    registered_unixtime: string,\r\n    guid: string,\r\n    last_error?: string,\r\n    user: {\r\n      id: string,\r\n      name: string,\r\n      is_moderator: boolean,\r\n      light_moderator: boolean,\r\n      kb: boolean,\r\n      section_owner: boolean,\r\n      section: string,\r\n      registered_unixtime: string,\r\n      balance: number\r\n    }\r\n  }\r\n}\r\n\r\nfunction convertResponse(response: IAPIResponse): ILogin {\r\n\r\n  const { session } = response;\r\n\r\n  return ({\r\n    userId: Number(session?.user_id),\r\n    userName: session?.user_name,\r\n    userHash: session?.user_hash,\r\n    lastError: session?.last_error\r\n  })\r\n\r\n}\r\n\r\nasync function fetchCookies(): Promise<ILogin| undefined>  {\r\n\r\n  const response = await fetchJsonpAndGetJson(urlCookies);\r\n  return convertResponse(response);\r\n\r\n}\r\n\r\nexport { fetchCookies }","import { domain, urlLogin, urlLogout, paramsToString } from '.'\r\n\r\nexport interface IRequest {\r\n  username: string,\r\n  password: string,\r\n}\r\n\r\nexport const fetchLogin = async (params: IRequest): Promise<void> => {\r\n  await fetch(`${domain}/${urlLogin}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', {user_name: params.username, user_password: params.password}),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Accept': 'text/html,application/xhtml+xml,application/xml',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: 'follow'\r\n  });\r\n}\r\n\r\nexport const fetchLogout = async (): Promise<void> => {\r\n  const fullUrl = `${domain}/${urlLogout}`;\r\n  await fetch(fullUrl, {\r\n    mode: 'no-cors',\r\n    credentials: 'include'\r\n  });\r\n}","import { createAction } from '@reduxjs/toolkit'\r\n\r\nimport { fetchCookies } from 'src/api/cookies';\r\nimport { fetchLogin, fetchLogout } from 'src/api/login'\r\nimport { RootState } from '../store';\r\n\r\nexport const loginStart = createAction('LOGIN_START');\r\nexport const loginComplete = createAction('LOGIN_COMPLETE', (userId, userName, userHash) => ({\r\n  payload: {\r\n    userId,\r\n    userName,\r\n    userHash,\r\n  },\r\n  error: false\r\n}));\r\nexport const loginFailed = createAction('LOGIN_COMPLETE', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\n\r\nexport const logoutStart = createAction('LOGOUT_START');\r\nexport const logoutComplete = createAction('LOGOUT_COMPLETE');\r\n\r\nexport const checkLoginStart = createAction('CHECK_LOGIN_START');\r\n\r\nconst shouldLogin = (state: RootState): boolean => {\r\n  const { login } = state;\r\n  if (!login) {\r\n    return true\r\n  }\r\n  if (login.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const checkLogin = () => async (dispatch: any) => {\r\n\r\n  dispatch(checkLoginStart());\r\n\r\n  let json;\r\n  try {\r\n    json = await fetchCookies();\r\n  } catch (e) {\r\n    dispatch(loginFailed(e));\r\n    return;\r\n  }\r\n \r\n  if (json && json.userId){\r\n\r\n    let error = (json.lastError || '').trim();\r\n    if (error === 'Не указано сообщение.') error = '';\r\n    dispatch(loginComplete(\r\n      json.userId,\r\n      json.userName,\r\n      json.userHash\r\n    ));\r\n  } else\r\n    dispatch(loginFailed(''));\r\n}\r\n\r\nexport const checkLoginIfNeeded = () => (dispatch: any, getState: any) => {\r\n  if (shouldLogin(getState())) {\r\n    return dispatch(checkLogin())\r\n  }\r\n}\r\n\r\nexport const doLogout = () => async (dispatch: any) => {\r\n\r\n  dispatch(logoutStart());\r\n\r\n  try {\r\n    await fetchLogout();\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  \r\n  dispatch(logoutComplete());\r\n  dispatch(checkLogin());\r\n\r\n}\r\n\r\nexport const doLogin = (params: any): any => async (dispatch: any) => {\r\n\r\n  dispatch(loginStart());\r\n\r\n  try {\r\n\r\n    await fetchLogin({\r\n      username: encodeURIComponent(params.username),\r\n      password: encodeURIComponent(params.password)\r\n    })\r\n\r\n    dispatch(checkLogin());\r\n\r\n  } catch (err) {\r\n    console.error('Login error :', err);\r\n    dispatch(loginFailed(err.message));\r\n  }\r\n\r\n}\r\n\r\nexport const doLoginIfNeeded = (params: any): any => (dispatch: any, getState: any) => {\r\n  if (shouldLogin(getState())) {\r\n    return dispatch(doLogin(params))\r\n  }\r\n}","import { createReducer } from '@reduxjs/toolkit'\r\nimport { initialState } from '.';\r\nimport { loginStart, loginComplete, logoutStart, logoutComplete, checkLoginStart } from './actions'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(loginStart, (state) => {\r\n      state.isFetching = true;\r\n    })\r\n    .addCase(loginComplete, (state, action) => {\r\n      if (action.error) {\r\n        state.logged = false;\r\n        state.error = action.payload.toString();\r\n      } else {\r\n\r\n        state.userId = action.payload.userId;\r\n        state.userName = action.payload.userName;\r\n        state.userHash = action.payload.userHash;\r\n        state.logged = true;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(logoutStart, (state) => {\r\n      state.isFetching = true;\r\n    })\r\n    .addCase(logoutComplete, (state) => {\r\n      state.isFetching = false;\r\n      state.logged = false;\r\n      delete state.userId;\r\n      delete state.userName;\r\n      delete state.userHash;\r\n      delete state.error;\r\n    })    \r\n})\r\n\r\nexport default reducer;\r\n","export interface ILogin {\r\n  userId?: number;\r\n  userName?: string,\r\n  userHash?: string,\r\n  lastError?: string,\r\n}\r\n\r\nexport interface ILoginState {\r\n  logged?: boolean,\r\n  userId?: number,\r\n  userName?: string,\r\n  userHash?: string,\r\n  lastError?: string,\r\n  error?: string,\r\n  lastUpdated?: number,\r\n  isFetching: boolean,\r\n}\r\n\r\nexport const initialState: ILoginState = {\r\n  isFetching: false\r\n}\r\n","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\nimport { RootState } from '../store'\r\n\r\nexport type TooltipKeys = {\r\n  type: 'TOPIC' | 'TOPIC_PREVIEW',\r\n  topicId: string,\r\n  number: number\r\n}\r\n\r\nexport type Coords = {\r\n  x: number,\r\n  y: number\r\n}\r\n\r\nexport type TooltipItem = {\r\n  keys: TooltipKeys,\r\n  coords: Coords\r\n}\r\n\r\nexport const createTooltip = createAction('CREATE_TOOLTIP', (keys, coords) => ({\r\n  payload: {\r\n    keys,\r\n    coords\r\n  },\r\n}));\r\nexport const closeTooltip = createAction('CLOSE_TOOLTIP', keys => ({\r\n  payload: {\r\n    keys\r\n  },\r\n}));\r\nexport const clearTooltips = createAction('CLEAR_TOOLTIPS');\r\n\r\nexport const showTooltip = (keys: TooltipKeys, coords: Coords): any => async (dispatch: any) => {\r\n\r\n  if (keys.type === 'TOPIC' || keys.type === 'TOPIC_PREVIEW') {\r\n    dispatch(createTooltip(keys, coords));\r\n  }\r\n}\r\n\r\nexport const clearTooltipsIfNeeded = (): any => (dispatch: any, getState: any) => {\r\n  const state: RootState = getState();\r\n  if (state.tooltips.items.length > 0) {\r\n    dispatch(clearTooltips());;\r\n  }\r\n}","//@flow\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { initialState } from '.';\r\nimport { createTooltip, closeTooltip, clearTooltips } from './actions'\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(createTooltip, (state, action) => {\r\n      const hash = JSON.stringify(action.payload.keys);\r\n      const index = state.items.findIndex(item => item.hash === hash);\r\n      let zIndex = 0;\r\n      if (state.items.length)\r\n        zIndex = state.items[state.items.length - 1].zIndex + 1;\r\n      if (index === - 1)\r\n        state.items.push({\r\n          keys: action.payload.keys,\r\n          coords: action.payload.coords,\r\n          hash,\r\n          zIndex \r\n        })\r\n      else {\r\n        //state.list = moveToEnd(state.list, index);\r\n        state.items[state.items.length - 1].zIndex = zIndex;\r\n      }  \r\n    })\r\n    .addCase(closeTooltip, (state, action) => {\r\n      let hash = JSON.stringify(action.payload.keys);\r\n      state.items = state.items.filter(val => val.hash !== hash);\r\n    })\r\n    .addCase(clearTooltips, (state) => {\r\n      state.items = [];\r\n    })    \r\n})\r\n\r\nexport default reducer;\r\n","export interface ITooltipKeys {\r\n  type: string,\r\n  topicId: number,\r\n  number: number\r\n}\r\n\r\nexport interface ICoords {\r\n  x: number,\r\n  y: number\r\n}\r\n\r\nexport interface ITooltipItem {\r\n  hash: string,\r\n  keys: ITooltipKeys,\r\n  coords: ICoords,\r\n  zIndex: number\r\n}\r\n\r\nexport interface ITooltipsList extends Array<ITooltipItem> {}\r\n\r\nexport interface ITooltipsState {\r\n  items: ITooltipsList,\r\n}\r\n\r\nexport const initialState: ITooltipsState = {\r\n  items: []\r\n}","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nimport * as API from 'src/api'\r\nimport type { RequestNewTopic } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\nimport type { ResponseSection } from 'src/api'\r\n\r\nexport type postNewTopicParams = {\r\n  subject: string,\r\n  text: string,\r\n  section: number,\r\n  forum: string,\r\n  isVoting: boolean,\r\n  votingItems?: Array<string>,\r\n  onSuccess?: () => void\r\n};\r\n\r\nexport const postNewTopicStart = createAction('POST_NEW_TOPIC_START');\r\nexport const postNewTopicComplete = createAction('POST_NEW_TOPIC_COMPLETE');\r\nexport const postNewTopicError = createAction('POST_NEW_TOPIC_ERROR', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\nexport const newTopicText = createAction('NEW_TOPIC_TEXT', text => ({\r\n  payload: {\r\n    text\r\n  },\r\n  error: false\r\n}));\r\nexport const newTopicClear = createAction('NEW_TOPIC_CLEAR');\r\nexport const newTopicSubject = createAction('NEW_TOPIC_SUBJECT', text => ({\r\n  payload: {\r\n    text\r\n  },\r\n  error: false\r\n}));\r\nexport const newTopicSection = createAction('NEW_TOPIC_SECTION', section => ({\r\n  payload: {\r\n    section\r\n  },\r\n  error: false\r\n}));\r\nexport const newTopicShowVoting = createAction('SHOW_VOTING', show => ({\r\n  payload: {\r\n    show\r\n  },\r\n  error: false\r\n}));\r\n\r\nexport const shouldPostNewTopic = (state: State): boolean => {\r\n  const newTopic = state.newTopic;\r\n  if (!newTopic) {\r\n    return false\r\n  }\r\n  if (newTopic.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const postNewTopicIfNeeded = (params: postNewTopicParams): any => (dispatch: any, getState: any) => {\r\n  if (shouldPostNewTopic(getState())) {\r\n    return dispatch(postNewTopic(params));\r\n  }\r\n}\r\n\r\nconst postNewTopic = (params: postNewTopicParams) => async (dispatch: any) => {\r\n\r\n  dispatch(postNewTopicStart());\r\n\r\n  let fetchParams: RequestNewTopic = {\r\n    message_text: encodeURIComponent(params.text),\r\n    topic_text: encodeURIComponent(params.subject),\r\n    target_section: String(params.section),\r\n    target_forum: params.forum.toLowerCase(),\r\n    action: 'new',\r\n    rnd: Math.round(Math.random() * 10000000000),\r\n    voting: params.isVoting ? 1 : 0\r\n  };\r\n\r\n  if (params.votingItems)\r\n    for (let i = 0; i < params.votingItems.length; i++) {\r\n      fetchParams[`section${i + 1}`] = params.votingItems[i];\r\n    }\r\n\r\n  await API.postNewTopic(fetchParams);\r\n\r\n  dispatch(postNewTopicComplete());\r\n\r\n  if (params.onSuccess)\r\n    params.onSuccess();\r\n}","//@flow\r\nimport { createReducer } from '@reduxjs/toolkit'\r\n\r\nimport { postNewTopicStart, postNewTopicComplete, postNewTopicError, newTopicText, \r\n  newTopicClear, newTopicSubject, newTopicSection, newTopicShowVoting} from './actions'\r\nimport type { NewTopicAction } from './actions/new_topic'\r\nimport type { ResponseSection } from 'src/api'\r\n\r\nexport type NewTopicState = {\r\n  isFetching: boolean,\r\n  section: ?ResponseSection,\r\n  text: string,\r\n  subject: string,\r\n  forum: string,\r\n  isVoting: boolean,\r\n  error?: ?string\r\n};\r\n\r\nexport const defaultNewTopicState: NewTopicState = {\r\n  isFetching: false,\r\n  section: null,\r\n  text: '',\r\n  subject: '',\r\n  forum: '1C',\r\n  isVoting: false\r\n}\r\n\r\nconst reducer = createReducer(defaultNewTopicState, (builder) => {\r\n  builder\r\n    .addCase(postNewTopicStart, (state) => {\r\n      state.isFetching = true;\r\n      delete state.error;\r\n    })\r\n    .addCase(postNewTopicComplete, (state) => {\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(postNewTopicError, (state, action) => {\r\n      state.isFetching = false;\r\n      state.error = action.payload;\r\n    })\r\n    .addCase(newTopicText, (state, action) => {\r\n      state.text = action.payload.text;\r\n    })    \r\n    .addCase(newTopicClear, (state) => {\r\n      state.text = '';\r\n      state.subject = '';\r\n      state.isVoting = false;\r\n    })    \r\n    .addCase(newTopicSubject, (state, action) => {\r\n      state.subject = action.payload.text;\r\n    })    \r\n    .addCase(newTopicShowVoting, (state, action) => {\r\n      state.isVoting = action.payload.show;\r\n    })   \r\n    .addCase(newTopicSection, (state, action) => {\r\n      state.section = action.payload.section;\r\n      state.forum = action.payload.section == null ? '' : action.payload.section.forum.toLowerCase()\r\n    })   \r\n  })\r\n\r\nconst newTopic = (state: NewTopicState = defaultNewTopicState, action: NewTopicAction): NewTopicState => {\r\n  switch (action.type) {\r\n    case 'POST_NEW_TOPIC_START':\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: undefined\r\n      }\r\n    case 'POST_NEW_TOPIC_COMPLETE':\r\n      return {\r\n        ...state,\r\n        isFetching: false\r\n      }\r\n    case 'POST_NEW_TOPIC_ERROR':\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        error: action.error\r\n      }\r\n    case 'NEW_TOPIC_SECTION':\r\n      return {\r\n        ...state,\r\n        section: action.section,\r\n        forum: action.section == null ? '' : action.section.forum.toLowerCase()\r\n      }\r\n    case 'NEW_TOPIC_TEXT':\r\n      return {\r\n        ...state,\r\n        text: action.text\r\n      }\r\n    case 'NEW_TOPIC_SUBJECT':\r\n      return {\r\n        ...state,\r\n        subject: action.text\r\n      }\r\n    case 'NEW_TOPIC_CLEAR':\r\n      return {\r\n        ...state,\r\n        text: '',\r\n        subject: '',\r\n        isVoting: false\r\n      }\r\n    case 'SHOW_VOTING':\r\n      return {\r\n        ...state,\r\n        isVoting: action.data\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer;","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\nimport * as API from 'src/api'\r\nimport type { RequestNewMessage } from 'src/api'\r\n\r\nexport const postNewMessageStart = createAction('POST_NEW_MESSAGE_START');\r\nexport const postNewMessageComplete = createAction('POST_NEW_MESSAGE_COMPLETE');\r\nexport const newMessageText = createAction('NEW_MESSAGE_TEXT', text => ({\r\n  payload: {\r\n    text,\r\n  }\r\n}));\r\nexport const addMessageText = createAction('ADD_MESSAGE_TEXT', text => ({\r\n  payload: {\r\n    text,\r\n  }\r\n}));\r\n\r\nexport type PostNewmessageParams = {\r\n  text: string,\r\n  topicId: string,\r\n  voting_select?: number,\r\n  onSuccess?: () => void\r\n}\r\n\r\nexport const postNewMessage = (params: PostNewmessageParams): any => async (dispatch: any) => {\r\n\r\n  dispatch(postNewMessageStart());\r\n\r\n  let fetchParams: RequestNewMessage = {\r\n    message_text: encodeURIComponent(params.text),\r\n    action: \"new\",\r\n    topic_id: params.topicId,\r\n    rnd: Math.round(Math.random() * 10000000000)\r\n  };\r\n\r\n  if (params.voting_select)\r\n    fetchParams.voting_select = params.voting_select;\r\n\r\n  try {\r\n    await API.postNewMessage(fetchParams);\r\n    await dispatch(postNewMessageComplete());\r\n    if (params.onSuccess)\r\n      params.onSuccess();\r\n\r\n  } catch (err) {\r\n    console.error(\"Failed to post new message: \" + err);\r\n  }\r\n}\r\n","//@flow\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { addMessageText, NewMessageAction, newMessageText, postNewMessageComplete, postNewMessageStart } from './actions'\r\n\r\nexport type NewMessageState = {\r\n  isFetching: boolean;\r\n  text: string\r\n};\r\n\r\nexport const initialState: NewMessageState = {\r\n  isFetching: false,\r\n  text: ''\r\n}\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(postNewMessageStart, (state) => {\r\n      state.isFetching = true;\r\n    })\r\n    .addCase(postNewMessageComplete, (state) => {\r\n      state.isFetching = false;\r\n    })  \r\n    .addCase(newMessageText, (state, action) => {\r\n      state.text = action.payload.text;\r\n    })  \r\n    .addCase(addMessageText, (state, action) => {\r\n      state.text += action.payload.text;\r\n    })            \r\n  })\r\n\r\nexport default reducer;","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nimport { fetchTopicMessage } from 'src/api/topicMessages'\r\nimport type { ResponseMessage } from 'src/api'\r\n\r\nexport type PreviewTextParams = {\r\n  topicId: string,\r\n  n: number\r\n}\r\n\r\nexport const showPreview = createAction('SHOW_PREVIEW', topicId => ({\r\n  payload: {\r\n    topicId   \r\n  }\r\n}));\r\nexport const closePreview = createAction('CLOSE_PREVIEW', topicId => ({\r\n  payload: {\r\n    topicId   \r\n  }\r\n}));\r\nexport const requestPreviewText = createAction('REQUEST_PREVIEW_TEXT', topicId => ({\r\n  payload: {\r\n    topicId   \r\n  }\r\n}));\r\nexport const recievePreviewText = createAction('RECEIVE_PREVIEW_TEXT', topicId => ({\r\n  payload: {\r\n    topicId,\r\n    message   \r\n  }\r\n}));\r\n\r\nexport const getTopicPreviewText = (params: PreviewTextParams): any => async (dispatch: any) => {\r\n\r\n  dispatch(requestPreviewText(params.topicId));\r\n\r\n  const json = await fetchTopicMessage(params.topicId, params.n);\r\n\r\n  if (json.length > 0)\r\n    dispatch(recievePreviewText(params.topicId, json[0]));\r\n}","import { configureStore  } from '@reduxjs/toolkit'\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport logger from 'redux-logger'\r\n\r\nimport topicsList from './topicslist/reducer'\r\nimport topic from './topic/reducer'\r\nimport sections from './sections/reducer'\r\nimport options from './options/reducer'\r\nimport login from './login/reducer'\r\nimport tooltips from './tooltips/reducer'\r\nimport newTopic from './newtopic/reducer'\r\nimport newMessage from './newmessage/reducer'\r\nimport topicPreview from './topic_preview/reducer'\r\n\r\nconst reducer = {\r\n  topicsList,\r\n  topic,\r\n  sections,\r\n  options,\r\n  login,\r\n  tooltips,\r\n  newTopic,\r\n  newMessage,\r\n  topicPreview  \r\n}\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n  devTools: process.env.NODE_ENV !== 'production'\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n\r\nexport default store","//@flow\r\nimport { createReducer } from '@reduxjs/toolkit'\r\n\r\nimport { showPreview, closePreview, requestPreviewText, recievePreviewText } from './actions'\r\n\r\nexport type TopicPreviewState = {\r\n  items: { [string]: ResponseMessage | null }\r\n};\r\n\r\nexport const defaultTopicPreviewState: TopicPreviewState = {\r\n  items: {}\r\n};\r\n\r\nconst reducer = createReducer(defaultTopicPreviewState, (builder) => {\r\n  builder\r\n    .addCase(showPreview, (state, action) => {\r\n      let previewItem = state[action.topicId];\r\n      if (previewItem === undefined)\r\n        state.items[action.topicId] = {\r\n          n: '0',\r\n          id: action.topicId,\r\n          text: '',\r\n          user: '',\r\n          userId: '',\r\n          utime: '0',\r\n          vote: 0\r\n        };\r\n    })\r\n    .addCase(closePreview, (state, action) => {\r\n      delete state.items[action.topicId];\r\n    })\r\n    .addCase(requestPreviewText, (state, action) => {\r\n\r\n    })\r\n    .addCase(recievePreviewText, (state, action) => {\r\n      let previewItem = state.items[action.topicId];\r\n      if (previewItem === undefined)\r\n        return state;\r\n      else\r\n        state.items[action.topicId] = action.message;\r\n    })\r\n  })    \r\n\r\nexport default reducer;","//@flow\r\nimport React, { FC, ReactElement } from 'react'\r\nimport { Dropdown } from 'react-bootstrap'\r\n\r\nimport { doLogout } from 'src/data/login/actions'\r\nimport { domain } from 'src/api'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport { useAppDispatch } from 'src/data/store'\r\n\r\ntype IProps = {\r\n  userId: number,\r\n  userName: string\r\n}\r\n\r\ntype HTMLProps = React.HTMLProps<HTMLSpanElement>\r\nconst CustomToggle = React.forwardRef<HTMLSpanElement, HTMLProps>(({ children, onClick }, ref) => (\r\n  <span\r\n    ref={ref}\r\n    style={{ cursor: \"pointer\" }}\r\n    className='link'\r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n  >\r\n    {children}\r\n  </span>\r\n));\r\n\r\nconst LoggedUser: FC<IProps> = ({ userId, userName }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onLogout = (event: any) => {\r\n    event.preventDefault();\r\n    dispatch(doLogout());\r\n  }\r\n\r\n  const onMenuSelect = (eventKey: any, event: any): any => {\r\n    if (eventKey === 'exit') {\r\n      onLogout(event);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ float: \"left\" }}>\r\n      <Dropdown id=\"dropdown-custom-menu\" onSelect={onMenuSelect}>\r\n        <span>Привет, </span>\r\n        <Dropdown.Toggle as={CustomToggle}>{userName} ▼</Dropdown.Toggle>\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item eventKey=\"profile\" href={`${domain}/users.php?id=${userId}`}>Профиль</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"myTopics\" href={`#/index.php?user_id=${userId}`}>Мои темы</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item eventKey=\"options\" href={`#/options.php`}>Настройки</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item eventKey=\"exit\">Выход</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoggedUser;","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FormControl, Button } from 'react-bootstrap'\r\n\r\nimport { doLoginIfNeeded } from 'src/data/login/actions'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { LoginState } from 'src/data/login/reducer'\r\nimport type { State } from 'src/reducers'\r\n\r\ntype Props = LoginState & DefaultProps;\r\n\r\nclass LoginForm extends Component<Props> {\r\n\r\n    username: any;\r\n    password: any;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.username = React.createRef();  \r\n        this.password = React.createRef();  \r\n    }\r\n        \r\n    onLogin = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const { dispatch } = this.props;\r\n\r\n        const params = {\r\n            username: this.username.current.value,\r\n            password: this.password.current.value\r\n        }\r\n        dispatch(doLoginIfNeeded(params));  \r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <form name=\"enterform\" className=\"flex-row\" style={{flexWrap: \"wrap\"}}>\r\n                    <FormControl \r\n                        type=\"text\" \r\n                        placeholder=\"Имя\" \r\n                        ref={this.username} \r\n                        size=\"sm\" \r\n                        style={{marginRight: \"5px\", flex: \"0 1 300px\"}}\r\n                    />\r\n                    <FormControl \r\n                        type=\"password\" \r\n                        placeholder=\"Пароль\" \r\n                        maxLength=\"20\" \r\n                        autoComplete=\"off\" \r\n                        ref={this.password}\r\n                        size=\"sm\" \r\n                        style={{marginRight: \"5px\", flex: \"0 1 300px\"}}\r\n                    />\r\n                    <Button \r\n                        size=\"sm\"\r\n                        variant=\"light\" \r\n                        onClick={this.onLogin}\r\n                    >Войти</Button>\r\n                </form>\r\n                <p style={{margin: \"0px\"}}>Войти можно на сайте <a href=\"https://forum.mista.ru/\">forum.mista.ru</a></p>\r\n                <a rel=\"nofollow\" href=\"https://forum.mista.ru/user_registration.php\">Регистрация</a>\r\n                <span style={{ margin: \"5px\" }}>|</span>\r\n                <a rel=\"nofollow\" href=\"https://forum.mista.ru/remember_password.php\">Забыли пароль?</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): LoginState => {\r\n    return state.login;\r\n}\r\n\r\nexport default ( connect(mapStateToProps)(LoginForm): any );","//@flow\r\nimport React from 'react'\r\n\r\nimport './error.css'\r\n\r\nconst ErrorElem = ({ text }): any => {\r\n  if (!text)\r\n    return null;\r\n\r\n  return (\r\n    <div className=\"error\" dangerouslySetInnerHTML={{ __html: text }}></div>\r\n  )\r\n}\r\n\r\nexport default ErrorElem;","import React, { FC, ReactElement, useEffect } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport LoggedUser from './logged_user'\r\nimport LoginForm from './login_form'\r\nimport ErrorElem from '../common/error'\r\n\r\nimport { checkLoginIfNeeded } from 'src/data/login/actions'\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\n\r\nconst mapState = (state: RootState) => {\r\n  return state.login;\r\n}\r\nconst connector = connect(mapState);\r\n\r\nconst Login: FC<ConnectedProps<typeof connector>> = ({ logged, userId, userName, error }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(checkLoginIfNeeded());\r\n  }, [dispatch]);\r\n\r\n  let elem: ReactElement;\r\n  if (logged === true)\r\n    elem = <LoggedUser userId={userId} userName={userName} />\r\n  else if (logged === false)\r\n    elem = <LoginForm />\r\n  else\r\n    elem = null;\r\n\r\n  return (\r\n    <>\r\n      {elem}\r\n      {error && <ErrorElem text={error} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connector(Login);","import React, { FC, ReactElement, useEffect } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nimport { getSectionsIfNeeded } from 'src/data/sections/actions'\r\n\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\n\r\nimport type { ISectionItem, ISectionsList, ISectionsTree } from 'src/data/sections'\r\n\r\ntype IProps = {\r\n  id: string,\r\n  items: ISectionsList,\r\n  tree?: ISectionsTree,\r\n  defaultValue: string,\r\n  selected: string,\r\n  style?: {},\r\n  size?: 'sm' | 'lg',\r\n  onChange: (e: any, value: ISectionItem) => void\r\n}\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const { items, tree } = state.sections;\r\n\r\n  return {\r\n    items,\r\n    tree\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\nconst Sections: FC<ConnectedProps<typeof connector> & IProps> = (props): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getSectionsIfNeeded());\r\n  }, [dispatch]);\r\n\r\n  const onSelect: (e: any) => void = (e: any) => {\r\n\r\n    const { items, onChange } = props;\r\n\r\n    if (onChange) {\r\n      const code = e.currentTarget.value;\r\n      const arr = items.filter(item => item.code === code);\r\n      if (arr.length > 0)\r\n        onChange(e, arr[0]);\r\n      else\r\n        onChange(e, null);\r\n    }\r\n  }\r\n\r\n  const { id, tree, defaultValue, selected, style, size } = props;\r\n\r\n  let sectionsElem = [];\r\n  for (let forum in tree) {\r\n\r\n    let group =\r\n      <optgroup key={forum} label={forum}>\r\n        {tree[forum].map((item) => (\r\n          <option key={item.id} value={item.code}>\r\n            {item.name}\r\n          </option>\r\n        ))}\r\n      </optgroup>\r\n\r\n    sectionsElem.push(group);\r\n  }\r\n\r\n  return (\r\n    <Form.Control as=\"select\"\r\n      onChange={onSelect}\r\n      value={selected}\r\n      style={style}\r\n      className='input'\r\n      size={size}\r\n      id={id}\r\n    >\r\n      <option value=\"\">{defaultValue}</option>\r\n      {sectionsElem}\r\n    </Form.Control>\r\n  )\r\n}\r\n\r\nexport { Sections };\r\nexport default connector(Sections);","//@flow\r\nimport React, { ReactElement, useEffect } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport queryString from 'query-string'\r\n\r\nimport Login from '../login'\r\nimport Sections from './sections'\r\nimport { getSectionsIfNeeded } from 'src/data/sections/actions'\r\n\r\nconst Header = (): ReactElement => {\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate()\r\n  const location = useLocation();\r\n  const params = queryString.parse(location.search);\r\n\r\n  useEffect(() => {\r\n    dispatch(getSectionsIfNeeded());\r\n  }, [dispatch]);  \r\n\r\n  const onSectionChange = (e, value) => {\r\n    if (value)\r\n      navigate(`/index.php?section=${value.code}`);\r\n    else\r\n      navigate(`/`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div className=\"header-left\">\r\n        <Login />\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <Sections\r\n          id=\"sect\"\r\n          defaultValue=\"--Все секции--\"\r\n          selected={String(params.section) || \"\"}\r\n          onChange={onSectionChange}\r\n          size=\"sm\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Header;","import React, { FC, ReactElement } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { getMaxPage } from 'src/utils'\r\n\r\ntype IProps = {\r\n  count: number,\r\n  topicId: number\r\n}\r\n\r\nconst Pages: FC<IProps> = ({ count, topicId }): ReactElement => {\r\n\r\n  let pages = [];\r\n  if (count > 100) {\r\n    let maxPage = getMaxPage(count);\r\n    for (let i = 1; i <= maxPage; i++) {\r\n      let href = `/topic.php?id=${topicId}&page=${i}`;\r\n      let text: string;\r\n      if (i > 3 && i < maxPage)\r\n        text = '•';\r\n      else\r\n        text = String(i);\r\n      pages.push(<Link key={i} className=\"agh\" style={{ margin: \"3px\" }} to={href}>{text}</Link>);\r\n    }\r\n  }\r\n\r\n  if (count > 20) {\r\n    let href = `/topic.php?id=${topicId}&page=last20#F`;\r\n    pages.push(<Link key=\"last20\" className=\"agh\" style={{ margin: \"3px\" }} to={href}>»</Link>);\r\n  }\r\n\r\n  return (\r\n    <span className=\"topic-pages\">\r\n      {pages}\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default Pages;","import React, { FC, ReactElement } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Pages from './pages';\r\nimport { ITopicsListItem } from 'src/data/topicslist';\r\nimport { RootState } from 'src/data/store';\r\n\r\ntype IProps = {\r\n  data: ITopicsListItem,\r\n  preview?: number\r\n};\r\n\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  return {\r\n    login: state.login,\r\n    topicPreview: state.topicPreview\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\n\r\nconst TopicNameCell: FC<ConnectedProps<typeof connector> & IProps> = ({ data, login }) => {\r\n\r\n  let href = `/topic.php?id=${data.id}`;\r\n  let classes = classNames('agb', 'mr5', {\r\n    'bold': data.count >= 100,\r\n    'mytopics': data.author === login.userName\r\n  });\r\n\r\n  let isVoting;\r\n  if (data.isVoting) {\r\n    isVoting = <span className=\"agh separator\">[±]</span>\r\n  }\r\n\r\n  let sectionHref = `/index.php?section=${data.sectionCode}`;\r\n  let section;\r\n\r\n  if (data.section) {\r\n    section = (\r\n      <span className=\"topic-section\">\r\n        <span className=\"agh\" style={{ margin: \"0px 5px\" }}>/</span>\r\n        <Link key=\"1\" rel=\"nofollow\" className=\"agh\" to={sectionHref} >{data.section}</Link>\r\n      </span>\r\n    )\r\n  }\r\n\r\n  let closed;\r\n  let down;\r\n  let text = data.text;\r\n  if (data.closed)\r\n    closed = <span className=\"agh\">Ø</span>\r\n\r\n  if (data.down)\r\n    down = <span className=\"agh\">↓</span>\r\n\r\n  if (data.sectionCode === 'job' && text.substring(0, 3) !== 'JOB')\r\n    text = 'JOB: ' + text;\r\n\r\n  else if (data.forum === 'life' && text.substring(0, 3) !== 'OFF')\r\n    text = 'OFF: ' + text;\r\n\r\n  else if (data.sectionCode === 'v7' && text.substring(0, 2) !== 'v7')\r\n    text = 'v7: ' + text;\r\n\r\n  return (\r\n    <div className=\"cell-title\">\r\n      <Link to={href} className={classes} dangerouslySetInnerHTML={{ __html: text }} style={{ overflowWrap: \"anywhere\" }}></Link>\r\n      {isVoting}\r\n      <Pages count={data.count} topicId={data.id} />\r\n      {closed}\r\n      {down}\r\n      {section}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default connector(TopicNameCell);","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { showTooltip } from '../../data/tooltips/actions'\r\n\r\nimport { getMaxPage, childrenToText } from 'src/utils';\r\nimport { fetchTopicInfo } from 'src/api/topicinfo'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { ResponseInfo, ResponseMessages } from 'src/api'\r\n\r\ntype LinkToPostProps = {\r\n  topicId: string,\r\n  number: number,\r\n  isPreview: boolean,\r\n  style: {}\r\n}\r\n\r\ntype StateProps = {\r\n  info: ResponseInfo,\r\n  items: ResponseMessages,\r\n  tooltipDelay: string\r\n}\r\n\r\ntype Props = LinkToPostProps & StateProps & DefaultProps;\r\n\r\nclass LinkToPost extends Component<Props, { text: string }> {\r\n\r\n  timer;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { children, number } = this.props;\r\n    if (children)\r\n      this.state = { text: childrenToText(children).join('') };\r\n    else\r\n      this.state = { text: String(number) };\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    if (!props.children) {\r\n      this.setState({ text: String(props.number) });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    if (this.state.text.startsWith(\"http\")) {\r\n\r\n      const { topicId } = this.props;\r\n      fetchTopicInfo(topicId)\r\n        .then(response => {\r\n          this.setState({\r\n            text: response.text\r\n          })\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  onMouseOver = (event) => {\r\n    event.persist();\r\n    const { tooltipDelay } = this.props;\r\n    this.timer = setTimeout(() => this.showToolTip(event), +tooltipDelay);\r\n  }\r\n\r\n  onClick = (event) => {\r\n    event.stopPropagation();\r\n    clearTimeout(this.timer);\r\n    this.showToolTip(event);\r\n  }\r\n\r\n  onMouseOut = (event) => {\r\n    clearTimeout(this.timer);\r\n  }\r\n\r\n  showToolTip = (e) => {\r\n    const { topicId, number, dispatch, isPreview } = this.props;\r\n\r\n    const coords = {\r\n      x: e.pageX,\r\n      y: e.pageY - 50 // remove navbar margin-top\r\n    }\r\n\r\n    const keys = {\r\n      type: isPreview ? 'TOPIC_PREVIEW' : 'TOPIC',\r\n      topicId,\r\n      number: +number\r\n    }\r\n    dispatch(showTooltip(\r\n      keys,\r\n      coords\r\n    ));\r\n  }\r\n\r\n  render() {\r\n\r\n    const { topicId, number, style, info } = this.props;\r\n    const page = getMaxPage(number);\r\n\r\n    let pageParam = '';\r\n    if (page > 1)\r\n      pageParam = `&page=${page}`;\r\n\r\n    let a;\r\n    if (info && topicId === info.id || !isNaN(this.state.text))\r\n      a = (\r\n        <span\r\n          onMouseOver={this.onMouseOver}\r\n          onMouseOut={this.onMouseOut}\r\n          onClick={this.onClick}\r\n          className='link'\r\n          style={{ ...style }}\r\n        >{this.state.text}</span>\r\n      )\r\n    else\r\n      a = (\r\n        <span>\r\n          <a href={`${window.hash}/topic.php?id=${topicId}${pageParam}#${number}`}\r\n            style={{ ...style }}\r\n          >{this.state.text}</a>{' '}\r\n                    (<span onMouseOver={this.onMouseOver}\r\n            onMouseOut={this.onMouseOut}\r\n            onClick={this.onClick}\r\n            className='link'\r\n          >{number}</span>)\r\n        </span>\r\n      )\r\n\r\n    return a;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  const {\r\n    items, info\r\n  } = state.topic;\r\n\r\n  return {\r\n    items,\r\n    info,\r\n    tooltipDelay: state.options.items['tooltipDelay']\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(LinkToPost): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport { useAppDispatch } from 'src/data/store';\r\nimport { togglePreview } from 'src/data/topicslist/actions';\r\n\r\ntype PreviewLinkProps = {\r\n  topicId: string,\r\n  expanded: boolean\r\n};\r\n\r\nconst PreviewLink = ({ topicId, expanded }) => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onClick = () => {\r\n    dispatch(togglePreview(topicId));\r\n  }\r\n\r\n  const text = expanded ? '-' : '+';\r\n  return (\r\n    <div className=\"cell-preview-link\" onClick={onClick}>\r\n      <span>{text}</span>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default connect()(PreviewLink);","//@flow\r\nimport React, { FC, ReactElement } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport dateFormat from 'dateformat'\r\n\r\nimport TopicNameCell from './topic_name_cell';\r\nimport LinkToPost from 'src/components/extensions/link_to_post'\r\nimport PreviewLink from './preview_link'\r\n\r\nimport { today } from 'src/utils'\r\nimport { RootState } from 'src/data/store';\r\nimport { ITopicsListItem } from 'src/data/topicslist';\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  return {\r\n    login: state.login,\r\n    showTooltipOnTopicsList: state.options.items.showTooltipOnTopicsList\r\n  }\r\n}\r\nconst connector = connect(mapState);\r\n\r\ntype IProps = {\r\n  data: ITopicsListItem\r\n}\r\n\r\nconst Row: FC<ConnectedProps<typeof connector> & IProps> = ({ data }): ReactElement => {\r\n\r\n  let time = new Date(data.updated);\r\n  let timeF: string;\r\n  if (today(time)) {\r\n    timeF = dateFormat(time, 'HH:MM')\r\n  } else {\r\n    timeF = dateFormat(time, 'dd.mm.yy');\r\n  }\r\n  return (\r\n    <div className=\"topics-list-row\">\r\n      <div className=\"cell-forum\">\r\n        {data.forum}\r\n      </div>\r\n      <div className=\"cell-section\">\r\n        {data.section}\r\n      </div>\r\n      <div className=\"cell-answ\">\r\n        <i className=\"fa fa-comments-o\" aria-hidden=\"true\" style={{marginRight: \"3px\"}}></i>\r\n        <LinkToPost topicId={data.id} number={data.count} style={{ color: \"inherit\" }} isPreview />\r\n      </div>\r\n      <PreviewLink topicId={data.id} expanded={data.showPreview} />\r\n      <TopicNameCell data={data} />\r\n      <div className=\"cell-author\">\r\n        <i aria-hidden=\"true\" className=\"fa fa-user-circle\" style={{marginRight: \"3px\"}}></i>\r\n        {data.author}\r\n      </div>\r\n      <div className=\"cell-lastuser\">\r\n        <div style={{ display: \"flex\" }}>\r\n          <span className=\"cell-lastuser-time\">{timeF}</span>\r\n          <span className=\"cell-lastuser-user\">{data.lastUser}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"cell-last20\">\r\n        <Link to={`/topic.php?id=${String(data.id)}&page=last20#F`} style={{ color: \"inherit\", display: \"block\", width: \"100%\", textAlign: \"center\" }}>{'>'}</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default connector(Row);","//@flow\r\nimport React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\n\r\nimport { paramsToString } from 'src/api'\r\nimport './pages.css'\r\n\r\ntype Props = {\r\n  locationParams: { page?: string },\r\n  baseUrl: string,\r\n  maxPage: number,\r\n  last20?: boolean\r\n}\r\n\r\nconst Pages = (props: Props): any => {\r\n\r\n  const { locationParams, baseUrl, maxPage, last20 } = props;\r\n  let currentPage;\r\n  if (!locationParams.page)\r\n    currentPage = 1;\r\n  else if (locationParams.page === \"last20\")\r\n    currentPage = \"last20\";\r\n  else\r\n    currentPage = parseInt(locationParams.page, 10) || 1;\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= maxPage; i++) {\r\n    let params = { ...locationParams, page: i };\r\n    let href = `${window.hash}/${baseUrl}` + paramsToString('?', params);\r\n\r\n    pages.push(<Pagination.Item active={currentPage === i} key={i} href={href}>{i}</Pagination.Item>);\r\n  }\r\n\r\n  if (last20 === true) {\r\n    let params = { ...locationParams, page: \"last20\" };\r\n    let href = `${window.hash}/${baseUrl}` + paramsToString('?', params);\r\n    pages.push(<Pagination.Item active={currentPage === \"last20\"} key=\"last20\" href={href}>»</Pagination.Item>);\r\n  }\r\n\r\n  return (\r\n    <Pagination style={{ margin: \"0px\" }}>\r\n      {pages}\r\n    </Pagination>\r\n  )\r\n\r\n}\r\n\r\nexport default Pages;","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FormControl, Button, ButtonGroup, Form } from 'react-bootstrap'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\n\r\nimport './text_editor.css'\r\n\r\ntype TextEditorProps = {\r\n  placeholder: string,\r\n  showVoting: boolean,\r\n  isVoting: boolean,\r\n  text: string,\r\n  isFetching: boolean,\r\n  formName: string,\r\n  onChange?: (e: any, text: string) => void,\r\n}\r\n\r\ntype Props = TextEditorProps & DefaultProps;\r\n\r\nclass TextEditor extends Component<Props> {\r\n\r\n  textArea;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.textArea = React.createRef();\r\n  }\r\n\r\n  onButtonCode1c = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    var openTag = '[1C]\\n';\r\n    var closeTag = '\\n[/1C]';\r\n\r\n    var textArea: any = this.textArea.current;\r\n\r\n    var start = textArea.selectionStart;\r\n    var end = textArea.selectionEnd;\r\n\r\n    var oldText = textArea.value;\r\n    var len = oldText.length;\r\n    var selectedText = oldText.substring(start, end);\r\n    var replacement = openTag + selectedText + closeTag;\r\n    var newText = oldText.substring(0, start) + replacement + oldText.substring(end, len);\r\n\r\n    const { dispatch, formName } = this.props;\r\n    dispatch({\r\n      type: formName + '_TEXT',\r\n      payload: {\r\n        text: newText\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  onVotingChange = (e: SyntheticEvent<HTMLInputElement>) => {\r\n    const { dispatch } = this.props;\r\n    dispatch({\r\n      type: 'SHOW_VOTING',\r\n      payload: {\r\n        show: e.currentTarget.checked\r\n      }\r\n    })\r\n  }\r\n\r\n  onChange = (e: SyntheticEvent<HTMLTextAreaElement>) => {\r\n    const { dispatch, formName } = this.props;\r\n    dispatch({\r\n      type: formName + '_TEXT',\r\n      payload: {\r\n        text: e.currentTarget.value\r\n      }  \r\n    })\r\n  }\r\n\r\n  onKeyPress = (e: SyntheticKeyboardEvent<HTMLTextAreaElement>) => {\r\n\r\n    if (e.key === 'Enter' && e.ctrlKey) {\r\n      let parent = e.currentTarget.parentElement;\r\n      while (parent && parent.tagName.toUpperCase() !== \"FORM\") {\r\n        parent = parent.parentElement;\r\n      }\r\n      if (parent)\r\n        parent.dispatchEvent(new Event(\"submit\", { cancelable: true, bubbles: true }));\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { placeholder, showVoting, isVoting, isFetching, text } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <FormControl\r\n          as=\"textarea\"\r\n          placeholder={placeholder}\r\n          cols=\"70\" rows=\"3\"\r\n          value={text}\r\n          onChange={this.onChange}\r\n          onKeyPress={this.onKeyPress}\r\n          ref={this.textArea}\r\n          className=\"text-editor input\"\r\n        />\r\n        <div className=\"flex-row\">\r\n          <ButtonGroup>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"light\"\r\n              onClick={this.onButtonCode1c}\r\n              style={{ marginRight: \"5px\" }}\r\n              className='button'\r\n            >Код 1С</Button>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"light\"\r\n              disabled={isFetching}\r\n              type=\"submit\"\r\n              className='button'\r\n            >\r\n              {isFetching ? 'Отправляется' : 'Отправить'}\r\n            </Button>\r\n          </ButtonGroup>\r\n          {showVoting &&\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              checked={isVoting}\r\n              onChange={this.onVotingChange}\r\n              label=\"Голосование\"\r\n              style={{ margin: \"auto 0px auto auto\" }} />\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default (connect()(TextEditor): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FormGroup } from 'react-bootstrap'\r\n\r\nimport type { ResponseSection } from 'src/api'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { State } from 'src/reducers'\r\nimport type { SectionsState } from 'src/data/sections/reducer'\r\nimport type { NewTopicState } from 'src/data/new_topic/reducer'\r\n\r\nimport { newTopicClear, newTopicSection, newTopicSubject, postNewTopicError, postNewTopicIfNeeded } from 'src/data/newtopic/actions'\r\nimport type { NewTopicAction, postNewTopicParams } from 'src/data/newtopic/actions'\r\n\r\nimport Sections from './sections'\r\nimport TextEditor from '../common/text_editor'\r\nimport ErrorElem from '../common/error'\r\n\r\nimport './new_topic.css'\r\n\r\ntype StateProps = {\r\n  sections: SectionsState,\r\n  newTopic: NewTopicState,\r\n}\r\n\r\ntype NewTopicProps = {\r\n  onSubmitSuccess?: () => void\r\n};\r\n\r\ntype Props = NewTopicProps & StateProps & DefaultProps;\r\n\r\nclass NewTopic extends Component<Props> {\r\n\r\n  currentSection: ?ResponseSection;\r\n\r\n  onSectionChange = (e: any, section: ResponseSection) => {\r\n    const { dispatch } = this.props;\r\n    this.currentSection = section;\r\n    dispatch(newTopicSection(section));\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n    const { dispatch, newTopic } = this.props;\r\n\r\n    let action: NewTopicAction;\r\n    if (!this.currentSection) {\r\n      dispatch(postNewTopicError('Не выбрана секция'));\r\n      return;\r\n    }\r\n\r\n    let subject = newTopic.subject;\r\n    if (!subject) {\r\n      dispatch(postNewTopicError('Не указана тема'));\r\n      return;\r\n    }\r\n\r\n    if (!newTopic.text) {\r\n      dispatch(postNewTopicError('Не указано сообщение'));\r\n      return;\r\n\r\n    }\r\n\r\n    let params: postNewTopicParams = {\r\n      subject,\r\n      text: newTopic.text,\r\n      section: this.currentSection.id,\r\n      forum: this.currentSection.forum,\r\n      isVoting: newTopic.isVoting,\r\n      votingItems: [],\r\n      onSuccess: this.onSubmitSuccess\r\n    };\r\n\r\n    if (newTopic.isVoting) {\r\n      params.votingItems = [];\r\n      for (let i = 1; i <= 10; i++) {\r\n        let val = this.refs[`vote${i}`].value;\r\n        if (val) {\r\n          params.votingItems.push(val);\r\n        }\r\n      }\r\n    }\r\n\r\n    dispatch(postNewTopicIfNeeded(params));\r\n  }\r\n\r\n  onSubjectChange = (e) => {\r\n\r\n    const { dispatch } = this.props;\r\n    dispatch(newTopicSubject(e.target.value));\r\n\r\n  }\r\n\r\n  onSubmitSuccess = () => {\r\n\r\n    const { dispatch } = this.props;\r\n    dispatch(newTopicClear());\r\n\r\n    if (this.props.onSubmitSuccess) {\r\n      this.props.onSubmitSuccess();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { sections, newTopic } = this.props;\r\n\r\n    let groupsElem = [];\r\n    for (let forum in sections.tree) {\r\n      groupsElem.push(<option key={forum} value={forum.toLowerCase()}>{forum}</option>);\r\n    }\r\n\r\n    let votingOptions = [];\r\n\r\n    if (newTopic.isVoting) {\r\n      votingOptions.push(<div key=\"p\">Варианты:</div>);\r\n      for (let i = 1; i <= 10; i++) {\r\n        votingOptions.push(\r\n          <InputGroup key={i} size=\"sm\" style={{ marginBottom: \"3px\", width: \"100%\" }}>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text\r\n                style={{ width: \"40px\" }} className='input'>\r\n                {`${i}.`}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"text\"\r\n              maxLength=\"50\"\r\n              ref={`vote${i}`}\r\n              className='input'\r\n            />\r\n          </InputGroup>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <form className=\"new-topic-container\" onSubmit={this.onSubmit}>\r\n        <div id=\"newtopic_form\" className=\"new-topic-text\">\r\n          <div><b>Новая тема:</b></div>\r\n          {newTopic.error && <ErrorElem text={newTopic.error} />}\r\n          <div className=\"flex-row\" style={{ marginBottom: \"3px\" }}>\r\n            <Form.Control as=\"select\"\r\n              size=\"sm\"\r\n              readOnly={true}\r\n              value={newTopic.forum}\r\n              style={{ flex: \"0 1 90px\" }}\r\n              className='input'\r\n            >\r\n              {groupsElem}\r\n            </Form.Control>\r\n            <Sections\r\n              defaultValue=\"Секция\"\r\n              id=\"target_section\"\r\n              size=\"sm\"\r\n              style={{ flex: \"1 1 auto\" }}\r\n              onChange={this.onSectionChange}\r\n            />\r\n          </div>\r\n          <Form.Control\r\n            type=\"text\"\r\n            size=\"sm\"\r\n            value={newTopic.subject}\r\n            onChange={this.onSubjectChange}\r\n            style={{ marginBottom: \"3px\" }}\r\n            className='input'\r\n            placeholder=\"Тема\"\r\n            maxLength=\"90\"\r\n          />\r\n          <TextEditor\r\n            placeholder=\"Сообщение\"\r\n            showVoting={true}\r\n            isVoting={newTopic.isVoting}\r\n            text={newTopic.text}\r\n            isFetching={newTopic.isFetching}\r\n            formName=\"NEW_TOPIC\"\r\n          />\r\n        </div>\r\n        <FormGroup className=\"new-topic-voting\">\r\n          {votingOptions}\r\n        </FormGroup>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    sections: state.sections,\r\n    newTopic: state.newTopic\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(NewTopic): any );","\r\nfunction highlight(text) {\r\n\r\n  const keywords = new Set(\r\n    \"|if|если|then|тогда|elsif|иначеесли|else|иначе|endif|конецесли|do|цикл|for|для|to|по|each|каждого|in|из|while|пока|enddo|конеццикла|procedure|процедура|endprocedure|конецпроцедуры|function|функция|endfunction|конецфункции|var|перем|export|экспорт|goto|перейти|and|и|or|или|not|не|val|знач|break|прервать|continue|продолжить|return|возврат|try|попытка|except|исключение|endtry|конецпопытки|raise|вызватьисключение|false|ложь|true|истина|undefined|неопределено|null|new|новый|execute|выполнить|\"\r\n      .split('|')\r\n  );\r\n\r\n  const Спецсиволы = new Set(\"():;.,=+-*<>?[]%/\".split(''));\r\n  const НачалоТега = \"<span class=\";\r\n  const КонецТега = \"</span>\";\r\n\r\n  const мЦветФона = \"bg>\";\r\n  const мЦветЧисла = \"num>\";\r\n  const мЦветСтроки = \"str>\";\r\n  //const мЦветПараметра = \"par>\";\r\n  const мЦветКомментария = \"com>\";\r\n  const мЦветСпецСимвола = \"sp>\";\r\n  const мЦветПрепроцессора = \"pr>\";\r\n  const мЦветКлючевогоСлова1 = \"key>\";\r\n\r\n\r\n  let СтрокаРезультат;\r\n  let УстановленЦвет;\r\n  let ПоследнийЦвет;\r\n\r\n  let ВСтроке = false;\r\n  let Токен = \"\";\r\n\r\n  function ПустаяСтрока(Строка) {\r\n    return Строка.trim() === '';\r\n  }\r\n\r\n  function Сред(Строка, Нач, Длина) {\r\n    return Строка.substr(Нач - 1, Длина);\r\n  }\r\n\r\n  function Прав(Строка, Длина) {\r\n    return Строка.substr(-Длина);\r\n  }\r\n\r\n  function isKeyword(token) {\r\n    return keywords.has(token.toLowerCase().trim());\r\n  }\r\n\r\n  function ДобавитьЧастьСтроки1С(Часть, Цвет) {\r\n\r\n    if (Часть === \" \" || ПоследнийЦвет === Цвет) {\r\n      СтрокаРезультат = СтрокаРезультат + Часть;\r\n    } else {\r\n      if (УстановленЦвет) {\r\n        СтрокаРезультат = СтрокаРезультат + КонецТега;\r\n        УстановленЦвет = false;\r\n      };\r\n\r\n      СтрокаРезультат = СтрокаРезультат + НачалоТега + Цвет + Часть;\r\n      УстановленЦвет = true;\r\n      ПоследнийЦвет = Цвет;\r\n    };\r\n  }\r\n\r\n  function РазукраситьСтроку(СтрокаКода) {\r\n\r\n    //  https://infostart.ru/profile/34707/public/\r\n    let ВСтрокеСкобка = false;\r\n    let ВСтрокеТильда = false;\r\n    let НачалоСтроки = 1;\r\n    let ТокенДоТочки = true;\r\n    // Заменяем 8 символьную табуляцию на 4 символьную пробелами\r\n\r\n    // Последовательно перебираются все символы строки кода\r\n    let Поз = 1;\r\n    for (Поз = 1; Поз <= СтрокаКода.length; Поз++) {\r\n\r\n      let ТекущийСимвол = СтрокаКода.charAt(Поз - 1);\r\n      if (ВСтроке) {\r\n\r\n        // Операции встрече символа \"кавычка\"\r\n        if (ТекущийСимвол === '\"') {\r\n          // Нашли парную кавычку - окрашиваем как строку\r\n          ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\r\n          ВСтроке = false;\r\n          Токен = \"\";\r\n          ТокенДоТочки = true;\r\n        } else {\r\n          Токен = Токен + ТекущийСимвол;\r\n        };\r\n\r\n      } else if (ВСтрокеСкобка) {\r\n\r\n        // Операции встрече символа \"кавычка\" литерал\r\n        if (ТекущийСимвол === \"'\") {\r\n          // Нашли парную скобку - окрашиваем как комментарий\r\n          ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\r\n          ВСтрокеСкобка = false;\r\n          Токен = \"\";\r\n          ТокенДоТочки = true;\r\n        } else {\r\n          Токен = Токен + ТекущийСимвол;\r\n        };\r\n\r\n      } else if (ТекущийСимвол === \" \") {\r\n        // Операции при встрече символа табуляции или пробела\r\n        if (!ПустаяСтрока(Токен)) {\r\n          // Пробел после токена, значит\r\n          // токен - ключевое слово...\r\n          if (ВСтрокеТильда) {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветСтроки);\r\n            ВСтрокеТильда = false;\r\n\r\n          } else if (isKeyword(Токен.trim())) {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветКлючевогоСлова1);\r\n\r\n          } else if (!isNaN(parseInt(Токен, 10))) {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветЧисла);\r\n\r\n          } else {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветФона);\r\n          };\r\n          Токен = \"\";\r\n        } else {\r\n          СтрокаРезультат = СтрокаРезультат + \" \";\r\n        };\r\n        ТокенДоТочки = true;\r\n\r\n      } else if (Спецсиволы.has(ТекущийСимвол)) {\r\n\r\n        // Встретился один из специальных символов\r\n        if (!ПустаяСтрока(Токен)) {\r\n          // Чтобы избежать окраски метода объекта с совпадающим именем\r\n          // с одним из ключевых слов, проверяем текущий символ на \".\"\r\n          if (ВСтрокеТильда) {\r\n\r\n            ДобавитьЧастьСтроки1С(Токен, мЦветСтроки);\r\n            ВСтрокеТильда = false;\r\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\r\n\r\n          } else if (ТокенДоТочки && isKeyword(Токен)) {\r\n            ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\r\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\r\n\r\n          } else {\r\n            // Не ключевое слово - значит число\r\n            if (!isNaN(parseInt(Токен, 10))) {\r\n              ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\r\n\r\n            } else {\r\n              ДобавитьЧастьСтроки1С(Токен, мЦветФона);\r\n            };\r\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\r\n          };\r\n          Токен = \"\";\r\n        };\r\n        // Один из специальных символов\r\n        if (ТекущийСимвол === \".\" && ПоследнийЦвет === мЦветЧисла) {\r\n          // Продолжение числа\r\n          ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветЧисла);\r\n          continue;\r\n\r\n        } else if (ТекущийСимвол === \"=\" && Сред(СтрокаКода, Поз - 1, 1) === \"<\") {\r\n          // Знак \"меньше или равно\" - вторая ошибка движка Инфостарт\r\n          ПоследнийЦвет = undefined;\r\n\r\n        } else if (ТекущийСимвол === \"/\" && Сред(СтрокаКода, Поз + 1, 1) === \"/\") {\r\n          // Проверяется на комментарий\r\n          ДобавитьЧастьСтроки1С(Прав(СтрокаКода, СтрокаКода.length - Поз + 1), мЦветКомментария);\r\n          return;\r\n        };\r\n        ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветСпецСимвола);\r\n\r\n      } else if (ТекущийСимвол === '\"' || ТекущийСимвол === \"|\") {\r\n\r\n        // Операции встрече символа \"кавычка\"\r\n        // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\r\n        if (ПустаяСтрока(Токен)) {\r\n          НачалоСтроки = Поз;\r\n          ВСтроке = true;\r\n        } else {\r\n          // Ошибка синтаксиса\r\n          ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\r\n          Токен = \"\";\r\n        };\r\n        ТокенДоТочки = true;\r\n\r\n      } else if (ТекущийСимвол === \"'\") {\r\n\r\n        // Операции встрече символа \"кавычка\" литерал\r\n        // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\r\n        if (ПустаяСтрока(Токен)) {\r\n          НачалоСтроки = Поз;\r\n          ВСтрокеСкобка = true;\r\n        } else {\r\n          // Ошибка синтаксиса\r\n          ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\r\n          Токен = \"\";\r\n        };\r\n        ТокенДоТочки = true;\r\n\r\n      } else if (ТекущийСимвол === \"#\" || (ТекущийСимвол === \"&\" && ПустаяСтрока(СтрокаРезультат))) {\r\n\r\n        // Встретился символ препроцессора\r\n        ДобавитьЧастьСтроки1С(Прав(СтрокаКода, СтрокаКода.length - Поз + 1), мЦветПрепроцессора);\r\n        Поз = СтрокаКода.length;\r\n        break;\r\n\r\n      } else if (ТекущийСимвол === \"~\") {\r\n        Токен = Токен + ТекущийСимвол;\r\n        ВСтрокеТильда = true;\r\n      } else {\r\n        // Остальные символы\r\n        Токен = Токен + ТекущийСимвол;\r\n      }\r\n    }\r\n\r\n    if (ВСтроке) {\r\n\r\n      // Многострочная строка\r\n      ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\r\n\r\n    } else if (ВСтрокеСкобка) {\r\n\r\n      // Незавершенный литерал\r\n      ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\r\n\r\n    } else if (!ПустаяСтрока(Токен)) {\r\n\r\n      // Анализируем последний токен строки кода\r\n      if (isKeyword(Токен)) {\r\n        ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\r\n\r\n      } else if (!isNaN(parseInt(Токен, 10))) {\r\n        ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\r\n\r\n      } else {\r\n        ДобавитьЧастьСтроки1С(Токен, мЦветФона);\r\n      };\r\n\r\n    };\r\n\r\n  }\r\n\r\n  ВСтроке = false;\r\n  Токен = \"\";\r\n  УстановленЦвет = false;\r\n  ПоследнийЦвет = undefined;\r\n  СтрокаРезультат = '';\r\n\r\n  let result = [];\r\n\r\n  for (let СтрокаКода of text.split('\\n')) {\r\n\r\n    if (ПустаяСтрока(СтрокаКода)) {\r\n      result.push('');\r\n      continue;\r\n    }\r\n\r\n    СтрокаРезультат = '';\r\n    РазукраситьСтроку(СтрокаКода);\r\n    if (УстановленЦвет && !ВСтроке) {\r\n      СтрокаРезультат += '</span>';\r\n      УстановленЦвет = false;\r\n      ПоследнийЦвет = '';\r\n      Токен = '';\r\n    } else if (!ВСтроке) {\r\n      ПоследнийЦвет = '';\r\n      Токен = '';\r\n    }\r\n\r\n    result.push(СтрокаРезультат);\r\n  }\r\n\r\n  return result.join('\\n');\r\n}\r\n\r\nexport default highlight;","//@flow\r\nimport React, { Component, useEffect } from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport queryString from 'query-string'\r\nimport { getTopicIfNeeded, getNewMessagesIfNeeded, clearTopicMessages } from 'src/data/topic/actions'\r\n\r\nimport type { DefaultProps, Location } from 'src/components'\r\nimport type { ResponseInfo, ResponseMessage, ResponseMessages } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\nimport type { LoginState } from 'src/data/login/reducer'\r\nimport type { OptionsItems } from 'src/data/options/reducer'\r\n\r\nimport Error from 'src/components/common/error'\r\nimport Pages from 'src/components/common/pages'\r\nimport Header from './header'\r\nimport TopicInfo from './topic_info'\r\nimport Row from './row'\r\nimport Footer from './footer'\r\nimport NewMessage from './new_message';\r\nimport { getMaxPage, extractTextFromHTML } from 'src/utils';\r\n\r\nimport './topic.css'\r\n\r\ntype TopicLocationParams = {\r\n  id: string,\r\n  page?: string,\r\n  hash?: string\r\n}\r\n\r\ntype StateProps = {\r\n  login: LoginState,\r\n  info: ResponseInfo,\r\n  item0?: ?ResponseMessage,\r\n  items: ResponseMessages,\r\n  error?: any,\r\n  options: OptionsItems\r\n}\r\n\r\ntype Props = {\r\n  getTopicIfNeeded: any,\r\n  getNewMessagesIfNeeded: any,\r\n  closeTopic: any,\r\n  clearText: any\r\n} & DefaultProps & StateProps\r\n\r\nvar scrolledToHash;\r\nvar timer;\r\n\r\nconst Topic = (props) => {\r\n  \r\n  const dispatch = useDispatch()\r\n  const location = useLocation();\r\n  let locationParams = queryString.parse(location.search);\r\n  if (!locationParams.page)\r\n    locationParams.page = 1;\r\n\r\n  const updateTopic = () => {\r\n\r\n    let { getTopicIfNeeded, item0 } = props;\r\n\r\n    if (locationParams.page !== 'last20') {\r\n      locationParams.page = +locationParams.page;\r\n      if (isNaN(locationParams.page))\r\n        locationParams.page = 1;\r\n    }\r\n\r\n    if (locationParams.id !== locationParams.id)\r\n      item0 = null;\r\n\r\n    getTopicIfNeeded(locationParams, null);\r\n  }\r\n\r\n  const onPostNewMessageSuccess = () => {\r\n\r\n    const { getNewMessagesIfNeeded, info } = props;\r\n\r\n    const isLastPage = (locationParams.page === 'last20' || locationParams.page === getMaxPage(+info.answers_count));\r\n\r\n    if (isLastPage)\r\n      getNewMessagesIfNeeded({\r\n        id: info.id,\r\n        last: parseInt(info.count, 10)\r\n      });\r\n\r\n  }\r\n  \r\n  const { login, items, item0, info, error } = props;\r\n  const maxPage = getMaxPage(info.count);\r\n\r\n  useEffect(() => {\r\n    if (info.title)\r\n      document.title = extractTextFromHTML(info.title);\r\n  }, [info.title]);\r\n\r\n  useEffect(() => {\r\n    updateTopic();\r\n  }, [dispatch, locationParams.id, locationParams.page]);\r\n    \r\n  useEffect(() => {\r\n    \r\n    const clearStore = () => {\r\n      dispatch(clearTopicMessages());\r\n      scrolledToHash = undefined;\r\n    }\r\n    return clearStore;\r\n\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!scrolledToHash &&\r\n      location.hash &&\r\n      props.items.length > 0) {\r\n      let nodeHash = document.getElementById(location.hash.slice(1));\r\n      if (nodeHash)\r\n        setTimeout(() => window.scrollTo(0, nodeHash.offsetTop), 1);\r\n      scrolledToHash = true;\r\n    }  \r\n  });  \r\n\r\n  return (\r\n    <div style={{ marginBottom: \"5px\" }}>\r\n      {error && <Error text={error.message} />}\r\n      <Header currentPage={locationParams.page} />\r\n      <div className=\"topic-table\">\r\n        <TopicInfo />\r\n        <Row key='0' data={item0} />\r\n        {items.map((item, i) => (\r\n          <Row key={item.n} data={item} />\r\n        ))}\r\n        {(maxPage > 1 || locationParams.page === \"last20\") &&\r\n          <div className=\"tf\">\r\n            <Pages baseUrl='topic.php' locationParams={locationParams} maxPage={maxPage} last20 />\r\n          </div>\r\n        }\r\n      </div>\r\n      <Footer locationParams={locationParams} />\r\n      {login.logged &&\r\n        <NewMessage onSubmitSuccess={onPostNewMessageSuccess} />\r\n      }\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nclass Topic1 extends Component<Props> {\r\n\r\n  locationParams: TopicLocationParams;\r\n  location: Location;\r\n  timer: any;\r\n  scrolledToHash: boolean;\r\n  nodeF: any;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.locationParams = { id: '' };\r\n    this.scrolledToHash = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.location = this.props.location;\r\n    this.updateTopic();\r\n\r\n    if (this.props.options.autoRefreshTopic === 'true') {\r\n\r\n      let autoRefreshTopicInterval = +this.props.options.autoRefreshTopicInterval;\r\n      if (autoRefreshTopicInterval < 60) autoRefreshTopicInterval = 60;\r\n\r\n      this.timer = setInterval(this.autoUpdate, autoRefreshTopicInterval * 1000);\r\n    }\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    \r\n    const { location, items, info } = this.props;\r\n    if (!this.scrolledToHash &&\r\n      location.hash &&\r\n      items.length > 0) {\r\n\r\n      this.scrolledToHash = true;\r\n      let nodeHash = document.getElementById(location.hash.slice(1));\r\n      if (nodeHash)\r\n        setTimeout(() => window.scrollTo(0, nodeHash.offsetTop), 1);\r\n    }\r\n\r\n    let title = info.text;\r\n    if (title && document.title !== title) {\r\n      \r\n      const parser = new DOMParser();\r\n      const floatingElement = parser.parseFromString(title, 'text/html');\r\n      title = floatingElement.firstChild.innerText;\r\n\r\n      document.title = title;\r\n    }\r\n    \r\n    if (this.location.search !== location.search) {\r\n      this.location = location;\r\n      this.updateTopic();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n    const { closeTopic, clearText } = this.props;\r\n\r\n    clearInterval(this.timer);\r\n    closeTopic();\r\n    clearText();\r\n  }\r\n\r\n  autoUpdate = () => {\r\n    const { info, getNewMessagesIfNeeded } = this.props;\r\n    const isLastPage = (this.locationParams.page === 'last20' || this.locationParams.page === getMaxPage(+info.answers_count));\r\n\r\n    if (isLastPage)\r\n      getNewMessagesIfNeeded({\r\n        id: info.id,\r\n        last: parseInt(info.answers_count, 10)\r\n      })\r\n  }\r\n\r\n  updateTopic = () => {\r\n\r\n    let { getTopicIfNeeded, item0 } = this.props;\r\n    let locationParams = queryString.parse(this.location.search);\r\n\r\n    if (!locationParams.page)\r\n      locationParams.page = 1;\r\n\r\n    else if (locationParams.page !== 'last20') {\r\n      locationParams.page = +locationParams.page;\r\n      if (isNaN(locationParams.page))\r\n        locationParams.page = 1;\r\n    }\r\n\r\n    if (locationParams.id !== this.locationParams.id)\r\n      item0 = null;\r\n\r\n    this.locationParams = locationParams;\r\n    getTopicIfNeeded(this.locationParams, item0);\r\n  }\r\n\r\n  onPostNewMessageSuccess = () => {\r\n\r\n    const { getNewMessagesIfNeeded, info } = this.props;\r\n\r\n    const isLastPage = (this.locationParams.page === 'last20' || this.locationParams.page === getMaxPage(+info.answers_count));\r\n\r\n    if (isLastPage)\r\n      getNewMessagesIfNeeded({\r\n        id: info.id,\r\n        last: parseInt(info.answers_count, 10)\r\n      });\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { login, items, item0, info, error } = this.props;\r\n    const maxPage = getMaxPage(+info.answers_count);\r\n\r\n    return (\r\n      <div style={{ marginBottom: \"5px\" }}>\r\n        {error && <Error text={error.message} />}\r\n        <Header currentPage={this.locationParams.page} />\r\n        <div className=\"topic-table\">\r\n          <TopicInfo />\r\n          <Row key='0' data={item0} />\r\n          {items.map((item, i) => (\r\n            <Row key={item.n} data={item} />\r\n          ))}\r\n          {(maxPage > 1 || this.locationParams.page === \"last20\") &&\r\n            <div className=\"tf\">\r\n              <Pages baseUrl='topic.php' locationParams={this.locationParams} maxPage={maxPage} last20 />\r\n            </div>\r\n          }\r\n        </div>\r\n        <Footer params={this.locationParams} />\r\n        {login.logged &&\r\n          <NewMessage onSubmitSuccess={this.onPostNewMessageSuccess} />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  const {\r\n    isFetching,\r\n    lastUpdated,\r\n    info,\r\n    item0,\r\n    items,\r\n    error\r\n  } = state.topic;\r\n\r\n  return {\r\n    login: state.login,\r\n    info,\r\n    item0,\r\n    items,\r\n    isFetching,\r\n    lastUpdated,\r\n    error,\r\n    options: state.options.items\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getTopicIfNeeded: (...params) => dispatch(getTopicIfNeeded(...params)),\r\n  getNewMessagesIfNeeded: (...params) => dispatch(getNewMessagesIfNeeded(...params)),\r\n  closeTopic: (...params) => dispatch(closeTopic(...params)),\r\n  clearText: () => dispatch({ type: 'NEW_MESSAGE_TEXT', text: '' })\r\n})\r\n\r\nexport default (connect(mapStateToProps, mapDispatchToProps)(Topic): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Form, FormControl, Button } from 'react-bootstrap'\r\n\r\nimport RadioOption from './radio_option'\r\nimport StringOption from './string_option'\r\n\r\nimport { saveOptions } from 'src/data/options/actions'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { OptionsState } from 'src/data/options/reducer'\r\nimport { defaultOptionsState } from 'src/data/options/reducer'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\nimport './options.css'\r\n\r\ntype Props = OptionsState & DefaultProps;\r\n\r\nexport const withNavigate = (Component: any) => {\r\n  return (props: any) => {\r\n    const navigate = useNavigate();\r\n    return <Component navigate={navigate} {...props} />;\r\n  };\r\n};\r\n\r\nclass Options extends Component<Props> {\r\n\r\n  optionsParams: any;\r\n  state: any;\r\n  form: any;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: props.options.items\r\n    };\r\n\r\n    this.optionsParams = {\r\n      'theme': {\r\n        type: 'radio',\r\n        label: 'Цветовая палитра:',\r\n        oneLine: true,\r\n        values: [\r\n          { name: 'yellow', descr: 'Золотая' },\r\n          { name: 'lightgray', descr: 'Серая' },\r\n          { name: 'dark', descr: 'Темная' }\r\n        ]\r\n      },\r\n      'topicsPerPage': {\r\n        type: 'number',\r\n        label: 'Тем на странице (max 99):',\r\n        min: 1,\r\n        max: 99\r\n      },\r\n      'autoRefreshTopicsList': {\r\n        type: 'checkbox',\r\n        label: 'Автообновление списка тем'\r\n      },\r\n      'autoRefreshTopicsListInterval': {\r\n        type: 'number',\r\n        label: '',\r\n        min: 60,\r\n        max: 1000000,\r\n        postfix: 'сек'\r\n      },\r\n      'autoRefreshTopic': {\r\n        type: 'checkbox',\r\n        label: 'Автообновление темы'\r\n      },\r\n      'autoRefreshTopicInterval': {\r\n        type: 'number',\r\n        label: '',\r\n        min: 60,\r\n        max: 1000000,\r\n        postfix: 'сек'\r\n      },\r\n      //Tooltips   \r\n      'showTooltips': {\r\n        type: 'checkbox',\r\n        label: 'Показывать тултипы, задержка'\r\n      },\r\n      'tooltipDelay': {\r\n        type: 'number',\r\n        max: 1000000,\r\n        label: '',\r\n        postfix: 'мс'\r\n      },\r\n      'showTooltipOnTopicsList': {\r\n        type: 'checkbox',\r\n        label: 'Показывать тултипы на главной странице, при наведении на кол-во ответов'\r\n      },\r\n      'showTooltipOnPostLink': {\r\n        type: 'checkbox',\r\n        label: 'Показывать тултип ссыки на другую ветку'\r\n      },\r\n      //links   \r\n      'showYoutubeVideoTitle': {\r\n        type: 'checkbox',\r\n        label: 'Показывать наименования роликов youtube'\r\n      },\r\n      'replaceCatalogMista': {\r\n        type: 'checkbox',\r\n        label: 'Обратно заменять catalog.mista.ru на infostart.ru'\r\n      },\r\n      'fixBrokenLinks': {\r\n        type: 'checkbox',\r\n        label: 'Чинить поломанные ссылки (с русскими символами)'\r\n      },\r\n    }\r\n\r\n    this.form = [\r\n      {\r\n        tabName: 'Общие',\r\n        rows: [\r\n          ['theme'],\r\n          ['topicsPerPage'],\r\n          ['autoRefreshTopicsList', 'autoRefreshTopicsListInterval'],\r\n          ['autoRefreshTopic', 'autoRefreshTopicInterval'],\r\n        ]\r\n      },\r\n      {\r\n        tabName: 'Тултипы',\r\n        rows: [\r\n          ['showTooltips', 'tooltipDelay'],\r\n          ['showTooltipOnTopicsList'],\r\n          ['showTooltipOnPostLink']\r\n        ]\r\n      },\r\n      {\r\n        tabName: 'Ссылки',\r\n        rows: [\r\n          ['showYoutubeVideoTitle'],\r\n          ['replaceCatalogMista'],\r\n          ['fixBrokenLinks'],\r\n        ]\r\n      }\r\n    ]\r\n\r\n  }\r\n\r\n  closeForm = () => {\r\n    const { navigate } = this.props;\r\n    navigate('/' + window.hash);\r\n  }\r\n\r\n  resetOptions = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      items: Object.assign({}, defaultOptionsState.items)\r\n    })\r\n  }\r\n\r\n  applyOptions = () => {\r\n\r\n    const { dispatch } = this.props;\r\n    dispatch(saveOptions(this.state.items));\r\n    this.closeForm();\r\n  }\r\n\r\n  onTabClick = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      activeTab: e.target.textContent\r\n    });\r\n  }\r\n\r\n  onChange = (e, name, value) => {\r\n\r\n    let items = Object.assign({}, this.state.items);\r\n    items[name] = value;\r\n    this.setState({\r\n      ...this.state,\r\n      items\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    let tabs = [];\r\n    for (let tab of this.form) {\r\n\r\n      let rows = [];\r\n      for (let i in tab.rows) {\r\n\r\n        const row = tab.rows[i];\r\n        let rowElem = [];\r\n        for (let name of row) {\r\n\r\n          const item = this.optionsParams[name];\r\n          if (!item) continue;\r\n\r\n          const value = this.state.items[name];\r\n\r\n          if (item.type === 'radio') {\r\n            rowElem.push(\r\n              <RadioOption\r\n                key={name}\r\n                name={name}\r\n                label={item.label}\r\n                values={item.values}\r\n                value={value}\r\n                oneLine={item.oneLine}\r\n                onChange={this.onChange}\r\n              />\r\n            );\r\n          } else if (item.type === 'number') {\r\n\r\n            if (item.label)\r\n              rowElem.push(\r\n                <label\r\n                  htmlFor={name}\r\n                  key={name + '_label'}\r\n                  style={{ fontWeight: \"inherit\" }}>\r\n                  {item.label}\r\n                </label>\r\n              );\r\n\r\n            rowElem.push(\r\n              <FormControl\r\n                key={name}\r\n                type=\"number\"\r\n                min={item.min}\r\n                max={item.max}\r\n                value={value}\r\n                onChange={(e) => this.onChange(e, name, e.target.value)}\r\n                style={{ flex: \"0 0 100px\", marginLeft: \"5px\" }}\r\n                className='input'\r\n                size=\"sm\"\r\n              >\r\n              </FormControl>\r\n            );\r\n\r\n            if (item.postfix) {\r\n              rowElem.push(\r\n                <span key={name + '_postfix'} style={{ marginLeft: \"5px\", flex: \"0 0 auto\", }}>{item.postfix}</span>\r\n              )\r\n            };\r\n\r\n          } else if (item.type === 'string') {\r\n            rowElem.push(\r\n              <StringOption\r\n                key={name}\r\n                name={name}\r\n                label={item.label}\r\n                postfix={item.postfix}\r\n                value={value}\r\n                onChange={this.onChange}\r\n              />\r\n            );\r\n          } else if (item.type === 'checkbox') {\r\n            rowElem.push(\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label={item.label}\r\n                key={name}\r\n                name={name}\r\n                checked={String(value) === 'true'}\r\n                onChange={(e) => this.onChange(e, name, e.target.checked)}\r\n                style={{ flex: \"0 0 auto\", margin: \"0px\", width: \"100%\" }}\r\n              />\r\n            );\r\n          }\r\n        }\r\n\r\n        rows.push(\r\n          <div key={i} className=\"options-row\">\r\n            {rowElem}\r\n          </div>\r\n        );\r\n\r\n      }\r\n\r\n      tabs.push(\r\n        <div key={tab.tabName}>\r\n          <div className=\"tab-header\">\r\n            {tab.tabName}\r\n          </div>\r\n          <div className=\"tab-content\">\r\n            {rows}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"options-form\">\r\n        <div className=\"options-header\" style={{ cursor: \"default\" }}>\r\n          <b>Настройки</b>\r\n        </div>\r\n        {tabs}\r\n        <div className=\"button-row\">\r\n          <Button\r\n            id=\"applyOptions\"\r\n            size=\"sm\"\r\n            variant=\"light\"\r\n            style={{ margin: \"5px\" }}\r\n            className='button'\r\n            onClick={this.applyOptions}>\r\n            OK\r\n                        </Button>\r\n          <Button\r\n            id=\"cancelOptions\"\r\n            size=\"sm\"\r\n            variant=\"light\"\r\n            style={{ margin: \"5px\", float: \"left\" }}\r\n            className='button'\r\n            onClick={this.closeForm}>\r\n            Отмена\r\n                        </Button>\r\n          <Button\r\n            id=\"defaultOptions\"\r\n            size=\"sm\"\r\n            variant=\"light\"\r\n            style={{ margin: \"5px\", float: \"right\" }}\r\n            className='button'\r\n            onClick={this.resetOptions}>\r\n            Сбросить настройки\r\n                        </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n\r\n  return {\r\n    options: state.options\r\n  };\r\n\r\n}\r\n\r\nexport default (connect(mapStateToProps)(withNavigate(Options)): any );","import React, { Component } from 'react'\r\nimport { childrenToText } from 'src/utils'\r\nimport highlight from './code_highlight'\r\nimport './code1c.css'\r\n\r\nclass Code extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onShowClick = this.onShowClick.bind(this);\r\n    this.state = { hidden: true };\r\n\r\n    const { children } = props;\r\n    if (children) {\r\n\r\n      const textArr = childrenToText(children);\r\n      this.text = textArr.join('');\r\n\r\n      // replace double new-lines\r\n      this.text = this.text\r\n        .replace(/\\n<br>/g, '\\n')\r\n        .replace(/<br>\\n/g, '\\n')\r\n        .replace(/\\r<br>/g, '\\n')\r\n        .replace(/<br>\\r/g, '\\n')\r\n        .replace(/<br>/g, '\\n');\r\n\r\n      // remove all leading|ending new-lines\r\n      while (this.text[0] === '\\n') {\r\n        this.text = this.text.substr(1);\r\n      }\r\n\r\n      while (this.text.substr(-1) === '\\n') {\r\n        this.text = this.text.substr(0, this.text.length - 1);\r\n      }\r\n\r\n      this.text = highlight(this.text);\r\n    }\r\n  }\r\n\r\n  onShowClick() {\r\n    this.setState({\r\n      hidden: !this.state.hidden\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    let buttonText;\r\n    let linesCount = 0;\r\n    if (this.text)\r\n      linesCount = this.text.split(\"\\n\").length;\r\n\r\n    if (this.state.hidden)\r\n      buttonText = `Показать: ${linesCount} строк`;\r\n    else\r\n      buttonText = 'Скрыть';\r\n\r\n    let buttonShow;\r\n    if (linesCount > 7)\r\n      buttonShow = (\r\n        <div className=\"expand-button-div\">\r\n          <span className=\"expand-button-span\" onClick={this.onShowClick}>{buttonText}</span>\r\n        </div>\r\n      );\r\n\r\n    let preStyle = {\r\n    }\r\n\r\n    if (this.state.hidden && linesCount > 7) {\r\n      preStyle.overflow = \"hidden\";\r\n      preStyle.height = \"135px\";\r\n    } else {\r\n      preStyle.overflow = \"auto\";\r\n      preStyle.height = \"auto\";\r\n    }\r\n\r\n    return (\r\n      <div style={{ marginTop: \"5px\" }}>\r\n        <pre className=\"code-pre\" style={preStyle} dangerouslySetInnerHTML={{ __html: this.text }}>\r\n        </pre>\r\n        {buttonShow}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Code;","//@flow\r\nimport React, { Component } from 'react'\r\n\r\ntype LinkToUserProps = {\r\n  href: string,\r\n  children: any\r\n}\r\n\r\nconst LinkToUser = ({ href, children }) => {\r\n  return <a href={href} className=\"registered-user\">{children}</a>\r\n}\r\n\r\nexport default LinkToUser;","import React, { FC, ReactElement, useEffect, useState } from 'react';\r\n\r\ntype IProps = {\r\n  href: string,\r\n}\r\n\r\nconst getVideoId = (href: string): string | null => {\r\n\r\n  let fullHref = href;\r\n  if (href.search(/http/) === -1) fullHref = 'http://' + fullHref;\r\n\r\n  try {\r\n    var url = new URL(fullHref);\r\n  } catch (e)  {\r\n    return null;\r\n  }\r\n\r\n  if (url.hostname.search(/youtube/) !== -1) {\r\n    return url.searchParams.get('v');\r\n\r\n  } else if (url.hostname.search(/youtu\\.be/) !== -1) {\r\n    return url.pathname.substring(1)\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nconst getVideoParams = async (videoId: string): Promise<{ hrefName: string, title: string }> => {\r\n\r\n  const apiKey = localStorage.getItem('youtubeApiKey') || 'AIzaSyCztN2QW4Fxw_1YuAHBTOZdYLbzigPz25g';\r\n  let apiUrl = `https://www.googleapis.com/youtube/v3/videos?key=${apiKey}&fields=items(snippet(title))&part=snippet&id=${videoId}`;\r\n  const response = await fetch(apiUrl);\r\n  const json = await response.json();\r\n\r\n  let title = json.items[0].snippet.title;\r\n  let hrefName = title;\r\n  let maxLength = 50;\r\n  if (title.length > maxLength + 5)\r\n    hrefName = hrefName.substring(0, maxLength) + '...'\r\n\r\n  return {\r\n    hrefName,\r\n    title\r\n  }\r\n}\r\n\r\nconst YoutubeLink: FC<IProps> = ({ href }): ReactElement => {\r\n\r\n  let [state, setState] = useState({\r\n    hrefName: href,\r\n    title: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    const run = async () => {\r\n\r\n      const videoId = getVideoId(href);\r\n      if (!videoId)\r\n        return;\r\n\r\n      try {\r\n        const params = await getVideoParams(videoId);\r\n        setState({\r\n          ...params\r\n        });\r\n\r\n      } catch (e) {\r\n        console.error('youtube', e.message);\r\n      }\r\n    }\r\n\r\n    run();\r\n  }, [href])\r\n\r\n  const prefix = 'youtube';\r\n  return (\r\n    <a href={href} title={state.title}>{`${prefix}: ${state.hrefName}`}</a>\r\n  )\r\n}\r\n\r\nexport default YoutubeLink;","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport URL from 'url-parse'\r\n\r\nimport LinkToPost from './link_to_post'\r\nimport LinkToUser from './link_to_user'\r\nimport YoutubeLink from './youtube_link'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\n\r\nimport { childrenToText } from 'src/utils'\r\n\r\ntype CustomLinkProps = {\r\n  href: string,\r\n  parentText: string,\r\n  target: string,\r\n  class: string,\r\n  rel: string,\r\n  showTooltipOnPostLink: string,\r\n  showYoutubeVideoTitle: string,\r\n  replaceCatalogMista: string,\r\n  fixBrokenLinks: string,\r\n}\r\n\r\ntype Props = CustomLinkProps & DefaultProps;\r\n\r\nclass CustomLink extends Component<Props> {\r\n\r\n  fixBrokenLink(href: string, parentText: string): string {\r\n    let escapedHref = href\r\n      .replace(/\\[/g, '\\\\[')\r\n      .replace(/\\]/g, '\\\\]')\r\n      .replace(/\\./g, '\\\\.')\r\n      .replace(/\\./g, '.')\r\n      .replace(/\\*/g, '\\\\*')\r\n      .replace(/\\+/g, '\\\\+')\r\n      .replace(/\\(/g, '\\\\(')\r\n      .replace(/\\)/g, '\\\\)')\r\n      .replace(/\\?/g, '\\\\?')\r\n      .replace(/\\//g, '\\\\/');\r\n\r\n    try {\r\n      let regExp = new RegExp(escapedHref + '<\\\\/a>(\\\\)|[а-яёА-ЯЁ0-9#\\\\-\\\\+\\\\_\\\\%\\\\?=]*)');\r\n      let arr = parentText.match(regExp);\r\n      if (arr && arr.length > 1) {\r\n        if (arr[1] === ')' && href.search('\\\\(') === -1) {\r\n          return href;\r\n        }\r\n        href = href + arr[1];\r\n        return href;\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    return href;\r\n  }\r\n\r\n  render() {\r\n\r\n    const { href, children, parentText,\r\n      showTooltipOnPostLink, showYoutubeVideoTitle, replaceCatalogMista, fixBrokenLinks } = this.props;\r\n\r\n    try {\r\n      var url = new URL(href, true);\r\n    } catch (error) {\r\n      console.error(error.message, href);\r\n      return <a href={href}>{href}</a>;\r\n    }\r\n\r\n\r\n    let newHref = href;\r\n    if (newHref.startsWith('/')) {\r\n      url.set('protocol', 'https')\r\n      url.set('hostname', 'forum.mista.ru')\r\n      newHref = url.href;\r\n    }\r\n\r\n    if (showTooltipOnPostLink === 'true') {\r\n      if (url.hostname.search(/forum\\.mista.ru/) !== -1) {\r\n\r\n        if (url.pathname === '/topic.php') {\r\n          return (\r\n            <LinkToPost topicId={url.query.id} number={url.hash.replace('#', '') || \"0\"}>\r\n              {childrenToText(children)}\r\n            </LinkToPost>\r\n          )\r\n        } else if (url.pathname === '/users.php') {\r\n          return (\r\n            <LinkToUser href={url.href} >\r\n              {children}\r\n            </LinkToUser>\r\n          )\r\n        }\r\n      }\r\n\r\n      if (url.hostname === 'a-sitnikov.github.io' &&\r\n        url.pathname === '/react.mista/') {\r\n\r\n        if (Object.keys(url.query).length === 0) {\r\n\r\n          url = new URL(href.replace(/#\\//, ''), true);\r\n          if (url.pathname === '/react.mista/topic.php')\r\n            return (\r\n              <LinkToPost topicId={url.query.id} number={url.hash.replace('#', '') || \"0\"}>\r\n                {childrenToText(children)}\r\n              </LinkToPost>\r\n            )\r\n        }\r\n      }\r\n    }\r\n\r\n    if (showYoutubeVideoTitle === 'true')\r\n      if (url.hostname.search(/youtube/) !== -1\r\n        || url.hostname.search(/youtu\\.be/) !== -1) {\r\n        return <YoutubeLink href={href} />\r\n      }\r\n\r\n    if (replaceCatalogMista === 'true')\r\n      if (url.hostname.search(/catalog\\.mista/) !== -1) {\r\n        url.set('hostname', 'infostart.ru')\r\n\r\n        return (\r\n          <a target={this.props.target}\r\n            className={this.props.class}\r\n            rel={this.props.rel}\r\n            href={url.href} >{url.href} </a>\r\n        )\r\n      }\r\n\r\n    if (fixBrokenLinks === 'true' && parentText) {\r\n      newHref = this.fixBrokenLink(newHref, parentText);\r\n    }\r\n\r\n    return (\r\n      <a target={this.props.target}\r\n        className={this.props.class}\r\n        rel={this.props.rel}\r\n        href={newHref} >{children}</a>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  const {\r\n    showTooltipOnPostLink,\r\n    showYoutubeVideoTitle,\r\n    replaceCatalogMista,\r\n    fixBrokenLinks\r\n  } = state.options.items;\r\n\r\n  return {\r\n    showTooltipOnPostLink,\r\n    showYoutubeVideoTitle,\r\n    replaceCatalogMista,\r\n    fixBrokenLinks\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(CustomLink): any );","//@flow\r\nimport React from 'react'\r\nimport { domain } from 'src/api'\r\n\r\nimport type { ResponseVoteItem } from 'src/api'\r\n\r\ntype Props = {\r\n  topicId: string,\r\n  data: ResponseVoteItem,\r\n  colors: Array<string>,\r\n  total: number,\r\n  n: number\r\n}\r\n\r\nconst VoteItem = (props: Props) => {\r\n\r\n  const { topicId, data, total, n, colors } = props;\r\n\r\n  const img = `${domain}/css/voting${n}.png`;\r\n\r\n  let percent = 0;\r\n\r\n  if (total) {\r\n    percent = Math.round(100 * data.result / total);\r\n  }\r\n\r\n  const imgStyle = { maxWwidth: \"500px\", width: \"100%\", height: \"15px\" };\r\n\r\n  return (\r\n    <div className=\"voting-item\">\r\n      <div className=\"voting-title\">\r\n        <a rel=\"nofollow\" style={{ textDecoration: \"none\" }} href={`${window.hash}/topic.php?id=${topicId}&sel=${n}`}>\r\n          <b><span style={{ color: colors[n - 1] }}>{`${n}. ${data.select}`}</span></b>\r\n        </a>\r\n      </div>\r\n      <div className=\"voting-percentage\">\r\n        {/*<div className=\"div-va-middle\">*/}\r\n        <b><span style={{ color: colors[n - 1] }}>{`${percent}% (${data.result})`}</span></b>\r\n        {/*</div>*/}\r\n      </div>\r\n      <div className=\"voting-bar\">\r\n        <div style={{ width: `${percent}%` }}>\r\n          <a href={img}>\r\n            <img src={img} style={imgStyle} alt={`п${n}`} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default (VoteItem: any);","//@flow\r\nimport React from 'react'\r\nimport VoteItem from './vote_item'\r\nimport type { ResponseVoteItem } from 'src/api'\r\n\r\ntype Props = {\r\n  items: Array<ResponseVoteItem>,\r\n  topicId: string,\r\n  colors: Array<string>\r\n}\r\n\r\nconst VoteChart = (props: Props) => {\r\n\r\n  const { items, topicId, colors } = props;\r\n\r\n  let total = items.reduce((sum, e) => sum + e.result, 0);\r\n\r\n  return (\r\n    <div style={{ marginBottom: \"10px\" }}>\r\n      {items.filter(val => val.select).map((data, i) => <VoteItem key={i} data={data} total={total} n={i + 1} topicId={topicId} colors={colors} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default (VoteChart: any);","import React, { Component } from 'react'\r\n\r\nclass Vote extends Component {\r\n\r\n  render() {\r\n    const { colors, info, vote } = this.props;\r\n\r\n    const voteOption = info[vote - 1];\r\n    return (\r\n      <div style={{ marginTop: \"5px\" }}>\r\n        <b><span style={{ color: colors[vote - 1] }}>{`${vote}. ${voteOption.select}`}</span></b>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Vote;","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport activeHtml from 'react-active-html';\r\n\r\nimport Code from 'src/components/extensions/code1c'\r\nimport LinkToPost from 'src/components/extensions/link_to_post'\r\nimport CustomLink from 'src/components/extensions/custom_link'\r\n\r\nimport VoteChart from './vote_chart'\r\nimport Vote from './vote'\r\n\r\nimport type { ResponseInfo, ResponseMessage } from 'src/api'\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { State } from 'src/reducers'\r\n\r\ntype MsgTextProps = {\r\n  topicId: string,\r\n  n: string,\r\n  html: string,\r\n  vote: number,\r\n  data: ResponseMessage,\r\n  style: {}\r\n}\r\n\r\ntype StateProps = {\r\n  info: ResponseInfo,\r\n  showTooltips: string,\r\n  voteColors?: Array<string>\r\n}\r\n\r\ntype Props = MsgTextProps & StateProps & DefaultProps;\r\n\r\nclass MsgText extends Component<Props> {\r\n\r\n  processLinksToPosts(text: string): string {\r\n\r\n    const { topicId } = this.props;\r\n\r\n    const regexp = /(\\()(\\d+)(\\))/gi; // (12)\r\n    return text.replace(regexp, (res, ...segments) => {\r\n      const number = segments[1];\r\n      return `(<link data-topicid='${topicId}' data-number='${number}' ></link>)`\r\n    });\r\n  }\r\n\r\n  processCode1C(text: string): string {\r\n\r\n    const regexp = /(\\[1[CС]\\])((.|\\n|\\r)*?)(\\[\\/1[CС]\\])/gi; // [1C] text [/1C]\r\n    return text.replace(regexp, (res, ...segments) => {\r\n      let txt = segments[1];\r\n\r\n      //remove first <br>\r\n      if (txt.substr(0, 4) === \"<br>\")\r\n        txt = txt.substr(4);\r\n      return `<code>${txt}</code>`\r\n    });\r\n  }\r\n\r\n  processText(text: ?string): ?string {\r\n\r\n    if (!text)\r\n      return text;\r\n\r\n    const { showTooltips } = this.props;\r\n\r\n    text = this.processCode1C(text);\r\n\r\n    if (showTooltips === 'true')\r\n      text = this.processLinksToPosts(text);\r\n\r\n    return text;\r\n  }\r\n\r\n  render() {\r\n    const { topicId, n, html, vote, info, style, voteColors } = this.props;\r\n\r\n    let voteElement;\r\n    if (vote && info.voting && topicId === info.id) {\r\n      let voteOption = info.voting[vote - 1];\r\n      if (voteOption)\r\n        voteElement = <Vote info={info.voting} vote={vote} colors={voteColors} />\r\n    }\r\n\r\n    let voteChart;\r\n    if (n === \"0\" && info.is_voting === 1 && info.voting) {\r\n      voteChart = <VoteChart items={info.voting} topicId={topicId} colors={voteColors} />\r\n    }\r\n\r\n    let processedHtml = this.processText(html);\r\n    const componentsMap = {\r\n      link: props => <LinkToPost topicId={props['data-topicid']} number={props['data-number']} key={props.key} />,\r\n      code: props => <Code {...props} />,\r\n      a: props => <CustomLink {...props} parentText={processedHtml} />\r\n    };\r\n    let textComponent = activeHtml(processedHtml, componentsMap);\r\n\r\n    return (\r\n      <div className=\"message\" style={{ ...style }}>\r\n        {voteChart}\r\n        <div>\r\n          {textComponent}\r\n        </div>\r\n        {voteElement}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  const { info } = state.topic;\r\n\r\n  return {\r\n    info,\r\n    voteColors: state.options.voteColors,\r\n    showTooltips: state.options.items['showTooltips']\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(MsgText): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport dateFormat from 'dateformat'\r\n\r\nimport './topic_preview.css'\r\n\r\ntype TopicPreviewProps = {\r\n    user: ?string,\r\n    utime: ?number,\r\n    topicId: string,\r\n    n: number,\r\n    onFirst: any,   \r\n    onLast: any,   \r\n    onPrev: any,   \r\n    onNext: any\r\n}\r\n\r\nclass PreviewHeader extends Component<TopicPreviewProps> {\r\n\r\n    render() {\r\n        const { user, utime, topicId, n } = this.props;\r\n\r\n        if (utime)\r\n            var date = new Date(utime*1000);\r\n\r\n        return (\r\n            <div>\r\n                <span className=\"plus-nav\" onClick={this.props.onFirst}>[← </span>\r\n                <span className=\"plus-nav\" onClick={this.props.onPrev}> « </span>\r\n                <Link className=\"plus-nav\" title={`Перейти к сообщению ${n}`} to={`/topic.php?id=${topicId}#${n}`}>{n}</Link>\r\n                <span className=\"plus-nav\" onClick={this.props.onNext}> » </span>\r\n                <span className=\"plus-nav\" onClick={this.props.onLast}> →]</span>\r\n                <b style={{margin: \"auto 5px\"}}>{user}</b>\r\n                <span className=\"agh\">{dateFormat(date, 'dd.mm.yy - HH:MM')}</span>\r\n            </div>\r\n        )    \r\n    }\r\n\r\n}\r\n\r\nexport default ( PreviewHeader: any );","//@flow\r\nimport React, { Component } from 'react'\r\n\r\nimport { fetchTopicMessage } from 'src/api/topicMessages'\r\n\r\nimport MsgText from 'src/components/topic/row/msg_text'\r\n\r\nimport PreviewHeader from './preview_header'\r\nimport './topic_preview.css'\r\n\r\ntype TopicPreviewProps = {\r\n    topicId: string,\r\n    n: number   \r\n}\r\n\r\ntype Props = TopicPreviewProps;\r\ntype State = {\r\n    n: number,\r\n    data: ?any,\r\n    error: ?string    \r\n}\r\n\r\nclass TopicPreview extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            n: props.n,\r\n            data: null,\r\n            error: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.fetchData(this.state.n);\r\n    }\r\n\r\n    fetchData = async (n: number) => {\r\n        let data, error;\r\n        try {\r\n            data = await fetchTopicMessage(this.props.topicId, n);\r\n            if (!data)\r\n                error = `Сообщение не найдено ${n}`;\r\n\r\n        } catch(e) {\r\n            error = e.message\r\n        };\r\n        this.setState({\r\n            n,\r\n            data,\r\n            error\r\n        })\r\n    }\r\n\r\n    onClickFirst = () => {\r\n        this.fetchData(0);\r\n    }\r\n    \r\n    onClickNext = () => {\r\n        this.fetchData(this.state.n + 1);\r\n    }\r\n\r\n    onClickPrev = () => {\r\n        if (this.state.n > 0)\r\n            this.fetchData(this.state.n - 1);\r\n    }\r\n\r\n    onClickLast = async () => {\r\n        const n = await API.getTopicMessagesCount(this.props.topicId);\r\n        this.fetchData(n);\r\n    }\r\n\r\n    render() {\r\n        const { topicId } = this.props;\r\n        const { data, error, n } = this.state;\r\n        if (!data && !error)\r\n            return null;\r\n\r\n        if (data)\r\n            var { user, utime } = data;\r\n\r\n        return (\r\n            <div className=\"topic-preview\">\r\n                <PreviewHeader \r\n                    user={user}\r\n                    utime={+utime}\r\n                    topicId={topicId}\r\n                    n={n}\r\n                    onFirst={this.onClickFirst}\r\n                    onLast={this.onClickLast}\r\n                    onNext={this.onClickNext}\r\n                    onPrev={this.onClickPrev}\r\n                />\r\n                {data && <MsgText \r\n                    data={data} \r\n                    html={data.text} \r\n                    topicId={topicId} \r\n                    style={{maxHeight: \"500px\", overflowY: \"auto\", overflowWrap: \"break-word\"}}\r\n                />}\r\n                {error && <p>{error}</p>}\r\n            </div>\r\n        )    \r\n    }\r\n\r\n}\r\n\r\nexport default ( TopicPreview: any );","import React, { FC, ReactElement, useEffect } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { useLocation } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\n\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\nimport { getTopicsListIfNeeded } from 'src/data/topicslist/actions'\r\n\r\nimport Header from './header'\r\nimport Row from './row'\r\nimport Pages from 'src/components/common/pages'\r\nimport NewTopic from './new_topic'\r\nimport Error from 'src/components/common/error'\r\n\r\nimport TopicPreview from 'src/components/preview/topic_preview'\r\n\r\nimport './topics_list.css'\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  return {\r\n    topicsList: state.topicsList,\r\n    sections: state.sections,\r\n    login: state.login,\r\n    options: state.options\r\n  }\r\n}\r\n\r\nconst connector = connect(mapState);\r\n\r\nconst TopicsList: FC<ConnectedProps<typeof connector>> = ({ topicsList, sections }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch()\r\n  const location = useLocation();\r\n  const locationParams = queryString.parse(location.search);\r\n\r\n  const updateTopicsList = () => {\r\n    dispatch(getTopicsListIfNeeded(locationParams));\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = 'React.Mista';\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateTopicsList();\r\n  }, [location.search]);\r\n\r\n  let rows = [];\r\n  for (let item of topicsList.items) {\r\n\r\n    rows.push(<Row key={item.id} data={item} />);\r\n    if (item.showPreview)\r\n      rows.push(\r\n        <div key={`preview${String(item.id)}`} className=\"preview-container\">\r\n          <TopicPreview topicId={String(item.id)} n={0} />\r\n        </div>\r\n      )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {topicsList.error && (<Error text={topicsList.error} />)}\r\n      <div className=\"table\">\r\n        <div className=\"th\" style={{ position: \"sticky\", top: \"39px\" }}>\r\n          <div style={{ letterSpacing: \"-1px\" }}>Раздел</div>\r\n          <div>Re</div>\r\n          <div></div>\r\n          <div>Тема</div>\r\n          <div>Автор</div>\r\n          <div><span style={{ cursor: \"pointer\" }} title=\"Обновить список\" onClick={updateTopicsList}>{topicsList.isFetching ? \"Обновляется\" : \"Обновлено\"}</span></div>\r\n        </div>\r\n        {rows}\r\n        <div className=\"tf\">\r\n          <Pages baseUrl='index.php' locationParams={locationParams} maxPage={10} />\r\n        </div>\r\n      </div>\r\n      <div id=\"F\" className=\"newtopic\" style={{ marginBottom: \"10px\", marginTop: \"5px\", position: 'relative' }}>\r\n        <NewTopic \r\n          sections={sections.items} \r\n          locationParams={locationParams} \r\n          onSubmitSuccess={updateTopicsList}\r\n          />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connector(TopicsList);","import React, { FC, ReactElement } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux'\r\n\r\nimport { RootState } from 'src/data/store'\r\nimport Login from 'src/components/login'\r\n\r\nconst mapState = (state: RootState) => {\r\n  return {\r\n    info: state.topic.info,\r\n    login: state.login\r\n  }  \r\n}\r\nconst connector = connect(mapState);\r\n\r\nconst Header: FC<ConnectedProps<typeof connector>> =  ({ info, login }): ReactElement => {\r\n\r\n  const forums = {\r\n    '1c': '1С:Предприятие',\r\n    'life': 'О жизни',\r\n    'it': 'Информационные технологии',\r\n    'job': 'Работа'\r\n  };\r\n\r\n  return (\r\n\r\n    <div className=\"flex-row\">\r\n      <div className=\"header-left\">\r\n        <Login/>\r\n      </div>\r\n      <div className=\"header-right\">\r\n        <span id=\"forum_string\" className=\"bold120\">\r\n          <a rel=\"nofollow\" href={`#/index.php?forum=${info.forum}`} style={{ textDecoration: \"none\" }}>{forums[info.forum]}</a>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connector(Header);","import React, { FC, ReactElement } from 'react'\r\nimport { connect, ConnectedProps } from 'react-redux'\r\n\r\nimport { RootState } from 'src/data/store'\r\n\r\nimport { domain, urlTopicInfo, urlTopicMessages } from 'src/api'\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const {\r\n    info\r\n  } = state.topic;\r\n\r\n  return {\r\n    info\r\n  }\r\n}\r\nconst connector = connect(mapState);\r\nconst TopicInfo: FC<ConnectedProps<typeof connector>> = ({ info }): ReactElement => {\r\n\r\n  let yandexUrl = \"https://www.yandex.ru/yandsearch?rpt=rad&text=\" + encodeURIComponent(info.title);\r\n\r\n  return (\r\n    <div className=\"topic-row\">\r\n      <div className=\"cell-userinfo\">\r\n        <div className=\"topic-tools\">\r\n          <a title=\"API.info\" href={`${domain}/${urlTopicInfo}?id=${info.id}`} className=\"agh\" style={{ display: \"block\", lineHeight: \"1em\" }}>i</a>\r\n          <a title=\"API.messages\" href={`${domain}/${urlTopicMessages}?id=${info.id}&from=0&to=20`} className=\"agh\" style={{ display: \"block\", lineHeight: \"1em\" }}>m</a>\r\n          {/*<a href=\"add_voting.php?topic_id=815217\" title=\"Добавить голосование\">vote</a> &nbsp;&nbsp;*/}\r\n        </div>\r\n      </div>\r\n      <div className=\"cell-message\">\r\n        <div className=\"flex-row\">\r\n          <div style={{ flex: 1, textAlign: \"center\" }}>\r\n            <a href={`${domain}/topic.php?id=${info.id}`}>\r\n              <h1 className=\"topic-title\" dangerouslySetInnerHTML={{ __html: info.title }}></h1>\r\n            </a>\r\n            <div className=\"moder-action\"></div>\r\n          </div>\r\n          <div style={{ flex: \"0 0 20px\", position: \"relative\" }}>\r\n            <div className=\"div-va-middle\">\r\n              <a rel=\"noopener noreferrer\" href={yandexUrl} title=\"Искать в Яндексе\" target=\"_blank\" className=\"yandex\">Я</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default connector(TopicInfo);","//@flow\r\nimport React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport dateFormat from 'dateformat'\r\nimport classNames from 'classnames'\r\nimport { domain } from 'src/api'\r\n\r\nimport { addMessageText } from 'src/data/newmessage/actions'\r\n\r\nimport type { ResponseMessage } from 'src/api'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype UserInfoProps = {\r\n  data: ResponseMessage,\r\n  isAuthor: boolean,\r\n  isYou?: boolean,\r\n  isTooltip?: boolean\r\n}\r\n\r\ntype Props = UserInfoProps & DefaultProps;\r\n\r\nclass UserInfo extends Component<Props> {\r\n\r\n  onClick = () => {\r\n    const { dispatch, data } = this.props;\r\n    dispatch(addMessageText(`(${data.n})`));\r\n\r\n    let elem = document.getElementById('message_text');\r\n    if (elem)\r\n      window.scrollTo(0, elem.offsetTop);\r\n  }\r\n\r\n  onImageLoad = (event) => {\r\n    event.target.style.display = 'inline';\r\n  }\r\n\r\n  render() {\r\n    const { data, isAuthor, isYou, isTooltip } = this.props;\r\n    const href = `${domain}/users.php?id=${data.userId}`;\r\n    let dataStr;\r\n    if (!data) {\r\n      dataStr = '';\r\n    } else if (data.n === \"0\") {\r\n      dataStr = dateFormat(new Date(data.time), 'dd.mm.yy - HH:MM');\r\n    } else {\r\n      dataStr = (\r\n        <Fragment>\r\n          <span className=\"message-number\">{data.n}</span>{' - ' + dateFormat(new Date(data.time), 'dd.mm.yy - HH:MM')}\r\n        </Fragment>\r\n      )\r\n    }\r\n\r\n    const userClassNames = classNames(\"registered-user\", {\r\n      \"is-author\": isAuthor,\r\n      \"is-you\": isYou\r\n    });\r\n\r\n    let imgElem;\r\n    if (window.innerWidth > 768)\r\n    imgElem = <img src={`${domain}/css/user_icons/${data.userId}_16x16.png`} \r\n              onLoad={this.onImageLoad} \r\n              style={{display:\"none\", marginBottom:\"4px\", marginRight:\"1px\"}}/>\r\n\r\n    let timeElem;  \r\n    if (isTooltip) {\r\n      timeElem = <div className=\"ah\" style={{display:\"inline-block\", marginLeft:\"5px\"}}>{dataStr}</div>;\r\n    } else {\r\n      timeElem =\r\n        <div className=\"message-time\">\r\n          <span className=\"ah\" >{dataStr}</span>\r\n          <button className=\"button ah\" onClick={this.onClick}>{dataStr}</button>\r\n        </div>\r\n    }  \r\n\r\n    return (\r\n      <div className=\"user-info\">\r\n        {imgElem}\r\n        <a className={userClassNames} href={href}>{data.user}</a>\r\n        {timeElem}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default (connect()(UserInfo): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport UserInfo from './user_info'\r\nimport MsgText from './msg_text'\r\n\r\nimport type { ResponseMessage } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\nimport type { LoginState } from 'src/data/login/reducer'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype RowProps = {\r\n    data: ResponseMessage\r\n}\r\n\r\ntype StateProps = {\r\n    topicId: string,\r\n    author: string,\r\n    login: LoginState\r\n}\r\n\r\ntype Props = RowProps & StateProps & DefaultProps;\r\n\r\nclass Row extends Component<Props> {\r\n\r\n    render() {\r\n        const { data, author, topicId, login } = this.props;\r\n\r\n        if (!data)\r\n            return null;\r\n\r\n        return (\r\n            <div className=\"topic-row\" id={data.n}>\r\n                <div className=\"cell-userinfo\">\r\n                    <UserInfo data={data} isAuthor={data.user === author} isYou={data.user === login.username}/>\r\n                </div>\r\n                <div className=\"cell-message\">\r\n                    <MsgText data={data} html={data.text} topicId={topicId} n={data.n} vote={+data.vote}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n    const {\r\n        info,\r\n        item0,\r\n    } = state.topic || {\r\n        info: {},\r\n        item0: {},\r\n    }\r\n\r\n    return {\r\n        topicId: info.id,\r\n        author: item0 ? item0.user : '',\r\n        login: state.login\r\n    }\r\n}\r\n\r\nexport default ( connect(mapStateToProps)(Row): any );","import React, { FC, ReactElement } from 'react';\r\nimport { connect, ConnectedProps } from 'react-redux'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport { getNewMessagesIfNeeded } from 'src/data/topic/actions'\r\nimport { getMaxPage } from 'src/utils'\r\nimport { RootState, useAppDispatch } from 'src/data/store'\r\nimport { defaultInfo } from 'src/data/topic';\r\n\r\nconst mapState = (state: RootState) => {\r\n\r\n  const {\r\n    isFetching,\r\n    lastUpdated,\r\n    info,\r\n  } = state.topic || {\r\n    isFetching: true,\r\n    info: defaultInfo,\r\n  }\r\n\r\n  return {\r\n    info,\r\n    isFetching,\r\n    lastUpdated\r\n  }\r\n}\r\nconst connector = connect(mapState);\r\ntype IProps = { locationParams?: any};\r\n\r\nconst Footer: FC<ConnectedProps<typeof connector> & IProps> = ({ info, isFetching, locationParams }): ReactElement => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onBookmarkClick = () => {\r\n    //dispatch(addBookmark(info));\r\n  }\r\n\r\n  const onRefreshClick = () => {\r\n\r\n    dispatch(getNewMessagesIfNeeded({\r\n      id: info.id,\r\n      last: info.count\r\n    }));\r\n\r\n  }\r\n\r\n  const maxPage = getMaxPage(info.count);\r\n\r\n  let updateButton;\r\n  let page = locationParams.page || 1;\r\n  if (page === 'last20' || page === maxPage)\r\n    updateButton =\r\n      <Button\r\n        onClick={onRefreshClick}\r\n        disabled={false}\r\n        size=\"sm\"\r\n        className='button'\r\n        variant=\"light\">\r\n        {isFetching ? 'Обновляется' : 'Обновить ветку'}\r\n      </Button>\r\n\r\n  return (\r\n    <div className=\"flex-row\" id=\"F\">\r\n      <div className=\"ta-left va-top\" style={{ width: \"50%\" }}>\r\n        <Button\r\n          onClick={onBookmarkClick}\r\n          disabled={false}\r\n          size=\"sm\"\r\n          className='button'\r\n          variant=\"light\">\r\n          {'Закладка'}\r\n        </Button>\r\n      </div>\r\n      <div className=\"ta-right va-middle\" style={{ marginLeft: \"auto\" }}>\r\n        {updateButton}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connector(Footer);","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FormGroup, Form } from 'react-bootstrap'\r\n\r\nimport TextEditor from 'src/components/common/text_editor'\r\nimport { postNewMessage } from 'src/data/newmessage/actions'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { NewMessageState } from 'src/data/newmessage/reducer'\r\n\r\nimport type { ResponseInfo } from 'src/api'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype NewMessageProps = {\r\n  onSubmitSuccess?: () => void\r\n}\r\n\r\ntype StateProps = {\r\n  info: ResponseInfo,\r\n  newMessage: NewMessageState\r\n}\r\n\r\ntype Props = NewMessageProps & StateProps & DefaultProps;\r\ntype ComponentState = {\r\n  voting?: number\r\n}\r\n\r\nclass NewMessage extends Component<Props, ComponentState> {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { voting: undefined };\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    const { dispatch, info, newMessage } = this.props;\r\n\r\n    let params = {\r\n      text: newMessage.text,\r\n      topicId: info.id,\r\n      onSuccess: this.onSubmitSuccess,\r\n      voting_select: undefined\r\n    };\r\n\r\n    if (this.state.voting) {\r\n      params.voting_select = this.state.voting;\r\n    }\r\n\r\n    dispatch(postNewMessage(params));\r\n  }\r\n\r\n  onSubmitSuccess = () => {\r\n\r\n    const { dispatch } = this.props;\r\n\r\n    dispatch({\r\n      type: 'NEW_MESSAGE_TEXT',\r\n      text: ''\r\n    });\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      voting: undefined\r\n    });\r\n\r\n    if (this.props.onSubmitSuccess) {\r\n      this.props.onSubmitSuccess();\r\n    }\r\n  }\r\n\r\n  clearVoting = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      voting: undefined\r\n    })\r\n\r\n  }\r\n\r\n  setVotingOption = (i) => {\r\n    this.setState({\r\n      ...this.state,\r\n      voting: i\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { info, newMessage } = this.props;\r\n\r\n    let votingElem;\r\n    if (info.is_voting && info.voting) {\r\n\r\n      let votingOptions = [];\r\n      for (let i = 1; i <= info.voting.length; i++) {\r\n\r\n        const item = info.voting[i - 1];\r\n        if (!item.select)\r\n          continue;\r\n\r\n        votingOptions.push(\r\n          <Form.Check\r\n            type=\"radio\"\r\n            key={i}\r\n            name=\"voting\"\r\n            checked={this.state.voting === i}\r\n            onChange={() => this.setVotingOption(i)}\r\n            label={`${i}. ${item.select}`}\r\n          />\r\n        );\r\n      }\r\n\r\n\r\n      votingElem = (\r\n        <FormGroup>\r\n          <legend>\r\n            <small>Ваш выбор:\r\n              <span href=\"\" id=\"voting_clear\" style={{ marginLeft: \"5px\", cursor: \"pointer\" }} onClick={this.clearVoting}>очистить</span>\r\n            </small>\r\n          </legend>\r\n          {votingOptions}\r\n          Обоснуйте свой выбор!\r\n        </FormGroup>\r\n      );\r\n\r\n    }\r\n\r\n    return (\r\n      <form style={{ marginTop: \"5px\" }} onSubmit={this.onSubmit}>\r\n        <div className=\"bold\">Добавить сообщение в тему:</div>\r\n        <div className=\"new-message-container\">\r\n          <div className=\"new-message-text\">\r\n            <TextEditor\r\n              isFetching={newMessage.isFetching}\r\n              text={newMessage.text}\r\n              placeholder=\"Сообщение\"\r\n              formName=\"NEW_MESSAGE\"\r\n            />\r\n          </div>\r\n          <div className=\"new-message-voting\">\r\n            {votingElem}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    info: state.topic.info,\r\n    newMessage: state.newMessage\r\n  };\r\n\r\n}\r\n\r\nexport default (connect(mapStateToProps)(NewMessage): any );","//@flow\r\nimport React, { Component } from 'react'\r\n\r\ntype RadioOptionProps = {\r\n  name: string,\r\n  label: string,\r\n  value: string,\r\n  values: Array<{ name: string, descr: string }>,\r\n  onChange: any,\r\n  oneLine: boolean\r\n}\r\n\r\nclass RadioOption extends Component<RadioOptionProps> {\r\n\r\n  onChange = (e: any) => {\r\n    const { name } = this.props;\r\n    this.props.onChange(e, name, e.target.value);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { name, label, values, oneLine } = this.props;\r\n\r\n    let valuesElem = [];\r\n    for (let i = 0; i < values.length; i++) {\r\n      let item = values[i];\r\n      valuesElem.push(\r\n        <label key={i} htmlFor={item.name} style={{ marginRight: \"5px\" }}>\r\n          <input type=\"radio\" name={name} value={item.name} checked={item.name === this.props.value} onChange={this.onChange} />\r\n          {item.descr}\r\n        </label>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <span>\r\n        <span style={{ marginRight: \"5px\" }}>{label}</span>\r\n        {oneLine ? null : <br />}\r\n        {valuesElem}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (RadioOption: any);","//@flow\r\nimport React, { Component } from 'react'\r\n\r\ntype StringOptionProps = {\r\n  name: string,\r\n  label: string,\r\n  value: string,\r\n  onChange: any,\r\n  postfix: ?string\r\n}\r\n\r\nclass StringOption extends Component<StringOptionProps> {\r\n\r\n  onChange = (e: any) => {\r\n    const { name } = this.props;\r\n    this.props.onChange(e, name, e.target.value);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { name, value, label, postfix } = this.props;\r\n\r\n    return (\r\n      <label htmlFor={name} style={{ marginRight: \"5px\" }}>\r\n        <span style={{ marginRight: \"5px\" }}>{label}</span>\r\n        <input type=\"string\" name={name} value={value} onChange={this.onChange} className='input' />\r\n        {postfix !== undefined ?\r\n          <span style={{ marginLeft: \"5px\" }}>{postfix}</span>\r\n          : null}\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (StringOption: any);","import { Routes, Route } from 'react-router-dom'\r\nimport React, { Component } from 'react';\r\n\r\nimport TopicsList from './topics_list'\r\nimport Topic from './topic'\r\nimport Options from './options'\r\nimport { clearTooltipsIfNeeded } from 'src/data/tooltips/actions'\r\n\r\nimport { useAppDispatch } from 'src/data/store';\r\n\r\nconst Container = () => {\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onClick = () => {\r\n    dispatch(clearTooltipsIfNeeded());\r\n  }\r\n\r\n  return (\r\n    <div onClick={onClick} style={{ flex: \"auto\" }}>\r\n      <div className=\"container\">\r\n        <Routes>\r\n          <Route path='/' element={<TopicsList />} />\r\n          <Route path='/index.php' element={<TopicsList />} />\r\n          <Route path='/topic.php' element={<Topic />} />\r\n          <Route path='/options.php' element={<Options />} />\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Container;","import React from 'react'\r\nimport { domain } from 'src/api'\r\n\r\nconst NavBarFooter = (props) => {\r\n\r\n    return (\r\n        <footer className=\"flex-row navbar-footer\">\r\n            <a href={`${domain}/rules.php`}>Правила</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/about.php`}>Описание</a>\r\n            <span className=\"separator\">|</span>\r\n            <b><a href={`${domain}/ad.php`}>Реклама на сайте</a>  </b>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/find.php`}>Поиск</a>\r\n            <span className=\"separator\">|</span>\r\n            <a rel=\"nofollow\" href={`${domain}/sections_list.php`}>Секции</a>\r\n            <span className=\"separator\">|</span>\r\n            <a rel=\"nofollow\" href={`${domain}/rating.php`}>Рейтинг</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href=\"http://kb.mista.ru\">Книга знаний</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href=\"http://wiki.mista.ru\">Вики-миста (КЗ2)</a>\r\n            <span className=\"separator\">|</span>\r\n            <a rel=\"nofollow\" href=\"http://m.mista.ru/\">Мобильная</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/archive.php`}>Архив</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/moders.php`}>Модераторы</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/users_gallery.php`}>Галерея</a>\r\n            <span className=\"separator\">|</span>\r\n            <span>18+</span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default NavBarFooter;","import React from 'react'\r\n\r\nconst TooltipHeader = ({children, closeWindow}) => {\r\n    return (\r\n        <div className=\"tooltip-header\">\r\n            {children}\r\n            <div className=\"tooltip-close\" onClick={closeWindow} onTouchEnd={closeWindow}>\r\n                <span className=\"tooltip-close-x\">x</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TooltipHeader;","import React from 'react'\r\n\r\nconst TooltipBody = ({children, onScroll}) => {\r\n    \r\n    var startX = 0;\r\n\r\n    function onTouchStart(e) {\r\n        startX = e.nativeEvent.changedTouches[0].clientX;\r\n    }\r\n    \r\n    function onTouchEnd(e) {\r\n        let endX = e.nativeEvent.changedTouches[0].clientX;\r\n        if (Math.abs(endX - startX) > 100)\r\n            onScroll(-endX + startX);\r\n    }\r\n\r\n    return (\r\n        <div className=\"tooltip-text\" onTouchStart={onTouchStart} onTouchEnd={onTouchEnd}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TooltipBody;","//@flow\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nimport TooltipHeader from './tooltip_header'\r\nimport TooltipBody from './tooltip_body'\r\n\r\nimport './tooltip.css'\r\n\r\nimport { closeTooltip } from 'src/data/tooltips/actions'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { TooltipItemState } from 'src/data/tooltips/reducer'\r\n\r\ntype TooltipProps = {\r\n  tooltip: TooltipItemState,\r\n  onScroll: (delta: any) => void\r\n}\r\n\r\ntype Props = TooltipProps & DefaultProps;\r\n\r\nclass TooltipWindow extends Component<Props> {\r\n\r\n  onCloseClick = () => {\r\n    const { dispatch, tooltip } = this.props;\r\n    dispatch(closeTooltip(tooltip.keys));\r\n  }\r\n\r\n  onWheel = (e) => {\r\n    e.preventDefault();\r\n    this.props.onScroll(-e.nativeEvent.deltaY);\r\n  }\r\n\r\n  render() {\r\n    const { coords, i } = this.props.tooltip;\r\n\r\n    let axis;\r\n    let position;\r\n    if (window.innerWidth <= 768) {\r\n      axis = \"y\";\r\n      position = { top: coords.y, left: 5 };\r\n    } else {\r\n      axis = \"both\";\r\n      position = { top: coords.y, left: Math.min(coords.x, window.innerWidth - 670) }\r\n    }\r\n\r\n    let [header, body] = React.Children.toArray(this.props.children);\r\n\r\n    return (\r\n      <Draggable\r\n        axis={axis}\r\n        handle=\".tooltip-header\"\r\n        defaultClassNameDragging=\"dragging\"\r\n        key={i}>\r\n\r\n        <div className=\"tooltip-window\" style={{ ...position }} onWheelCapture={this.onWheel}>\r\n          <TooltipHeader closeWindow={this.onCloseClick}>\r\n            {header.props.children}\r\n          </TooltipHeader>\r\n          <TooltipBody onScroll={this.props.onScroll}>\r\n            {body.props.children}\r\n          </TooltipBody>\r\n        </div>\r\n      </Draggable>\r\n    )\r\n  }\r\n}\r\n\r\nexport default (connect()(TooltipWindow): any );","//@flow\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { fetchTopicMessage } from 'src/api/topicMessages';\r\n\r\nimport MsgText from '../topic/row/msg_text'\r\nimport UserInfo from '../topic/row/user_info';\r\n\r\nimport TooltipWindow from './tooltip_window'\r\nimport TooltipHeader from './tooltip_header'\r\nimport TooltipBody from './tooltip_body'\r\nimport './tooltip.css'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { TooltipItemState } from 'src/data/tooltips/reducer'\r\nimport type { TooltipKeys } from 'src/data/tooltips/actions'\r\n\r\ntype TooltipProps = {\r\n  tooltip: TooltipItemState,\r\n  info: any,\r\n  items: any,\r\n  item0: any\r\n}\r\n\r\ntype Props = TooltipProps & DefaultProps;\r\ntype State = {\r\n  data: any,\r\n  text: string,\r\n  number: number\r\n}\r\n\r\nclass Tooltip extends Component<Props, State> {\r\n\r\n  data: any;\r\n  text: string;\r\n  fetchData: any;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { tooltip, info, items, item0 } = props;\r\n    const { keys } = tooltip;\r\n\r\n    let text = '';\r\n    let data;\r\n    if (keys.topicId === info.id) {\r\n      if (keys.number === 0)\r\n        data = item0;\r\n      else\r\n        data = items.find(item => item.n === keys.number);\r\n\r\n      if (data)\r\n        text = data.text;\r\n    }\r\n\r\n    this.state = {\r\n      data,\r\n      text,\r\n      number: keys.number\r\n    }\r\n  }\r\n\r\n  fetchData = async (number: number) => {\r\n\r\n    if (number < 0) return;\r\n\r\n    let data;\r\n    let text = '';\r\n    const topicId = this.props.tooltip.keys.topicId;\r\n\r\n    try {\r\n      data = await fetchTopicMessage(topicId, number);\r\n      if (data)\r\n        text = data.text;\r\n      else\r\n        text = `Сообщение не найдено ${number}`;\r\n\r\n    } catch (e) {\r\n      text = e.message;\r\n    }\r\n\r\n    this.setState({ data, text, number });\r\n  }\r\n\r\n  onScroll = (delta) => {\r\n\r\n    const { keys } = this.props.tooltip;\r\n    if (keys.type !== 'TOPIC_PREVIEW') return;\r\n    if (delta > 0) {\r\n      this.fetchData(this.state.number + 1)\r\n    } else {\r\n      this.fetchData(this.state.number - 1)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.state.data)\r\n      this.fetchData(this.state.number);\r\n\r\n  }\r\n\r\n  render() {\r\n    const { keys } = this.props.tooltip;\r\n\r\n    if (!this.state.text)\r\n      return null;\r\n\r\n    let header;\r\n    if (!this.state.data) {\r\n      header = <b>Заголовок</b>\r\n    } else {\r\n      header = <UserInfo data={this.state.data} isAuthor={false} isTooltip={true}/>\r\n    }\r\n\r\n    if (keys.type === 'TOPIC' || keys.type === 'TOPIC_PREVIEW')\r\n      return (\r\n        <TooltipWindow tooltip={this.props.tooltip} onScroll={this.onScroll}>\r\n          <TooltipHeader>\r\n            {header}\r\n          </TooltipHeader>\r\n          <TooltipBody>\r\n            <MsgText\r\n              data={this.state.data}\r\n              html={this.state.text}\r\n              topicId={keys.topicId}\r\n              style={{ maxHeight: \"min(550px, 80vh)\", overflowY: \"auto\" }}\r\n            />\r\n          </TooltipBody>\r\n        </TooltipWindow>\r\n      )\r\n    else\r\n      return null;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n  const {\r\n    info,\r\n    items,\r\n    item0\r\n  } = state.topic;\r\n\r\n  return {\r\n    info,\r\n    items,\r\n    item0\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(Tooltip): any );","//@flow\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport Tooltip from './tooltip'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { TooltipItemState } from 'src/data/tooltips/reducer'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype StateProps = {\r\n    items: Array<TooltipItemState>\r\n}\r\n\r\ntype Props = StateProps & DefaultProps;\r\n\r\nclass TooltipsList extends Component<Props> {\r\n\r\n    render() {\r\n\r\n        const { items } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {items.map((item, i) => {\r\n                    return (\r\n                        <Tooltip key={item.hash} tooltip={item} keys={item.keys}>\r\n                        </Tooltip>\r\n                    )}\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n    const {\r\n        items\r\n    } = state.tooltips\r\n\r\n    return {\r\n        items,\r\n    }\r\n}\r\n\r\nexport default ( connect(mapStateToProps)(TooltipsList): any );","//@flow\r\nimport React, { Component, Fragment, useEffect } from 'react';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\nimport NavBar from './components/nav_bar';\r\nimport Container from './components/container';\r\nimport NavBarFooter from './components/nav_bar_footer';\r\nimport TooltipsList from './components/tooltips/tooltips_list';\r\n\r\nimport { readOptions } from 'src/data/options/actions'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype StateProps = {\r\n  theme: string\r\n}\r\n\r\ntype Props = StateProps & DefaultProps\r\n\r\nfunction App(props): Props {\r\n\r\n  useEffect(() => {\r\n    document.body.setAttribute('theme', props.theme);\r\n  })\r\n\r\n  return (\r\n    <HashRouter>\r\n      <NavBar />\r\n      <Container />\r\n      <NavBarFooter />\r\n      <TooltipsList />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    theme: state.options.items.theme\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","//@flow\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux'\r\n\r\nimport reducer from './reducers'\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from 'src/data/store'\r\n\r\nconst Root = ({ store }) => (\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n)\r\n\r\n// for github pages\r\nwindow.hash = \"#\";\r\n\r\nReactDOM.render(<Root store={store} />,\r\n    document.getElementById('root'));\r\n\r\n//registerServiceWorker();\r\n"],"sourceRoot":""}