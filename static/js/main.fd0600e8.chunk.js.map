{"version":3,"sources":["registerServiceWorker.js","utils.js","api.js","actions/topics_list.js","reducers/topics_list.js","reducers/topic.js","reducers/login.js","reducers/sections.js","reducers/bookmark.js","reducers/banner.js","reducers/new_topic.js","reducers/new_message.js","reducers/tooltips.js","reducers/search.js","reducers/topic_preview.js","reducers/options.js","reducers/index.js","components/common/search.js","components/nav_bar.js","actions/login.js","components/login/logged_user.js","components/login/login_form.js","components/common/error.js","components/login/index.js","actions/sections.js","components/topics_list/section_select.js","components/topics_list/header.js","components/topics_list/row/pages.js","components/topics_list/row/topic_name_cell.js","actions/tooltips.js","components/extensions/link_to_post.js","components/topics_list/row/preview_link.js","components/topics_list/row/index.js","components/common/pages.js","actions/new_topic.js","components/common/text_editor.js","components/topics_list/new_topic.js","components/extensions/code_highlight.js","components/extensions/code1c.js","components/extensions/link_to_user.js","components/extensions/youtube_link.js","components/extensions/custom_link.js","components/topic/row/vote_item.js","components/topic/row/vote_chart.js","components/topic/row/vote.js","components/topic/row/msg_text.js","components/preview/preview_header.js","components/preview/topic_preview.js","components/topics_list/index.js","actions/topic.js","components/topic/header.js","components/topic/topic_info.js","components/topic/row/user_info.js","actions/new_message.js","components/topic/row/index.js","actions/bookmark.js","components/topic/footer.js","components/topic/new_message.js","components/topic/index.js","components/options/radio_option.js","components/options/string_option.js","components/options/index.js","actions/options.js","components/container.js","components/nav_bar_footer.js","components/tooltips/tooltip_header.js","components/tooltips/tooltip_body.js","components/tooltips/tooltip_window.js","components/tooltips/tooltip.js","components/tooltips/tooltips_list.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","groupBy","xs","key","reduce","rv","x","push","parseJSON","text","JSON","parse","e","replace","message","getMaxPage","answ","Math","min","ceil","childrenToText","children","map","value","type","displayName","props","number","domain","localStorage","getItem","urlTopicsList","urlTopicInfo","urlTopicMessages","urlLogin","urlLogout","urlCookies","urlSections","urlNewMessage","urlNewTopic","urlAddBookmark","getTopicsList","params","a","fetchJsonpAndGetJson","json","defaultInfo","id","answers_count","getTopicInfo","getTopicMessages","getMessage","n","from","to","length","data","find","val","String","getTopicMessagesCount","info","getLogin","getLogout","action","getCookies","getSections","postNewMessage","url","topic_id","fetch","method","body","paramsToString","mode","credentials","headers","redirect","result","postNewTopic","postBookmark","paramsPrefix","arr","undefined","join","fullUrl","fetchJsonp","response","responseJson","utils","REQUEST_TOPICS_LIST","RECEIVE_TOPICS_LIST","RECEIVE_TOPICS_LIST_FAILED","TOGGLE_PREVIEW","receiveTopicsList","items","receivedAt","Date","fetchTopicsListIfNeeded","dispatch","getState","topicsList","isFetching","shouldFetchTopicsList","page","reqestParams","topicsPerPage","options","topicsCount","topics","section","section_short_name","forum","user_id","mytopics","API","slice","fetchTopicsList","defaultTopicsListState","lastUpdated","ind","findIndex","item","topicId","Object","assign","showPreview","defaultTopicState","topic","item0","concat","defaultLoginState","logged","login","userid","username","hashkey","defaultSectionsState","tree","sections","forEach","shortn","fulln","defaultBookmarkState","bookmark","banner","defaultNewTopicState","subject","isVoting","newTopic","toLowerCase","defaultNewMessageState","newMessage","defaultTooltipsState","tooltips","hash","tooltip","stringify","keys","i","coords","filter","defaultSearchState","search","defaultTopicPreviewState","topicPreview","user","userId","utime","vote","readOption","name","defaultValue","defaultOptionsState","voteColors","theme","autoRefreshTopicsList","autoRefreshTopicsListInterval","autoRefreshTopic","autoRefreshTopicInterval","showTooltips","tooltipDelay","showTooltipOnTopicsList","showTooltipOnPostLink","showYoutubeVideoTitle","replaceCatalogMista","fixBrokenLinks","setItem","rootReducer","combineReducers","Search","doSearch","bind","onKeyPress","onSearchEngineChange","onSearchTextChange","searchEngine","this","open","setState","eventKey","target","InputGroup","size","Prepend","DropdownButton","title","style","marginRight","className","variant","Dropdown","Item","onSelect","FormControl","placeholder","paddingRight","onChange","Append","marginLeft","marginTop","marginBottom","cursor","onClick","zIndex","Component","NavBar","locationParams","queryString","menuItems","link","Nav","Link","href","Navbar","bg","expand","fixed","Brand","Toggle","aria-controls","Collapse","Form","inline","connect","withRouter","loginComplete","loginFailed","shouldLogin","checkLogin","cookie","session","last_error","trim","user_name","entr_hash","doLoginIfNeeded","encodeURIComponent","password","doLogin","CustomToggle","React","forwardRef","ref","preventDefault","LoggedUser","onMenuSelect","event","onLogout","userName","float","as","bsRole","Menu","Divider","LoginForm","onLogin","current","createRef","flexWrap","flex","maxLength","autoComplete","Button","margin","rel","ErrorElem","dangerouslySetInnerHTML","__html","Login","elem","receiveSections","fetchSectionsIfNeeded","shouldfetchSections","action2","SectionSelect","selected","sectionsElem","group","label","Control","Header","onSectionSelect","history","Pages","pages","maxPage","TopicNameCell","classes","classNames","user0","is_voting","closed","down","sectionHref","sect2","sect1","substr","overflowWrap","closeTooltip","LinkToPost","onMouseOver","persist","timer","setTimeout","showToolTip","stopPropagation","clearTimeout","onMouseOut","showTooltip","isPreview","pageX","y","pageY","startsWith","pageParam","isNaN","PreviewLink","expanded","time","td","d","getDate","getMonth","getFullYear","today","dateFormat","color","display","width","textAlign","currentPage","baseUrl","last20","parseInt","Pagination","active","postNewTopicIfNeeded","shouldPostNewTopic","fetchParams","message_text","topic_text","target_section","target_forum","rnd","round","random","voting","votingItems","onSuccess","TextEditor","onButtonCode1c","textArea","start","selectionStart","end","selectionEnd","oldText","len","replacement","substring","newText","formName","onVotingChange","checked","ctrlKey","parent","parentNode","tagName","toUpperCase","dispatchEvent","Event","cancelable","bubbles","showVoting","cols","rows","ButtonGroup","disabled","Check","NewTopic","onSectionChange","currentSection","onSubmit","onSubmitSuccess","refs","onSubjectChange","groupsElem","votingOptions","Text","readOnly","onSend","FormGroup","highlight","СтрокаРезультат","УстановленЦвет","ПоследнийЦвет","keywords","Set","split","Спецсиволы","мЦветФона","мЦветЧисла","мЦветСтроки","мЦветКлючевогоСлова1","ВСтроке","Токен","ПустаяСтрока","Строка","Сред","Нач","Длина","Прав","isKeyword","token","has","ДобавитьЧастьСтроки1С","Часть","Цвет","РазукраситьСтроку","СтрокаКода","ВСтрокеСкобка","ВСтрокеТильда","НачалоСтроки","ТокенДоТочки","Поз","ТекущийСимвол","charAt","lenth","Code","onShowClick","hidden","textArr","buttonText","buttonShow","linesCount","preStyle","overflow","height","LinkToUser","YoutubeLink","hrefName","v","videoId","apiKey","apiUrl","snippet","getVideoId","getVideoParams","CustomLink","parentText","escapedHref","regExp","RegExp","URL","newHref","set","pathname","query","class","fixBrokenLink","VoteItem","total","colors","img","percent","textDecoration","select","src","maxWwidth","alt","VoteChart","sum","Vote","voteOption","MsgText","res","txt","processCode1C","processLinksToPosts","voteElement","voteChart","html","processedHtml","processText","componentsMap","code","textComponent","activeHtml","PreviewHeader","date","onFirst","onPrev","onNext","onLast","TopicPreview","fetchData","onClickFirst","onClickNext","onClickPrev","onClickLast","maxHeight","overflowY","TopicsList","updateTopicsList","onPostNewTopicSuccess","scrollTo","document","position","top","receiveTopic","now","closeTopic","shouldFetch","fetchTopicIfNeeded","_item0","first","_items","last","fetchTopic","fetchNewMessagesIfNeeded","fetchNewMessages","TopicInfo","yandexUrl","lineHeight","UserInfo","getElementById","offsetTop","dataStr","isAuthor","isYou","userClassNames","Row","author","addBookmark","Footer","onBookmarkClick","onRefreshClick","updateButton","NewMessage","voting_select","clearVoting","setVotingOption","votingElem","Topic","autoUpdate","updateTopic","onPostNewMessageSuccess","scrolledToHash","setInterval","nodeHash","clearText","clearInterval","errorElem","RadioOption","values","oneLine","valuesElem","htmlFor","descr","StringOption","postfix","Options","closeForm","applyOptions","resetOptions","resetOptiopns","onTabClick","optionsParams","max","form","tabName","activeTab","textContent","tabs","tab","row","rowElem","fontWeight","Container","routes","exact","path","component","NavBarFooter","TooltipHeader","closeWindow","onTouchEnd","TooltipBody","onScroll","startX","onTouchStart","nativeEvent","changedTouches","clientX","endX","abs","TooltipWindow","onCloseClick","onWheel","deltaY","axis","innerWidth","left","Children","toArray","header","handle","defaultClassNameDragging","onWheelCapture","Tooltip","delta","TooltipsList","App","setAttribute","middleware","thunk","store","createStore","reducer","applyMiddleware","Root","ReactDOM","render","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fd0600e8.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nexport function today(td) {\n    var d = new Date();\n    return td.getDate() === d.getDate() && td.getMonth() === d.getMonth() && td.getFullYear() === d.getFullYear();\n}\n\nexport const groupBy = function (xs, key) {\n    return xs.reduce(function (rv, x) {\n        (rv[x[key]] = rv[x[key]] || []).push(x);\n        return rv;\n    }, {});\n};\n\nexport const parseJSON = (text) => {\n\n    try {\n        return JSON.parse(text);    \n    } catch(e) {\n\n    }\n\n    try {\n        text = text\n            .replace(/\\\\</g, '<')\n            .replace(/\\\\>/g, '>')\n            .replace(/\\\\&/g, '&')\n            .replace(/\\\\'/g, \"'\")\n            .replace(/\\\\\"/g, \"\")\n            .replace(/ \"/g, ' \\\\\"')\n            .replace(/\"\"/g, '\\\\\"\"')\n            .replace(/\\t/g, '\\\\t')\n            .replace(/\"(\\.| |\\?)/g, '\\\\\"$1')\n\n        //           console.log(text);\n        return JSON.parse(text);\n\n        //return eval(text);\n    } catch (e) {\n        console.error(e.message);\n        console.log(text);\n\n        return {};\n    }\n}\n\nexport const getMaxPage = (answ) => Math.min(Math.ceil(answ / 100), 10) || 1;\n\nexport const encodeText = (text) => {\n    text = text\n        .replace(/&/g, '%26')\n        .replace(/\\+/g, '%2B')\n\n    return text;\n}\n\nexport const compare = (obj1, obj2) => {\n\n    for (let key in obj2) {\n        if (obj1[key] !== obj2[key])\n            return false\n    }\n\n    return true;\n}\n\nexport const join = (obj, str) => {\n\n    let res = [];\n    for (let key in obj) {\n        res.push('' + key + ':' + obj[key]);\n    }\n\n    return res.join(str);\n}\n\nexport const childrenToText = (children) => {\n\n    if (!children) return children;\n\n    return children.map(value => {\n        if (typeof(value) === 'string') {\n            return value;\n        } else if (value.type === 'br') {\n            return '<br>'\n        } else if (value.type.displayName === 'Connect(LinkToPost)' || value.type.displayName === 'Connect(t)') {\n            return value.props.number;\n        } else {  \n            console.log(value);\n            return value;\n        }    \n    })    \n}","//@flow\nimport fetchJsonp from 'fetch-jsonp'\nimport * as utils from './utils'\n\nexport const domain = localStorage.getItem('domain') || 'https://forum.mista.ru';\n//export const domain = 'https://dev.mista.ru';\nexport const urlTopicsList    = localStorage.getItem('urlTopicsList') || 'api/topic.php';\nexport const urlTopicInfo     = localStorage.getItem('urlTopicInfo') || 'ajax_gettopic.php';\nexport const urlTopicMessages = localStorage.getItem('urlTopicMessages') || 'api/message.php';\nexport const urlLogin         = localStorage.getItem('urlLogin') || 'ajax_login.php';\nexport const urlLogout        = localStorage.getItem('urlLogout') || 'users.php'; // users.php?&action=exit\nexport const urlCookies       = localStorage.getItem('urlCookies') || 'ajax_cookie.php';\nexport const urlSections      = localStorage.getItem('urlSections') || 'ajax_getsectionslist.php';\nexport const urlNewMessage    = localStorage.getItem('urlNewMessage') || 'topic.php?id=:id&page=1';\nexport const urlNewTopic      = localStorage.getItem('urlNewTopic') || 'index.php';\nexport const urlAddBookmark   = localStorage.getItem('urlAddBookmark') || 'ajax_addbookmark.php';\nexport const urlSearch        = localStorage.getItem('urlSearch') || 'ajax_find.php';\n\n// Topics list\nexport type RequestTopicsList = {\n    topics?:   number, // число тем, которые нужно вернуть (по умолчанию - 20);\n    utime?:    number, // время (в формате unixtime) после которого надо вернуть ветки;\n    callback?: string, // если указано, то ответ заворачивается в вызов функции, имя которой передано в параметре (реализация JSONP)\n    forum?:    string, // раздел форума (1c|it|life);\n    section_short_name?: string,\n    user_id?:  string,\n    mytopics?: string\n}\n\nexport type ResponseTopicsListItem = {\n    id: number,\n    forum: string,\n    sect1: string,\n    sect2: string,\n    v8: string,\n    closed: number,\n    down: number,\n    text: string,\n    utime: number,\n    created: number,\n    user: string,\n    user0: string,\n    is_voting: number,\n    answ: number\n}\n\nexport type ResponseTopicsList = Array<ResponseTopicsListItem>;\n\nexport const getTopicsList = async (params: RequestTopicsList): Promise<ResponseTopicsList> =>  {\n    const json = await fetchJsonpAndGetJson(urlTopicsList, params);\n    return json;\n} \n\n\n// Topics info\nexport type RequestInfo = {\n    id: string // идентификатор (topic_id) темы\n}\n\nexport type ResponseVoteItem = {\n    select: string,\n    result: number\n}\n\nexport type ResponseInfo = {\n    id: string,\n    text: string,\n    forum?: string,\n    section?: string,\n    created?: string,\n    user_id?: string,\n    user_name?: string,\n    answers_count: string,\n    down?: number,\n    closed?: number,\n    deleted?: number,\n    is_voting?: number,\n    voting?: Array<ResponseVoteItem>\n}\n\nexport const defaultInfo = {\n    id: \"\",\n    text: \"\",\n    answers_count: \"\"\n}\n\nexport const getTopicInfo = async (params: RequestInfo): Promise<ResponseInfo> =>  {\n    const json = await fetchJsonpAndGetJson(urlTopicInfo, params);\n    return json;\n} \n\n\n// Topic messages\nexport type RequestMessages = {\n    id:    number | string, // идентификатор (topic_id) темы\n    from?: number, // с какого сообщения. если не указан, то с первого\n    to?:   number  // до какого сообщения. если не указан, то from+10\n}\n\nexport type ResponseMessage = {\n    id:    string,\n    n:     string,\n    user:  string,\n    userId: string,\n    text:  string,\n    utime: string,\n    vote:  number\n}\n\nexport type ResponseMessages = Array<ResponseMessage>;\n\nexport const getTopicMessages = async (params: RequestMessages): Promise<ResponseMessages> =>  {\n    const json = await fetchJsonpAndGetJson(urlTopicMessages, params);\n    return json;\n} \n\nexport const getMessage = async (id: number | string, n: number): Promise<?ResponseMessage> =>  {\n    const json = await getTopicMessages({\n        id, \n        from: n, \n        to: n+1}\n        );\n\n    let data;\n    if (json && json.length > 0)\n        data = json.find(val => val.n === String(n));\n\n    return data;\n} \n\nexport const getTopicMessagesCount = async (id: number | string): number => {\n    const info = await getTopicInfo({id: String(id)});\n    return +info.answers_count;\n}\n\n// Login\nexport type RequestLogin = {\n    username:  string, // логин (ник) пользователя\n    password:  string, // пароль пользователя\n    callback?: string, // если указано, то ответ заворачивается в вызов функции, имя которой передано в параметре (реализация JSONP)\n}\n\nexport type ResponseLogin = {\n    userid: string,\n    username: string,\n    hashkey: string,\n    error: string\n}\n\nexport const getLogin = async (params: RequestLogin): Promise<ResponseLogin> =>  {\n    const json = await fetchJsonpAndGetJson(urlLogin, params);\n    return json;\n} \n\nexport const getLogout = async(): Promise<any> => {\n    const params = { action: \"exit\" };\n    await fetchJsonpAndGetJson(urlLogout, params);\n}\n\n\n// Cookies\nexport type ResponseCookies = {\n    cookie: {\n        entr_id: string,\n        entr_key: string,\n        entr_hash: string\n    },\n    session: {\n        user_id: string,\n        user_name: string,\n        user_hash: string,\n        is_moderator: number,\n        light_moderator: number,\n        section: string,\n        show_moderator_tools: number,\n        last_error?: string   \n    }\n}\n\nexport const getCookies = async (): Promise<ResponseCookies> =>  {\n    const json = await fetchJsonpAndGetJson(urlCookies);\n    return json;\n} \n\n\n// Sections\nexport type ResponseSection = {\n    id: number,\n    forum: string,\n    shortn: string,\n    fulln: string,\n    id: number\n}\n\nexport type ResponseSections = Array<ResponseSection>;\n\nexport const getSections = async (): Promise<ResponseSections> =>  {\n    const json = await fetchJsonpAndGetJson(urlSections);\n    return json;\n} \n\n\n// New message\nexport type RequestNewMessage = {\n    message_text: string,\n    action:       \"new\", \n    topic_id:     string,\n    rnd:          number,\n    voting_select?: number,\n    as_admin?: boolean    \n}\n\nexport const postNewMessage = async (params: RequestNewMessage): Promise<any> =>  {\n\n    let url = urlNewMessage.replace(':id', params.topic_id);\n\n    let result = await fetch(`${domain}/${url}`, {\n        method: 'POST',\n        body: paramsToString('', params),\n        mode: 'no-cors',\n        credentials: 'include',\n        headers: {\n            'Accept': 'text/html,application/xhtml+xml,application/xml',\n            'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: 'follow'\n    });\n    \n    return result;\n} \n\n\n// New topic\nexport type RequestNewTopic = {\n    action:         \"new\", \n    rnd:            number,\n    topic_text:     string,\n    message_text:   string,\n    target_section: string, \n    target_forum:   string,\n    voting:         number,\n    select1?:       string,    \n    select2?:       string,    \n    select3?:       string,    \n    select4?:       string,    \n    select5?:       string,    \n    select6?:       string,    \n    select7?:       string,    \n    select8?:       string,    \n    select9?:       string,    \n    select10?:      string\n}\n\nexport const postNewTopic = async (params: RequestNewTopic): Promise<any> =>  {\n\n    await fetch(`${domain}/${urlNewTopic}`, {\n        method: 'POST',\n        body: paramsToString('', params),\n        mode: 'no-cors',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n        }    \n    });\n} \n\n\n//Bookmark\nexport type RequestBookmark = {\n    id: string\n}\n\nexport const postBookmark = async (params: RequestBookmark) => {\n\n    await fetch(`${domain}/${urlAddBookmark}`, {\n        method: 'POST',\n        body: paramsToString('', params),\n        mode: 'no-cors',\n        credentials: 'include',\n    });\n}\n\n\n//Search\nexport type RequestSearch = {\n    keywords: string\n}\n\nexport type ResponseSearch = {\n\n}\n\nexport const postSearch = async (params: RequestSearch) => {\n\n    await fetch(`${domain}/${urlSearch}`, {\n        method: 'POST',\n        body: paramsToString('', params),\n        mode: 'no-cors',\n        credentials: 'include',\n    });\n}\n\nexport const paramsToString = (paramsPrefix: string, params: ?{}): string => {\n\n    if (!params)\n        return '';\n\n    let arr = [];\n    for (let key in params) {\n        if (params[key] !== undefined)\n            arr.push(key + '=' + params[key]);\n    }\n\n    if (arr.length > 0)\n        return paramsPrefix + arr.join('&');\n    else    \n        return '';\n}\n\nexport const fetchJsonpAndGetJson = async (url: string, params: any): Promise<any> => {\n\n    let fullUrl = `${domain}/${url}${paramsToString('?', params)}`; \n    const response =  await fetchJsonp(fullUrl);\n    let responseJson = await response.json();\n    let json;\n    if (typeof(responseJson) === 'string') {\n        \n        try {\n             json = JSON.parse(responseJson)    \n        } catch(e) {\n            json = utils.parseJSON(responseJson);\n        }\n    } else {\n        json = responseJson;\n    }\n    return json;\n}\n","//@flow\nimport * as API from '../api'\nimport type { RequestTopicsList, ResponseTopicsList } from 'src/api'\nimport type { State } from 'src/reducers'\n\nexport const REQUEST_TOPICS_LIST = 'REQUEST_TOPICS_LIST';\nexport const RECEIVE_TOPICS_LIST = 'RECEIVE_TOPICS_LIST';\nexport const RECEIVE_TOPICS_LIST_FAILED = 'RECEIVE_TOPICS_LIST_FAILED';\nexport const TOGGLE_PREVIEW = 'TOGGLE_PREVIEW';\n\nexport type typeREQUEST_TOPICS_LIST = {\n    type: typeof REQUEST_TOPICS_LIST\n}\n\nexport type typeRECEIVE_TOPICS_LIST = {\n    type: typeof RECEIVE_TOPICS_LIST,\n    items: ResponseTopicsList,\n    receivedAt: Date\n}\n\nexport type typeRECEIVE_TOPICS_LIST_FAILED = {\n    type: typeof RECEIVE_TOPICS_LIST_FAILED,\n    error: string,\n    receivedAt: Date\n}\n\nexport type typeTOGGLE_PREVIEW = {\n    type: typeof TOGGLE_PREVIEW,\n    topicId: string\n}\n\nexport type TopicsListAction = typeREQUEST_TOPICS_LIST | typeRECEIVE_TOPICS_LIST | typeRECEIVE_TOPICS_LIST_FAILED | typeTOGGLE_PREVIEW;\n\nexport const requestTopicsList = (): typeREQUEST_TOPICS_LIST => ({\n    type: REQUEST_TOPICS_LIST\n})\n\nexport const receiveTopicsList = (data: ResponseTopicsList): typeRECEIVE_TOPICS_LIST => ({\n    type: RECEIVE_TOPICS_LIST,\n    items: data,\n    receivedAt: new Date()\n})\n\nconst fetchTopicsList = (params: any) => async (dispatch: any, getState: any) => {\n\n    dispatch(requestTopicsList())\n\n    const page = params.page || 1;\n    let reqestParams: RequestTopicsList = {};\n\n    let topicsPerPage = +getState().options.items.topicsPerPage;\n    if (topicsPerPage > 99) topicsPerPage = 99;\n\n    let topicsCount = page * topicsPerPage;\n    reqestParams.topics = topicsCount;\n\n    if (params.section)\n        reqestParams.section_short_name = params.section;\n\n    if (params.forum)\n        reqestParams.forum = params.forum;\n\n    if (params.user_id)\n        reqestParams.user_id = params.user_id;\n\n    if (params.mytopics)\n        reqestParams.mytopics = params.mytopics;\n\n    try {\n        const json = await API.getTopicsList(reqestParams);\n\n        let data = json.slice(-topicsPerPage);\n        dispatch(receiveTopicsList(data));\n    } catch(e) {\n        \n        let action: TopicsListAction = {\n            type: RECEIVE_TOPICS_LIST_FAILED,\n            error: e.message,\n            receivedAt: new Date()            \n        }\n        dispatch(action);\n        console.error(e);\n    }   \n\n}\n\nconst shouldFetchTopicsList = (state: State) => {\n    const topicsList = state.topicsList;\n    if (!topicsList) {\n        return true\n    }\n    if (topicsList.isFetching) {\n        return false\n    }\n    return true\n}\n\nexport const fetchTopicsListIfNeeded = (params: any) => (dispatch: any, getState: any) => {\n    if (shouldFetchTopicsList(getState())) {\n        return dispatch(fetchTopicsList(params));\n    }\n}\n","//@flow\nimport type { TopicsListAction } from 'src/actions/topics_list'\nimport type { ResponseTopicsListItem } from 'src/api'\n\nimport { REQUEST_TOPICS_LIST, RECEIVE_TOPICS_LIST, RECEIVE_TOPICS_LIST_FAILED, TOGGLE_PREVIEW } from 'src/actions/topics_list'\n\nexport type TopicsListItem = {\n    ...ResponseTopicsListItem,\n    showPreview: boolean\n}\n\nexport type TopicsListState = {\n  isFetching: boolean;\n  items: Array<TopicsListItem>,\n  error?: string,\n  lastUpdated?: Date\n};\n\nexport const defaultTopicsListState = {\n    isFetching: false,\n    items: []\n}\n\nconst topicsList = (state: TopicsListState = defaultTopicsListState, action: TopicsListAction) => {\n\n    switch (action.type) {\n        case REQUEST_TOPICS_LIST:\n            return {\n                ...state,\n                error: null,\n                isFetching: true\n            }\n        case RECEIVE_TOPICS_LIST:\n            return {\n                ...state,\n                isFetching: false,\n                items: action.items,\n                lastUpdated: action.receivedAt\n            }\n        case RECEIVE_TOPICS_LIST_FAILED:\n            return {\n                ...state,\n                isFetching: false,\n                error: action.error,\n                lastUpdated: action.receivedAt\n            }\n        case TOGGLE_PREVIEW:\n            let items = state.items.slice();\n            const ind = items.findIndex(item => item.id === action.topicId);\n            \n            let item = Object.assign({}, items[ind]);\n            item.showPreview = !item.showPreview;\n            items[ind] = item;\n\n            return {\n                ...state,\n                items\n            }\n        default:\n            return state\n    }\n}\n\nexport default topicsList;","//@flow \nimport { defaultInfo } from 'src/api'\nimport type { ResponseInfo, ResponseMessages, ResponseMessage } from 'src/api'\nimport type { TopicAction } from 'src/actions/topic'\n\nexport type TopicState = {\n  isFetching: boolean;\n  info: ResponseInfo,\n  item0?: ResponseMessage,\n  items: ResponseMessages,\n  lastUpdated?: Date,\n  error?: ?string\n};\n\nexport const defaultTopicState = {\n    isFetching: false,\n    info: defaultInfo,\n    items: []\n}\n\nconst topic = (state: TopicState = defaultTopicState, action: TopicAction) => {\n    switch (action.type) {\n        case 'REQUEST_TOPIC':\n            return {\n                ...state,\n                isFetching: true,\n                error: null\n            }\n        case 'RECEIVE_TOPIC':\n            return {\n                ...state,\n                isFetching: false,\n                info: action.info,\n                item0: action.item0,\n                items: action.items,\n                lastUpdated: action.receivedAt,\n                error: null\n            }\n        case 'RECEIVE_TOPIC_FAILED':\n            return {\n                ...state,\n                isFetching: false,\n                lastUpdated: action.receivedAt,\n                error: action.error\n            }\n        case 'REQUEST_NEW_MESSAGES':\n            return {\n                ...state,\n                isFetching: true\n            }\n            \n        case 'RECEIVE_NEW_MESSAGES':\n\n            let info = state.info;\n            if (action.items.length > 0) {\n                info.answers_count = action.items[action.items.length - 1].n;\n            }\n\n            return {\n                ...state,\n                isFetching: false,\n                items: state.items.concat(action.items),\n                info,\n                lastUpdated: action.receivedAt\n            }\n\n        case 'CLOSE_TOPIC': \n        \n            return {\n                ...state,\n                items: [],\n                info: defaultInfo,\n                item0: null,\n                lastUpdated: null,\n                error: null            \n            }\n        default:\n            return state\n    }\n}\n\nexport default topic;","//@flow \nimport type { LoginAction } from 'src/actions/login'\n\nexport type LoginState = {\n  isFetching: boolean;\n  logged: ?boolean,\n  userid?: string,\n  username?: string,\n  hashkey?: string,\n  error?: string\n};\n\nexport const defaultLoginState = {\n    isFetching: false,\n    logged: undefined\n}\n\nconst login = (state: LoginState = defaultLoginState, action: LoginAction) => {\n    switch (action.type) {\n        case 'LOGIN_START':\n            return {\n                ...state,\n                isFetching: true\n            }\n        case 'LOGIN_COMPLETE':\n            return {\n                ...state,\n                isFetching: false,\n                logged: true,\n                error: null,\n                ...action.data\n            }\n         case 'LOGIN_FAILED':\n            return {\n                isFetching: false,\n                logged: false,\n                error: action.error\n            }\n        case 'LOGOUT_COMPLETE':\n            return {\n                ...state,\n                userid: undefined,\n                username: undefined,\n                hashkey: undefined,\n                logged: false\n            }\n        default:\n            return state\n    }\n}\n\nexport default login;","//@flow \nimport type { ResponseSections } from 'src/api'\nimport type { SectionsAction } from 'src/actions/sections'\n\nimport { groupBy } from 'src/utils'\n\nexport type SectionsState = {\n  isFetching: boolean;\n  items: ResponseSections,\n  tree: {[string]: any},\n  map: {[string]: any},\n  lastUpdated?: Date,\n  error?: ?string\n};\n\nexport const defaultSectionsState = {\n    isFetching: false,\n    items: [],\n    tree: {},\n    map: {}\n}\n\nconst sections = (state: SectionsState = defaultSectionsState, action: SectionsAction) => {\n    switch (action.type) {\n        case 'REQUEST_SECTIONS':\n            return {\n                ...state,\n                isFetching: true\n            }\n        case 'RECEIVE_SECTIONS':\n\n            let map = {};\n            action.items.forEach(val => {\n                map[val.shortn] = val.fulln\n            });\n\n            return {\n                ...state,\n                isFetching: false,\n                items: action.items,\n                tree: groupBy(action.items, 'forum'),\n                map,\n                lastUpdated: action.receivedAt\n            }\n        default:\n            return state\n    }\n}\n\nexport default sections;","//@flow\nimport type { AddBookmarkAction } from 'src/actions/bookmark'\n\nexport type BookmarkState = {\n  isFetching: boolean\n};\n\nexport const defaultBookmarkState = {\n  isFetching: false\n};\n\nconst bookmark = (state: BookmarkState = defaultBookmarkState, action: AddBookmarkAction) => {\n    switch (action.type) {\n        case 'ADD_BOOKMARK_START':\n            return {\n                ...state,\n                isFetching: true\n            }\n        case 'ADD_BOOKMARK_COMPLETE':\n        case 'ADD_BOOKMARK_FAIL':\n            return {\n                ...state,\n                isFetching: false\n            }\n        default:\n            return state\n    }\n}\n\nexport default bookmark;","\nconst banner = (state = {\n    isFetching: false,\n    banner: {}\n}, action) => {\n    switch (action.type) {\n        case 'REQUEST_BANNER':\n            return {\n                ...state,\n                isFetching: true\n            }\n        case 'RECEIVE_BANNER':\n            return {\n                ...state,\n                isFetching: false,\n                banner: action.banner,\n                lastUpdated: action.receivedAt\n            }\n        default:\n            return state\n    }\n}\n\nexport default banner;","//@flow\nimport type { NewTopicAction } from '../actions/new_topic'\nimport type { ResponseSection } from 'src/api'\n\nexport type NewTopicState = {\n    isFetching: boolean;\n    section: ?ResponseSection,\n    text: string,\n    subject: string,\n    forum: string,\n    isVoting: boolean,\n    error?: string\n};\n\nexport const defaultNewTopicState = {\n    isFetching: false,\n    section: null,\n    text: '',\n    subject: '',\n    forum: '1C',\n    isVoting: false\n}\n\nconst newTopic = (state: NewTopicState = defaultNewTopicState, action: NewTopicAction) => {\n    switch (action.type) {\n        case 'POST_NEW_TOPIC_START':\n            return {\n                ...state,\n                isFetching: true,\n                error: null\n            }\n        case 'POST_NEW_TOPIC_COMPLETE':\n            return {\n                ...state,\n                isFetching: false\n            }\n       case 'POST_NEW_TOPIC_ERROR':\n            return {\n                ...state,\n                isFetching: false,\n                error: action.error\n            }\n        case 'NEW_TOPIC_SECTION':\n            return {\n                ...state,\n                section: action.section,\n                forum: action.section == null ? '' : action.section.forum.toLowerCase()\n            }\n        case 'NEW_TOPIC_TEXT':\n            return {\n                ...state,\n                text: action.text\n            }\n        case 'NEW_TOPIC_SUBJECT':\n            return {\n                ...state,\n                subject: action.text\n            }\n        case 'NEW_TOPIC_CLEAR':\n            return {\n                ...state,\n                text: '',\n                subject: '',\n                isVoting: false\n            }\n        case 'SHOW_VOTING':\n            return {\n                ...state,\n                isVoting: action.data\n            }\n        default:\n            return state\n    }\n}\n\nexport default newTopic;","//@flow\nimport type { NewMessageAction } from 'src/actions/new_message'\n\nexport type NewMessageState = {\n    isFetching: boolean;\n    text: string\n};\n\nexport const defaultNewMessageState = {\n    isFetching: false,\n    text: ''\n}\n\nconst newMessage = (state: NewMessageState = defaultNewMessageState, action: NewMessageAction) => {\n    switch (action.type) {\n        case 'POST_NEW_MESSAGE_START':\n            return {\n                ...state,\n                isFetching: true\n            }\n        case 'POST_NEW_MESSAGE_COMPLETE':\n            return {\n                ...state,\n                isFetching: false\n            }\n        case 'NEW_MESSAGE_TEXT':\n            return {\n                ...state,\n                text: action.text\n            }\n        case 'ADD_MESSAGE_TEXT':\n            return {\n                ...state,\n                text: state.text + action.text\n            }\n        default:\n            return state\n    }\n}\n\nexport default newMessage;","//@flow\nimport type { TooltipItem, TooltipsAction } from 'src/actions/tooltips'\n\nexport type TooltipItemState = {\n    i: number,\n    hash: string\n} & TooltipItem\n\nexport type TooltipsState = {\n    items: Array<TooltipItemState>\n};\n\nexport const defaultTooltipsState: TooltipsState = {\n    items: []\n}\n\nconst tooltips = (state: TooltipsState = defaultTooltipsState, action: TooltipsAction) => {\n    let hash: string;\n    let items: Array<TooltipItemState>;\n    let tooltip;\n    switch (action.type) {\n        case 'CREATE_TOOLTIP':\n\n            items = state.items.slice();\n\n            hash = JSON.stringify(action.keys);\n            var ind = items.findIndex(val => val.hash === hash);\n            if (ind === - 1)\n                items.push({\n                    i: 0,\n                    keys: action.keys,\n                    hash,\n                    coords: action.coords\n                });\n            else {   \n                tooltip = Object.assign({}, items[ind]);\n                tooltip.coords = action.coords;\n                //to reset draggable position\n                tooltip.i += 1;\n                items[ind] = tooltip;\n            }\n\n            return {\n                ...state,\n                items\n            }\n        case 'CLOSE_TOOLTIP':\n            hash = JSON.stringify(action.keys);\n            return {\n                ...state,\n                items: state.items.filter(val => val.hash !== hash)\n            }\n        case 'CLEAR_TOOLTIPS':\n            if (state.items.length === 0)\n                return state\n            else     \n                return {\n                    ...state,\n                    items: []\n                }\n\n        default:\n            return state\n    }\n}\n\nexport default tooltips;","//@flow \nimport type { SearchAction } from '../actions/search'\n\nexport type SearchState = {\n  isFetching: boolean;\n  items: Array<*>,\n  lastUpdated?: Date\n}\n\nexport const defaultSearchState = {\n    isFetching: false,\n    items: []\n}\n\nconst search = (state: SearchState = defaultSearchState, action: SearchAction) => {\n    switch (action.type) {\n        case 'REQUEST_SEARCH':\n            return {\n                ...state,\n                isFetching: true\n            }\n        case 'RECEIVE_SEARCH_RESULTS':\n            return {\n                ...state,\n                isFetching: false,\n                items: action.items,\n                lastUpdated: action.receivedAt\n            }\n        default:\n            return state\n    }\n}\n\nexport default search;","//@flow\nimport type { TopicPreviewAction } from 'src/actions/topic_preview'\nimport type { ResponseMessage } from 'src/api'\n\nexport type TopicPreviewState = {\n    items: {[string]: ResponseMessage | null}\n};\n\nexport const defaultTopicPreviewState = {\n    items: {}\n};\n\nconst topicPreview = (state: TopicPreviewState = defaultTopicPreviewState, action: TopicPreviewAction) => {\n\n    let previewItem;\n\n    switch (action.type) {\n         case 'SHOW_PREVIEW':\n\n            previewItem = state[action.topicId];\n            if (previewItem === undefined)\n                state.items[action.topicId] = {\n                    n: '0',\n                    id: action.topicId,\n                    text: '',\n                    user: '',\n                    userId: '',\n                    utime: '0',\n                    vote: 0\n                };    \n            return {\n                ...state,\n            }\n         case 'CLOSE_PREVIEW': {\n            delete state.items[action.topicId];\n            return {\n                ...state\n            }\n         }\n        case 'RECEIVE_PREVIEW_TEXT':\n\n            previewItem = state.items[action.topicId];\n            if (previewItem === undefined)\n                return state;\n            else\n                state.items[action.topicId] = action.message;        \n            \n            return {\n                ...state,\n            }\n        default:\n            return state\n    }\n}\n\nexport default topicPreview;","\nexport type Column = {\n    name: string,\n    className?: string,\n    width?: string\n}\n\nexport type OptionsItems = {\n    theme: 'yellow' | 'lightgray' | 'dark',\n    topicsPerPage: string,\n    autoRefreshTopicsList: string,\n    autoRefreshTopicsListInterval: string,\n    autoRefreshTopic: string,\n    autoRefreshTopicInterval: string,\n    contetnMaxWidth: string\n}\n\nexport type OptionsState = {\n    show: boolean,\n    voteColors: Array<string>,\n    listColumns: Array<Column>,\n    showTitle: boolean,\n    items: OptionsItems    \n};\n\nfunction readOption(name, defaultValue) {\n    return window.localStorage.getItem(name) || defaultValue;\n}\n\nexport const defaultOptionsState = {\n    voteColors: [\n        \"#FF1616\", //1\n        \"#1A861A\", //2\n        \"#0023FF\", //3\n        \"#FF6B18\", //4\n        \"#9B3A6E\", //5\n        \"#567655\", //6\n        \"#233345\", //7\n        \"#CC0000\", //8\n        \"#00CCCC\", //9\n        \"#0000CC\", //10\n    ],\n    items: {\n        theme: 'lightgray',\n        topicsPerPage: '20',\n        autoRefreshTopicsList: 'false',\n        autoRefreshTopicsListInterval: '60',\n        autoRefreshTopic: 'true',\n        autoRefreshTopicInterval: '60',\n        //tooltips\n        showTooltips: 'true',\n        tooltipDelay: '500',\n        showTooltipOnTopicsList: 'true',\n        showTooltipOnPostLink: 'true',\n        //links\n        showYoutubeVideoTitle: 'true',\n        replaceCatalogMista: 'true',\n        fixBrokenLinks: 'true',\n    }    \n}\n\nconst options = (state: OptionsState = defaultOptionsState, action: any) => {\n\n    switch (action.type) {\n\n        case 'READ_OPTIONS': \n            \n            let items = Object.assign({}, defaultOptionsState.items);\n            for (let key in items) {\n                items[key] = readOption(key, defaultOptionsState.items[key]);\n            }\n\n            return {\n                ...state,\n                items\n            }\n\n        case 'SAVE_OPTIONS': \n\n            for (let key in action.options) {\n                window.localStorage.setItem(key, String(action.options[key]));\n            }\n\n            return {\n                ...state,\n                items: action.options\n            }\n        default:\n            return state\n    }\n}\n\nexport default options;","//@flow\nimport { combineReducers } from 'redux'\n\nimport topicsList from './topics_list'\nimport type { TopicsListState } from './topics_list'\n\nimport topic from './topic'\nimport type { TopicState } from './topic'\n\nimport login from './login'\nimport type { LoginState } from './login'\n\nimport sections from './sections'\nimport type { SectionsState } from './sections'\n\nimport bookmark from './bookmark'\nimport type { BookmarkState } from './bookmark'\n\nimport banner from './banner'\nimport newTopic from './new_topic'\nimport type { NewTopicState } from './new_topic'\n\nimport newMessage from './new_message'\nimport type { NewMessageState } from './new_message'\n\nimport tooltips from './tooltips'\nimport type { TooltipsState } from './tooltips'\n\nimport search from './search'\nimport type { SearchState } from './search'\n\nimport topicPreview from './topic_preview'\nimport type { TopicPreviewState } from './topic_preview'\n\nimport options from './options'\nimport type { OptionsState } from './options'\n\nexport type State = {\n    topicsList: TopicsListState,\n    sections: SectionsState,\n    topic: TopicState,\n    login: LoginState,\n    banner: any,\n    bookmark: BookmarkState,\n    newTopic: NewTopicState,\n    newMessage: NewMessageState,\n    tooltips: TooltipsState,\n    search: SearchState,\n    topicPreview: TopicPreviewState,\n    options: OptionsState        \n}\n\nconst rootReducer = combineReducers({\n    topicsList,\n    sections,\n    topic,\n    login,\n    banner,\n    bookmark,\n    newTopic,\n    newMessage,\n    tooltips,\n    search,\n    topicPreview,\n    options\n})\n\nexport default rootReducer;","//@flow\nimport React, { Component } from 'react'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\n\nimport './search.css'\n\ntype Props = {};\n\nclass Search extends Component<Props> {\n\n    state: any;\n    doSearch: () => void;\n    onKeyPress: (e: any) => void;\n    onSearchEngineChange: (e: any) => void;\n    onSearchTextChange: (e: any) => void;\n\n    constructor(props: Props) {\n        super(props);\n        this.doSearch = this.doSearch.bind(this);\n        this.onKeyPress = this.onKeyPress.bind(this);\n        this.onSearchEngineChange = this.onSearchEngineChange.bind(this);\n        this.onSearchTextChange = this.onSearchTextChange.bind(this);\n\n        this.state = {\n            searchEngine: 'Яндекс',\n            text: ''\n        }\n    }\n\n    doSearch() {\n        \n        let url;\n        let text = this.state.text;\n\n        if (this.state.searchEngine === 'Яндекс') {\n            url = `https://www.yandex.ru/search/?text=${text}&site=mista.ru`;\n\n        } else if (this.state.searchEngine === 'Google') {\n            url = `https://www.google.ru/search?q=${text}+site:mista.ru`\n        }    \n\n        window.open(url);\n        \n        this.setState({\n            ...this.state,\n            text: ''\n        });        \n    }\n\n    onSearchEngineChange(eventKey: string) {\n        this.setState({\n            ...this.state,\n            searchEngine: eventKey\n        })\n    }\n    \n    onSearchTextChange(e: any) {\n        this.setState({\n            ...this.state,\n            text: e.target.value\n        })\n    }\n\n    onKeyPress(e: any) {\n        if (e.key === 'Enter') {\n            this.doSearch();\n        }        \n    }\n\n    render() {\n\n        return (\n            <InputGroup size=\"sm\">\n                <InputGroup.Prepend>   \n                    <DropdownButton id=\"search-engine\" title=\"\" size=\"sm\" style={{marginRight: \"2px\"}} className='button' variant=\"light\">\n                        <Dropdown.Item eventKey=\"Яндекс\" onSelect={this.onSearchEngineChange}>Яндекс</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"Google\" onSelect={this.onSearchEngineChange}>Google</Dropdown.Item>\n                    </DropdownButton> \n                </InputGroup.Prepend>   \n                <FormControl \n                    type=\"text\" \n                    placeholder={`${this.state.searchEngine}: поиск`} \n                    style={{marginRight: \"4px\", paddingRight: \"27px\"}}\n                    className='input'\n                    onKeyPress={this.onKeyPress}\n                    onChange={this.onSearchTextChange}\n                    value={this.state.text}\n                />\n                <InputGroup.Append style={{marginLeft: \"-25px\", marginTop: \"auto\", marginBottom: \"auto\", cursor: \"pointer\"}} onClick={this.doSearch}>\n                    <i className=\"fa fa-search input\" style={{zIndex: 1000}}/>\n                </InputGroup.Append>\n            </InputGroup>\n        )\n    }\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Form from 'react-bootstrap/Form'\nimport queryString from 'query-string'\nimport { withRouter } from 'react-router-dom'\n\nimport Search from 'src/components/common/search'\nimport { fetchTopicsListIfNeeded } from 'src/actions/topics_list'\n\nimport './nav_bar.css'\n\nclass NavBar extends Component {\n\n    onClick = (e) => {\n        const { dispatch, location } = this.props;\n        let locationParams = queryString.parse(location.search);\n        dispatch(fetchTopicsListIfNeeded(locationParams));\n    }\n\n    render() {\n\n        const menu = [\n            { name: '1С', link: `${window.hash}/index.php?forum=1C` },\n            { name: 'IT', link: `${window.hash}/index.php?forum=IT` },\n            { name: 'JOB', link: `${window.hash}/index.php?forum=JOB` },\n            { name: 'LIFE', link: `${window.hash}/index.php?forum=LIFE` },\n            { name: 'Wiki', link: 'https://wiki.mista.ru' },\n            { name: 'Книга знаний', link: 'https://kb.mista.ru' },\n        ];\n\n        const menuItems = menu.map((item, i) => {\n            return (\n                <Nav.Item key={i}>\n                    <Nav.Link href={item.link}>\n                        {item.name}\n                    </Nav.Link>\n                </Nav.Item>\n            )\n        });\n        \n        return (\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" fixed=\"top\">\n                <Navbar.Brand\n                    href={`${window.hash}`} \n                    onClick={this.onClick}>\n                    React.Mista\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse>\n                    <Nav className=\"mr-auto\">\n                        {menuItems}\n                    </Nav>\n                    <Form inline>\n                        <Search />\n                    </Form>\n               </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nexport default connect()(withRouter(NavBar));","//@flow\nimport * as API from 'src/api'\nimport type { RequestLogin, ResponseLogin } from 'src/api'\nimport type { State } from 'src/reducers'\n\nexport type LOGIN_START = {\n    type: 'LOGIN_START',\n}\n\nexport type LOGIN_COMPLETE = {\n    type: 'LOGIN_COMPLETE',\n    data: {\n        error: string,\n        userid: string,\n        username: string,\n        hashkey: string        \n    }\n}\n\nexport type CHECK_LOGIN_START = {\n    type: 'CHECK_LOGIN_START'\n}\n\nexport type LOGOUT_START = {\n    type: 'LOGOUT_START'\n}\n\nexport type LOGOUT_COMPLETE = {\n    type: 'LOGOUT_COMPLETE'\n}\n\nexport type LOGIN_FAILED = {\n    type: 'LOGIN_FAILED',\n    error: string\n}\n\n\nexport type LoginAction = LOGIN_START | LOGIN_COMPLETE | LOGIN_FAILED | CHECK_LOGIN_START | LOGOUT_START | LOGOUT_COMPLETE;\n\nexport const loginStart = (): LOGIN_START => {\n\n    return {\n        type: 'LOGIN_START'\n    }\n}\n\nexport const loginComplete = (json: ResponseLogin): LOGIN_COMPLETE => {\n\n    return {\n        type: 'LOGIN_COMPLETE',\n        data: json\n    }\n}\n\nexport const loginFailed = (error: string): LOGIN_FAILED => {\n\n    return {\n        type: 'LOGIN_FAILED',\n        error\n    }\n}\n\nexport const checkLoginStart = (): CHECK_LOGIN_START => {\n\n    return {\n        type: 'CHECK_LOGIN_START'\n    }\n}\n\nexport const logoutStart = (): LOGOUT_START => {\n\n    return {\n        type: 'LOGOUT_START'\n    }\n}\n\nexport const logoutComplete = (): LOGOUT_COMPLETE => {\n\n    return {\n        type: 'LOGOUT_COMPLETE'\n    }\n}\n\nconst shouldLogin = (state: State): boolean => {\n    const { login } = state;\n    if (!login) {\n        return true\n    }\n    if (login.isFetching) {\n        return false\n    }\n    return true\n}\n\nexport const checkLogin = (params: any) => async (dispatch: any) => {\n\n    dispatch(checkLoginStart());\n\n    let json;\n    try {\n        json = await API.getCookies();\n    } catch(e) {\n        dispatch(loginFailed(e.message));\n        return;   \n    }  \n    const { cookie, session } = json;\n\n    if (session && session.user_id) {\n\n        let error = (session.last_error || '').trim();\n        if (error === 'Не указано сообщение.') error = '';\n        dispatch(loginComplete({\n            error,\n            userid: session.user_id,\n            username: session.user_name,\n            hashkey: cookie.entr_hash\n        }));\n   } else  \n        dispatch(loginFailed(''));\n}\n\nexport const checkLoginIfNeeded = (params: any) => (dispatch: any, getState: any) => {\n    if (shouldLogin(getState())) {\n        return dispatch(checkLogin(params))\n    }\n}\n\nexport const doLogout = (params: any) => async (dispatch: any) => {\n\n    dispatch(logoutStart());\n\n    try {\n        API.getLogout();\n    } catch(e) {\n        \n        dispatch(logoutComplete());\n        checkLogin();\n\n    }    \n\n}\n\nexport const doLogin = (params: RequestLogin) => async (dispatch: any) => {\n\n    dispatch(loginStart());\n\n    try {\n\n        const json = await API.getLogin({\n            username: encodeURIComponent(params.username),\n            password: encodeURIComponent(params.password)    \n        })\n        if (!json.error) {\n            dispatch(loginComplete(json));\n        } else {\n            dispatch(loginFailed(\n                'ОШИБКА: Вход не выполнен! Возможно указан неверный пароль.'\n                ));            \n        }\n\n    } catch (err) {\n        console.error('Login error :', err);\n        dispatch(loginFailed(err.message));           \n    }\n\n}\n\nexport const doLoginIfNeeded = (params: RequestLogin) => (dispatch: any, getState: any) => {\n    if (shouldLogin(getState())) {\n        return dispatch(doLogin(params))\n    }\n}","//@flow\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Dropdown } from 'react-bootstrap'\n\nimport { doLogout } from 'src/actions/login'\nimport { domain } from 'src/api'\n\nimport type { DefaultProps } from 'src/components'\n\ntype LoggedUserProps = {\n    userId: string,\n    userName: string    \n}\n\ntype Props = LoggedUserProps & DefaultProps;\n\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n  <span\n    ref={ref} \n    style={{ cursor: \"pointer\" }} \n    className='link'\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n  </span>\n));\n\nclass LoggedUser extends Component<Props> {\n\n    onLogout;\n\n    constructor(props: Props) {\n        super(props);\n        this.onLogout = this.onLogout.bind(this);\n    }\n    \n    onLogout(event: any) {\n\n        event.preventDefault();\n\n        const { dispatch } = this.props;\n        dispatch(doLogout());  \n    }\n\n    onMenuSelect = (eventKey: any, event: Object): any => {\n\n        if (eventKey === 'exit') {\n           this.onLogout(event);\n        }\n\n    }\n\n    render() {\n\n        const { userId, userName } = this.props;\n        return (\n            <div style={{float: \"left\"}}>\n                <Dropdown id=\"dropdown-custom-menu\" onSelect={this.onMenuSelect}>\n                    <span>Привет, </span>\n                    <Dropdown.Toggle as={CustomToggle} bsRole=\"toggle\">{userName} ▼</Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item eventKey=\"profile\" href={`${domain}/users.php?id=${userId}`}>Профиль</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"myTopics\" href={`${window.hash}/index.php?user_id=${userId}`}>Мои темы</Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"options\" href={`${window.hash}/options.php`}>Настройки</Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"exit\">Выход</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n            </div>\n        )\n    }\n}\n\nexport default connect()(withRouter(LoggedUser));","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { FormControl, Button } from 'react-bootstrap'\n\nimport { doLoginIfNeeded } from 'src/actions/login'\n\nimport type { DefaultProps } from 'src/components'\nimport type { LoginState } from 'src/reducers/login'\nimport type { State } from 'src/reducers'\n\ntype Props = LoginState & DefaultProps;\n\nclass LoginForm extends Component<Props> {\n\n    username: any;\n    password: any;\n\n    constructor(props) {\n        super(props);\n        this.username = React.createRef();  \n        this.password = React.createRef();  \n    }\n        \n    onLogin = (event) => {\n\n        event.preventDefault();\n\n        const { dispatch } = this.props;\n\n        const params = {\n            username: this.username.current.value,\n            password: this.password.current.value\n        }\n        dispatch(doLoginIfNeeded(params));  \n    }\n\n    render() {\n\n        return (\n            <div>\n                <form name=\"enterform\" className=\"flex-row\" style={{flexWrap: \"wrap\"}}>\n                    <FormControl \n                        type=\"text\" \n                        placeholder=\"Имя\" \n                        ref={this.username} \n                        size=\"sm\" \n                        style={{marginRight: \"5px\", flex: \"0 1 300px\"}}\n                    />\n                    <FormControl \n                        type=\"password\" \n                        placeholder=\"Пароль\" \n                        maxLength=\"20\" \n                        autoComplete=\"off\" \n                        ref={this.password}\n                        size=\"sm\" \n                        style={{marginRight: \"5px\", flex: \"0 1 300px\"}}\n                    />\n                    <Button \n                        size=\"sm\"\n                        variant=\"light\" \n                        onClick={this.onLogin}\n                    >Войти</Button>\n                </form>\n                <p style={{margin: \"0px\"}}>Войти можно на сайте <a href=\"https://forum.mista.ru/\">forum.mista.ru</a></p>\n                <a rel=\"nofollow\" href=\"https://forum.mista.ru/user_registration.php\">Регистрация</a>\n                <span style={{ margin: \"5px\" }}>|</span>\n                <a rel=\"nofollow\" href=\"https://forum.mista.ru/remember_password.php\">Забыли пароль?</a>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): LoginState => {\n    return state.login;\n}\n\nexport default connect(mapStateToProps)(LoginForm);","//@flow\nimport React from 'react'\n\nimport './error.css'\n\ntype Props = {\n    text: ?string\n}\n\nconst ErrorElem = (props: Props) => {\n    if (!props.text)\n        return null;\n\n    return (\n        <div className=\"error\" dangerouslySetInnerHTML={{__html: props.text}}></div>\n    )    \n}\n\nexport default ErrorElem;","//@flow\nimport React, { Fragment, Component } from 'react'\nimport { connect } from 'react-redux'\nimport LoggedUser from './logged_user'\nimport LoginForm from './login_form'\nimport ErrorElem from '../common/error'\n\nimport { checkLoginIfNeeded } from 'src/actions/login'\n\nimport type { State } from 'src/reducers'\nimport type { DefaultProps } from 'src/components'\nimport type { LoginState } from 'src/reducers/login'\n\ntype Props = LoginState & DefaultProps;\n\nclass Login extends Component<Props> {\n\n    componentDidMount() {\n        const { dispatch } = this.props;\n        dispatch(checkLoginIfNeeded());        \n    }\n\n    render() {\n\n        const { logged, userid, username, error, dispatch } = this.props;\n\n        let elem;\n        if (logged === true) \n            elem = <LoggedUser dispatch={dispatch} userId={userid} userName={username} />\n        else if (logged === false)\n            elem = <LoginForm /> \n        else \n            elem = null;   \n\n        return (\n            <Fragment>\n                {elem}\n                {error && <ErrorElem text={error} />}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): LoginState => {\n    \n    return state.login;\n}\n\nexport default connect(mapStateToProps)(Login);","//@flow\nimport * as API from 'src/api'\nimport type { ResponseSections } from 'src/api'\nimport type { State } from 'src/reducers'\n\nexport type REQUEST_SECTIONS = {\n    type: 'REQUEST_SECTIONS',\n}\n\nexport type RECEIVE_SECTIONS = {\n    type: 'RECEIVE_SECTIONS',\n    items: ResponseSections,\n    receivedAt: Date\n}\n\nexport type SectionsAction = REQUEST_SECTIONS | RECEIVE_SECTIONS;\n\nexport const requestSections = (): REQUEST_SECTIONS => ({\n    type: 'REQUEST_SECTIONS'\n})\n\nexport const receiveSections = (json: ResponseSections): RECEIVE_SECTIONS => ({\n    type: 'RECEIVE_SECTIONS',\n    items: json,\n    receivedAt: new Date()\n})\n\nexport const fetchSections = () => async (dispatch: any) => {\n\n    let action1 = requestSections();\n    dispatch(action1);\n\n    const json: ResponseSections = await API.getSections();\n    \n    let action2 = receiveSections(json);\n    dispatch(action2);\n\n}\n\nconst shouldfetchSections = (state: State): boolean => {\n    \n    const sections = state.sections;\n    \n    if (!sections) \n        return true\n    \n    if (sections.isFetching) \n        return false\n    \n    if (sections.items.length > 0)\n        return false;\n\n    return true\n}\n\nexport const fetchSectionsIfNeeded = () => (dispatch: any, getState: any) => {\n    if (shouldfetchSections(getState())) {\n      return dispatch(fetchSections());\n    }\n  }","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Form from 'react-bootstrap/Form'\n\nimport { fetchSectionsIfNeeded } from 'src/actions/sections'\n\nimport type { ResponseSection, ResponseSections } from 'src/api'\n\nimport type { DefaultProps } from 'src/components'\nimport type { State } from 'src/reducers'\n\ntype SectionSelectProps = {\n    defaultValue: string,\n    selected: string,\n    className: string,\n    id: string,\n    style?: {},\n    size: ?string,\n    onChange: (e: any, section: ResponseSection | null) => void\n}\n\ntype StateProps = {\n    items: ResponseSections,\n    tree: {}\n}\n\ntype Props = SectionSelectProps & StateProps & DefaultProps;\n\nexport class SectionSelect extends Component<Props> {\n\n    onChange: any;\n\n    constructor(props: Props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        const { dispatch } = this.props;\n        dispatch(fetchSectionsIfNeeded());\n    }\n\n    onChange(event: any) {\n\n        const { items, onChange } = this.props;\n\n        if (onChange) {\n            const shortn = event.target.value;\n            const arr = items.filter(val => val.shortn === shortn);\n            if (arr.length > 0) \n                onChange(event, arr[0]);\n            else    \n                onChange(event, null);\n        }    \n    }\n\n    render() {\n\n        const { id, tree, defaultValue, selected, style, size } = this.props;\n        \n        let sectionsElem = [];\n        for (let forum in tree) {\n\n            let group =\n                <optgroup key={forum} label={forum}>\n                    {tree[forum].map((item, i) => (\n                        <option key={item.id} value={item.shortn}>\n                            {item.fulln}\n                        </option>\n                    ))}\n                </optgroup>\n\n            sectionsElem.push(group);\n        }\n\n        return  (\n            <Form.Control as=\"select\" \n                onChange={this.onChange}\n                value={selected}\n                style={style}\n                className='input'\n                size={size}\n                id={id}\n            >\n                <option value=\"\">{defaultValue}</option>\n                {sectionsElem}\n            </Form.Control>    \n        )\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    const { items, tree } = state.sections;\n\n    return {\n        items,\n        tree\n    }\n}\n\nexport default connect(mapStateToProps)(SectionSelect);","//@flow\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport queryString from 'query-string'\n\nimport Login from '../login'\nimport SectionSelect from './section_select'\nimport { fetchSectionsIfNeeded } from 'src/actions/sections'\n\nimport type { DefaultProps } from 'src/components'\n\ntype StateProps = {\n}\n\ntype Props = StateProps & DefaultProps;\n\nclass Header extends Component<Props> {\n\n    onSectionSelect: () => void;\n\n    constructor(props) {\n        super(props);\n        this.onSectionSelect = this.onSectionSelect.bind(this);\n    }\n\n    componentDidMount() {\n        const { dispatch } = this.props;\n        dispatch(fetchSectionsIfNeeded());\n    }\n    \n    onSectionSelect(event, value) {\n        if (value)\n            this.props.history.push(`/index.php?section=${value.shortn}`);\n        else\n            this.props.history.push(`/`);\n    }\n\n    render() {\n\n        const { location } = this.props;\n        const params = queryString.parse(location.search);\n\n        return (\n            <div className=\"flex-row\">\n                <div className=\"user-td\">\n                    <Login />\n                </div>\n                <div className=\"section-td\" style={{marginLeft: \"auto\"}}>\n                    <SectionSelect \n                        defaultValue=\"--Все секции--\" \n                        selected={params.section} \n                        onChange={this.onSectionSelect}\n                        size=\"sm\" \n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect()(withRouter(Header));","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { getMaxPage } from 'src/utils'\n\n\nconst Pages = (props) => {\n\n    const { answ, topicId } = props;\n\n    let pages = [];\n    if (answ > 100) {\n        let maxPage = getMaxPage(answ);\n        for (let i = 1; i <= maxPage; i++) {\n            let href = `/topic.php?id=${topicId}&page=${i}`;\n            let text;\n            if (i > 3 && i < maxPage)\n                text = '•';\n            else\n                text = i;\n            pages.push(<Link key={i}  className=\"agh\" style={{ margin: \"3px\" }} to={href}>{text}</Link>);\n        }\n    }\n\n    if (answ > 20) {\n        let href = `/topic.php?id=${topicId}&page=last20#F`;\n        pages.push(<Link key=\"last20\" className=\"agh\" style={{ margin: \"3px\" }} to={href}>»</Link>);\n    }\n\n    return (\n        <span className=\"topic-pages\">\n            {pages}\n        </span>\n    )\n}\n\nexport default Pages;","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport classNames from 'classnames'\nimport { Link } from 'react-router-dom'\n\nimport type { ResponseTopicsListItem } from 'src/api'\nimport type { State } from 'src/reducers'\n\nimport type { LoginState } from 'src/reducers/login'\nimport type { DefaultProps } from 'src/components/index'\nimport type { TopicPreviewState } from 'src/reducers/topic_preview'\n\nimport Pages from './pages';\n\ntype TopicNameCellProps = {\n    data: ResponseTopicsListItem,\n    preview: ?number\n};\n\ntype StateProps = {\n    login: LoginState,\n    topicPreview: TopicPreviewState\n};\n\ntype Props = TopicNameCellProps & StateProps & DefaultProps;\n\nclass TopicNameCell extends Component<Props> {\n\n    componentDidMount(){\n\n    }\n\n    render() {\n\n        const { data, login } = this.props;\n\n        let href = `/topic.php?id=${data.id}`;\n        let classes = classNames('agb', 'mr5', {\n            'bold': data.answ >= 100,\n            'mytopics': data.user0 === login.username\n        });\n\n        let isVoting;\n        if (data.is_voting === 1) {\n            isVoting = <span className=\"agh separator\">[±]</span>\n        }\n        \n        let sectionHref = `/index.php?section=${data.sect2}`;\n        let section;\n\n        if (data.sect1) {\n            section = (\n            <span className=\"topic-section\">\n                <span className=\"agh\" style={{margin: \"0px 5px\"}}>/</span>\n                <Link key=\"1\" rel=\"nofollow\" className=\"agh\" to={sectionHref} >{data.sect1}</Link>\n            </span>    \n            )\n        }\n\n        let closed;\n        let down;\n        let text = data.text;\n        if (data.closed)\n            closed = <span className=\"agh\">Ø</span>\n\n        if (data.down === 1)\n            down = <span className=\"agh\">↓</span>\n\n        if (data.sect2 === 'job' && text.substr(0, 3) !== 'JOB')\n            text = 'JOB: ' + text;\n\n        else if (data.forum === 'life' && text.substr(0, 3) !== 'OFF')\n            text = 'OFF: ' + text;\n\n        else if (data.sect2 === 'v7' && text.substr(0, 2) !== 'v7')\n            text = 'v7: ' + text;\n\n        return (\n            <div className=\"cell-title\">\n                <Link to={href} className={classes} dangerouslySetInnerHTML={{ __html: text }} style={{overflowWrap: \"anywhere\"}}></Link>\n                {isVoting}\n                <Pages answ={data.answ} topicId={data.id} />\n                {closed}\n                {down}\n                {section}\n            </div>\n        )\n\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    return {\n        login: state.login,\n        topicPreview: state.topicPreview\n    }\n}\n\nexport default connect(mapStateToProps)(TopicNameCell);","//@flow\nimport type { State } from '../reducers'\n\nexport type TooltipKeysTopic = {\n    type: 'TOPIC' | 'TOPIC_PREVIEW',\n    topicId: string,\n    number: number      \n}\n\nexport type TooltipKeys = TooltipKeysTopic\n\nexport type Coords = {\n    x: number, \n    y: number    \n}\n\nexport type TooltipItem = {\n    keys: TooltipKeys,\n    coords: Coords\n}\n\nexport type CREATE_TOOLTIP = {\n    type: 'CREATE_TOOLTIP',\n} & TooltipItem\n\nexport type CLEAR_TOOLTIPS = {\n    type: 'CLEAR_TOOLTIPS',\n}\n\nexport type CLOSE_TOOLTIP = {\n    type: 'CLOSE_TOOLTIP',\n    keys: TooltipKeys\n}\n\nexport type TooltipsAction = CREATE_TOOLTIP | CLOSE_TOOLTIP | CLEAR_TOOLTIPS;\n\nexport const showTooltip = (keys: TooltipKeys, coords: Coords) => async (dispatch: any) => {\n\n    if (keys.type === 'TOPIC' || keys.type === 'TOPIC_PREVIEW' ) {\n\n        const action: CREATE_TOOLTIP = {\n            type: 'CREATE_TOOLTIP',\n            keys,\n            coords\n        }\n        dispatch(action);\n\n    }\n}\n\nexport const closeTooltip = (keys: TooltipKeys) => (dispatch: any) => {\n    dispatch({\n        type: 'CLOSE_TOOLTIP',\n        keys\n    });\n}\n\nexport const clearTooltipsIfNeeded = (params: {}) => (dispatch: any, getState: any) => {\n    const state: State = getState(); \n    if (state.tooltips.items.length > 0) {\n        \n        const action: CLEAR_TOOLTIPS = {\n            type: 'CLEAR_TOOLTIPS'\n        };\n        \n        dispatch(action);\n    }    \n}","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { showTooltip } from '../../actions/tooltips'\n\nimport { getMaxPage, childrenToText } from 'src/utils';\nimport { getTopicInfo } from 'src/api'\n\nimport type { State } from 'src/reducers'\nimport type { DefaultProps } from 'src/components'\nimport type { ResponseInfo, ResponseMessages } from 'src/api'\n\ntype LinkToPostProps = {\n    topicId: string,\n    number: number,\n    isPreview: boolean,\n    style: {}\n}\n\ntype StateProps = {\n    info: ResponseInfo,\n    items: ResponseMessages,\n    tooltipDelay: string\n}\n\ntype Props = LinkToPostProps & StateProps & DefaultProps;\n\nclass LinkToPost extends Component<Props, {text: string}> {\n\n    timer;\n\n    constructor(props) {\n        super(props);\n\n        const { children, number } = this.props;\n        if (children)\n            this.state = {text: childrenToText(children).join('')};\n        else    \n            this.state = {text: String(number)};\n    }\n\n    UNSAFE_componentWillReceiveProps(props) {\n        if (!props.children) {\n            this.setState({text: String(props.number)});\n        }\n    }\n\n    componentDidMount() {\n\n        if (this.state.text.startsWith(\"http\")) {\n\n          const { topicId } = this.props;\n          getTopicInfo({id: topicId})\n            .then(response => {\n                this.setState({\n                    text: response.text\n                })\n            });\n\n        }\n    }\n\n    onMouseOver = (event) => {\n        event.persist();\n        const { tooltipDelay } = this.props;\n        this.timer = setTimeout(() => this.showToolTip(event), +tooltipDelay);\n    }\n    \n    onClick = (event) => {\n        event.stopPropagation();\n        clearTimeout(this.timer);\n        this.showToolTip(event);\n    }\n\n    onMouseOut = (event) => {\n        clearTimeout(this.timer);\n    }\n\n    showToolTip = (e) => {\n        const { topicId, number, dispatch, isPreview } = this.props;\n\n        const coords = {\n            x: e.pageX,\n            y: e.pageY - 50 // remove navbar margin-top\n        }\n\n        const keys = {\n            type: isPreview ? 'TOPIC_PREVIEW' : 'TOPIC',\n            topicId,\n            number          \n        }\n        \n        dispatch(showTooltip(\n            keys,\n            coords\n        ));\n    }\n\n    render() {\n\n        const { topicId, number, style, info } = this.props;\n        const page = getMaxPage(number);\n\n        let pageParam = '';\n        if (page > 1)\n            pageParam = `&page=${page}`;\n\n        let a;\n        if (topicId === info.id || !isNaN(this.state.text) )\n            a = (\n                <span\n                    onMouseOver={this.onMouseOver}\n                    onMouseOut={this.onMouseOut}\n                    onClick={this.onClick}\n                    className='link'\n                    style={{...style}}\n                >{this.state.text}</span>\n            )\n        else \n            a = (\n                <span>\n                    <a href={`${window.hash}/topic.php?id=${topicId}${pageParam}#${number}`}\n                        style={{...style}}\n                    >{this.state.text}</a>{' '} \n                    (<span onMouseOver={this.onMouseOver}\n                        onMouseOut={this.onMouseOut}\n                        onClick={this.onClick}\n                        className='link'\n                     >{number}</span>)               \n                </span>\n            )\n\n        return a;\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    const {\n        items, info\n    } = state.topic;\n\n    return {\n        items,\n        info,\n        tooltipDelay: state.options.items['tooltipDelay']\n    }\n}\n\nexport default connect(mapStateToProps)(LinkToPost);","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport type { DefaultProps } from 'src/components'\n\ntype PreviewLinkProps = {\n    topicId: string,\n    expanded: boolean\n};\n\ntype Props = PreviewLinkProps & DefaultProps;\n\nclass PreviewLink extends Component<Props> {\n\n    onClick = () => {\n        const { topicId, dispatch } = this.props;\n\n        dispatch({\n            type: 'TOGGLE_PREVIEW',\n            topicId \n        });\n    }\n\n    render() {\n\n        const { expanded } = this.props;\n        let text;\n        if (expanded)\n            text = '-'\n        else\n            text = '+'    \n\n        return (\n            <div className=\"cell-preview-link\" onClick={this.onClick}>\n                <span>{text}</span>\n            </div>\n        )        \n    }\n\n}\n\nexport default connect()(PreviewLink);","//@flow\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport dateFormat from 'dateformat'\n\nimport TopicNameCell from './topic_name_cell';\nimport LinkToPost from 'src/components/extensions/link_to_post'\nimport PreviewLink from './preview_link'\n\nimport { today } from 'src/utils'\n\nimport type { State } from 'src/reducers'\nimport type { TopicsListItem } from 'src/reducers/topics_list'\nimport type { LoginState } from 'src/reducers/login'\nimport type { DefaultProps } from 'src/components/index'\n\ntype RowProps = {\n    columns: any,\n    data: TopicsListItem\n}\n\ntype StateProps = {\n    login: LoginState,\n    showTooltipOnTopicsList: string\n}\n\ntype Props = RowProps & StateProps & DefaultProps;\n\nconst Row = (props: Props) => {\n\n    const { data, showTooltipOnTopicsList } = props;\n    let time = new Date(+data.utime * 1000);\n    if (today(time)) {\n        time = dateFormat(time, 'HH:MM')\n    } else {\n        time = dateFormat(time, 'dd.mm.yy');\n    }\n    return (\n        <div className=\"topics-list-row\">\n            {/*{cells}*/}\n            <div className=\"cell-forum\">\n                {data.forum}\n            </div>\n            <div className=\"cell-section\">\n                {data.sect1}\n            </div>\n            <div className=\"cell-answ\">\n                { showTooltipOnTopicsList === 'true' ?\n                    <LinkToPost topicId={data.id} number={data.answ} style={{color: \"inherit\"}} isPreview/>\n                    :\n                    data.answ\n                }\n            </div>\n            <PreviewLink topicId={data.id} expanded={data.showPreview}/>\n            <TopicNameCell data={data}/>\n            <div className=\"cell-author\">\n                {data.user0}\n            </div>\n            <div className=\"cell-lastuser\">\n                <div style={{display: \"flex\"}}>\n                    <span className=\"cell-lastuser-time\">{time}</span>\n                    <span className=\"cell-lastuser-user\">{data.user}</span>\n                </div>\n            </div>\n            <div className=\"cell-last20\">\n                <Link to={`/topic.php?id=${String(data.id)}&page=last20`} style={{color: \"inherit\", display: \"block\", width: \"100%\", textAlign: \"center\"}}>{'>'}</Link>\n            </div>\n        </div>\n    )\n\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    return {\n        login: state.login,\n        showTooltipOnTopicsList: state.options.items.showTooltipOnTopicsList\n    }\n}\n\nexport default connect(mapStateToProps)(Row);","//@flow\nimport React, { Component } from 'react'\nimport { Pagination } from 'react-bootstrap'\n\nimport { paramsToString } from 'src/api'\nimport './pages.css'\n\ntype FooterProps = {\n    locationParams: { page?: string },\n    baseUrl: string,\n    maxPage: number,\n    last20?: boolean\n}\n\ntype Props = FooterProps;\n\nclass Pages extends Component<Props> {\n\n    render() {\n\n        const { locationParams, baseUrl, maxPage, last20 } = this.props;\n        let currentPage;\n        if (!locationParams.page) \n            currentPage = 1;\n        else if (locationParams.page === \"last20\")\n            currentPage = \"last20\";\n        else\n            currentPage = parseInt(locationParams.page, 10) || 1;\n        \n        let pages = [];\n        for (let i = 1; i <= maxPage; i++) {\n            let params = {...locationParams, page: i };\n            let href = `${window.hash}/${baseUrl}` + paramsToString('?', params);\n\n            pages.push(<Pagination.Item active={currentPage === i} key={i} href={href}>{i}</Pagination.Item>);\n        }\n\n        if (last20 === true) {\n            let params = {...locationParams, page: \"last20\" };\n            let href = `${window.hash}/${baseUrl}` + paramsToString('?', params);\n            pages.push(<Pagination.Item active={currentPage === \"last20\"} key=\"last20\" href={href}>»</Pagination.Item>);\n        }\n\n        return (\n            <Pagination style={{margin: \"0px\"}}>\n                {pages}\n            </Pagination>            \n        )\n    }\n}\n\nexport default Pages;","//@flow\nimport * as API from '../api'\nimport type { RequestNewTopic } from 'src/api'\nimport type { State } from 'src/reducers'\nimport type { ResponseSection } from 'src/api'\n\nexport type postNewTopicParams = {\n    subject: string,\n    text: string,\n    section: number,\n    forum: string,\n    isVoting: boolean,\n    votingItems?: Array<string>,\n    onSuccess?: () => void\n};\n\nexport type POST_NEW_TOPIC_START = {\n    type: 'POST_NEW_TOPIC_START'\n}\n\nexport type POST_NEW_TOPIC_COMPLETE = {\n    type: 'POST_NEW_TOPIC_COMPLETE'\n}\n\nexport type POST_NEW_TOPIC_ERROR = {\n    type: 'POST_NEW_TOPIC_ERROR',\n    error: string\n}\n\nexport type NEW_TOPIC_TEXT = {\n    type: 'NEW_TOPIC_TEXT',\n    text: string\n}\n\nexport type NEW_TOPIC_SUBJECT = {\n    type: 'NEW_TOPIC_SUBJECT',\n    text: string\n}\n\nexport type NEW_TOPIC_CLEAR = {\n    type: 'NEW_TOPIC_CLEAR'\n}\n\nexport type NEW_TOPIC_SHOW_VOTING = {\n    type: 'SHOW_VOTING',\n    data: boolean\n}\n\nexport type NEW_TOPIC_SECTION = {\n    type: 'NEW_TOPIC_SECTION',\n    section: ResponseSection\n}\n\nexport type NewTopicAction = POST_NEW_TOPIC_START | POST_NEW_TOPIC_COMPLETE | POST_NEW_TOPIC_ERROR | \n    NEW_TOPIC_CLEAR | NEW_TOPIC_TEXT | NEW_TOPIC_SUBJECT| NEW_TOPIC_SHOW_VOTING | NEW_TOPIC_SECTION;\n\nexport const shouldPostNewTopic = (state: State): boolean => {\n    const newTopic = state.newTopic;\n    if (!newTopic) {\n        return false\n    }\n    if (newTopic.isFetching) {\n        return false\n    }\n    return true\n}\n\nexport const postNewTopicIfNeeded = (params: postNewTopicParams) => (dispatch: any, getState: any) => {\n    if (shouldPostNewTopic(getState())) {\n        return dispatch(postNewTopic(params));\n    }\n}\n\nconst postNewTopic = (params: postNewTopicParams) => async (dispatch: any) => {\n\n    dispatch({\n        type: 'POST_NEW_TOPIC_START'\n    });\n\n    let fetchParams: RequestNewTopic = {\n        message_text: encodeURIComponent(params.text),\n        topic_text: encodeURIComponent(params.subject),\n        target_section: String(params.section),\n        target_forum: params.forum.toLowerCase(),\n        action: 'new',\n        rnd: Math.round(Math.random() * 10000000000),\n        voting: params.isVoting ? 1 : 0\n    };\n\n    if (params.votingItems) \n        for (let i=0; i<params.votingItems.length; i++) {\n            fetchParams[`section${i+1}`] = params.votingItems[i];\n        }\n    \n    await API.postNewTopic(fetchParams);\n        \n    dispatch({\n        type: 'POST_NEW_TOPIC_COMPLETE'\n    });\n\n    if (params.onSuccess)\n          params.onSuccess();    \n}","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { FormControl, Button, ButtonGroup, Form } from 'react-bootstrap'\n\nimport type { DefaultProps } from 'src/index'\n\nimport './text_editor.css'\n\ntype TextEditorProps = {\n    placeholder: string,\n    showVoting: boolean,\n    isVoting: boolean,\n    text: string,\n    isFetching: boolean,\n    formName: string,\n    onChange?: (e: any, text: string) => void,   \n}\n\ntype Props = TextEditorProps & DefaultProps;\n\nclass TextEditor extends Component<Props> {\n\n    textArea;\n\n    constructor(props) {\n        super(props);\n        this.textArea = React.createRef();\n    }\n\n    onButtonCode1c = (e) => {\n\n        e.preventDefault();\n\n        var openTag = '[1C]\\n';\n        var closeTag = '\\n[/1C]';\n\n        var textArea = this.textArea.current;\n\n        var start = textArea.selectionStart;\n        var end = textArea.selectionEnd;\n\n        var oldText = textArea.value;\n        var len = oldText.length;\n        var selectedText = oldText.substring(start, end);\n        var replacement = openTag + selectedText + closeTag;\n        var newText = oldText.substring(0, start) + replacement + oldText.substring(end, len);\n\n        const { dispatch, formName } = this.props;\n        dispatch({\n            type: formName + '_TEXT',\n            text: newText\n        })\n\n    }\n\n    onVotingChange = (e) => {\n        const { dispatch } = this.props;\n        dispatch({\n            type: 'SHOW_VOTING',\n            data: e.target.checked\n        })\n    }\n\n    onChange = (e) => {\n        const { dispatch, formName } = this.props;\n        dispatch({\n            type: formName + '_TEXT',\n            text: e.target.value\n        })\n    }\n\n    onKeyPress = (e) => {\n\n        if (e.key === 'Enter' && e.ctrlKey) {\n            let parent =  this.textArea.current.parentNode;\n            while (parent.tagName.toUpperCase() !== \"FORM\") {\n                parent = parent.parentNode;\n            }\n            parent.dispatchEvent(new Event(\"submit\", {cancelable: true, bubbles: true}));\n        }\n\n    }\n\n    render() {\n\n        const { placeholder, showVoting, isVoting, isFetching, text } = this.props;\n\n        return (\n            <div>\n                <FormControl \n                    as=\"textarea\" \n                    placeholder={placeholder} \n                    cols=\"70\" rows=\"3\"\n                    value={text}\n                    onChange={this.onChange}\n                    onKeyPress={this.onKeyPress}\n                    ref={this.textArea}\n                    className=\"text-editor input\"\n                />\n                <div className=\"flex-row\">\n                    <ButtonGroup>\n                        <Button \n                            size=\"sm\"\n                            variant=\"light\" \n                            onClick={this.onButtonCode1c} \n                            style={{marginRight: \"5px\"}}\n                            className='button'\n                            >Код 1С</Button>\n                        <Button\n                            size=\"sm\"\n                            variant=\"light\"\n                            disabled={isFetching}\n                            type=\"submit\"\n                            className='button'\n                            >\n                            {isFetching ? 'Отправляется' : 'Отправить'}\n                        </Button>\n                    </ButtonGroup>\n                    {showVoting &&\n                        <Form.Check \n                            type=\"checkbox\"\n                            checked={isVoting} \n                            onChange={this.onVotingChange}\n                            label=\"Голосование\" \n                            style={{margin: \"auto 0px auto auto\"}} />\n                    }\n                </div>\n            </div>\n        )\n\n    }\n}\n\nexport default connect()(TextEditor);","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Form from 'react-bootstrap/Form'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FormGroup } from 'react-bootstrap'\n\nimport type { ResponseSection } from 'src/api'\n\nimport type { DefaultProps } from 'src/components'\nimport type { State } from 'src/reducers'\nimport type { SectionsState } from 'src/reducers/sections'\nimport type { NewTopicState } from 'src/reducers/new_topic'\n\nimport { postNewTopicIfNeeded } from 'src/actions/new_topic'\nimport type { NewTopicAction, postNewTopicParams } from 'src/actions/new_topic'\n\nimport SectionSelect from './section_select'\nimport TextEditor from '../common/text_editor'\nimport ErrorElem from '../common/error'\n\nimport './new_topic.css'\n\ntype StateProps = {\n    sections: SectionsState, \n    newTopic: NewTopicState,\n}    \n\ntype NewTopicProps = {\n    onSubmitSuccess?: () => void\n};\n\ntype Props = NewTopicProps & StateProps & DefaultProps;\n\nclass NewTopic extends Component<Props> {\n\n    currentSection: ?ResponseSection;\n\n    onSectionChange = (e: any, section: ResponseSection) => {\n        const { dispatch } = this.props;\n        this.currentSection = section;\n        \n        const action: NewTopicAction = {\n            type: 'NEW_TOPIC_SECTION',\n            section\n        };\n\n        dispatch(action);\n    }\n\n    onSubmit = (e) => {\n        \n        e.preventDefault();\n        const { dispatch, newTopic } = this.props;\n\n        let action: NewTopicAction;\n        if (!this.currentSection) {\n            action = {\n                type: 'POST_NEW_TOPIC_ERROR',\n                error: 'Не выбрана секция'\n            };\n            dispatch(action);\n            return;\n        }\n\n        let subject = newTopic.subject; \n        if (!subject) {\n            action = {\n                type: 'POST_NEW_TOPIC_ERROR',\n                error: 'Не указана тема'\n            };\n            dispatch(action);\n            return;            \n        }\n\n        if (!newTopic.text) {\n            action = {\n                type: 'POST_NEW_TOPIC_ERROR',\n                error: 'Не указано сообщение'\n            };\n            dispatch(action);\n            return;\n\n        }\n        \n        let params: postNewTopicParams = {\n            subject,\n            text: newTopic.text,\n            section: this.currentSection.id,\n            forum: this.currentSection.forum,\n            isVoting: newTopic.isVoting,\n            votingItems: [],\n            onSuccess: this.onSubmitSuccess\n        };\n\n        if (newTopic.isVoting) {\n            params.votingItems = [];\n            for (let i = 1; i <= 10; i++) {\n                let val = this.refs[`vote${i}`].value;\n                if (val) {\n                    params.votingItems.push(val);\n                }\n            }           \n        }\n\n        dispatch(postNewTopicIfNeeded(params));\n    }\n    \n    onSubjectChange = (e) => {\n \n        const { dispatch } = this.props;\n        dispatch({\n            type: 'NEW_TOPIC_SUBJECT',\n            text: e.target.value\n        });\n       \n    }\n\n\n    onSubmitSuccess = () => {\n\n        const { dispatch } = this.props;\n        dispatch({\n            type: 'NEW_TOPIC_CLEAR',\n            text: ''\n        });\n\n        if (this.props.onSubmitSuccess) {\n            this.props.onSubmitSuccess();\n        }\n    }\n\n    render() {\n\n        const { sections, newTopic } = this.props;\n\n        let groupsElem = [];\n        for (let forum in sections.tree) {\n            groupsElem.push(<option key={forum} value={forum.toLowerCase()}>{forum}</option>);\n        }\n\n        let votingOptions = [];\n\n        if (newTopic.isVoting) {\n            votingOptions.push(<div key=\"p\">Варианты:</div>);\n            for (let i = 1; i <= 10; i++) {\n                votingOptions.push(\n                    <InputGroup key={i} size=\"sm\" style={{marginBottom: \"3px\", width: \"100%\"}}>\n                        <InputGroup.Prepend>\n                            <InputGroup.Text\n                                style={{width:\"40px\"}} className='input'>\n                                {`${i}.`}\n                            </InputGroup.Text>\n                        </InputGroup.Prepend>\n                        <Form.Control \n                            type=\"text\" \n                            maxLength=\"50\" \n                            ref={`vote${i}`} \n                            className='input'\n                        />\n                    </InputGroup>    \n                );\n            }\n        }\n\n        return (\n            <form className=\"new-topic-container\" onSubmit={this.onSubmit}>\n                <div id=\"newtopic_form\"  className=\"new-topic-text\">\n                    <div><b>Новая тема:</b></div>\n                    {newTopic.error && <ErrorElem text={newTopic.error} />}\n                    <div className=\"flex-row\" style={{ marginBottom: \"3px\" }}>\n                        <Form.Control as=\"select\"\n                            size=\"sm\"\n                            readOnly={true} \n                            value={newTopic.forum}\n                            style={{ flex: \"0 1 90px\" }}\n                            className='input'\n                        >\n                            {groupsElem}                       \n                        </Form.Control>\n                        <SectionSelect\n                            defaultValue=\"Секция\"\n                            id=\"target_section\"\n                            size=\"sm\"\n                            style={{ flex: \"1 1 auto\" }}\n                            onChange={this.onSectionChange}\n                        />\n                    </div>\n                    <Form.Control \n                        type=\"text\"\n                        size=\"sm\"\n                        value={newTopic.subject}\n                        onChange={this.onSubjectChange}\n                        style={{ marginBottom: \"3px\"}}\n                        className='input'\n                        placeholder=\"Тема\"\n                        maxLength=\"90\"\n                    />                        \n                    <TextEditor\n                        placeholder=\"Сообщение\"\n                        showVoting={true}\n                        isVoting={newTopic.isVoting}\n                        onSend={this.onSend}\n                        text={newTopic.text} \n                        isFetching={newTopic.isFetching}\n                        formName=\"NEW_TOPIC\"\n                    />\n                </div>\n                <FormGroup className=\"new-topic-voting\">\n                    {votingOptions}\n                </FormGroup>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    return {\n        sections: state.sections,\n        newTopic: state.newTopic\n    }\n}\n\nexport default connect(mapStateToProps)(NewTopic);"," \nfunction highlight(text) {\n\n    const keywords = new Set(\n        \"|if|если|then|тогда|elsif|иначеесли|else|иначе|endif|конецесли|do|цикл|for|для|to|по|each|каждого|in|из|while|пока|enddo|конеццикла|procedure|процедура|endprocedure|конецпроцедуры|function|функция|endfunction|конецфункции|var|перем|export|экспорт|goto|перейти|and|и|or|или|not|не|val|знач|break|прервать|continue|продолжить|return|возврат|try|попытка|except|исключение|endtry|конецпопытки|raise|вызватьисключение|false|ложь|true|истина|undefined|неопределено|null|new|новый|execute|выполнить|\"\n            .split('|')\n    );\n\n    const Спецсиволы = new Set(\"():;.,=+-*<>?[]%/\".split(''));\n    const НачалоТега = \"<span class=\";\n    const КонецТега = \"</span>\";\n\n    const мЦветФона = \"bg>\";\n    const мЦветЧисла = \"num>\";\n    const мЦветСтроки = \"str>\";\n    //const мЦветПараметра = \"par>\";\n    const мЦветКомментария = \"com>\";\n    const мЦветСпецСимвола = \"sp>\";\n    const мЦветПрепроцессора = \"pr>\";\n    const мЦветКлючевогоСлова1 = \"key>\";\n\n\n    let СтрокаРезультат;\n    let УстановленЦвет;\n    let ПоследнийЦвет;\n\n    let ВСтроке = false;\n    let Токен = \"\";\n\n    function ПустаяСтрока(Строка) {\n        return Строка.trim() === '';\n    }\n\n    function Сред(Строка, Нач, Длина) {\n        return Строка.substr(Нач - 1, Длина);\n    }\n\n    function Прав(Строка, Длина) {\n        return Строка.substr(-Длина);\n    }\n\n    function isKeyword(token) {\n        return keywords.has(token.toLowerCase().trim());\n    }\n\n    function ДобавитьЧастьСтроки1С(Часть, Цвет) {\n\n        if (Часть === \" \" || ПоследнийЦвет === Цвет) {\n            СтрокаРезультат = СтрокаРезультат + Часть;\n        } else {\n            if (УстановленЦвет) {\n                СтрокаРезультат = СтрокаРезультат + КонецТега;\n                УстановленЦвет = false;\n            };\n\n            СтрокаРезультат = СтрокаРезультат + НачалоТега + Цвет + Часть;\n            УстановленЦвет = true;\n            ПоследнийЦвет = Цвет;\n        };\n    }\n\n    function РазукраситьСтроку(СтрокаКода) {\n\n        //  https://infostart.ru/profile/34707/public/\n        let ВСтрокеСкобка = false;\n        let ВСтрокеТильда = false;\n        let НачалоСтроки = 1;\n        let ТокенДоТочки = true;\n        // Заменяем 8 символьную табуляцию на 4 символьную пробелами\n\n        // Последовательно перебираются все символы строки кода\n        let Поз = 1;\n        for (Поз = 1; Поз <= СтрокаКода.length; Поз++) {\n\n            let ТекущийСимвол = СтрокаКода.charAt(Поз - 1);\n            if (ВСтроке) {\n\n                // Операции встрече символа \"кавычка\"\n                if (ТекущийСимвол === '\"') {\n                    // Нашли парную кавычку - окрашиваем как строку\n                    ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n                    ВСтроке = false;\n                    Токен = \"\";\n                    ТокенДоТочки = true;\n                } else {\n                    Токен = Токен + ТекущийСимвол;\n                };\n\n            } else if (ВСтрокеСкобка) {\n\n                // Операции встрече символа \"кавычка\" литерал\n                if (ТекущийСимвол === \"'\") {\n                    // Нашли парную скобку - окрашиваем как комментарий\n                    ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n                    ВСтрокеСкобка = false;\n                    Токен = \"\";\n                    ТокенДоТочки = true;\n                } else {\n                    Токен = Токен + ТекущийСимвол;\n                };\n\n            } else if (ТекущийСимвол === \" \") {\n                // Операции при встрече символа табуляции или пробела\n                if (!ПустаяСтрока(Токен)) {\n                    // Пробел после токена, значит\n                    // токен - ключевое слово...\n                    if (ВСтрокеТильда) {\n                        ДобавитьЧастьСтроки1С(Токен + \" \", мЦветСтроки);\n                        ВСтрокеТильда = false;\n\n                    } else if (isKeyword(Токен.trim())) {\n                        ДобавитьЧастьСтроки1С(Токен + \" \", мЦветКлючевогоСлова1);\n\n                    } else if (!isNaN(parseInt(Токен, 10))) {\n                        ДобавитьЧастьСтроки1С(Токен + \" \", мЦветЧисла);\n\n                    } else {\n                        ДобавитьЧастьСтроки1С(Токен + \" \", мЦветФона);\n                    };\n                    Токен = \"\";\n                } else {\n                    СтрокаРезультат = СтрокаРезультат + \" \";\n                };\n                ТокенДоТочки = true;\n\n            } else if (Спецсиволы.has(ТекущийСимвол)) {\n\n                // Встретился один из специальных символов\n                if (!ПустаяСтрока(Токен)) {\n                    // Чтобы избежать окраски метода объекта с совпадающим именем\n                    // с одним из ключевых слов, проверяем текущий символ на \".\"\n                    if (ВСтрокеТильда) {\n\n                        ДобавитьЧастьСтроки1С(Токен, мЦветСтроки);\n                        ВСтрокеТильда = false;\n                        ТокенДоТочки = (ТекущийСимвол !== \".\");\n\n                    } else if (ТокенДоТочки && isKeyword(Токен)) {\n                        ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\n                        ТокенДоТочки = (ТекущийСимвол !== \".\");\n\n                    } else {\n                        // Не ключевое слово - значит число\n                        if (!isNaN(parseInt(Токен, 10))) {\n                            ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\n\n                        } else {\n                            ДобавитьЧастьСтроки1С(Токен, мЦветФона);\n                        };\n                        ТокенДоТочки = (ТекущийСимвол !== \".\");\n                    };\n                    Токен = \"\";\n                };\n                // Один из специальных символов\n                if (ТекущийСимвол === \".\" && ПоследнийЦвет === мЦветЧисла) {\n                    // Продолжение числа\n                    ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветЧисла);\n                    continue;\n\n                } else if (ТекущийСимвол === \"=\" && Сред(СтрокаКода, Поз - 1, 1) === \"<\") {\n                    // Знак \"меньше или равно\" - вторая ошибка движка Инфостарт\n                    ПоследнийЦвет = undefined;\n\n                } else if (ТекущийСимвол === \"/\" && Сред(СтрокаКода, Поз + 1, 1) === \"/\") {\n                    // Проверяется на комментарий\n                    ДобавитьЧастьСтроки1С(Прав(СтрокаКода, СтрокаКода.length - Поз + 1), мЦветКомментария);\n                    return;\n                };\n                ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветСпецСимвола);\n\n            } else if (ТекущийСимвол === '\"' || ТекущийСимвол === \"|\") {\n\n                // Операции встрече символа \"кавычка\"\n                // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\n                if (ПустаяСтрока(Токен)) {\n                    НачалоСтроки = Поз;\n                    ВСтроке = true;\n                } else {\n                    // Ошибка синтаксиса\n                    ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\n                    Токен = \"\";\n                };\n                ТокенДоТочки = true;\n\n            } else if (ТекущийСимвол === \"'\") {\n\n                // Операции встрече символа \"кавычка\" литерал\n                // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\n                if (ПустаяСтрока(Токен)) {\n                    НачалоСтроки = Поз;\n                    ВСтрокеСкобка = true;\n                } else {\n                    // Ошибка синтаксиса\n                    ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\n                    Токен = \"\";\n                };\n                ТокенДоТочки = true;\n\n            } else if (ТекущийСимвол === \"#\" || (ТекущийСимвол === \"&\" && ПустаяСтрока(СтрокаРезультат))) {\n\n                // Встретился символ препроцессора\n                ДобавитьЧастьСтроки1С(Прав(СтрокаКода, СтрокаКода.length - Поз + 1), мЦветПрепроцессора);\n                Поз = СтрокаКода.lenth;\n                break;\n\n            } else if (ТекущийСимвол === \"~\") {\n                Токен = Токен + ТекущийСимвол;\n                ВСтрокеТильда = true;\n            } else {\n                // Остальные символы\n                Токен = Токен + ТекущийСимвол;\n            }\n        }\n\n        if (ВСтроке) {\n\n            // Многострочная строка\n            ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n\n        } else if (ВСтрокеСкобка) {\n\n            // Незавершенный литерал\n            ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n\n        } else if (!ПустаяСтрока(Токен)) {\n\n            // Анализируем последний токен строки кода\n            if (isKeyword(Токен)) {\n                ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\n\n            } else if (!isNaN(parseInt(Токен, 10))) {\n                ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\n\n            } else {\n                ДобавитьЧастьСтроки1С(Токен, мЦветФона);\n            };\n\n        };\n\n    }\n\n    ВСтроке = false;\n    Токен = \"\";\n    УстановленЦвет = false;\n    ПоследнийЦвет = undefined;\n    СтрокаРезультат = '';\n\n    let result = [];\n\n    for (let СтрокаКода of text.split('\\n')) {\n\n        if (ПустаяСтрока(СтрокаКода)) {\n            result.push('');\n            continue;\n        }\n\n        СтрокаРезультат = '';\n        РазукраситьСтроку(СтрокаКода);\n        if (УстановленЦвет && !ВСтроке) {\n            СтрокаРезультат += '</span>';\n            УстановленЦвет = false;\n            ПоследнийЦвет = '';\n            Токен = '';\n        } else if (!ВСтроке) {\n            ПоследнийЦвет = '';\n            Токен = '';\n        }\n\n        result.push(СтрокаРезультат);\n    }\n\n    return result.join('\\n');\n}\n\nexport default highlight;","import React, { Component } from 'react'\nimport { childrenToText } from 'src/utils'\nimport highlight from './code_highlight'\nimport './code1c.css'\n    \nclass Code extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onShowClick = this.onShowClick.bind(this);\n        this.state = {hidden: true};\n\n        const { children } = props;\n        if (children) {\n\n            const textArr = childrenToText(children);\n            this.text = textArr.join('');\n\n            // replace double new-lines\n            this.text = this.text\n                .replace(/\\n<br>/g, '\\n')\n                .replace(/<br>\\n/g, '\\n')\n                .replace(/\\r<br>/g, '\\n')\n                .replace(/<br>\\r/g, '\\n')\n                .replace(/<br>/g, '\\n');\n\n            // remove all leading|ending new-lines\n            while (this.text[0] === '\\n') {\n                this.text = this.text.substr(1);\n            }\n\n            while (this.text.substr(-1)=== '\\n') {\n                this.text = this.text.substr(0, this.text.length - 1);\n            }            \n            \n            this.text = highlight(this.text);\n        }\n    }\n\n    onShowClick() {\n        this.setState({\n            hidden: !this.state.hidden\n        })\n    }\n\n    render() {\n\n        let buttonText;\n        let linesCount = 0;\n        if (this.text)\n            linesCount = this.text.split(\"\\n\").length;\n\n        if (this.state.hidden)\n            buttonText = `Показать: ${linesCount} строк`;\n        else\n            buttonText = 'Скрыть';\n\n        let buttonShow;\n        if (linesCount > 7)\n            buttonShow = (\n                <div className=\"expand-button-div\">\n                    <span className=\"expand-button-span\" onClick={this.onShowClick}>{buttonText}</span>\n                </div>    \n            );\n\n        let preStyle =  { \n        } \n        \n        if (this.state.hidden && linesCount > 7) {\n            preStyle.overflow = \"hidden\";\n            preStyle.height   = \"135px\";\n        } else {\n            preStyle.overflow = \"auto\";\n            preStyle.height   = \"auto\";\n        }    \n\n        return (\n            <div style={{marginTop: \"5px\"}}>\n                <pre className=\"code-pre\" style={preStyle} dangerouslySetInnerHTML={{ __html: this.text }}>\n                </pre>\n                {buttonShow}\n            </div>\n        )\n    }\n\n}\n\nexport default Code;","//@flow\nimport React, { Component } from 'react'\n\ntype LinkToUserProps = {\n    href: string,\n    children: any\n}\n\nclass LinkToUser extends Component<LinkToUserProps> {\n\n    render() {\n        const { href, children } = this.props;\n        return <a href={href} className=\"registered-user\">{children}</a>\n    }\n}\n\nexport default LinkToUser;","//@flow\nimport React, { Component } from 'react'\nimport queryString from 'query-string'\n\ntype YoutubeLinkProps = {\n    href: string,\n}\n\nclass YoutubeLink extends Component<YoutubeLinkProps> {\n\n    state: any;\n\n    constructor(props: YoutubeLinkProps) {\n        super(props);\n        this.state = {hrefName: props.href, title: ''};\n    }\n\n    getVideoId(href: string): ?string {\n        \n        if (href.search(/youtube/) !== -1) {\n            let arr = href.split('?');\n            return queryString.parse(arr[1]).v;\n        }    \n\n        if (href.search(/youtu\\.be/) !==-1) {\n            let arr =  href.match(/e\\/(.+?)(&|\\?|$)/);\n\n            if (arr && arr.length > 1) \n                return arr[1];\n        }    \n        return null;    \n    }\n\n    async getVideoParams(videoId: string): any {\n        \n        const apiKey = localStorage.getItem('youtubeApiKey') || 'AIzaSyCztN2QW4Fxw_1YuAHBTOZdYLbzigPz25g';\n        let apiUrl = `https://www.googleapis.com/youtube/v3/videos?key=${apiKey}&fields=items(snippet(title))&part=snippet&id=${videoId}`;\n        const response = await fetch(apiUrl);\n        const json = await response.json();\n\n        let title = json.items[0].snippet.title;\n        let hrefName = title;\n        let maxLength = 50;\n        if (title.length > maxLength + 5) \n            hrefName = hrefName.substring(0, maxLength) + '...'       \n\n        return {\n            hrefName,\n            title\n        }\n    }\n\n    async componentDidMount() {\n        \n        const { href } = this.props;\n        const videoId = this.getVideoId(href);\n        if (!videoId)\n            return;\n\n        try {\n            const params = await this.getVideoParams(videoId);\n            this.setState({\n                ...params\n            });\n\n        } catch(e) {\n            console.error('youtube', e.message);\n        }\n    }\n\n    render() {\n        let prefix = 'youtube';\n        return <a href={this.props.href} title={this.state.title}>{`${prefix}: ${this.state.hrefName}`}</a>\n    }\n}\n\nexport default YoutubeLink;","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport URL from 'url-parse'\n\nimport LinkToPost from './link_to_post'\nimport LinkToUser from './link_to_user'\nimport YoutubeLink from './youtube_link'\n\nimport type { DefaultProps } from 'src/components'\n\nimport { childrenToText } from 'src/utils'\n\ntype CustomLinkProps = {\n    href: string,\n    parentText: string,\n    target: string,\n    class: string,\n    rel: string,\n    showTooltipOnPostLink: string,\n    showYoutubeVideoTitle: string,\n    replaceCatalogMista: string,\n    fixBrokenLinks: string,\n}\n\ntype Props = CustomLinkProps & DefaultProps;\n\nclass CustomLink extends Component<Props> {\n\n    fixBrokenLink(href: string, parentText: string): string {\n        let escapedHref = href\n            .replace(/\\[/g, '\\\\[')\n            .replace(/\\]/g, '\\\\]')\n            .replace(/\\./g, '\\\\.')\n            .replace(/\\./g, '.')\n            .replace(/\\*/g, '\\\\*')\n            .replace(/\\+/g, '\\\\+')\n            .replace(/\\(/g, '\\\\(')\n            .replace(/\\)/g, '\\\\)')\n            .replace(/\\?/g, '\\\\?')\n            .replace(/\\//g, '\\\\/');\n\n            try {\n                let regExp = new RegExp(escapedHref + '<\\\\/a>(\\\\)|[а-яёА-ЯЁ0-9#\\\\-\\\\+\\\\_\\\\%\\\\?=]*)');\n                let arr = parentText.match(regExp);\n                if (arr && arr.length > 1) {\n                    if (arr[1] === ')' &&  href.search('\\\\(') === -1) {\n                        return href;\n                    }\n                    href = href + arr[1];\n                    return href;\n                }\n            } catch(e) {\n                console.error(e);\n            }\n        return href;    \n    }\n\n    render() {\n\n        const { href, children, parentText, \n            showTooltipOnPostLink, showYoutubeVideoTitle, replaceCatalogMista, fixBrokenLinks } = this.props;\n\n        try {\n            var url = new URL(href, true);\n        } catch(error) {\n            console.error(error.message, href);\n            return <a href={href}>{href}</a>;\n        }\n\n\n        let newHref = href;\n        if (newHref.startsWith('/') ) {\n            url.set('protocol', 'https')\n            url.set('hostname', 'forum.mista.ru')\n            newHref = url.href;\n        }\n        \n        if (showTooltipOnPostLink === 'true') {\n            if (url.hostname.search(/forum\\.mista.ru/) !== -1) {\n                \n                if (url.pathname === '/topic.php') {\n                    return (                \n                        <LinkToPost topicId={url.query.id} number={url.hash.replace('#', '') || \"0\"}>\n                            {childrenToText(children)}\n                        </LinkToPost>           \n                    )\n                } else if (url.pathname === '/users.php') {\n                    return (                \n                        <LinkToUser href={url.href} >\n                            {children}\n                        </LinkToUser>    \n                    )\n                }  \n            }    \n            \n            if (url.hostname === 'a-sitnikov.github.io' && \n                url.pathname === '/react.mista/') {\n\n                if (Object.keys(url.query).length === 0) {\n                    \n                    url = new URL(href.replace(/#\\//, ''), true);\n                    if (url.pathname === '/react.mista/topic.php')\n                        return (                \n                            <LinkToPost topicId={url.query.id} number={url.hash.replace('#', '') || \"0\"}>\n                                {childrenToText(children)}\n                            </LinkToPost>           \n                        )           \n                }        \n            }\n        }    \n\n        if (showYoutubeVideoTitle === 'true')\n            if (url.hostname.search(/youtube/) !== -1\n                || url.hostname.search(/youtu\\.be/) !== -1) {\n                return <YoutubeLink href={href} />\n            }\n\n        if (replaceCatalogMista === 'true') \n            if (url.hostname.search(/catalog\\.mista/) !== -1) {\n                url.set('hostname', 'infostart.ru')\n\n                return (\n                    <a target={this.props.target} \n                        className={this.props.class} \n                        rel={this.props.rel} \n                        href={url.href} >{url.href} </a>\n                )\n            }\n\n        if (fixBrokenLinks === 'true' && parentText) {\n            newHref = this.fixBrokenLink(newHref, parentText);\n        }\n\n        return (\n            <a target={this.props.target} \n               className={this.props.class} \n               rel={this.props.rel} \n               href={newHref} >{children}</a>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n    const {\n        showTooltipOnPostLink,\n        showYoutubeVideoTitle,\n        replaceCatalogMista,\n        fixBrokenLinks\n    } = state.options.items;\n\n    return {\n        showTooltipOnPostLink,\n        showYoutubeVideoTitle,\n        replaceCatalogMista,\n        fixBrokenLinks\n    }\n}\n\nexport default connect(mapStateToProps)(CustomLink);","//@flow\nimport React from 'react'\nimport { domain } from 'src/api'\n\nimport type { ResponseVoteItem } from 'src/api'\n\ntype Props = {\n    topicId: string,\n    data: ResponseVoteItem,\n    colors: Array<string>,    \n    total: number,\n    n: number\n}\n\nconst VoteItem = (props: Props) => {\n\n    const { topicId, data, total, n, colors } = props;\n\n    const img = `${domain}/css/voting${n}.png`;\n\n    let percent = 0;\n\n    if (total) {\n        percent = Math.round(100 * data.result / total);\n    }\n\n    const imgStyle = { maxWwidth: \"500px\", width: \"100%\", height: \"15px\" };\n\n    return (\n        <div className=\"voting-item\">\n            <div className=\"voting-title\">\n                <a rel=\"nofollow\" style={{ textDecoration: \"none\" }} href={`${window.hash}/topic.php?id=${topicId}&sel=${n}`}>\n                    <b><span style={{ color: colors[n-1] }}>{`${n}. ${data.select}`}</span></b>\n                </a>\n            </div>\n            <div className=\"voting-percentage\">\n                {/*<div className=\"div-va-middle\">*/}\n                    <b><span style={{ color: colors[n-1] }}>{`${percent}% (${data.result})`}</span></b>\n                {/*</div>*/}\n            </div>\n            <div className=\"voting-bar\">\n                <div style={{width:`${percent}%`}}>\n                    <a href={img}>\n                        <img src={img} style={imgStyle} alt={`п${n}`} />\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default VoteItem;","//@flow\nimport React from 'react'\nimport VoteItem from './vote_item'\nimport type { ResponseVoteItem } from 'src/api'\n\ntype Props = {\n    items: Array<ResponseVoteItem>,\n    topicId: string,\n    colors: Array<string>    \n}\n\nconst VoteChart = (props: Props) => {\n\n    const { items, topicId, colors } = props;\n\n    let total = items.reduce((sum, e) => sum + e.result, 0);    \n\n    return (\n        <div style={{marginBottom: \"10px\" }}>\n            {items.filter(val => val.select).map((data, i) => <VoteItem key={i} data={data} total={total} n={i+1} topicId={topicId} colors={colors}/>)}\n        </div>    \n    )\n}\n\nexport default VoteChart;","import React, { Component } from 'react'\n\nclass Vote extends Component {\n\n    render() {\n        const { colors, info, vote } = this.props;\n\n        const voteOption = info[vote - 1];\n        return (\n            <div style={{marginTop: \"5px\"}}>\n                <b><span style={{ color: colors[vote-1] }}>{`${vote}. ${voteOption.select}`}</span></b>\n            </div>\n        )\n    }\n}\n\nexport default Vote;","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport activeHtml from 'react-active-html';\n\nimport Code from 'src/components/extensions/code1c'\nimport LinkToPost from 'src/components/extensions/link_to_post'\nimport CustomLink from 'src/components/extensions/custom_link'\n\nimport VoteChart from './vote_chart'\nimport Vote from './vote'\n\nimport type { ResponseInfo, ResponseMessage } from 'src/api'\nimport type { DefaultProps } from 'src/components/index'\nimport type { State } from 'src/reducers'\n\ntype MsgTextProps = {\n    topicId: string,\n    n: string,\n    html: string,\n    vote: number,\n    data: ResponseMessage,\n    style: {}\n}\n\ntype StateProps = {\n    info: ResponseInfo,\n    showTooltips: string,\n    voteColors: Array<string>\n}\n\ntype Props = MsgTextProps & StateProps & DefaultProps;\n\nclass MsgText extends Component<Props> {\n\n    processLinksToPosts(text: string): string {\n\n        const { topicId } = this.props;\n\n        const regexp = /(\\()(\\d+)(\\))/gi; // (12)\n        return text.replace(regexp, (res, ...segments) => {\n            const number = segments[1];\n            return `(<link data-topicid='${topicId}' data-number='${number}' ></link>)`\n        });\n    }\n\n    processCode1C(text: string): string {\n\n        const regexp = /(\\[1[CС]\\])((.|\\n|\\r)*?)(\\[\\/1[CС]\\])/gi; // [1C] text [/1C]\n        return text.replace(regexp, (res, ...segments) => {\n            let txt = segments[1];\n\n            //remove first <br>\n            if (txt.substr(0, 4) === \"<br>\")\n                txt = txt.substr(4);\n            return `<code>${txt}</code>`\n        });\n    }\n    \n    processText(text: ?string): ?string {\n\n        if (!text)\n            return text;\n\n        const { showTooltips } = this.props;\n\n        text = this.processCode1C(text);\n\n        if (showTooltips === 'true')\n            text = this.processLinksToPosts(text);\n            \n        return text;\n    }\n\n    render() {\n        const { topicId, n, html, vote, info, style, voteColors } = this.props;\n\n        let voteElement;\n        if (vote && info.voting && topicId === info.id) {\n            let voteOption = info.voting[vote - 1];\n            if (voteOption)\n                voteElement = <Vote info={info.voting} vote={vote} colors={voteColors}/>\n        }\n\n        let voteChart;\n        if (n === \"0\" && info.is_voting === 1 && info.voting) {\n            voteChart = <VoteChart items={info.voting} topicId={topicId} colors={voteColors} />\n        }\n\n        let processedHtml = this.processText(html);\n        const componentsMap = {\n            link: props => <LinkToPost topicId={props['data-topicid']} number={props['data-number']}  key={props.key}/>,\n            code: props => <Code {...props} />,\n            a: props => <CustomLink {...props} parentText={processedHtml}/>\n        };\n        let textComponent = activeHtml(processedHtml, componentsMap);\n\n        return (\n            <div className=\"message\" style={{...style }}>\n                {voteChart}\n                <div>\n                    {textComponent}\n                </div>\n                {voteElement}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    const { info } = state.topic;\n    \n    return {\n        info,\n        voteColors: state.options.voteColors,\n        showTooltips: state.options.items['showTooltips']\n    }\n}\n\nexport default connect(mapStateToProps)(MsgText);","//@flow\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport dateFormat from 'dateformat'\n\nimport './topic_preview.css'\n\ntype TopicPreviewProps = {\n    user: ?string,\n    utime: ?number,\n    topicId: string,\n    n: number,\n    onFirst: any,   \n    onLast: any,   \n    onPrev: any,   \n    onNext: any\n}\n\nclass PreviewHeader extends Component<TopicPreviewProps> {\n\n    render() {\n        const { user, utime, topicId, n } = this.props;\n\n        if (utime)\n            var date = new Date(utime*1000);\n\n        return (\n            <div>\n                <span className=\"plus-nav\" onClick={this.props.onFirst}>[← </span>\n                <span className=\"plus-nav\" onClick={this.props.onPrev}> « </span>\n                <Link className=\"plus-nav\" title={`Перейти к сообщению ${n}`} to={`/topic.php?id=${topicId}#${n}`}>{n}</Link>\n                <span className=\"plus-nav\" onClick={this.props.onNext}> » </span>\n                <span className=\"plus-nav\" onClick={this.props.onLast}> →]</span>\n                <b style={{margin: \"auto 5px\"}}>{user}</b>\n                <span className=\"agh\">{dateFormat(date, 'dd.mm.yy - HH:MM')}</span>\n            </div>\n        )    \n    }\n\n}\n\nexport default PreviewHeader;","//@flow\nimport React, { Component } from 'react'\n\nimport * as API from 'src/api'\n\nimport MsgText from 'src/components/topic/row/msg_text'\n\nimport PreviewHeader from './preview_header'\nimport './topic_preview.css'\n\ntype TopicPreviewProps = {\n    topicId: string,\n    n: number   \n}\n\ntype Props = TopicPreviewProps;\ntype State = {\n    n: number,\n    data: ?any,\n    error: ?string    \n}\n\nclass TopicPreview extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            n: props.n,\n            data: null,\n            error: null\n        }\n    }\n\n    async componentDidMount() {\n        await this.fetchData(this.state.n);\n    }\n\n    fetchData = async (n: number) => {\n        let data, error;\n        try {\n            data = await API.getMessage(this.props.topicId, n);\n            if (!data)\n                error = `Сообщение не найдено ${n}`;\n\n        } catch(e) {\n            error = e.message\n        };\n        this.setState({\n            n,\n            data,\n            error\n        })\n    }\n\n    onClickFirst = () => {\n        this.fetchData(0);\n    }\n    \n    onClickNext = () => {\n        this.fetchData(this.state.n + 1);\n    }\n\n    onClickPrev = () => {\n        if (this.state.n > 0)\n            this.fetchData(this.state.n - 1);\n    }\n\n    onClickLast = async () => {\n        const n = await API.getTopicMessagesCount(this.props.topicId);\n        this.fetchData(n);\n    }\n\n    render() {\n        const { topicId } = this.props;\n        const { data, error, n } = this.state;\n        if (!data && !error)\n            return null;\n\n        if (data)\n            var { user, utime } = data;\n\n        return (\n            <div className=\"topic-preview\">\n                <PreviewHeader \n                    user={user}\n                    utime={+utime}\n                    topicId={topicId}\n                    n={n}\n                    onFirst={this.onClickFirst}\n                    onLast={this.onClickLast}\n                    onNext={this.onClickNext}\n                    onPrev={this.onClickPrev}\n                />\n                {data && <MsgText \n                    data={data} \n                    html={data.text} \n                    topicId={topicId} \n                    style={{maxHeight: \"500px\", overflowY: \"auto\", overflowWrap: \"break-word\"}}\n                />}\n                {error && <p>{error}</p>}\n            </div>\n        )    \n    }\n\n}\n\nexport default TopicPreview;","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport queryString from 'query-string'\n\nimport type { State } from 'src/reducers'\nimport type { DefaultProps, Location } from 'src/components'\n\nimport type { TopicsListState } from 'src/reducers/topics_list'\nimport type { SectionsState } from 'src/reducers/sections'\nimport type { LoginState } from 'src/reducers/login'\n\nimport { fetchTopicsListIfNeeded } from 'src/actions/topics_list'\n\nimport Header from './header'\nimport Row from './row'\nimport Pages from 'src/components/common/pages'\nimport NewTopic from './new_topic'\nimport Error from 'src/components/common/error'\n\nimport TopicPreview from 'src/components/preview/topic_preview'\n\nimport './topics_list.css'\n\ntype StateProps = {\n    topicsList: TopicsListState,\n    sections: SectionsState,\n    login: LoginState,\n    topicsPerPage: string,\n    autoRefreshTopicsList: string,\n    autoRefreshTopicsListInterval: string\n}\n\ntype Props = {\n    fetchTopicsListIfNeeded: any\n} & DefaultProps & StateProps;\n\nclass TopicsList extends Component<Props> {\n    \n    location: Location;\n    locationParams: { page?: string };\n    page: string;\n    timer: any;\n\n    constructor(props: Props) {\n        super(props);\n        this.locationParams = { page: '1' };\n    }\n\n    componentDidMount() {\n\n        let { location } = this.props;\n\n        this.location = location;\n        this.updateTopicsList();\n        \n    }\n    \n    componentWillUnmount() {\n        clearTimeout(this.timer);\n    }\n\n    UNSAFE_componentWillReceiveProps(props: Props) {\n        \n        const { location, topicsPerPage } = props;\n\n        if (this.location.search !== location.search \n            || this.props.topicsPerPage !== topicsPerPage) {\n\n            this.location = location;\n            this.updateTopicsList();\n            window.scrollTo(0, 0);\n        }\n\n        document.title = 'React.Mista';\n    }\n\n    updateTopicsList = () => {\n        \n        const { fetchTopicsListIfNeeded } = this.props;       \n        let { autoRefreshTopicsList, autoRefreshTopicsListInterval } = this.props;\n\n        this.locationParams = queryString.parse(this.location.search);\n        fetchTopicsListIfNeeded(this.locationParams);\n\n        if (autoRefreshTopicsList === 'true') {\n            \n            autoRefreshTopicsListInterval = +autoRefreshTopicsListInterval;\n            if (autoRefreshTopicsListInterval < 60) autoRefreshTopicsListInterval = 60;\n\n            clearTimeout(this.timer);\n            this.timer = setTimeout(this.updateTopicsList, autoRefreshTopicsListInterval * 1000);\n        }        \n    }\n\n    onPostNewTopicSuccess = () => {\n        this.updateTopicsList();\n    }\n\n    render() {\n\n        const { topicsList, sections } = this.props;\n\n        let rows = [];\n        for (let item of topicsList.items) {\n            \n            rows.push(<Row key={item.id} data={item}/>);\n            if (item.showPreview)\n                rows.push(\n                    <div key={`preview${String(item.id)}`} className=\"preview-container\">\n                        <TopicPreview topicId={String(item.id)} n={0}/>\n                    </div>\n                )\n        }\n\n        return (\n            <div>\n                <Header history={this.props.history} />\n                {topicsList.error && (<Error text={topicsList.error} />)}\n                <div className=\"table\">\n                    <div className=\"th\" style={{position:\"sticky\", top:\"39px\"}}>\n                        <div>Раздел</div>\n                        <div>Re</div>\n                        <div></div>\n                        <div>Тема</div>\n                        <div>Автор</div>\n                        <div><span style={{cursor: \"pointer\"}} title=\"Обновить список\" onClick={this.updateTopicsList}>{topicsList.isFetching ? \"Обновляется\" : \"Обновлено\"}</span></div>\n                    </div>\n                    {rows}\n                    <div className=\"tf\">\n                        <Pages baseUrl='index.php' locationParams={this.locationParams} maxPage={10}/>\n                    </div>    \n                </div>\n                <div id=\"F\" className=\"newtopic\" style={{ marginBottom: \"10px\", marginTop: \"5px\", position: 'relative' }}>\n                    <NewTopic sections={sections.items} onSubmitSuccess={this.onPostNewTopicSuccess} locationParams={this.locationParams}/>\n                </div>    \n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    return {\n        topicsList: state.topicsList,\n        sections: state.sections,\n        login: state.login,\n        topicsPerPage: state.options.items.topicsPerPage,\n        autoRefreshTopicsList: state.options.items.autoRefreshTopicsList,\n        autoRefreshTopicsListInterval: state.options.items.autoRefreshTopicsListInterval,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchTopicsListIfNeeded: (...params) => dispatch(fetchTopicsListIfNeeded(...params)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicsList);","//@flow\nimport * as API from 'src/api'\nimport type { Dispatch } from 'redux'\n\nimport type { ResponseInfo, ResponseMessage, ResponseMessages } from 'src/api'\n\nexport type REQUEST_TOPIC = {\n    type: 'REQUEST_TOPIC'\n}\n\nexport type RECEIVE_TOPIC = {\n    type: 'RECEIVE_TOPIC',\n    info: ResponseInfo, \n    item0: ResponseMessage, \n    items: ResponseMessages,\n    receivedAt: Date\n}\n\nexport type RECEIVE_TOPIC_FAILED = {\n    type: 'RECEIVE_TOPIC_FAILED',\n    error: any,\n    receivedAt: Date\n}\n\nexport type REQUEST_NEW_MESSAGES = {\n    type: 'REQUEST_NEW_MESSAGES'\n}\n\nexport type RECEIVE_NEW_MESSAGES = {\n    type: 'RECEIVE_NEW_MESSAGES',\n    items: ResponseMessages,\n    receivedAt: Date\n}\n\nexport type CLOSE_TOPIC = {\n    type: 'CLOSE_TOPIC'\n}\n\n\nexport type TopicAction = REQUEST_TOPIC | RECEIVE_TOPIC | RECEIVE_TOPIC_FAILED | CLOSE_TOPIC | REQUEST_NEW_MESSAGES | RECEIVE_NEW_MESSAGES;\n\nexport const requestTopic = () => ({\n    type: 'REQUEST_TOPIC'\n})\n\nexport const receiveTopic = (info: ResponseInfo, item0: ?ResponseMessage, items: ResponseMessages) => {\n    \n    return {\n        type: 'RECEIVE_TOPIC',\n        info,\n        item0,\n        items,\n        receivedAt: Date.now()\n    }\n}\n\nexport const closeTopic = () => {\n\n    return {\n        type: 'CLOSE_TOPIC',\n    }\n}\n\nexport const fetchTopic = (params: any, item0: ?ResponseMessage) => async (dispatch: Dispatch<*>) => {\n\n    dispatch(requestTopic())\n\n    let info;\n    try {\n        info = await API.getTopicInfo({id: params.id});\n    } catch(e) {\n        console.error(e);\n        info = {\n            id: params.id,\n            text: '',\n            answers_count: \"0\"\n        };\n    }   \n\n    try {    \n        let page = params.page || 1;\n\n        let _item0 = item0;\n        let _items;\n        if (page === 'last20') {\n\n            if (+info.answers_count > 21) {\n\n                if (!_item0) {\n                    let items = await API.getTopicMessages({\n                        id: params.id,\n                        from: 0,\n                        to: 1\n                    }); \n                    _item0 = items[0];\n                }    \n\n                let first = +info.answers_count - 20;\n                _items = await API.getTopicMessages({\n                    id: params.id,\n                    from: first,\n                    to: 1010\n                }); \n\n            } else {\n                let items = await API.getTopicMessages({\n                    id: params.id,\n                    from: 0,\n                    to: 1010\n                });               \n                _item0 = items[0];\n                _items = items.slice(1);\n            }\n\n        } else {\n\n            page = +page;\n            let first = 0;\n            let last = page * 100 - 1;\n\n            if (page > 1) {\n\n                first = (page - 1) * 100;\n                if (!_item0) {\n                    let items = await API.getTopicMessages({\n                        id: params.id,\n                        from: 0,\n                        to: 1\n                    });\n                    _item0 = items[0];\n                }\n\n                _items = await API.getTopicMessages({\n                    id: params.id,\n                    from: first,\n                    to: last\n                });                \n\n            } else {\n                if (_item0)\n                    first = 1;\n                else\n                    first = 0;\n\n                let items = await API.getTopicMessages({\n                    id: params.id,\n                    from: first,\n                    to: last\n                });  \n\n                if (_item0) {\n                    _items = items;\n                } else {\n                    _item0 = items[0];\n                    _items = items.slice(1);\n                }\n            }\n        \n        }\n    \n        if (info.answers_count === \"0\" && _items.length > 0)\n            info.answers_count = _items[_items.length - 1].n;\n\n        if (page === 'last20' && _items.length > 20) {\n            _items = _items.slice(-20);\n        }\n\n       dispatch(receiveTopic(info, _item0, _items));\n\n    } catch (error) {\n\n        console.error('Failed to fetch topic:', error);\n\n        dispatch({\n            type: 'RECEIVE_TOPIC_FAILED',\n            error,\n            receivedAt: Date.now()\n        });\n\n    }\n}\n\nconst shouldFetch = (state) => {\n    const topic = state.topic;\n    if (!topic) {\n        return true\n    }\n    if (topic.isFetching) {\n        return false\n    }\n    return true\n}\n\nexport const fetchTopicIfNeeded = (params: any, item0: ?ResponseMessage) => (dispatch: Dispatch<*>, getState: any) => {\n    if (shouldFetch(getState())) {\n        return dispatch(fetchTopic(params, item0));\n    }\n}\n\nexport type FetchNewMessageseParams = {\n    id: number | string,\n    last: number    \n}\n\nexport const fetchNewMessages = (params: FetchNewMessageseParams) => async (dispatch: Dispatch<*>) => {\n\n    dispatch({\n        type: 'REQUEST_NEW_MESSAGES'\n    });\n\n    try {\n        const json = await API.getTopicMessages({\n            id: params.id,\n            from: params.last + 1,\n            to: 1002\n        });\n\n        dispatch({\n            type: 'RECEIVE_NEW_MESSAGES',\n            items: json,\n            receivedAt: Date.now()\n        });\n\n    } catch (error) {\n        console.error('Failed to fetch new messages:', error);\n\n        dispatch({\n            type: 'RECEIVE_NEW_MESSAGES_FAILED',\n            error,\n            receivedAt: Date.now()\n        });\n    }\n\n}\n\nexport const fetchNewMessagesIfNeeded = (params: FetchNewMessageseParams) => (dispatch: Dispatch<*>, getState: any) => {\n    if (shouldFetch(getState())) {\n        return dispatch(fetchNewMessages(params));\n    }\n}","// @flow\nimport * as React from 'react'\nimport { connect } from 'react-redux'\n\nimport Login from '../login'\n\ntype Props = {\n    info: { forum: string }\n}\n\nclass Header extends React.Component<Props> {\n\n    render() {\n\n        const { info } = this.props;\n\n        const forums = {\n            '1c': '1С:Предприятие',\n            'life': 'О жизни',\n            'it': 'Информационные технологии',\n            'job': 'Работа'\n        };\n\n        return (\n\n            <div className=\"flex-row\">\n                <div className=\"user-td\">\n                    <Login />\n                </div>\n                <div className=\"section-td\">\n                    <span id=\"forum_string\" className=\"bold120\">\n                        <a rel=\"nofollow\" href={`${window.hash}/index.php?forum=${info.forum}`} style={{ textDecoration: \"none\" }}>{forums[info.forum]}</a>\n                    </span>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n\n    const {\n        info\n    } = state.topic || {\n        info: {\n            forum: ''\n        }\n    }\n\n    return {\n        info\n    }\n}\n\nexport default connect(mapStateToProps)(Header);","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { defaultTopicState } from 'src/reducers/topic'\n\nimport type { State } from 'src/reducers'\nimport type { ResponseInfo } from 'src/api'\nimport { domain, urlTopicInfo, urlTopicMessages} from 'src/api'\n\ntype StateProps = {\n    info: ResponseInfo\n}\n\nclass TopicInfo extends Component<StateProps> {\n\n    render() {\n\n        const { info } = this.props;\n\n        let yandexUrl = \"https://www.yandex.ru/yandsearch?rpt=rad&text=\" + encodeURIComponent(info.text);\n\n        return (\n            <div className=\"topic-row\">\n                <div className=\"cell-userinfo\">\n                    <div className=\"topic-tools\">\n                        <a title=\"API.info\" href={`${domain}/${urlTopicInfo}?id=${info.id}`} className=\"agh\" style={{display: \"block\", lineHeight: \"1em\"}}>i</a>\n                        <a title=\"API.messages\" href={`${domain}/${urlTopicMessages}?id=${info.id}&from=0&to=20`} className=\"agh\" style={{display: \"block\", lineHeight: \"1em\"}}>m</a>\n                        {/*<a href=\"add_voting.php?topic_id=815217\" title=\"Добавить голосование\">vote</a> &nbsp;&nbsp;*/}\n                    </div>\n                </div>\n                <div className=\"cell-message\">\n                    <div className=\"flex-row\">\n                        <div style={{ flex: 1, textAlign: \"center\" }}>\n                            <a href={`${domain}/topic.php?id=${info.id}`}>\n                                <h1 className=\"topic-title\" dangerouslySetInnerHTML={{ __html: info.text }}></h1>\n                            </a>\n                            <div className=\"moder-action\"></div>\n                        </div>\n                        <div style={{ flex: \"0 0 20px\", position: \"relative\" }}>\n                            <div className=\"div-va-middle\">\n                                <a rel=\"noopener noreferrer\" href={yandexUrl} title=\"Искать в Яндексе\" target=\"_blank\" className=\"yandex\">Я</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    const {\n        info\n    } = state.topic || defaultTopicState;\n\n    return {\n        info\n    }\n}\n\nexport default connect(mapStateToProps)(TopicInfo);","//@flow\nimport React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport dateFormat from 'dateformat'\nimport classNames from 'classnames'\nimport { domain } from 'src/api'\n\nimport { addMessageText } from 'src/actions/new_message'\n\nimport type { ResponseMessage } from 'src/api'\nimport type { DefaultProps } from 'src/index'\n\ntype UserInfoProps = {\n    data: ResponseMessage,\n    isAuthor: boolean,\n    isYou?: boolean\n}\n\ntype Props = UserInfoProps & DefaultProps;\n\nclass UserInfo extends Component<Props> {\n\n    onClick;\n\n    constructor() {\n        super();\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick() {\n        const { dispatch, data } = this.props;\n        dispatch(addMessageText(`(${data.n})`));\n        \n        let elem = document.getElementById('message_text'); \n        if (elem)\n            window.scrollTo(0, elem.offsetTop);        \n    }\n\n    render() {\n        const { data, isAuthor, isYou } = this.props;\n        const href = `${domain}/users.php?id=${data.userId}`;\n        let dataStr;\n        if (!data) {\n            dataStr = '';\n        } else if (data.n === \"0\") {\n            dataStr = dateFormat(new Date(+data.utime * 1000), 'dd.mm.yy - HH:MM');\n        } else {\n            dataStr = (\n            <Fragment>\n                <span className=\"message-number\">{data.n}</span>{' - ' + dateFormat(new Date(+data.utime * 1000), 'dd.mm.yy - HH:MM')}\n            </Fragment>\n            )\n        }    \n\n        const userClassNames = classNames(\"registered-user\", {\n            \"is-author\": isAuthor,\n            \"is-you\": isYou\n        });\n\n        return (\n            <div className=\"user-info\">\n                <a className={userClassNames} href={href}>{data.user}</a>\n                <div className=\"message-time\">\n                    <span className=\"ah\" >{dataStr}</span>\n                    <button className=\"button ah\" onClick={this.onClick}>{dataStr}</button>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default connect()(UserInfo);","//@flow\nimport * as API from '../api'\nimport type { RequestNewMessage } from 'src/api'\n\nexport type POST_NEW_MESSAGE_START = {\n    type: 'POST_NEW_MESSAGE_START'\n}\n\nexport type POST_NEW_MESSAGE_COMPLETE = {\n    type: 'POST_NEW_MESSAGE_COMPLETE'\n}\n\nexport type NEW_MESSAGE_TEXT = {\n    type: 'NEW_MESSAGE_TEXT',\n    text: string\n}\n\nexport type ADD_MESSAGE_TEXT = {\n    type: 'ADD_MESSAGE_TEXT',\n    text: string\n}\n\n\nexport type NewMessageAction = POST_NEW_MESSAGE_START | POST_NEW_MESSAGE_COMPLETE | NEW_MESSAGE_TEXT | ADD_MESSAGE_TEXT;\n\nexport type PostNewmessageParams = {\n    text: string,\n    topicId: string, \n    voting_select?: number,\n    onSuccess?: () => void    \n}\n\nexport const postNewMessage = (params: PostNewmessageParams) => async (dispatch: any) => {\n\n    dispatch({\n        type: 'POST_NEW_MESSAGE_START'\n    });\n\n    let fetchParams: RequestNewMessage = {\n        message_text: encodeURIComponent(params.text),\n        action: \"new\",\n        topic_id: params.topicId,\n        rnd: Math.round(Math.random() * 10000000000)    \n    };\n\n    if (params.voting_select)\n        fetchParams.voting_select = params.voting_select;\n\n    try {\n            await API.postNewMessage(fetchParams);\n            await dispatch({\n                type: 'POST_NEW_MESSAGE_COMPLETE'\n            });\n            if (params.onSuccess)\n                params.onSuccess();\n\n    } catch (err) {\n        console.error(\"Failed to post new message: \" + err);\n    }\n}\n\nexport const addMessageText = (text: string) => (dispatch: any) => {\n    dispatch({\n            type: 'ADD_MESSAGE_TEXT',\n            text\n        })\n}","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport UserInfo from './user_info'\nimport MsgText from './msg_text'\n\nimport type { ResponseMessage } from 'src/api'\nimport type { State } from 'src/reducers'\nimport type { LoginState } from 'src/reducers/login'\nimport type { DefaultProps } from 'src/components'\n\ntype RowProps = {\n    data: ResponseMessage\n}\n\ntype StateProps = {\n    topicId: string,\n    author: string,\n    login: LoginState\n}\n\ntype Props = RowProps & StateProps & DefaultProps;\n\nclass Row extends Component<Props> {\n\n    render() {\n        const { data, author, topicId, login } = this.props;\n\n        if (!data)\n            return null;\n\n        return (\n            <div className=\"topic-row\" id={data.n}>\n                <div className=\"cell-userinfo\">\n                    <UserInfo data={data} isAuthor={data.user === author} isYou={data.user === login.username}/>\n                </div>\n                <div className=\"cell-message\">\n                    <MsgText data={data} html={data.text} topicId={topicId} n={data.n} vote={+data.vote}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    const {\n        info,\n        item0,\n    } = state.topic || {\n        info: {},\n        item0: {},\n    }\n\n    return {\n        topicId: info.id,\n        author: item0 ? item0.user : '',\n        login: state.login\n    }\n}\n\nexport default connect(mapStateToProps)(Row);","//@flow\nimport * as API from 'src/api'\nimport type { RequestBookmark } from 'src/api'\n\nexport type ADD_BOOKMARK_START = {\n    type: 'ADD_BOOKMARK_START'\n}\n\nexport type ADD_BOOKMARK_COMPLETE = {\n    type: 'ADD_BOOKMARK_COMPLETE'\n}\n\nexport type ADD_BOOKMARK_FAIL = {\n    type: 'ADD_BOOKMARK_FAIL'\n}\n\nexport type AddBookmarkAction = ADD_BOOKMARK_START | ADD_BOOKMARK_COMPLETE | ADD_BOOKMARK_FAIL;\n\n\nexport const addBookmark = (params: RequestBookmark) => async (dispatch: any) => {\n\n    dispatch({\n        type: \"ADD_BOOKMARK_START\"\n    });\n\n    try {\n        await API.postBookmark(params);\n        \n        dispatch({\n            type: \"ADD_BOOKMARK_COMPLETE\"\n        });\n\n    } catch (err) {\n        console.error('Error adding bookmark:', err);\n        dispatch({\n            type: \"ADD_BOOKMARK_FAIL\"\n        });\n    }\n\n}   \n","//@flow\nimport * as React from 'react'\nimport { connect } from 'react-redux'\nimport type { Dispatch } from 'redux'\nimport { Button } from 'react-bootstrap'\n\nimport { fetchNewMessagesIfNeeded } from 'src/actions/topic'\nimport { addBookmark } from 'src/actions/bookmark'\nimport { getMaxPage } from 'src/utils'\n\ntype FooterProps = {\n    info: any,\n    dispatch: Dispatch<*>,\n    bookmark: any,\n    isFetching: boolean,\n    params: any\n}\n\nclass Footer extends React.Component<FooterProps> {\n\n     onBookmarkClick = () => {\n        const { info, dispatch } = this.props;\n        dispatch(addBookmark(info));\n    }\n\n    onRefreshClick = () => {\n        \n        const { info, dispatch } = this.props;\n        \n        dispatch(fetchNewMessagesIfNeeded({\n            id: info.id,\n            last: parseInt(info.answers_count, 10)\n        }));\n\n    }\n\n    render() {\n\n        const { info, bookmark, isFetching, params } = this.props;\n        const maxPage = getMaxPage(info.answers_count);\n\n        let updateButton;\n        let page = params.page || 1;\n        if (page === 'last20' || page === maxPage )    \n            updateButton = \n            <Button \n                onClick={this.onRefreshClick} \n                disabled={bookmark.isFetching} \n                size=\"sm\"\n                className='button'\n                variant=\"light\">\n                {isFetching ? 'Обновляется': 'Обновить ветку'}\n            </Button>\n\n        return (\n            <div className=\"flex-row\" id=\"F\">\n                <div className=\"ta-left va-top\" style={{ width: \"50%\" }}>\n                    <Button \n                        onClick={this.onBookmarkClick} \n                        disabled={bookmark.isFetching} \n                        size=\"sm\"\n                        className='button'\n                        variant=\"light\">\n                        {bookmark.isFetching ? 'Подождите...' : 'Закладка'}\n                    </Button>\n                </div>\n                <div className=\"ta-right va-middle\" style={{ marginLeft: \"auto\" }}>\n                    {updateButton}\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n\n    const {\n        isFetching,\n        lastUpdated,\n        info,\n    } = state.topic || {\n        isFetching: true,\n        info: {},\n    }\n\n    return {\n        info,\n        isFetching,\n        lastUpdated,\n        bookmark: state.bookmark || {}\n    }\n}\n\nexport default connect(mapStateToProps)(Footer);","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { FormGroup, Form } from 'react-bootstrap'\n\nimport TextEditor from 'src/components/common/text_editor'\nimport { postNewMessage } from 'src/actions/new_message'\n\nimport type { State } from 'src/reducers'\nimport type { NewMessageState } from 'src/reducers/new_message'\n\nimport type { ResponseInfo } from 'src/api'\nimport type { DefaultProps } from 'src/index'\n\ntype NewMessageProps = {\n    onSubmitSuccess?: () => void\n}\n\ntype StateProps = {\n    info: ResponseInfo,\n    newMessage: NewMessageState\n}\n\ntype Props = NewMessageProps & StateProps & DefaultProps;\n\nclass NewMessage extends Component<Props> {\n\n    constructor(props) {\n        super(props);\n        this.state = { voting: undefined };\n    }\n\n    onSubmit = (e) => {\n\n        e.preventDefault();\n        e.stopPropagation();\n        console.log('submitted');\n\n        const { dispatch, info, newMessage } = this.props;\n        \n        let params = {\n            text: newMessage.text,\n            topicId: info.id,\n            onSuccess: this.onSubmitSuccess,\n            voting_select: undefined\n        };\n\n        if (this.state.voting) {\n            params.voting_select = this.state.voting;\n        }\n\n        dispatch(postNewMessage(params));\n    }\n\n    onSubmitSuccess = () => {\n\n        const { dispatch } = this.props;\n\n        dispatch({\n            type: 'NEW_MESSAGE_TEXT',\n            text: ''\n        });\n        \n        this.setState({\n            ...this.state,\n            voting: undefined\n        });\n        \n        if (this.props.onSubmitSuccess) {\n            this.props.onSubmitSuccess();\n        }\n    }\n\n    clearVoting = (e) => {\n\n        e.preventDefault();\n\n        this.setState({\n            ...this.state,\n            voting: undefined\n        })\n\n    }\n\n    setVotingOption = (i) => {\n        this.setState({\n            ...this.state,\n            voting: i\n        })\n    }\n\n    render() {\n\n        const { info, newMessage } = this.props;\n\n        let votingElem;\n        if (info.is_voting && info.voting) {\n\n            let votingOptions = [];\n            for (let i = 1; i <= info.voting.length; i++) {\n\n                const item = info.voting[i - 1];\n                if (!item.select)\n                    continue;\n\n                votingOptions.push(\n                    <Form.Check \n                        type=\"radio\"\n                        key={i} \n                        name=\"voting\" \n                        checked={this.state.voting === i} \n                        onChange={() => this.setVotingOption(i)}\n                        label={`${i}. ${item.select}`}\n                    />\n                );\n            }\n\n\n            votingElem = (\n                <FormGroup>\n                    <legend>\n                        <small>Ваш выбор:\n                        <span href=\"\" id=\"voting_clear\" style={{ marginLeft: \"5px\", cursor: \"pointer\" }} onClick={this.clearVoting}>очистить</span>\n                        </small>\n                    </legend>                \n                    {votingOptions}\n                    Обоснуйте свой выбор!\n                </FormGroup>\n            );\n\n        }\n\n        return (\n            <form style={{marginTop: \"5px\"}} onSubmit={this.onSubmit}> \n                <div className=\"bold\">Добавить сообщение в тему:</div>\n                <div className=\"new-message-container\">\n                    <div className=\"new-message-text\">\n                        <TextEditor \n                            isFetching={newMessage.isFetching} \n                            text={newMessage.text} \n                            placeholder=\"Сообщение\"\n                            formName=\"NEW_MESSAGE\"\n                        />\n                    </div>\n                    <div className=\"new-message-voting\">\n                        {votingElem}\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    return {\n        info: state.topic.info,\n        newMessage: state.newMessage\n    };\n\n}\n\nexport default connect(mapStateToProps)(NewMessage);","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport queryString from 'query-string'\nimport { fetchTopicIfNeeded, fetchNewMessagesIfNeeded, closeTopic } from 'src/actions/topic'\n\nimport type { DefaultProps, Location } from 'src/components'\nimport type { ResponseInfo, ResponseMessage, ResponseMessages } from 'src/api'\nimport type { State } from 'src/reducers'\nimport type { LoginState } from 'src/reducers/login'\nimport { OptionsItems } from 'src/reducers/options'\n\nimport Pages from 'src/components/common/pages'\nimport Header from './header'\nimport TopicInfo from './topic_info'\nimport Row from './row'\nimport Footer from './footer'\nimport NewMessage from './new_message';\nimport { getMaxPage } from 'src/utils';\n\nimport  './topic.css'\n\ntype TopicLocationParams = {\n    id: string,\n    page?: string,\n    hash?: string\n}\n\ntype StateProps = {\n    login: LoginState,\n    info: ResponseInfo,\n    item0?: ResponseMessage,\n    items: ResponseMessages,\n    error?: any,\n    options: OptionsItems\n}\n\ntype Props = {\n    fetchTopicIfNeeded: any,\n    fetchNewMessagesIfNeeded: any,\n    closeTopic: any\n} & DefaultProps & StateProps\n\nclass Topic extends Component<Props> {\n\n    locationParams: TopicLocationParams;\n    location: Location;\n    timer;\n    scrolledToHash: boolean;\n    nodeF: any;\n\n    constructor() {\n        super();\n        this.locationParams = {id: ''};\n        this.scrolledToHash = false;\n    }\n\n    componentDidMount() {\n        \n        this.location = this.props.location;\n        this.updateTopic();\n\n        if (this.props.options.autoRefreshTopic === 'true') {\n            \n            let autoRefreshTopicInterval = +this.props.options.autoRefreshTopicInterval;\n            if (autoRefreshTopicInterval < 60) autoRefreshTopicInterval = 60;\n\n            this.timer = setInterval(this.autoUpdate, autoRefreshTopicInterval * 1000);\n        }\n        \n    }\n\n    componentDidUpdate() {\n        const { location: {hash}, items } = this.props;\n        if (!this.scrolledToHash && \n            hash &&\n            items.length > 0){\n\n            this.scrolledToHash = true;\n            let nodeHash = document.getElementById(hash.slice(1));\n            if (nodeHash)\n                setTimeout(() => window.scrollTo(0, nodeHash.offsetTop), 1);\n        }\n    }\n\n    componentWillUnmount() {\n\n        const { closeTopic, clearText } = this.props;\n\n        clearInterval(this.timer);\n        closeTopic();\n        clearText();\n    }\n\n    UNSAFE_componentWillReceiveProps(props: Props) {\n        \n        if (props.info.text && document.title !== props.info.text) {\n            let title = props.info.text;\n            title = title.replace(/&quot;/g, '\"');\n            \n            document.title = title;\n        }\n\n        if (this.location.search !== props.location.search) {\n            this.location = props.location;\n            this.updateTopic();\n            window.scrollTo(0, 0);\n        }\n    }\n    \n    autoUpdate = () => {\n        const { info, fetchNewMessagesIfNeeded } = this.props;\n        const isLastPage = (this.locationParams.page === 'last20' || this.locationParams.page === getMaxPage(+info.answers_count));\n\n        if (isLastPage) \n            fetchNewMessagesIfNeeded({\n                id: info.id,\n                last: parseInt(info.answers_count, 10)\n            })\n    }\n\n    updateTopic = () => {\n       \n        let { fetchTopicIfNeeded, item0 } = this.props;\n        let locationParams = queryString.parse(this.location.search);\n\n        if (!locationParams.page)\n            locationParams.page = 1;\n\n        else if (locationParams.page !== 'last20')  {\n            locationParams.page = +locationParams.page;\n            if (isNaN(locationParams.page))\n                locationParams.page = 1;\n        }  \n\n        if (locationParams.id !== this.locationParams.id)\n            item0 = null;\n\n        this.locationParams = locationParams;\n        fetchTopicIfNeeded(this.locationParams, item0);\n    }\n\n    onPostNewMessageSuccess = () => {\n\n        const { fetchNewMessagesIfNeeded, info } = this.props;\n\n        const isLastPage = (this.locationParams.page === 'last20' || this.locationParams.page === getMaxPage(+info.answers_count));\n\n        if (isLastPage)\n            fetchNewMessagesIfNeeded({\n                id: info.id,\n                last: parseInt(info.answers_count, 10)\n            });\n\n    }\n\n    render() {\n        const { login, items, item0, info, error } = this.props;\n\n        let errorElem;\n        if (error)\n            errorElem = (\n                <div >\n                    <p className=\"error\">ОШИБКА</p>\n                    <p className=\"error\">{error.message}</p>\n                </div>\n            )\n\n        const maxPage = getMaxPage(+info.answers_count);\n\n        return (\n            <div style={{marginBottom: \"5px\"}}>\n                {errorElem}\n                <Header currentPage={this.locationParams.page} />\n                <div className=\"topic-table\">\n                    <TopicInfo />\n                    <Row key='0' data={item0}/>\n                    {items.map((item, i) => (\n                        <Row key={item.n} data={item}/>\n                    ))}                \n                    { (maxPage > 1 || this.locationParams.page === \"last20\") && \n                        <div className=\"tf\">\n                            <Pages baseUrl='topic.php' locationParams={this.locationParams} maxPage={maxPage} last20/>\n                        </div>                    \n                    }\n                </div>\n                <Footer params={this.locationParams}/>\n                {login.logged &&\n                <NewMessage onSubmitSuccess={this.onPostNewMessageSuccess}/>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    const {\n        isFetching,\n        lastUpdated,\n        info,\n        item0,\n        items,\n        error\n    } = state.topic;\n\n    return {\n        login: state.login,\n        info,\n        item0,\n        items,\n        isFetching,\n        lastUpdated,\n        error,\n        options: state.options.items\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchTopicIfNeeded: (...params) => dispatch(fetchTopicIfNeeded(...params)),\n    fetchNewMessagesIfNeeded: (...params) => dispatch(fetchNewMessagesIfNeeded(...params)),\n    closeTopic: (...params) => dispatch(closeTopic(...params)),\n    clearText: () => dispatch({type: 'NEW_MESSAGE_TEXT', text: ''})\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Topic);","//@flow\nimport React, { Component } from 'react'\n\ntype RadioOptionProps = {\n    name: string,\n    label: string,\n    value: string,\n    values: Array<{name: string, descr: string}>,\n    onChange: any,\n    oneLine: boolean\n}\n\nclass RadioOption extends Component<RadioOptionProps> {\n    \n    onChange: (e: any) => void;\n\n    constructor(props: RadioOptionProps) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(e: any) {\n        const { name } = this.props;\n        this.props.onChange(e, name, e.target.value);\n    }\n\n    render() {\n\n        const { name, label, values, oneLine } = this.props;\n\n        let valuesElem = [];\n        for (let i=0; i<values.length; i++) {\n            let item = values[i];\n            valuesElem.push(\n                <label key={i} htmlFor={item.name} style={{marginRight: \"5px\"}}>\n                    <input type=\"radio\" name={name} value={item.name} checked={item.name === this.props.value} onChange={this.onChange}/>\n                    {item.descr}\n                </label>\n                );    \n        }\n\n        return (\n            <span>\n                <span style={{marginRight: \"5px\"}}>{label}</span>\n                {oneLine ? null : <br/>}   \n                {valuesElem}\n            </span>\n        );\n    }\n}\n\nexport default RadioOption;","//@flow\nimport React, { Component } from 'react'\n\ntype StringOptionProps = {\n    name: string,\n    label: string,\n    value: string,\n    onChange: any,\n    postfix: ?string\n}\n\nclass StringOption extends Component<StringOptionProps> {\n    \n    onChange: (e: any) => void;\n\n    constructor(props: StringOptionProps) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(e: any) {\n        const { name } = this.props;\n        this.props.onChange(e, name, e.target.value);\n    }\n\n    render() {\n\n        const { name, value, label, postfix } = this.props;\n\n        return (\n            <label htmlFor={name} style={{marginRight: \"5px\"}}>\n                <span style={{marginRight: \"5px\"}}>{label}</span>\n                <input type=\"string\" name={name} value={value} onChange={this.onChange} className='input'/>\n                {postfix !== undefined ? \n                    <span style={{marginLeft: \"5px\"}}>{postfix}</span>\n                : null}\n            </label>\n        );\n    }\n}\n\nexport default StringOption;","//@flow\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Form, FormControl, Button } from 'react-bootstrap'\n\nimport RadioOption from './radio_option'\nimport StringOption from './string_option'\n\nimport { saveOptions } from 'src/actions/options'\n\nimport type { State } from 'src/reducers'\nimport type { OptionsState } from 'src/reducers/options'\nimport { defaultOptionsState } from 'src/reducers/options'\n\nimport './options.css'\n\nclass Options extends Component<OptionsState> {\n\n    optionsParams: any;\n    state: any;\n    setState;\n    closeForm;\n    applyOptions;\n    resetOptions;\n    onChange;\n    onTabClick;\n    form: any;\n\n    constructor(props) {\n        super(props);\n        this.closeForm    = this.closeForm.bind(this);\n        this.applyOptions = this.applyOptions.bind(this);\n        this.resetOptions = this.resetOptiopns.bind(this);\n        this.onChange     = this.onChange.bind(this);\n        this.onTabClick   = this.onTabClick.bind(this);\n\n        this.state = {\n            items: props.options.items\n        };\n        \n        this.optionsParams = {\n            'theme': {\n                type: 'radio', \n                label: 'Цветовая палитра:', \n                oneLine: true,\n                values: [\n                    {name: 'yellow', descr: 'Золотая'}, \n                    {name: 'lightgray', descr: 'Серая'},\n                    {name: 'dark', descr: 'Темная'} \n                ]\n            },\n            'topicsPerPage': {\n                type: 'number',\n                label: 'Тем на странице (max 99):',\n                min: 1,\n                max: 99\n            },\n            'autoRefreshTopicsList': {\n                type: 'checkbox',\n                label: 'Автообновление списка тем'\n            },\n            'autoRefreshTopicsListInterval': {\n                type: 'number',\n                label: '',\n                min: 60,\n                max: 1000000,\n                postfix: 'сек'\n            },                                   \n            'autoRefreshTopic': {\n                type: 'checkbox',\n                label: 'Автообновление темы'\n            },\n            'autoRefreshTopicInterval': {\n                type: 'number',\n                label: '',\n                min: 60,\n                max: 1000000,\n                postfix: 'сек'\n            },               \n            //Tooltips   \n            'showTooltips': {\n                type: 'checkbox',\n                label: 'Показывать тултипы, задержка'\n            },\n            'tooltipDelay': {\n                type: 'number',\n                max: 1000000,\n                label: '',\n                postfix: 'мс'\n            },                                    \n            'showTooltipOnTopicsList': {\n                type: 'checkbox',\n                label: 'Показывать тултипы на главной странице, при наведении на кол-во ответов'\n            },    \n            'showTooltipOnPostLink': {\n                type: 'checkbox',\n                label: 'Показывать тултип ссыки на другую ветку'\n            },\n            //links   \n            'showYoutubeVideoTitle': {\n                type: 'checkbox',\n                label: 'Показывать наименования роликов youtube'\n            },    \n            'replaceCatalogMista': {\n                type: 'checkbox',\n                label: 'Обратно заменять catalog.mista.ru на infostart.ru'\n            },   \n            'fixBrokenLinks': {\n                type: 'checkbox',\n                label: 'Чинить поломанные ссылки (с русскими символами)'\n            },   \n        }\n        \n        this.form = [\n            {\n                tabName: 'Общие', \n                rows: [ \n                    ['theme'],\n                    ['topicsPerPage'],\n                    ['autoRefreshTopicsList', 'autoRefreshTopicsListInterval'],\n                    ['autoRefreshTopic', 'autoRefreshTopicInterval'],\n                ]  \n            },\n            {\n                tabName: 'Тултипы',\n                rows: [\n                    ['showTooltips', 'tooltipDelay'],\n                    ['showTooltipOnTopicsList'],\n                    ['showTooltipOnPostLink']\n                ]    \n            },\n            {\n                tabName: 'Ссылки',\n                rows: [\n                    ['showYoutubeVideoTitle'],\n                    ['replaceCatalogMista'],\n                    ['fixBrokenLinks'],\n                ]    \n            }            \n        ]\n\n    }\n\n    closeForm(){\n        const { history } = this.props;\n        history.push('/' + window.hash);\n    }\n    \n    resetOptiopns(){\n        this.setState({\n            items: Object.assign({}, defaultOptionsState.items)\n        })\n    }\n\n    applyOptions(){\n\n        const { dispatch } = this.props;\n        dispatch(saveOptions(this.state.items));\n        this.closeForm();       \n    }\n\n    onTabClick(e){\n        this.setState({\n            activeTab: e.target.textContent\n        });\n    }\n\n    onChange(e, name, value) {\n\n        let items = Object.assign({}, this.state.items);\n        items[name] = value;\n        this.setState({\n            ...this.state,\n            items\n        })\n    }\n\n    render() {\n\n        let tabs = [];\n        for (let tab of this.form) {\n            \n            let rows = [];\n            for (let i in tab.rows) {\n                \n                const row = tab.rows[i];\n                let rowElem = [];\n                for (let name of row) {\n\n                    const item = this.optionsParams[name];\n                    if (!item) continue;\n\n                    const value = this.state.items[name];\n\n                    if (item.type === 'radio') {\n                        rowElem.push(\n                            <RadioOption \n                                key={name} \n                                name={name} \n                                label={item.label} \n                                values={item.values} \n                                value={value}\n                                oneLine={item.oneLine}\n                                onChange={this.onChange}\n                            />\n                        );\n                    } else if (item.type === 'number') {\n\n                        if (item.label)\n                            rowElem.push(\n                                <label \n                                    htmlFor={name} \n                                    key={name + '_label'} \n                                    style={{fontWeight: \"inherit\"}}>\n                                    {item.label}\n                                </label>\n                            );\n\n                        rowElem.push(\n                            <FormControl\n                                key={name}\n                                type=\"number\"\n                                min={item.min}\n                                max={item.max}\n                                value={value}\n                                onChange={(e) => this.onChange(e, name, e.target.value)}\n                                style={{flex: \"0 0 100px\", marginLeft: \"5px\"}}\n                                className='input'\n                                size=\"sm\"\n                            >\n                            </FormControl>\n                        );\n                        \n                        if (item.postfix) {\n                            rowElem.push(\n                                <span key={name + '_postfix'} style={{marginLeft: \"5px\", flex: \"0 0 auto\",}}>{item.postfix}</span>\n                            )    \n                        };\n\n                    } else if (item.type === 'string') {\n                        rowElem.push(\n                            <StringOption \n                                key={name} \n                                name={name} \n                                label={item.label} \n                                postfix={item.postfix}\n                                value={value}\n                                onChange={this.onChange}\n                            />\n                        );\n                    } else if (item.type === 'checkbox') {\n                        rowElem.push(\n                            <Form.Check \n                                type=\"checkbox\"\n                                label={item.label}\n                                key={name}\n                                name={name} \n                                checked={String(value) === 'true'}\n                                onChange={(e) => this.onChange(e, name, e.target.checked)}\n                                style={{flex: \"0 0 auto\", margin: \"0px\"}}\n                            />\n                        );\n                    }\n                }\n\n                rows.push(\n                    <div key={i} className=\"options-row\">\n                        {rowElem}\n                    </div>\n                    );\n\n            }\n\n            tabs.push(\n                <div key={tab.tabName}>\n                    <div className=\"tab-header\">\n                        {tab.tabName}\n                    </div>\n                    <div className=\"tab-content\">                    \n                        {rows}\n                    </div>\n                </div>\n            );\n        }\n\n\n        return (\n                <div className=\"options-form\">\n                    <div className=\"options-header\" style={{cursor: \"default\"}}>\n                        <b>Настройки</b>\n                    </div>\n                    {tabs}\n                    <div className=\"button-row\">\n                        <Button \n                            id=\"applyOptions\" \n                            size=\"sm\" \n                            variant=\"light\" \n                            style={{margin: \"5px\"}} \n                            className='button'                            \n                            onClick={this.applyOptions}>\n                            OK\n                        </Button>\n                        <Button \n                            id=\"cancelOptions\" \n                            size=\"sm\" \n                            variant=\"light\"\n                            style={{margin: \"5px\", float: \"left\"}} \n                            className='button'\n                            onClick={this.closeForm}>\n                            Отмена\n                        </Button>\n                        <Button \n                            id=\"defaultOptions\" \n                            size=\"sm\" \n                            variant=\"light\" \n                            style={{margin: \"5px\", float: \"right\"}} \n                            className='button'\n                            onClick={this.resetOptions}>\n                        Сбросить настройки\n                        </Button>\n                    </div>                    \n                </div>\n        )\n    }\n\n}    \n\nconst mapStateToProps = (state: State): OptionsState => {\n\n    return {\n        options: state.options\n    };\n\n}\n\nexport default connect(mapStateToProps)(withRouter(Options));","//@flow\nimport type { OptionsItems } from 'src/reducers/options'\n\nexport type READ_OPTIONS = {\n    type: 'READ_OPTIONS',\n}\nexport type SAVE_OPTIONS = {\n    type: 'SAVE_OPTIONS',\n    options: OptionsItems\n}\n\nexport type OptionsAction = READ_OPTIONS | SAVE_OPTIONS;\n\nexport const readOptions = () => (dispatch: any) => {\n\n    let action: OptionsAction = {\n        type: 'READ_OPTIONS'\n    };\n    dispatch(action);\n\n}\n\nexport const saveOptions = (options: OptionsItems) => (dispatch: any) => {\n\n    let action: OptionsAction = {\n        type: 'SAVE_OPTIONS',\n        options\n    };\n    dispatch(action);\n\n}\n","import { HashRouter, Switch, Route } from 'react-router-dom'\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport TopicsList from './topics_list'\nimport Topic from './topic'\nimport Options from './options'\nimport { clearTooltipsIfNeeded } from '../actions/tooltips'\n\nclass Container extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.onClick = this.onClick.bind(this);\n\n    }\n\n    onClick() {\n        const { dispatch } = this.props;\n        dispatch(clearTooltipsIfNeeded());\n    }\n\n    render() {\n\n       const routes =\n            <Switch>\n                <Route exact path='/' component={TopicsList} />\n                <Route path='/index.php' component={TopicsList} />\n                <Route path='/topic.php' component={Topic} />\n                <Route path='/options.php' component={Options} />\n            </Switch>\n\n        if (window.hash)\n\n            return (\n                <div onClick={this.onClick} style={{flex: \"auto\"}}>\n                    <div className=\"container\" >\n                        <HashRouter>\n                            {routes}\n                        </HashRouter >\n                    </div>    \n                </div>\n            )\n\n        else\n            return (\n                <div onClick={this.onClick} style={{flex: \"auto\"}}>\n                    <div className=\"container\">\n                        {routes}\n                    </div>\n                </div>\n            )\n    }\n\n}\n\nexport default connect()(Container);","import React from 'react'\nimport { domain } from 'src/api'\n\nconst NavBarFooter = (props) => {\n\n    return (\n        <footer className=\"flex-row navbar-footer\">\n            <a href={`${domain}/rules.php`}>Правила</a>\n            <span className=\"separator\">|</span>\n            <a href={`${domain}/about.php`}>Описание</a>\n            <span className=\"separator\">|</span>\n            <b><a href={`${domain}/ad.php`}>Реклама на сайте</a>  </b>\n            <span className=\"separator\">|</span>\n            <a href={`${domain}/find.php`}>Поиск</a>\n            <span className=\"separator\">|</span>\n            <a rel=\"nofollow\" href={`${domain}/sections_list.php`}>Секции</a>\n            <span className=\"separator\">|</span>\n            <a rel=\"nofollow\" href={`${domain}/rating.php`}>Рейтинг</a>\n            <span className=\"separator\">|</span>\n            <a href=\"http://kb.mista.ru\">Книга знаний</a>\n            <span className=\"separator\">|</span>\n            <a href=\"http://wiki.mista.ru\">Вики-миста (КЗ2)</a>\n            <span className=\"separator\">|</span>\n            <a rel=\"nofollow\" href=\"http://m.mista.ru/\">Мобильная</a>\n            <span className=\"separator\">|</span>\n            <a href={`${domain}/archive.php`}>Архив</a>\n            <span className=\"separator\">|</span>\n            <a href={`${domain}/moders.php`}>Модераторы</a>\n            <span className=\"separator\">|</span>\n            <a href={`${domain}/users_gallery.php`}>Галерея</a>\n            <span className=\"separator\">|</span>\n            <span>18+</span>\n        </footer>\n    )\n}\n\nexport default NavBarFooter;","import React from 'react'\n\nconst TooltipHeader = ({children, closeWindow}) => {\n    return (\n        <div className=\"tooltip-header\">\n            {children}\n            <div className=\"tooltip-close\" onClick={closeWindow} onTouchEnd={closeWindow}>\n                <span className=\"tooltip-close-x\">x</span>\n            </div>\n        </div>\n    )\n}\n\nexport default TooltipHeader;","import React from 'react'\n\nconst TooltipBody = ({children, onScroll}) => {\n    \n    var startX = 0;\n\n    function onTouchStart(e) {\n        startX = e.nativeEvent.changedTouches[0].clientX;\n    }\n    \n    function onTouchEnd(e) {\n        let endX = e.nativeEvent.changedTouches[0].clientX;\n        if (Math.abs(endX - startX) > 100)\n            onScroll(-endX + startX);\n    }\n\n    return (\n        <div className=\"tooltip-text\" onTouchStart={onTouchStart} onTouchEnd={onTouchEnd}>\n            {children}\n        </div>\n    )\n}\n\nexport default TooltipBody;","//@flow\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport Draggable from 'react-draggable';\n\nimport TooltipHeader from './tooltip_header'\nimport TooltipBody from './tooltip_body'\n\nimport './tooltip.css'\n\nimport { closeTooltip } from 'src/actions/tooltips'\n\nimport type { DefaultProps } from 'src/index'\nimport type { TooltipItemState } from 'src/reducers/tooltips'\n\ntype TooltipProps = {\n    tooltip: TooltipItemState\n}\n\ntype Props = TooltipProps & DefaultProps;\n\nclass TooltipWindow extends Component<Props> {\n    \n    onCloseClick = () => {\n        const { dispatch, tooltip } = this.props;\n        dispatch(closeTooltip(tooltip.keys));\n    }\n    \n    onWheel = (e) => {\n        e.preventDefault();\n        this.props.onScroll(-e.nativeEvent.deltaY);\n    }\n\n    render() {\n        const { coords, i } = this.props.tooltip;\n\n        let axis;\n        let position;\n        if (window.innerWidth <= 768 ) {\n            axis = \"y\";\n            position = {top: coords.y, left: 5};\n        } else {\n            axis = \"both\";\n            position = {top: coords.y, left: Math.min(coords.x, window.innerWidth - 670)}\n        }\n        \n        let [header, body] = React.Children.toArray(this.props.children);\n\n        return (\n            <Draggable\n                axis={axis}\n                handle=\".tooltip-header\"\n                defaultClassNameDragging=\"dragging\"\n                key={i}>\n\n                <div className=\"tooltip-window\" style={{ ...position }} onWheelCapture={this.onWheel}>\n                    <TooltipHeader closeWindow={this.onCloseClick}>\n                        {header.props.children}\n                    </TooltipHeader>\n                    <TooltipBody onScroll={this.props.onScroll}>\n                        {body.props.children}\n                    </TooltipBody>\n                </div>\n            </Draggable>\n        )\n    }\n}\n\nexport default connect()(TooltipWindow);","//@flow\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport * as API from 'src/api'\n\nimport MsgText from '../topic/row/msg_text'\nimport UserInfo from '../topic/row/user_info';\n\nimport TooltipWindow from './tooltip_window'\nimport TooltipHeader from './tooltip_header'\nimport TooltipBody from './tooltip_body'\nimport './tooltip.css'\n\nimport type { DefaultProps } from 'src/index'\nimport type { TooltipItemState } from 'src/reducers/tooltips'\n\ntype TooltipProps = {\n    tooltip: TooltipItemState,\n    topicId: string,\n    number: number\n}\n\ntype Props = TooltipProps & DefaultProps;\n\nclass Tooltip extends Component<Props> {\n    \n    data: any;\n    text: string;\n    fetchData: any;\n    state: any;\n\n    constructor(props) {\n        super();\n        \n        const { keys, info, items, item0 } = props;\n\n        let text = '';\n        let data;\n        if (keys.topicId === info.id) {\n            if (keys.number === 0)\n                data = item0;\n            else\n                data = items.find(item => item.n === String(keys.number));\n\n            if (data)\n                text = data.text;\n        }\n\n        this.state ={\n            data,\n            text,\n            number: keys.number\n        }\n    }\n\n    fetchData = async (number) => {\n\n        if (number < 0) return;\n\n        let data;\n        let text = '';\n        const topicId = this.props.keys.topicId;\n\n        try {\n            data = await API.getMessage(topicId, number);\n            if (data)                \n                text = data.text;\n            else \n                text = `Сообщение не найдено ${number}`;\n\n        } catch (e) {\n            text = e.message;\n        }\n\n        // $FlowFixMe\n        this.setState({ data, text, number });\n    }\n \n    onScroll = (delta) => {\n\n        const { keys } = this.props.tooltip;\n        if (keys.type !== 'TOPIC_PREVIEW') return;\n        if (delta > 0) {\n            this.fetchData(this.state.number + 1)\n        } else {\n            this.fetchData(this.state.number - 1)\n        }\n    }\n\n    componentDidMount() {\n\n        if (!this.state.data)\n            this.fetchData(this.state.number);\n\n    }\n    \n    render() {\n       const { keys } = this.props.tooltip;\n\n        if (!this.state.text)\n            return null;\n\n        let header;\n        if (!this.state.data) {\n            header = <b>Заголовок</b>\n        } else {\n            header = <UserInfo data={this.state.data} isAuthor={false}/>\n        }   \n\n        if (keys.type === 'TOPIC' || keys.type === 'TOPIC_PREVIEW') \n            return (\n                <TooltipWindow tooltip={this.props.tooltip} onScroll={this.onScroll}>\n                    <TooltipHeader>\n                        {header}\n                    </TooltipHeader>\n                    <TooltipBody>\n                        <MsgText \n                            data={this.state.data} \n                            html={this.state.text} \n                            topicId={keys.topicId} \n                            style={{maxHeight: \"min(550px, 80vh)\", overflowY: \"auto\"}} \n                        />\n                    </TooltipBody>\n                </TooltipWindow>\n            )\n    }\n}\nconst mapStateToProps = (state) => {\n\n    const {\n        info,\n        items,\n        item0\n    } = state.topic;\n\n    return {\n        info,\n        items,\n        item0\n    }\n}\n\nexport default connect(mapStateToProps)(Tooltip);","//@flow\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport Tooltip from './tooltip'\n\nimport type { State } from 'src/reducers'\nimport type { TooltipItemState } from 'src/reducers/tooltips'\nimport type { DefaultProps } from 'src/index'\n\ntype StateProps = {\n    items: Array<TooltipItemState>\n}\n\ntype Props = StateProps & DefaultProps;\n\nclass TooltipsList extends Component<Props> {\n\n    render() {\n\n        const { items } = this.props;\n\n        return (\n            <div>\n                {items.map((item, i) => {\n                    return (\n                        <Tooltip key={item.hash} tooltip={item} keys={item.keys}>\n                        </Tooltip>\n                    )}\n                )}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    const {\n        items\n    } = state.tooltips\n\n    return {\n        items,\n    }\n}\n\nexport default connect(mapStateToProps)(TooltipsList);","//@flow\nimport React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux'\nimport NavBar from './components/nav_bar';\nimport Container from './components/container';\nimport NavBarFooter from './components/nav_bar_footer';\nimport TooltipsList from './components/tooltips/tooltips_list';\n\nimport { readOptions } from 'src/actions/options'\n\nimport type { State } from 'src/reducers'\nimport type { DefaultProps } from 'src/components'\n\ntype StateProps = {\n  theme: string   \n}\n\ntype Props = StateProps & DefaultProps\n\nclass App extends Component<Props> {\n \n  constructor(props) {\n    super(props);\n    // for github pages\n    window.hash = '#';\n    props.dispatch(readOptions());\n  }\n\n  UNSAFE_componentWillMount() {\n      const { theme } = this.props;\n      if (document.body)\n        document.body.setAttribute('theme', theme);\n  }\n  \n  UNSAFE_componentWillReceiveProps(props) {\n      const { theme } = props;\n      if (document.body)\n        document.body.setAttribute('theme', theme);\n              //document.body.className = theme;\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <NavBar />\n        <Container />\n        <NavBarFooter />\n        <TooltipsList />\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    return {\n        theme: state.options.items.theme\n    }\n}\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\n\nimport thunk from 'redux-thunk'\n\n// eslint-disable-next-line \nimport { createLogger } from 'redux-logger'\n\nimport reducer from './reducers'\nimport './index.css';\nimport App from './App';\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== 'production') {\n    //middleware.push(createLogger())\n}\n\nconst store = createStore(\n    reducer,\n    applyMiddleware(...middleware)\n)\n\nconst Root = ({ store }) => (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(<Root store={store} />,\n    document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}