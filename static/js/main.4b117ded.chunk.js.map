{"version":3,"sources":["registerServiceWorker.js","utils.js","api.js","data/topicslist/actions.js","data/topicslist/reducer.js","reducers/topic.js","reducers/login.js","data/sections/actions.js","data/sections/reducer.js","reducers/bookmark.js","reducers/new_topic.js","reducers/new_message.js","reducers/tooltips.js","reducers/topic_preview.js","reducers/options.js","reducers/index.js","components/common/search.js","components/nav_bar.js","actions/login.js","components/login/logged_user.js","components/login/login_form.js","components/common/error.js","components/login/index.js","components/topics_list/sections.js","components/topics_list/header.js","components/topics_list/row/pages.js","components/topics_list/row/topic_name_cell.js","actions/tooltips.js","components/extensions/link_to_post.js","components/topics_list/row/preview_link.js","components/topics_list/row/index.js","components/common/pages.js","actions/new_topic.js","components/common/text_editor.js","components/topics_list/new_topic.js","components/extensions/code_highlight.js","components/options/index.js","components/extensions/code1c.js","components/extensions/link_to_user.js","components/extensions/youtube_link.js","components/extensions/custom_link.js","components/topic/row/vote_item.js","components/topic/row/vote_chart.js","components/topic/row/vote.js","components/topic/row/msg_text.js","components/preview/preview_header.js","components/preview/topic_preview.js","components/topics_list/index.js","actions/topic.js","components/topic/header.js","components/topic/topic_info.js","actions/new_message.js","components/topic/row/user_info.js","components/topic/row/index.js","actions/bookmark.js","components/topic/footer.js","components/topic/new_message.js","components/topic/index.js","components/options/radio_option.js","components/options/string_option.js","actions/options.js","components/container.js","components/nav_bar_footer.js","components/tooltips/tooltip_header.js","components/tooltips/tooltip_body.js","components/tooltips/tooltip_window.js","components/tooltips/tooltip.js","components/tooltips/tooltips_list.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","parseJSON","text","JSON","parse","e","replace","message","getMaxPage","answ","Math","min","ceil","childrenToText","children","map","value","type","displayName","props","number","domain","localStorage","getItem","urlTopicsList","urlTopicInfo","urlTopicMessages","urlLogin","urlLogout","urlCookies","urlSections","urlNewMessage","urlNewTopic","urlAddBookmark","getTopicsList","params","a","fetchAndGetJson","json","defaultInfo","id","answers_count","getTopicInfo","getTopicMessages","getMessage","n","from","to","length","data","find","val","String","getTopicMessagesCount","info","getLogin","fetch","method","body","paramsToString","user_name","username","user_password","password","mode","credentials","headers","redirect","getLogout","fullUrl","getCookies","fetchJsonpAndGetJson","getSections","postNewMessage","url","topic_id","result","postNewTopic","postBookmark","paramsPrefix","arr","key","undefined","push","join","fetchJsonp","response","responseJson","utils","options","requestTopicsList","createAction","receiveTopicsList","list","payload","receiveTopicsListFailed","clearTopicsList","togglePreview","fetchTopicsListIfNeeded","dispatch","getState","topicsList","isFetching","shouldFetchTopicsList","page","reqestParams","topicsPerPage","items","topicsCount","topics","section","section_short_name","forum","user_id","mytopics","API","slice","fetchTopicsList","reducer","createReducer","builder","addCase","action","toString","lastUpdated","Date","getTime","ind","findIndex","item","topicId","Object","assign","showPreview","defaultTopicState","topic","item0","receivedAt","concat","defaultLoginState","logged","login","userid","hashkey","requestSections","receiveSections","receiveSectionsFailed","fetchSectionsIfNeeded","sections","shouldfetchSections","tree","forEach","shortn","fulln","getKey","reduce","previous","currentItem","group","defaultBookmarkState","bookmark","defaultNewTopicState","subject","isVoting","newTopic","toLowerCase","defaultNewMessageState","newMessage","defaultTooltipsState","tooltips","hash","tooltip","stringify","keys","i","coords","filter","defaultTopicPreviewState","topicPreview","user","userId","utime","vote","defaultOptionsState","voteColors","theme","autoRefreshTopicsList","autoRefreshTopicsListInterval","autoRefreshTopic","autoRefreshTopicInterval","showTooltips","tooltipDelay","showTooltipOnTopicsList","showTooltipOnPostLink","showYoutubeVideoTitle","replaceCatalogMista","fixBrokenLinks","readOption","name","defaultValue","readOptions","setItem","rootReducer","combineReducers","Search","useState","searchEngine","setSearchEngine","setText","doSearch","open","InputGroup","size","Prepend","DropdownButton","title","style","marginRight","className","variant","Dropdown","Item","eventKey","onSelect","FormControl","placeholder","paddingRight","onKeyPress","onChange","target","Append","marginLeft","marginTop","marginBottom","cursor","onClick","zIndex","connect","useLocation","useDispatch","menuItems","link","Nav","Link","href","Navbar","bg","expand","fixed","Brand","Toggle","aria-controls","Collapse","Form","inline","loginComplete","loginFailed","shouldLogin","checkLogin","cookie","session","last_error","trim","entr_hash","doLogout","doLoginIfNeeded","encodeURIComponent","doLogin","CustomToggle","React","forwardRef","ref","preventDefault","LoggedUser","onLogout","event","onMenuSelect","this","userName","float","as","bsRole","Menu","Divider","Component","LoginForm","onLogin","current","createRef","flexWrap","flex","maxLength","autoComplete","Button","margin","rel","ErrorElem","dangerouslySetInnerHTML","__html","Login","elem","SectionSelect","currentTarget","selected","sectionsElem","label","Control","navigate","useNavigate","queryString","search","useEffect","Pages","pages","maxPage","TopicNameCell","classes","classNames","user0","is_voting","closed","down","sectionHref","sect2","sect1","substr","overflowWrap","closeTooltip","LinkToPost","onMouseOver","persist","timer","setTimeout","showToolTip","stopPropagation","clearTimeout","onMouseOut","showTooltip","isPreview","x","pageX","y","pageY","setState","startsWith","pageParam","isNaN","PreviewLink","expanded","time","td","d","getDate","getMonth","getFullYear","today","dateFormat","aria-hidden","color","display","width","textAlign","currentPage","locationParams","baseUrl","last20","parseInt","Pagination","active","postNewTopicIfNeeded","shouldPostNewTopic","fetchParams","message_text","topic_text","target_section","target_forum","rnd","round","random","voting","votingItems","onSuccess","TextEditor","onButtonCode1c","textArea","start","selectionStart","end","selectionEnd","oldText","len","replacement","substring","newText","formName","onVotingChange","checked","ctrlKey","parent","parentElement","tagName","toUpperCase","dispatchEvent","Event","cancelable","bubbles","showVoting","cols","rows","ButtonGroup","disabled","Check","NewTopic","onSectionChange","currentSection","onSubmit","onSubmitSuccess","refs","onSubjectChange","groupsElem","votingOptions","Text","readOnly","FormGroup","highlight","СтрокаРезультат","УстановленЦвет","ПоследнийЦвет","keywords","Set","split","Спецсиволы","мЦветФона","мЦветЧисла","мЦветСтроки","мЦветКлючевогоСлова1","ВСтроке","Токен","ПустаяСтрока","Строка","Сред","Нач","Длина","Прав","isKeyword","token","has","ДобавитьЧастьСтроки1С","Часть","Цвет","РазукраситьСтроку","СтрокаКода","ВСтрокеСкобка","ВСтрокеТильда","НачалоСтроки","ТокенДоТочки","Поз","ТекущийСимвол","charAt","Code","onShowClick","bind","hidden","textArr","buttonText","buttonShow","linesCount","preStyle","overflow","height","LinkToUser","YoutubeLink","hrefName","v","videoId","apiKey","apiUrl","snippet","getVideoId","getVideoParams","CustomLink","parentText","escapedHref","regExp","RegExp","URL","newHref","set","pathname","query","class","fixBrokenLink","VoteItem","total","colors","img","percent","textDecoration","select","src","maxWwidth","alt","VoteChart","sum","Vote","voteOption","MsgText","res","txt","processCode1C","processLinksToPosts","voteElement","voteChart","html","processedHtml","processText","componentsMap","code","textComponent","activeHtml","PreviewHeader","date","onFirst","onPrev","onNext","onLast","TopicPreview","fetchData","onClickFirst","onClickNext","onClickPrev","onClickLast","maxHeight","overflowY","updateTopicsList","document","position","top","letterSpacing","receiveTopic","now","closeTopic","shouldFetch","fetchTopicIfNeeded","_item0","first","_items","last","fetchTopic","fetchNewMessagesIfNeeded","fetchNewMessages","Header","TopicInfo","yandexUrl","lineHeight","addMessageText","UserInfo","getElementById","scrollTo","offsetTop","onImageLoad","dataStr","isAuthor","isYou","isTooltip","imgElem","timeElem","userClassNames","innerWidth","onLoad","Row","author","addBookmark","Footer","onBookmarkClick","onRefreshClick","updateButton","NewMessage","voting_select","clearVoting","setVotingOption","votingElem","Topic","autoUpdate","updateTopic","onPostNewMessageSuccess","scrolledToHash","setInterval","nodeHash","DOMParser","parseFromString","firstChild","innerText","clearText","clearInterval","RadioOption","values","oneLine","valuesElem","htmlFor","descr","StringOption","postfix","Options","closeForm","resetOptions","applyOptions","onTabClick","activeTab","textContent","optionsParams","max","form","tabName","tabs","tab","row","rowElem","fontWeight","Container","routes","path","element","NavBarFooter","TooltipHeader","closeWindow","onTouchEnd","TooltipBody","onScroll","startX","onTouchStart","nativeEvent","changedTouches","clientX","endX","abs","TooltipWindow","onCloseClick","onWheel","deltaY","axis","left","Children","toArray","header","handle","defaultClassNameDragging","onWheelCapture","Tooltip","delta","TooltipsList","setAttribute","middleware","thunk","store","createStore","applyMiddleware","Root","ReactDOM","render","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4b117ded.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nexport function today(td) {\r\n    var d = new Date();\r\n    return td.getDate() === d.getDate() && td.getMonth() === d.getMonth() && td.getFullYear() === d.getFullYear();\r\n}\r\n\r\nexport const groupBy = (list, getKey) =>\r\n  list.reduce((previous, currentItem) => {\r\n    const group = getKey(currentItem);\r\n    if (!previous[group]) previous[group] = [];\r\n    previous[group].push(currentItem);\r\n    return previous;\r\n  }, {})\r\n\r\n\r\nexport const parseJSON = (text) => {\r\n\r\n    try {\r\n        return JSON.parse(text);    \r\n    } catch(e) {\r\n\r\n    }\r\n\r\n    try {\r\n        text = text\r\n            .replace(/\\\\</g, '<')\r\n            .replace(/\\\\>/g, '>')\r\n            .replace(/\\\\&/g, '&')\r\n            .replace(/\\\\'/g, \"'\")\r\n            .replace(/\\\\\"/g, \"\")\r\n            .replace(/ \"/g, ' \\\\\"')\r\n            .replace(/\"\"/g, '\\\\\"\"')\r\n            .replace(/\\t/g, '\\\\t')\r\n            .replace(/\"(\\.| |\\?)/g, '\\\\\"$1')\r\n\r\n        //           console.log(text);\r\n        return JSON.parse(text);\r\n\r\n        //return eval(text);\r\n    } catch (e) {\r\n        console.error(e.message);\r\n        console.log(text);\r\n\r\n        return {};\r\n    }\r\n}\r\n\r\nexport const getMaxPage = (answ) => Math.min(Math.ceil(answ / 100), 10) || 1;\r\n\r\nexport const encodeText = (text) => {\r\n    text = text\r\n        .replace(/&/g, '%26')\r\n        .replace(/\\+/g, '%2B')\r\n\r\n    return text;\r\n}\r\n\r\nexport const compare = (obj1, obj2) => {\r\n\r\n    for (let key in obj2) {\r\n        if (obj1[key] !== obj2[key])\r\n            return false\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport const join = (obj, str) => {\r\n\r\n    let res = [];\r\n    for (let key in obj) {\r\n        res.push('' + key + ':' + obj[key]);\r\n    }\r\n\r\n    return res.join(str);\r\n}\r\n\r\nexport const childrenToText = (children) => {\r\n\r\n    if (!children) return children;\r\n\r\n    return children.map(value => {\r\n        if (typeof(value) === 'string') {\r\n            return value;\r\n        } else if (value.type === 'br') {\r\n            return '<br>'\r\n        } else if (value.type.displayName === 'Connect(LinkToPost)' || value.type.displayName === 'Connect(t)') {\r\n            return value.props.number;\r\n        } else {  \r\n            console.log(value);\r\n            return value;\r\n        }    \r\n    })    \r\n}","//@flow\r\nimport fetchJsonp from 'fetch-jsonp'\r\nimport * as utils from './utils'\r\n\r\nexport const domain: string = localStorage.getItem('domain') || 'https://forum.mista.ru';\r\n//export const domain = 'https://dev.mista.ru';\r\nexport const urlTopicsList: string = localStorage.getItem('urlTopicsList') || 'api/topic.php';\r\nexport const urlTopicInfo: string = localStorage.getItem('urlTopicInfo') || 'ajax_gettopic.php';\r\nexport const urlTopicMessages: string = localStorage.getItem('urlTopicMessages') || 'api/message.php';\r\nexport const urlLogin: string = localStorage.getItem('urlLogin') || 'users.php?action=do_enter';\r\nexport const urlLogout: string = localStorage.getItem('urlLogout') || 'users.php';\r\nexport const urlCookies: string = localStorage.getItem('urlCookies') || 'ajax_cookie.php';\r\nexport const urlSections: string = localStorage.getItem('urlSections') || 'ajax_getsectionslist.php';\r\nexport const urlNewMessage: string = localStorage.getItem('urlNewMessage') || 'topic.php?id=:id&page=1';\r\nexport const urlNewTopic: string = localStorage.getItem('urlNewTopic') || 'index.php';\r\nexport const urlAddBookmark: string = localStorage.getItem('urlAddBookmark') || 'ajax_addbookmark.php';\r\nexport const urlSearch: string = localStorage.getItem('urlSearch') || 'ajax_find.php';\r\n\r\n// Topics list\r\nexport type RequestTopicsList = {\r\n  topics?: number, // число тем, которые нужно вернуть (по умолчанию - 20);\r\n  utime?: number, // время (в формате unixtime) после которого надо вернуть ветки;\r\n  callback?: string, // если указано, то ответ заворачивается в вызов функции, имя которой передано в параметре (реализация JSONP)\r\n  forum?: string, // раздел форума (1c|it|life);\r\n  section_short_name?: string,\r\n  user_id?: string,\r\n  mytopics?: string\r\n}\r\n\r\nexport type ResponseTopicsListItem = {\r\n  id: number,\r\n  forum: string,\r\n  sect1: string,\r\n  sect2: string,\r\n  v8: string,\r\n  closed: number,\r\n  down: number,\r\n  text: string,\r\n  utime: number,\r\n  created: number,\r\n  user: string,\r\n  user0: string,\r\n  is_voting: number,\r\n  answ: number\r\n}\r\n\r\nexport type ResponseTopicsList = Array<ResponseTopicsListItem>;\r\n\r\nexport const getTopicsList = async (params: RequestTopicsList): Promise<ResponseTopicsList> => {\r\n  const json = await fetchAndGetJson(urlTopicsList, params);\r\n  return json;\r\n}\r\n\r\n\r\n// Topics info\r\nexport type RequestInfo = {\r\n  id: string // идентификатор (topic_id) темы\r\n}\r\n\r\nexport type ResponseVoteItem = {\r\n  select: string,\r\n  result: number\r\n}\r\n\r\nexport type ResponseInfo = {\r\n  id: string,\r\n  text: string,\r\n  forum?: string,\r\n  section?: string,\r\n  created?: string,\r\n  user_id?: string,\r\n  user_name?: string,\r\n  answers_count: string,\r\n  down?: number,\r\n  closed?: number,\r\n  deleted?: number,\r\n  is_voting?: number,\r\n  voting?: Array<ResponseVoteItem>\r\n}\r\n\r\nexport const defaultInfo = {\r\n  id: \"\",\r\n  text: \"\",\r\n  answers_count: \"\"\r\n}\r\n\r\nexport const getTopicInfo = async (params: RequestInfo): Promise<ResponseInfo> => {\r\n  const json = await fetchAndGetJson(urlTopicInfo, params);\r\n  return json;\r\n}\r\n\r\n\r\n// Topic messages\r\nexport type RequestMessages = {\r\n  id: number | string, // идентификатор (topic_id) темы\r\n  from?: number, // с какого сообщения. если не указан, то с первого\r\n  to?: number  // до какого сообщения. если не указан, то from+10\r\n}\r\n\r\nexport type ResponseMessage = {\r\n  id: string,\r\n  n: string,\r\n  user: string,\r\n  userId: string,\r\n  text: string,\r\n  utime: string,\r\n  vote: number\r\n}\r\n\r\nexport type ResponseMessages = Array<ResponseMessage>;\r\n\r\nexport const getTopicMessages = async (params: RequestMessages): Promise<ResponseMessages> => {\r\n  const json = await fetchAndGetJson(urlTopicMessages, params);\r\n  return json;\r\n}\r\n\r\nexport const getMessage = async (id: number | string, n: number): Promise<?ResponseMessage> => {\r\n  const json = await getTopicMessages({\r\n    id,\r\n    from: n,\r\n    to: +n + 1\r\n  }\r\n  );\r\n\r\n  let data;\r\n  if (json && json.length > 0)\r\n    data = json.find(val => val.n === String(n));\r\n\r\n  return data;\r\n}\r\n\r\nexport const getTopicMessagesCount = async (id: number | string): Promise<number> => {\r\n  const info = await getTopicInfo({ id: String(id) });\r\n  return +info.answers_count;\r\n}\r\n\r\n// Login\r\nexport type RequestLogin = {\r\n  username: string, // логин (ник) пользователя\r\n  password: string, // пароль пользователя\r\n  callback?: string, // если указано, то ответ заворачивается в вызов функции, имя которой передано в параметре (реализация JSONP)\r\n}\r\n\r\nexport type ResponseLogin = {\r\n  userid: string,\r\n  username: string,\r\n  hashkey: string,\r\n  error?: string\r\n}\r\n\r\nexport const getLogin = async (params: RequestLogin): Promise<any> => {\r\n  let result = await fetch(`${domain}/${urlLogin}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', {user_name: params.username, user_password: params.password}),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Accept': 'text/html,application/xhtml+xml,application/xml',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: 'follow'\r\n  });\r\n  //const json = await fetchJsonpAndGetJson(urlLogin, params);\r\n  //return json;\r\n}\r\n\r\nexport const getLogout = async (): Promise<any> => {\r\n  const fullUrl = `${domain}/${urlLogout}?action=exit`;\r\n  await fetch(fullUrl, {\r\n    mode: 'no-cors',\r\n    credentials: 'include'\r\n  });\r\n}\r\n\r\n\r\n// Cookies\r\nexport type ResponseCookies = {\r\n  cookie: {\r\n    entr_id: string,\r\n    entr_key: string,\r\n    entr_hash: string\r\n  },\r\n  session: {\r\n    user_id: string,\r\n    user_name: string,\r\n    user_hash: string,\r\n    is_moderator: number,\r\n    light_moderator: number,\r\n    section: string,\r\n    show_moderator_tools: number,\r\n    last_error?: string\r\n  }\r\n}\r\n\r\nexport const getCookies = async (): Promise<ResponseCookies> => {\r\n  const json = await fetchJsonpAndGetJson(urlCookies);\r\n  return json;\r\n}\r\n\r\n\r\n// Sections\r\nexport type ResponseSection = {\r\n  id: number,\r\n  forum: string,\r\n  shortn: string,\r\n  fulln: string,\r\n  id: number\r\n}\r\n\r\nexport type ResponseSections = Array<ResponseSection>;\r\n\r\nexport const getSections = async (): Promise<ResponseSections> => {\r\n  const json = await fetchJsonpAndGetJson(urlSections);\r\n  return json;\r\n}\r\n\r\n\r\n// New message\r\nexport type RequestNewMessage = {\r\n  message_text: string,\r\n  action: \"new\",\r\n  topic_id: string,\r\n  rnd: number,\r\n  voting_select?: number,\r\n  as_admin?: boolean\r\n}\r\n\r\nexport const postNewMessage = async (params: RequestNewMessage): Promise<any> => {\r\n\r\n  let url = urlNewMessage.replace(':id', params.topic_id);\r\n\r\n  let result = await fetch(`${domain}/${url}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Accept': 'text/html,application/xhtml+xml,application/xml',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    redirect: 'follow'\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n\r\n// New topic\r\nexport type RequestNewTopic = {\r\n  action: \"new\",\r\n  rnd: number,\r\n  topic_text: string,\r\n  message_text: string,\r\n  target_section: string,\r\n  target_forum: string,\r\n  voting: number,\r\n  select1?: string,\r\n  select2?: string,\r\n  select3?: string,\r\n  select4?: string,\r\n  select5?: string,\r\n  select6?: string,\r\n  select7?: string,\r\n  select8?: string,\r\n  select9?: string,\r\n  select10?: string\r\n}\r\n\r\nexport const postNewTopic = async (params: RequestNewTopic): Promise<any> => {\r\n\r\n  await fetch(`${domain}/${urlNewTopic}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n    headers: {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    }\r\n  });\r\n}\r\n\r\n\r\n//Bookmark\r\nexport type RequestBookmark = {\r\n  id: string\r\n}\r\n\r\nexport const postBookmark = async (params: RequestBookmark) => {\r\n\r\n  await fetch(`${domain}/${urlAddBookmark}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n  });\r\n}\r\n\r\n\r\n//Search\r\nexport type RequestSearch = {\r\n  keywords: string\r\n}\r\n\r\nexport type ResponseSearch = {\r\n\r\n}\r\n\r\nexport const postSearch = async (params: RequestSearch) => {\r\n\r\n  await fetch(`${domain}/${urlSearch}`, {\r\n    method: 'POST',\r\n    body: paramsToString('', params),\r\n    mode: 'no-cors',\r\n    credentials: 'include',\r\n  });\r\n}\r\n\r\nexport const paramsToString = (paramsPrefix: string, params: ?{}): string => {\r\n\r\n  if (!params)\r\n    return '';\r\n\r\n  let arr = [];\r\n  for (let key in params) {\r\n    if (params[key] !== undefined)\r\n      arr.push(key + '=' + params[key]);\r\n  }\r\n\r\n  if (arr.length > 0)\r\n    return paramsPrefix + arr.join('&');\r\n  else\r\n    return '';\r\n}\r\n\r\nexport const fetchJsonpAndGetJson = async (url: string, params: any): Promise<any> => {\r\n\r\n  let fullUrl = `${domain}/${url}${paramsToString('?', params)}`;\r\n  const response = await fetchJsonp(fullUrl);\r\n  let responseJson = await response.json();\r\n  let json;\r\n  if (typeof (responseJson) === 'string') {\r\n\r\n    try {\r\n      json = JSON.parse(responseJson)\r\n    } catch (e) {\r\n      json = utils.parseJSON(responseJson);\r\n    }\r\n  } else {\r\n    json = responseJson;\r\n  }\r\n  return json;\r\n}\r\n\r\nexport const fetchAndGetJson = async (url: string, params: any, options: any): Promise<any> => {\r\n\r\n  let fullUrl = `${domain}/${url}${paramsToString('?', params)}`;\r\n  const response = await fetch(fullUrl, options);\r\n  let responseJson = await response.json();\r\n  let json;\r\n  if (typeof (responseJson) === 'string') {\r\n\r\n    try {\r\n      json = JSON.parse(responseJson)\r\n    } catch (e) {\r\n      json = utils.parseJSON(responseJson);\r\n    }\r\n  } else {\r\n    json = responseJson;\r\n  }\r\n  return json;\r\n}","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nimport * as API from 'src/api'\r\nimport type { RequestTopicsList, ResponseTopicsList } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\n\r\nexport const requestTopicsList = createAction('REQUEST_TOPICS_LIST');\r\nexport const receiveTopicsList = createAction('RECEIVE_TOPICS_LIST', list => ({\r\n  payload: {\r\n    list\r\n  },\r\n  error: false\r\n}));\r\nexport const receiveTopicsListFailed = createAction('RECEIVE_TOPICS_LIST', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\nexport const clearTopicsList = createAction('CLEAR_TOPICS_LIST');\r\nexport const togglePreview = createAction('TOGGLE_PREVIEW', id => ({\r\n  payload : {\r\n    id\r\n  }\r\n}));\r\n\r\nconst fetchTopicsList = (params: any) => async (dispatch: any, getState: any) => {\r\n\r\n  dispatch(requestTopicsList())\r\n\r\n  const page = params.page || 1;\r\n  let reqestParams: RequestTopicsList = {};\r\n\r\n  let topicsPerPage = +getState().options.items.topicsPerPage;\r\n  if (topicsPerPage > 99) topicsPerPage = 99;\r\n\r\n  let topicsCount = page * topicsPerPage;\r\n  reqestParams.topics = topicsCount;\r\n\r\n  if (params.section)\r\n    reqestParams.section_short_name = params.section;\r\n\r\n  if (params.forum)\r\n    reqestParams.forum = params.forum;\r\n\r\n  if (params.user_id)\r\n    reqestParams.user_id = params.user_id;\r\n\r\n  if (params.mytopics)\r\n    reqestParams.mytopics = params.mytopics;\r\n\r\n  try {\r\n    const json = await API.getTopicsList(reqestParams);\r\n\r\n    let data = json.slice(-topicsPerPage);\r\n    dispatch(receiveTopicsList(data));\r\n  } catch (e) {\r\n    dispatch(receiveTopicsListFailed(e));\r\n    console.error(e);\r\n  }\r\n\r\n}\r\n\r\nconst shouldFetchTopicsList = (state: State) => {\r\n  const topicsList = state.topicsList;\r\n  if (!topicsList) {\r\n    return true\r\n  }\r\n  if (topicsList.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const fetchTopicsListIfNeeded = (params: any): any => (dispatch: any, getState: any) => {\r\n  if (shouldFetchTopicsList(getState())) {\r\n    return dispatch(fetchTopicsList(params));\r\n  }\r\n}\r\n","//@flow\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport { requestTopicsList, receiveTopicsList, clearTopicsList, togglePreview } from './actions'\r\n\r\nimport type { ResponseTopicsListItem } from 'src/api'\r\n\r\nexport type TopicsListItem = ResponseTopicsListItem & {\r\n  showPreview?: ?boolean\r\n}\r\n\r\nexport type TopicsListState = {\r\n  isFetching: boolean;\r\n  items: Array<TopicsListItem>,\r\n  error?: ?string,\r\n  lastUpdated?: Date\r\n};\r\n\r\nexport const defaultTopicsListState: TopicsListState = {\r\n  isFetching: false,\r\n  items: []\r\n}\r\n\r\nconst reducer = createReducer(defaultTopicsListState, (builder) => {\r\n  builder\r\n    .addCase(requestTopicsList, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveTopicsList, (state, action) => {\r\n\r\n      if (action.error) {\r\n        state.error = action.payload.toString();\r\n      } else {\r\n        state.items = action.payload.list;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n    .addCase(clearTopicsList, (state) => {\r\n      state.items = [];\r\n      state.isFetching = false;\r\n      delete state.error;\r\n      delete state.lastUpdated;\r\n    })\r\n    .addCase(togglePreview, (state, action) => {\r\n      let items = state.items.slice();\r\n      const ind = items.findIndex(item => item.id === action.topicId);\r\n\r\n      let item = Object.assign({}, items[ind]);\r\n      item.showPreview = !item.showPreview;\r\n      items[ind] = item;\r\n      state.items = items;\r\n    })    \r\n})\r\n\r\nexport default reducer;\r\n","//@flow \r\nimport { defaultInfo } from 'src/api'\r\nimport type { ResponseInfo, ResponseMessages, ResponseMessage } from 'src/api'\r\nimport type { TopicAction } from 'src/actions/topic'\r\n\r\nexport type TopicState = {\r\n  isFetching: boolean;\r\n  info: ResponseInfo,\r\n  item0?: ?ResponseMessage,\r\n  items: ResponseMessages,\r\n  lastUpdated?: ?Date,\r\n  error?: ?string\r\n};\r\n\r\nexport const defaultTopicState: TopicState = {\r\n    isFetching: false,\r\n    info: defaultInfo,\r\n    items: []\r\n}\r\n\r\nconst topic = (state: TopicState = defaultTopicState, action: TopicAction): TopicState => {\r\n    switch (action.type) {\r\n        case 'REQUEST_TOPIC':\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n                error: null\r\n            }\r\n        case 'RECEIVE_TOPIC':\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                info: action.info,\r\n                item0: action.item0,\r\n                items: action.items,\r\n                lastUpdated: action.receivedAt,\r\n                error: null\r\n            }\r\n        case 'RECEIVE_TOPIC_FAILED':\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                lastUpdated: action.receivedAt,\r\n                error: action.error\r\n            }\r\n        case 'REQUEST_NEW_MESSAGES':\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            }\r\n            \r\n        case 'RECEIVE_NEW_MESSAGES':\r\n\r\n            let info = state.info;\r\n            if (action.items.length > 0) {\r\n                info.answers_count = action.items[action.items.length - 1].n;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                items: state.items.concat(action.items),\r\n                info,\r\n                lastUpdated: action.receivedAt\r\n            }\r\n\r\n        case 'CLOSE_TOPIC': \r\n        \r\n            return {\r\n                ...state,\r\n                items: [],\r\n                info: defaultInfo,\r\n                item0: null,\r\n                lastUpdated: null,\r\n                error: null            \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default topic;","//@flow \r\nimport type { LoginAction } from 'src/actions/login'\r\n\r\nexport type LoginState = {\r\n  isFetching: boolean;\r\n  logged: any,\r\n  userid?: string,\r\n  username?: string,\r\n  hashkey?: string,\r\n  error?: string\r\n};\r\n\r\nexport const defaultLoginState: LoginState = {\r\n    isFetching: false,\r\n    logged: undefined\r\n}\r\n\r\nconst login = (state: LoginState = defaultLoginState, action: LoginAction): LoginState => {\r\n    switch (action.type) {\r\n        case 'LOGIN_START':\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            }\r\n        case 'LOGIN_COMPLETE':\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isFetching: false,\r\n                logged: true,\r\n                error: undefined\r\n            }\r\n         case 'LOGIN_FAILED':\r\n            return {\r\n                isFetching: false,\r\n                logged: false,\r\n                error: action.error\r\n            }\r\n        case 'LOGOUT_COMPLETE':\r\n            return {\r\n                ...state,\r\n                userid: undefined,\r\n                username: undefined,\r\n                hashkey: undefined,\r\n                logged: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default login;","//@flow\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nimport * as API from 'src/api'\r\nimport type { ResponseSections } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\n\r\nexport const requestSections = createAction('REQUEST_SECTIONS');\r\nexport const receiveSections = createAction('RECEIVE_SECTIONS', list => ({\r\n  payload: {\r\n    list,\r\n  },\r\n  error: false\r\n}));\r\n\r\nexport const receiveSectionsFailed = createAction('RECEIVE_SECTIONS', error => ({\r\n  payload: error,\r\n  error: true\r\n}));\r\n/*\r\nexport type REQUEST_SECTIONS = {\r\n  type: 'REQUEST_SECTIONS',\r\n}\r\n\r\nexport type RECEIVE_SECTIONS = {\r\n  type: 'RECEIVE_SECTIONS',\r\n  items: ResponseSections,\r\n  receivedAt: Date\r\n}\r\n\r\nexport type SectionsAction = REQUEST_SECTIONS | RECEIVE_SECTIONS;\r\n\r\nexport const requestSections = (): REQUEST_SECTIONS => ({\r\n  type: 'REQUEST_SECTIONS'\r\n})\r\n\r\nexport const receiveSections = (json: ResponseSections): RECEIVE_SECTIONS => ({\r\n  type: 'RECEIVE_SECTIONS',\r\n  items: json,\r\n  receivedAt: new Date()\r\n})\r\n*/\r\nexport const fetchSections = (): any => async (dispatch: any) => {\r\n\r\n  dispatch(requestSections);\r\n\r\n  try {\r\n    \r\n    const list: ResponseSections = await API.getSections();\r\n    dispatch(receiveSections(list));\r\n\r\n  } catch (e) {\r\n\r\n    dispatch(receiveSectionsFailed(e));\r\n    console.error(e);\r\n\r\n  }\r\n\r\n}\r\n\r\nconst shouldfetchSections = (state: State): boolean => {\r\n\r\n  const sections = state.sections;\r\n\r\n  if (!sections)\r\n    return true\r\n\r\n  if (sections.isFetching)\r\n    return false\r\n\r\n  if (sections.items.length > 0)\r\n    return false;\r\n\r\n  return true\r\n}\r\n\r\nexport const fetchSectionsIfNeeded = (): any => (dispatch: any, getState: any) => {\r\n  if (shouldfetchSections(getState())) {\r\n    return dispatch(fetchSections());\r\n  }\r\n}","//@flow \r\nimport { createReducer } from '@reduxjs/toolkit'\r\n\r\nimport { requestSections, receiveSections } from './actions'\r\nimport type { ResponseSections } from 'src/api'\r\n\r\nimport { groupBy } from 'src/utils'\r\n\r\nexport type SectionsState = {\r\n  isFetching: boolean;\r\n  items: ResponseSections,\r\n  tree: { [string]: any },\r\n  map: { [string]: any },\r\n  lastUpdated?: Date,\r\n  error?: ?string\r\n};\r\n\r\nexport const initialState: SectionsState = {\r\n  isFetching: false,\r\n  items: [],\r\n  tree: {},\r\n  map: {}\r\n}\r\n\r\nconst reducer = createReducer(initialState, (builder) => {\r\n  builder\r\n    .addCase(requestSections, (state) => {\r\n      state.isFetching = true\r\n    })\r\n    .addCase(receiveSections, (state, action) => {\r\n\r\n      if (action.error) {\r\n        state.error = action.payload.toString();\r\n      } else {\r\n        let map = {};\r\n        action.payload.list.forEach(val => {\r\n            map[val.shortn] = val.fulln\r\n        });\r\n        state.items = action.payload.list;\r\n        state.tree = groupBy(state.items, item => item.forum);\r\n        state.map = map;\r\n        delete state.error;\r\n      }\r\n      state.lastUpdated = new Date().getTime();\r\n      state.isFetching = false;\r\n    })\r\n})\r\n\r\nexport default reducer;\r\n","//@flow\r\nimport type { AddBookmarkAction } from 'src/actions/bookmark'\r\n\r\nexport type BookmarkState = {\r\n  isFetching: boolean\r\n};\r\n\r\nexport const defaultBookmarkState: BookmarkState = {\r\n  isFetching: false\r\n};\r\n\r\nconst bookmark = (state: BookmarkState = defaultBookmarkState, action: AddBookmarkAction): BookmarkState => {\r\n    switch (action.type) {\r\n        case 'ADD_BOOKMARK_START':\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            }\r\n        case 'ADD_BOOKMARK_COMPLETE':\r\n        case 'ADD_BOOKMARK_FAIL':\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default bookmark;","//@flow\r\nimport type { NewTopicAction } from '../actions/new_topic'\r\nimport type { ResponseSection } from 'src/api'\r\n\r\nexport type NewTopicState = {\r\n    isFetching: boolean,\r\n    section: ?ResponseSection,\r\n    text: string,\r\n    subject: string,\r\n    forum: string,\r\n    isVoting: boolean,\r\n    error?: ?string\r\n};\r\n\r\nexport const defaultNewTopicState: NewTopicState = {\r\n    isFetching: false,\r\n    section: null,\r\n    text: '',\r\n    subject: '',\r\n    forum: '1C',\r\n    isVoting: false\r\n}\r\n\r\nconst newTopic = (state: NewTopicState = defaultNewTopicState, action: NewTopicAction): NewTopicState => {\r\n    switch (action.type) {\r\n        case 'POST_NEW_TOPIC_START':\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n                error: undefined\r\n            }\r\n        case 'POST_NEW_TOPIC_COMPLETE':\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n       case 'POST_NEW_TOPIC_ERROR':\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                error: action.error\r\n            }\r\n        case 'NEW_TOPIC_SECTION':\r\n            return {\r\n                ...state,\r\n                section: action.section,\r\n                forum: action.section == null ? '' : action.section.forum.toLowerCase()\r\n            }\r\n        case 'NEW_TOPIC_TEXT':\r\n            return {\r\n                ...state,\r\n                text: action.text\r\n            }\r\n        case 'NEW_TOPIC_SUBJECT':\r\n            return {\r\n                ...state,\r\n                subject: action.text\r\n            }\r\n        case 'NEW_TOPIC_CLEAR':\r\n            return {\r\n                ...state,\r\n                text: '',\r\n                subject: '',\r\n                isVoting: false\r\n            }\r\n        case 'SHOW_VOTING':\r\n            return {\r\n                ...state,\r\n                isVoting: action.data\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default newTopic;","//@flow\r\nimport type { NewMessageAction } from 'src/actions/new_message'\r\n\r\nexport type NewMessageState = {\r\n    isFetching: boolean;\r\n    text: string\r\n};\r\n\r\nexport const defaultNewMessageState: NewMessageState = {\r\n    isFetching: false,\r\n    text: ''\r\n}\r\n\r\nconst newMessage = (state: NewMessageState = defaultNewMessageState, action: NewMessageAction): NewMessageState => {\r\n    switch (action.type) {\r\n        case 'POST_NEW_MESSAGE_START':\r\n            return {\r\n                ...state,\r\n                isFetching: true\r\n            }\r\n        case 'POST_NEW_MESSAGE_COMPLETE':\r\n            return {\r\n                ...state,\r\n                isFetching: false\r\n            }\r\n        case 'NEW_MESSAGE_TEXT':\r\n            return {\r\n                ...state,\r\n                text: action.text\r\n            }\r\n        case 'ADD_MESSAGE_TEXT':\r\n            return {\r\n                ...state,\r\n                text: state.text + action.text\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default newMessage;","//@flow\r\nimport type { TooltipItem, TooltipsAction } from 'src/actions/tooltips'\r\n\r\nexport type TooltipItemState = {\r\n    i: number,\r\n    hash: string\r\n} & TooltipItem\r\n\r\nexport type TooltipsState = {\r\n    items: Array<TooltipItemState>\r\n};\r\n\r\nexport const defaultTooltipsState: TooltipsState = {\r\n    items: []\r\n}\r\n\r\nconst tooltips = (state: TooltipsState = defaultTooltipsState, action: TooltipsAction): TooltipsState => {\r\n    let hash: string;\r\n    let items: Array<TooltipItemState>;\r\n    let tooltip;\r\n    switch (action.type) {\r\n        case 'CREATE_TOOLTIP':\r\n\r\n            items = state.items.slice();\r\n\r\n            hash = JSON.stringify(action.keys);\r\n            var ind = items.findIndex(val => val.hash === hash);\r\n            if (ind === - 1)\r\n                items.push({\r\n                    i: 0,\r\n                    keys: action.keys,\r\n                    hash,\r\n                    coords: action.coords\r\n                });\r\n            else {   \r\n                tooltip = Object.assign({}, items[ind]);\r\n                tooltip.coords = action.coords;\r\n                //to reset draggable position\r\n                tooltip.i += 1;\r\n                items[ind] = tooltip;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                items\r\n            }\r\n        case 'CLOSE_TOOLTIP':\r\n            hash = JSON.stringify(action.keys);\r\n            return {\r\n                ...state,\r\n                items: state.items.filter(val => val.hash !== hash)\r\n            }\r\n        case 'CLEAR_TOOLTIPS':\r\n            if (state.items.length === 0)\r\n                return state\r\n            else     \r\n                return {\r\n                    ...state,\r\n                    items: []\r\n                }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default tooltips;","//@flow\r\nimport type { TopicPreviewAction } from 'src/actions/topic_preview'\r\nimport type { ResponseMessage } from 'src/api'\r\n\r\nexport type TopicPreviewState = {\r\n    items: {[string]: ResponseMessage | null}\r\n};\r\n\r\nexport const defaultTopicPreviewState: TopicPreviewState = {\r\n    items: {}\r\n};\r\n\r\nconst topicPreview = (state: TopicPreviewState = defaultTopicPreviewState, action: TopicPreviewAction): TopicPreviewState => {\r\n\r\n    let previewItem;\r\n\r\n    switch (action.type) {\r\n         case 'SHOW_PREVIEW':\r\n\r\n            previewItem = state[action.topicId];\r\n            if (previewItem === undefined)\r\n                state.items[action.topicId] = {\r\n                    n: '0',\r\n                    id: action.topicId,\r\n                    text: '',\r\n                    user: '',\r\n                    userId: '',\r\n                    utime: '0',\r\n                    vote: 0\r\n                };    \r\n            return {\r\n                ...state,\r\n            }\r\n         case 'CLOSE_PREVIEW': {\r\n            delete state.items[action.topicId];\r\n            return {\r\n                ...state\r\n            }\r\n         }\r\n        case 'RECEIVE_PREVIEW_TEXT':\r\n\r\n            previewItem = state.items[action.topicId];\r\n            if (previewItem === undefined)\r\n                return state;\r\n            else\r\n                state.items[action.topicId] = action.message;        \r\n            \r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default topicPreview;","//@flow\r\nexport type Column = {\r\n  name: string,\r\n  className?: string,\r\n  width?: string\r\n}\r\n\r\nexport type OptionsItems = {\r\n  theme: 'yellow' | 'lightgray' | 'dark',\r\n  topicsPerPage: string,\r\n  autoRefreshTopicsList: string,\r\n  autoRefreshTopicsListInterval: string,\r\n  autoRefreshTopic: string,\r\n  autoRefreshTopicInterval: string,\r\n  contetnMaxWidth?: string,\r\n  tooltipDelay: string,\r\n  showTooltips: string,\r\n  showTooltipOnTopicsList: string\r\n}\r\n\r\nexport type OptionsState = {\r\n  voteColors: Array<string>,\r\n  items: OptionsItems,\r\n  show?: boolean\r\n};\r\n\r\nexport const defaultOptionsState: OptionsState = {\r\n  voteColors: [\r\n    \"#FF1616\", //1\r\n    \"#1A861A\", //2\r\n    \"#0023FF\", //3\r\n    \"#FF6B18\", //4\r\n    \"#9B3A6E\", //5\r\n    \"#567655\", //6\r\n    \"#233345\", //7\r\n    \"#CC0000\", //8\r\n    \"#00CCCC\", //9\r\n    \"#0000CC\", //10\r\n  ],\r\n  items: {\r\n    theme: 'lightgray',\r\n    topicsPerPage: '20',\r\n    autoRefreshTopicsList: 'false',\r\n    autoRefreshTopicsListInterval: '60',\r\n    autoRefreshTopic: 'true',\r\n    autoRefreshTopicInterval: '60',\r\n    //tooltips\r\n    showTooltips: 'true',\r\n    tooltipDelay: '500',\r\n    showTooltipOnTopicsList: 'true',\r\n    showTooltipOnPostLink: 'true',\r\n    //links\r\n    showYoutubeVideoTitle: 'true',\r\n    replaceCatalogMista: 'true',\r\n    fixBrokenLinks: 'true',\r\n  }\r\n}\r\n\r\nfunction readOption(name, defaultValue) {\r\n  return window.localStorage.getItem(name) || defaultValue;\r\n}\r\n\r\nfunction readOptions() {\r\n  \r\n  let state: OptionsState = defaultOptionsState;\r\n  for (let key in state.items) {\r\n    state.items[key] = readOption(key, state.items[key]);\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nconst options = (state: OptionsState, action: any): OptionsState => {\r\n\r\n  if (!state)\r\n    state = readOptions();\r\n\r\n  switch (action.type) {\r\n\r\n    case 'READ_OPTIONS':\r\n\r\n      let items = Object.assign({}, defaultOptionsState.items);\r\n      for (let key in items) {\r\n        items[key] = readOption(key, defaultOptionsState.items[key]);\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        items\r\n      }\r\n\r\n    case 'SAVE_OPTIONS':\r\n\r\n      for (let key in action.options) {\r\n        window.localStorage.setItem(key, String(action.options[key]));\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        items: action.options\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default options;","//@flow\r\nimport { combineReducers } from 'redux'\r\n\r\nimport topicsList from 'src/data/topicslist/reducer'\r\nimport type { TopicsListState } from 'src/data/topicslist/reducer'\r\n\r\nimport topic from './topic'\r\nimport type { TopicState } from './topic'\r\n\r\nimport login from './login'\r\nimport type { LoginState } from './login'\r\n\r\nimport sections from 'src/data/sections/reducer'\r\nimport type { SectionsState } from 'src/data/sections/reducer'\r\n\r\nimport bookmark from './bookmark'\r\nimport type { BookmarkState } from './bookmark'\r\n\r\nimport newTopic from './new_topic'\r\nimport type { NewTopicState } from './new_topic'\r\n\r\nimport newMessage from './new_message'\r\nimport type { NewMessageState } from './new_message'\r\n\r\nimport tooltips from './tooltips'\r\nimport type { TooltipsState } from './tooltips'\r\n\r\nimport topicPreview from './topic_preview'\r\nimport type { TopicPreviewState } from './topic_preview'\r\n\r\nimport options from './options'\r\nimport type { OptionsState } from './options'\r\n\r\nexport type State = {\r\n  topicsList: TopicsListState,\r\n  sections: SectionsState,\r\n  topic: TopicState,\r\n  login: LoginState,\r\n  bookmark: BookmarkState,\r\n  newTopic: NewTopicState,\r\n  newMessage: NewMessageState,\r\n  tooltips: TooltipsState,\r\n  topicPreview: TopicPreviewState,\r\n  options: OptionsState\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  topicsList,\r\n  sections,\r\n  topic,\r\n  login,\r\n  bookmark,\r\n  newTopic,\r\n  newMessage,\r\n  tooltips,\r\n  topicPreview,\r\n  options\r\n})\r\n\r\nexport default (rootReducer: any);","//@flow\r\nimport React, { Component, useState } from 'react'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n\r\nimport './search.css'\r\n\r\nconst Search = () => {\r\n\r\n  const [searchEngine, setSearchEngine] = useState('Яндекс');\r\n  const [text, setText] = useState('');\r\n\r\n  function onKeyPress(e: any) {\r\n    if (e.key === 'Enter') {\r\n      doSearch();\r\n    }\r\n  }\r\n\r\n  function doSearch() {\r\n\r\n    let url;\r\n    if (searchEngine === 'Яндекс') {\r\n      url = `https://www.yandex.ru/search/?text=${text}&site=forum.mista.ru`;\r\n\r\n    } else if (searchEngine === 'Google') {\r\n      url = `https://www.google.ru/search?q=${text}+site:forum.mista.ru`\r\n    }\r\n\r\n    window.open(url);\r\n\r\n    setText('');\r\n\r\n  }\r\n\r\n  return (\r\n    <InputGroup size=\"sm\">\r\n      <InputGroup.Prepend>\r\n        <DropdownButton id=\"search-engine\" title=\"\" size=\"sm\" style={{ marginRight: \"2px\" }} className='button' variant=\"light\">\r\n          <Dropdown.Item eventKey=\"Яндекс\" onSelect={() => setSearchEngine(\"Яндекс\")}>Яндекс</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"Google\" onSelect={() => setSearchEngine(\"Google\")}>Google</Dropdown.Item>\r\n        </DropdownButton>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        type=\"text\"\r\n        placeholder={`${searchEngine}: поиск`}\r\n        style={{ marginRight: \"4px\", paddingRight: \"27px\" }}\r\n        className='input'\r\n        onKeyPress={onKeyPress}\r\n        onChange={e => setText(e.target.value)}\r\n        value={text}\r\n      />\r\n      <InputGroup.Append style={{ marginLeft: \"-25px\", marginTop: \"auto\", marginBottom: \"auto\", cursor: \"pointer\" }} onClick={doSearch}>\r\n        <i className=\"fa fa-search input\" style={{ zIndex: 1000 }} />\r\n      </InputGroup.Append>\r\n    </InputGroup>\r\n  )\r\n\r\n}\r\n\r\nexport default (Search: any);","import React, { Component } from 'react';\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Form from 'react-bootstrap/Form'\r\nimport queryString from 'query-string'\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport Search from 'src/components/common/search'\r\nimport { fetchTopicsListIfNeeded } from 'src/data/topicslist/actions'\r\n\r\nimport './nav_bar.css'\r\n\r\nconst NavBar = (props) => {\r\n\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const onClick = (e) => {\r\n    dispatch(fetchTopicsListIfNeeded({}));\r\n  }\r\n\r\n  const menu = [\r\n    { name: '1С', link: `${window.hash}/index.php?forum=1C` },\r\n    { name: 'IT', link: `${window.hash}/index.php?forum=IT` },\r\n    { name: 'JOB', link: `${window.hash}/index.php?forum=JOB` },\r\n    { name: 'LIFE', link: `${window.hash}/index.php?forum=LIFE` },\r\n    { name: 'Wiki', link: 'https://wiki.mista.ru' },\r\n    { name: 'Книга знаний', link: 'https://kb.mista.ru' },\r\n  ];\r\n\r\n  const menuItems = menu.map((item, i) => {\r\n    return (\r\n      <Nav.Item key={i}>\r\n        <Nav.Link href={item.link}>\r\n          {item.name}\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    )\r\n  });\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" fixed=\"top\">\r\n      <Navbar.Brand\r\n        href={`${window.hash}`}\r\n        onClick={onClick}>\r\n        React.Mista\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse>\r\n        <Nav className=\"mr-auto\">\r\n          {menuItems}\r\n        </Nav>\r\n        <Form inline>\r\n          <Search />\r\n        </Form>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default connect()(NavBar);","//@flow\r\nimport * as API from 'src/api'\r\nimport type { RequestLogin, ResponseLogin } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\n\r\nexport type LOGIN_START = {\r\n  type: 'LOGIN_START',\r\n}\r\n\r\nexport type LOGIN_COMPLETE = {\r\n  type: 'LOGIN_COMPLETE',\r\n  data: ResponseLogin\r\n}\r\n\r\nexport type CHECK_LOGIN_START = {\r\n  type: 'CHECK_LOGIN_START'\r\n}\r\n\r\nexport type LOGOUT_START = {\r\n  type: 'LOGOUT_START'\r\n}\r\n\r\nexport type LOGOUT_COMPLETE = {\r\n  type: 'LOGOUT_COMPLETE'\r\n}\r\n\r\nexport type LOGIN_FAILED = {\r\n  type: 'LOGIN_FAILED',\r\n  error: string\r\n}\r\n\r\n\r\nexport type LoginAction = LOGIN_START | LOGIN_COMPLETE | LOGIN_FAILED | CHECK_LOGIN_START | LOGOUT_START | LOGOUT_COMPLETE;\r\n\r\nexport const loginStart = (): LOGIN_START => {\r\n\r\n  return {\r\n    type: 'LOGIN_START'\r\n  }\r\n}\r\n\r\nexport const loginComplete = (json: ResponseLogin): LOGIN_COMPLETE => {\r\n\r\n  return {\r\n    type: 'LOGIN_COMPLETE',\r\n    data: json\r\n  }\r\n}\r\n\r\nexport const loginFailed = (error: string): LOGIN_FAILED => {\r\n\r\n  return {\r\n    type: 'LOGIN_FAILED',\r\n    error\r\n  }\r\n}\r\n\r\nexport const checkLoginStart = (): CHECK_LOGIN_START => {\r\n\r\n  return {\r\n    type: 'CHECK_LOGIN_START'\r\n  }\r\n}\r\n\r\nexport const logoutStart = (): LOGOUT_START => {\r\n\r\n  return {\r\n    type: 'LOGOUT_START'\r\n  }\r\n}\r\n\r\nexport const logoutComplete = (): LOGOUT_COMPLETE => {\r\n\r\n  return {\r\n    type: 'LOGOUT_COMPLETE'\r\n  }\r\n}\r\n\r\nconst shouldLogin = (state: State): boolean => {\r\n  const { login } = state;\r\n  if (!login) {\r\n    return true\r\n  }\r\n  if (login.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const checkLogin = (params: any): any => async (dispatch: any) => {\r\n\r\n  dispatch(checkLoginStart());\r\n\r\n  let json;\r\n  try {\r\n    json = await API.getCookies();\r\n  } catch (e) {\r\n    dispatch(loginFailed(e.message));\r\n    return;\r\n  }\r\n  const { cookie, session } = json;\r\n\r\n  if (session && session.user_id){\r\n\r\n    let error = (session.last_error || '').trim();\r\n    if (error === 'Не указано сообщение.') error = '';\r\n    dispatch(loginComplete({\r\n      error,\r\n      userid: session.user_id,\r\n      username: session.user_name,\r\n      hashkey: cookie.entr_hash\r\n    }));\r\n  } else\r\n    dispatch(loginFailed(''));\r\n}\r\n\r\nexport const checkLoginIfNeeded = (params: any): any => (dispatch: any, getState: any) => {\r\n  if (shouldLogin(getState())) {\r\n    return dispatch(checkLogin(params))\r\n  }\r\n}\r\n\r\nexport const doLogout = (params: any): any => async (dispatch: any) => {\r\n\r\n  dispatch(logoutStart());\r\n\r\n  try {\r\n    \r\n    API.getLogout();\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  \r\n  dispatch(logoutComplete());\r\n  dispatch(checkLogin());\r\n\r\n}\r\n\r\nexport const doLogin = (params: RequestLogin): any => async (dispatch: any) => {\r\n\r\n  dispatch(loginStart());\r\n\r\n  try {\r\n\r\n    await API.getLogin({\r\n      username: encodeURIComponent(params.username),\r\n      password: encodeURIComponent(params.password)\r\n    })\r\n\r\n    dispatch(checkLogin());\r\n\r\n  } catch (err) {\r\n    console.error('Login error :', err);\r\n    dispatch(loginFailed(err.message));\r\n  }\r\n\r\n}\r\n\r\nexport const doLoginIfNeeded = (params: RequestLogin): any => (dispatch: any, getState: any) => {\r\n  if (shouldLogin(getState())) {\r\n    return dispatch(doLogin(params))\r\n  }\r\n}","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Dropdown } from 'react-bootstrap'\r\n\r\nimport { doLogout } from 'src/actions/login'\r\nimport { domain } from 'src/api'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype LoggedUserProps = {\r\n    userId: string,\r\n    userName: string    \r\n}\r\n\r\ntype Props = LoggedUserProps & DefaultProps;\r\n\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n  <span\r\n    ref={ref} \r\n    style={{ cursor: \"pointer\" }} \r\n    className='link'\r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n  >\r\n    {children}\r\n  </span>\r\n));\r\n\r\nclass LoggedUser extends Component<Props> {\r\n\r\n    onLogout = (event: any) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const { dispatch } = this.props;\r\n        dispatch(doLogout());  \r\n    }\r\n\r\n    onMenuSelect = (eventKey: any, event: Object): any => {\r\n\r\n        if (eventKey === 'exit') {\r\n           this.onLogout(event);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { userId, userName } = this.props;\r\n        return (\r\n            <div style={{float: \"left\"}}>\r\n                <Dropdown id=\"dropdown-custom-menu\" onSelect={this.onMenuSelect}>\r\n                    <span>Привет, </span>\r\n                    <Dropdown.Toggle as={CustomToggle} bsRole=\"toggle\">{userName} ▼</Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item eventKey=\"profile\" href={`${domain}/users.php?id=${userId}`}>Профиль</Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"myTopics\" href={`${window.hash}/index.php?user_id=${userId}`}>Мои темы</Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"options\" href={`${window.hash}/options.php`}>Настройки</Dropdown.Item>\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item eventKey=\"exit\">Выход</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ( connect()(LoggedUser): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FormControl, Button } from 'react-bootstrap'\r\n\r\nimport { doLoginIfNeeded } from 'src/actions/login'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { LoginState } from 'src/reducers/login'\r\nimport type { State } from 'src/reducers'\r\n\r\ntype Props = LoginState & DefaultProps;\r\n\r\nclass LoginForm extends Component<Props> {\r\n\r\n    username: any;\r\n    password: any;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.username = React.createRef();  \r\n        this.password = React.createRef();  \r\n    }\r\n        \r\n    onLogin = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        const { dispatch } = this.props;\r\n\r\n        const params = {\r\n            username: this.username.current.value,\r\n            password: this.password.current.value\r\n        }\r\n        dispatch(doLoginIfNeeded(params));  \r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <form name=\"enterform\" className=\"flex-row\" style={{flexWrap: \"wrap\"}}>\r\n                    <FormControl \r\n                        type=\"text\" \r\n                        placeholder=\"Имя\" \r\n                        ref={this.username} \r\n                        size=\"sm\" \r\n                        style={{marginRight: \"5px\", flex: \"0 1 300px\"}}\r\n                    />\r\n                    <FormControl \r\n                        type=\"password\" \r\n                        placeholder=\"Пароль\" \r\n                        maxLength=\"20\" \r\n                        autoComplete=\"off\" \r\n                        ref={this.password}\r\n                        size=\"sm\" \r\n                        style={{marginRight: \"5px\", flex: \"0 1 300px\"}}\r\n                    />\r\n                    <Button \r\n                        size=\"sm\"\r\n                        variant=\"light\" \r\n                        onClick={this.onLogin}\r\n                    >Войти</Button>\r\n                </form>\r\n                <p style={{margin: \"0px\"}}>Войти можно на сайте <a href=\"https://forum.mista.ru/\">forum.mista.ru</a></p>\r\n                <a rel=\"nofollow\" href=\"https://forum.mista.ru/user_registration.php\">Регистрация</a>\r\n                <span style={{ margin: \"5px\" }}>|</span>\r\n                <a rel=\"nofollow\" href=\"https://forum.mista.ru/remember_password.php\">Забыли пароль?</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): LoginState => {\r\n    return state.login;\r\n}\r\n\r\nexport default ( connect(mapStateToProps)(LoginForm): any );","//@flow\r\nimport React from 'react'\r\n\r\nimport './error.css'\r\n\r\ntype Props = {\r\n  text: ?string\r\n}\r\n\r\nconst ErrorElem = (props: Props): any => {\r\n  if (!props.text)\r\n    return null;\r\n\r\n  return (\r\n    <div className=\"error\" dangerouslySetInnerHTML={{ __html: props.text }}></div>\r\n  )\r\n}\r\n\r\nexport default ErrorElem;","//@flow\r\nimport React, { Fragment, Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport LoggedUser from './logged_user'\r\nimport LoginForm from './login_form'\r\nimport ErrorElem from '../common/error'\r\n\r\nimport { checkLoginIfNeeded } from 'src/actions/login'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { LoginState } from 'src/reducers/login'\r\n\r\ntype Props = LoginState & DefaultProps;\r\n\r\nclass Login extends Component<Props> {\r\n\r\n    componentDidMount() {\r\n        const { dispatch } = this.props;\r\n        dispatch(checkLoginIfNeeded());        \r\n    }\r\n\r\n    render() {\r\n\r\n        const { logged, userid, username, error, dispatch } = this.props;\r\n\r\n        let elem;\r\n        if (logged === true) \r\n            elem = <LoggedUser dispatch={dispatch} userId={userid} userName={username} />\r\n        else if (logged === false)\r\n            elem = <LoginForm /> \r\n        else \r\n            elem = null;   \r\n\r\n        return (\r\n            <Fragment>\r\n                {elem}\r\n                {error && <ErrorElem text={error} />}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): LoginState => {\r\n    \r\n    return state.login;\r\n}\r\n\r\nexport default ( connect(mapStateToProps)(Login): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nimport { fetchSectionsIfNeeded } from 'src/data/sections/actions'\r\n\r\nimport type { ResponseSection, ResponseSections } from 'src/api'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { State } from 'src/reducers'\r\n\r\ntype SectionSelectProps = {\r\n  defaultValue: string,\r\n  selected: string,\r\n  className: string,\r\n  id: string,\r\n  style?: {},\r\n  size: ?string,\r\n  onChange: (e: any, section: ResponseSection | null) => void\r\n}\r\n\r\ntype StateProps = {\r\n  items: ResponseSections,\r\n  tree: {}\r\n}\r\n\r\ntype Props = SectionSelectProps & StateProps & DefaultProps;\r\n\r\nclass SectionSelect extends Component<Props> {\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(fetchSectionsIfNeeded());\r\n  }\r\n\r\n  onSelect: (e: SyntheticEvent<HTMLSelectElement>) => void = (e: SyntheticEvent<HTMLSelectElement>) => {\r\n\r\n    const { items, onChange } = this.props;\r\n\r\n    if (onChange) {\r\n      const shortn = e.currentTarget.value;\r\n      const arr = items.filter(val => val.shortn === shortn);\r\n      if (arr.length > 0)\r\n        onChange(e, arr[0]);\r\n      else\r\n        onChange(e, null);\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { id, tree, defaultValue, selected, style, size } = this.props;\r\n\r\n    let sectionsElem = [];\r\n    for (let forum in tree) {\r\n\r\n      let group =\r\n        <optgroup key={forum} label={forum}>\r\n          {tree[forum].map((item, i) => (\r\n            <option key={item.id} value={item.shortn}>\r\n              {item.fulln}\r\n            </option>\r\n          ))}\r\n        </optgroup>\r\n\r\n      sectionsElem.push(group);\r\n    }\r\n\r\n    return (\r\n      <Form.Control as=\"select\"\r\n        onChange={this.onSelect}\r\n        value={selected}\r\n        style={style}\r\n        className='input'\r\n        size={size}\r\n        id={id}\r\n      >\r\n        <option value=\"\">{defaultValue}</option>\r\n        {sectionsElem}\r\n      </Form.Control>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  const { items, tree } = state.sections;\r\n\r\n  return {\r\n    items,\r\n    tree\r\n  }\r\n}\r\n\r\nexport { SectionSelect };\r\nexport default (connect(mapStateToProps)(SectionSelect): any );","//@flow\r\nimport React, { Component, useEffect } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport queryString from 'query-string'\r\n\r\nimport Login from '../login'\r\nimport Sections from './sections'\r\nimport { fetchSectionsIfNeeded } from 'src/data/sections/actions'\r\n\r\nconst Header = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate()\r\n  const location = useLocation();\r\n  const params = queryString.parse(location.search);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSectionsIfNeeded());\r\n  }, [dispatch]);  \r\n\r\n  const onSectionChange = (e, value) => {\r\n    if (value)\r\n      navigate(`/index.php?section=${value.shortn}`);\r\n    else\r\n      navigate(`/`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div className=\"user-td\">\r\n        <Login />\r\n      </div>\r\n      <div className=\"section-td\" style={{ marginLeft: \"auto\" }}>\r\n        <Sections\r\n          defaultValue=\"--Все секции--\"\r\n          selected={params.section || \"\"}\r\n          onChange={onSectionChange}\r\n          size=\"sm\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default connect()(Header);","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { getMaxPage } from 'src/utils'\r\n\r\n\r\nconst Pages = (props) => {\r\n\r\n    const { answ, topicId } = props;\r\n\r\n    let pages = [];\r\n    if (answ > 100) {\r\n        let maxPage = getMaxPage(answ);\r\n        for (let i = 1; i <= maxPage; i++) {\r\n            let href = `/topic.php?id=${topicId}&page=${i}`;\r\n            let text;\r\n            if (i > 3 && i < maxPage)\r\n                text = '•';\r\n            else\r\n                text = i;\r\n            pages.push(<Link key={i}  className=\"agh\" style={{ margin: \"3px\" }} to={href}>{text}</Link>);\r\n        }\r\n    }\r\n\r\n    if (answ > 20) {\r\n        let href = `/topic.php?id=${topicId}&page=last20#F`;\r\n        pages.push(<Link key=\"last20\" className=\"agh\" style={{ margin: \"3px\" }} to={href}>»</Link>);\r\n    }\r\n\r\n    return (\r\n        <span className=\"topic-pages\">\r\n            {pages}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Pages;","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport type { ResponseTopicsListItem } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\n\r\nimport type { LoginState } from 'src/reducers/login'\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { TopicPreviewState } from 'src/reducers/topic_preview'\r\n\r\nimport Pages from './pages';\r\n\r\ntype TopicNameCellProps = {\r\n    data: ResponseTopicsListItem,\r\n    preview: ?number\r\n};\r\n\r\ntype StateProps = {\r\n    login: LoginState,\r\n    topicPreview: TopicPreviewState\r\n};\r\n\r\ntype Props = TopicNameCellProps & StateProps & DefaultProps;\r\n\r\nclass TopicNameCell extends Component<Props> {\r\n\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { data, login } = this.props;\r\n\r\n        let href = `/topic.php?id=${data.id}`;\r\n        let classes = classNames('agb', 'mr5', {\r\n            'bold': data.answ >= 100,\r\n            'mytopics': data.user0 === login.username\r\n        });\r\n\r\n        let isVoting;\r\n        if (data.is_voting === 1) {\r\n            isVoting = <span className=\"agh separator\">[±]</span>\r\n        }\r\n        \r\n        let sectionHref = `/index.php?section=${data.sect2}`;\r\n        let section;\r\n\r\n        if (data.sect1) {\r\n            section = (\r\n            <span className=\"topic-section\">\r\n                <span className=\"agh\" style={{margin: \"0px 5px\"}}>/</span>\r\n                <Link key=\"1\" rel=\"nofollow\" className=\"agh\" to={sectionHref} >{data.sect1}</Link>\r\n            </span>    \r\n            )\r\n        }\r\n\r\n        let closed;\r\n        let down;\r\n        let text = data.text;\r\n        if (data.closed)\r\n            closed = <span className=\"agh\">Ø</span>\r\n\r\n        if (data.down === 1)\r\n            down = <span className=\"agh\">↓</span>\r\n\r\n        if (data.sect2 === 'job' && text.substr(0, 3) !== 'JOB')\r\n            text = 'JOB: ' + text;\r\n\r\n        else if (data.forum === 'life' && text.substr(0, 3) !== 'OFF')\r\n            text = 'OFF: ' + text;\r\n\r\n        else if (data.sect2 === 'v7' && text.substr(0, 2) !== 'v7')\r\n            text = 'v7: ' + text;\r\n\r\n        return (\r\n            <div className=\"cell-title\">\r\n                <Link to={href} className={classes} dangerouslySetInnerHTML={{ __html: text }} style={{overflowWrap: \"anywhere\"}}></Link>\r\n                {isVoting}\r\n                <Pages answ={data.answ} topicId={data.id} />\r\n                {closed}\r\n                {down}\r\n                {section}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n    return {\r\n        login: state.login,\r\n        topicPreview: state.topicPreview\r\n    }\r\n}\r\n\r\nexport default ( connect(mapStateToProps)(TopicNameCell): any );","//@flow\r\nimport type { State } from '../reducers'\r\n\r\nexport type TooltipKeys = {\r\n  type: 'TOPIC' | 'TOPIC_PREVIEW',\r\n  topicId: string,\r\n  number: number\r\n}\r\n\r\nexport type Coords = {\r\n  x: number,\r\n  y: number\r\n}\r\n\r\nexport type TooltipItem = {\r\n  keys: TooltipKeys,\r\n  coords: Coords\r\n}\r\n\r\nexport type CREATE_TOOLTIP = {\r\n  type: 'CREATE_TOOLTIP',\r\n} & TooltipItem\r\n\r\nexport type CLEAR_TOOLTIPS = {\r\n  type: 'CLEAR_TOOLTIPS',\r\n}\r\n\r\nexport type CLOSE_TOOLTIP = {\r\n  type: 'CLOSE_TOOLTIP',\r\n  keys: TooltipKeys\r\n}\r\n\r\nexport type TooltipsAction = CREATE_TOOLTIP | CLOSE_TOOLTIP | CLEAR_TOOLTIPS;\r\n\r\nexport const showTooltip = (keys: TooltipKeys, coords: Coords): any => async (dispatch: any) => {\r\n\r\n  if (keys.type === 'TOPIC' || keys.type === 'TOPIC_PREVIEW') {\r\n\r\n    const action: CREATE_TOOLTIP = {\r\n      type: 'CREATE_TOOLTIP',\r\n      keys,\r\n      coords\r\n    }\r\n    dispatch(action);\r\n\r\n  }\r\n}\r\n\r\nexport const closeTooltip = (keys: TooltipKeys): any => (dispatch: any) => {\r\n  dispatch({\r\n    type: 'CLOSE_TOOLTIP',\r\n    keys\r\n  });\r\n}\r\n\r\nexport const clearTooltipsIfNeeded = (): any => (dispatch: any, getState: any) => {\r\n  const state: State = getState();\r\n  if (state.tooltips.items.length > 0) {\r\n\r\n    const action: CLEAR_TOOLTIPS = {\r\n      type: 'CLEAR_TOOLTIPS'\r\n    };\r\n\r\n    dispatch(action);\r\n  }\r\n}","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { showTooltip } from '../../actions/tooltips'\r\n\r\nimport { getMaxPage, childrenToText } from 'src/utils';\r\nimport { getTopicInfo } from 'src/api'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { ResponseInfo, ResponseMessages } from 'src/api'\r\n\r\ntype LinkToPostProps = {\r\n  topicId: string,\r\n  number: number,\r\n  isPreview: boolean,\r\n  style: {}\r\n}\r\n\r\ntype StateProps = {\r\n  info: ResponseInfo,\r\n  items: ResponseMessages,\r\n  tooltipDelay: string\r\n}\r\n\r\ntype Props = LinkToPostProps & StateProps & DefaultProps;\r\n\r\nclass LinkToPost extends Component<Props, { text: string }> {\r\n\r\n  timer;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { children, number } = this.props;\r\n    if (children)\r\n      this.state = { text: childrenToText(children).join('') };\r\n    else\r\n      this.state = { text: String(number) };\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(props) {\r\n    if (!props.children) {\r\n      this.setState({ text: String(props.number) });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    if (this.state.text.startsWith(\"http\")) {\r\n\r\n      const { topicId } = this.props;\r\n      getTopicInfo({ id: topicId })\r\n        .then(response => {\r\n          this.setState({\r\n            text: response.text\r\n          })\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  onMouseOver = (event) => {\r\n    event.persist();\r\n    const { tooltipDelay } = this.props;\r\n    this.timer = setTimeout(() => this.showToolTip(event), +tooltipDelay);\r\n  }\r\n\r\n  onClick = (event) => {\r\n    event.stopPropagation();\r\n    clearTimeout(this.timer);\r\n    this.showToolTip(event);\r\n  }\r\n\r\n  onMouseOut = (event) => {\r\n    clearTimeout(this.timer);\r\n  }\r\n\r\n  showToolTip = (e) => {\r\n    const { topicId, number, dispatch, isPreview } = this.props;\r\n\r\n    const coords = {\r\n      x: e.pageX,\r\n      y: e.pageY - 50 // remove navbar margin-top\r\n    }\r\n\r\n    const keys = {\r\n      type: isPreview ? 'TOPIC_PREVIEW' : 'TOPIC',\r\n      topicId,\r\n      number\r\n    }\r\n\r\n    dispatch(showTooltip(\r\n      keys,\r\n      coords\r\n    ));\r\n  }\r\n\r\n  render() {\r\n\r\n    const { topicId, number, style, info } = this.props;\r\n    const page = getMaxPage(number);\r\n\r\n    let pageParam = '';\r\n    if (page > 1)\r\n      pageParam = `&page=${page}`;\r\n\r\n    let a;\r\n    if (topicId === info.id || !isNaN(this.state.text))\r\n      a = (\r\n        <span\r\n          onMouseOver={this.onMouseOver}\r\n          onMouseOut={this.onMouseOut}\r\n          onClick={this.onClick}\r\n          className='link'\r\n          style={{ ...style }}\r\n        >{this.state.text}</span>\r\n      )\r\n    else\r\n      a = (\r\n        <span>\r\n          <a href={`${window.hash}/topic.php?id=${topicId}${pageParam}#${number}`}\r\n            style={{ ...style }}\r\n          >{this.state.text}</a>{' '}\r\n                    (<span onMouseOver={this.onMouseOver}\r\n            onMouseOut={this.onMouseOut}\r\n            onClick={this.onClick}\r\n            className='link'\r\n          >{number}</span>)\r\n        </span>\r\n      )\r\n\r\n    return a;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  const {\r\n    items, info\r\n  } = state.topic;\r\n\r\n  return {\r\n    items,\r\n    info,\r\n    tooltipDelay: state.options.items['tooltipDelay']\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(LinkToPost): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype PreviewLinkProps = {\r\n    topicId: string,\r\n    expanded: boolean\r\n};\r\n\r\ntype Props = PreviewLinkProps & DefaultProps;\r\n\r\nclass PreviewLink extends Component<Props> {\r\n\r\n    onClick = () => {\r\n        const { topicId, dispatch } = this.props;\r\n\r\n        dispatch({\r\n            type: 'TOGGLE_PREVIEW',\r\n            topicId \r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { expanded } = this.props;\r\n        let text;\r\n        if (expanded)\r\n            text = '-'\r\n        else\r\n            text = '+'    \r\n\r\n        return (\r\n            <div className=\"cell-preview-link\" onClick={this.onClick}>\r\n                <span>{text}</span>\r\n            </div>\r\n        )        \r\n    }\r\n\r\n}\r\n\r\nexport default ( connect()(PreviewLink): any );","//@flow\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport dateFormat from 'dateformat'\r\n\r\nimport TopicNameCell from './topic_name_cell';\r\nimport LinkToPost from 'src/components/extensions/link_to_post'\r\nimport PreviewLink from './preview_link'\r\n\r\nimport { today } from 'src/utils'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { TopicsListItem } from 'src/data/topicslist/reducer'\r\nimport type { LoginState } from 'src/reducers/login'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype RowProps = {\r\n  columns: any,\r\n  data: TopicsListItem\r\n}\r\n\r\ntype StateProps = {\r\n  login: LoginState,\r\n  showTooltipOnTopicsList: string\r\n}\r\n\r\ntype Props = RowProps & StateProps & DefaultProps;\r\n\r\nconst Row = (props: Props) => {\r\n\r\n  const { data, showTooltipOnTopicsList } = props;\r\n  let time = new Date(+data.utime * 1000);\r\n  if (today(time)) {\r\n    time = dateFormat(time, 'HH:MM')\r\n  } else {\r\n    time = dateFormat(time, 'dd.mm.yy');\r\n  }\r\n  return (\r\n    <div className=\"topics-list-row\">\r\n      {/*{cells}*/}\r\n      <div className=\"cell-forum\">\r\n        {data.forum}\r\n      </div>\r\n      <div className=\"cell-section\">\r\n        {data.sect1}\r\n      </div>\r\n      <div className=\"cell-answ\">\r\n        <i className=\"fa fa-comments-o\" aria-hidden=\"true\" style={{marginRight: \"3px\"}}></i>\r\n        {showTooltipOnTopicsList === 'true' ?\r\n          <LinkToPost topicId={data.id} number={data.answ} style={{ color: \"inherit\" }} isPreview />\r\n          :\r\n          data.answ\r\n        }\r\n      </div>\r\n      <PreviewLink topicId={data.id} expanded={data.showPreview} />\r\n      <TopicNameCell data={data} />\r\n      <div className=\"cell-author\">\r\n        <i aria-hidden=\"true\" className=\"fa fa-user-circle\" style={{marginRight: \"3px\"}}></i>\r\n        {data.user0}\r\n      </div>\r\n      <div className=\"cell-lastuser\">\r\n        <div style={{ display: \"flex\" }}>\r\n          <span className=\"cell-lastuser-time\">{time}</span>\r\n          <span className=\"cell-lastuser-user\">{data.user}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"cell-last20\">\r\n        <Link to={`/topic.php?id=${String(data.id)}&page=last20`} style={{ color: \"inherit\", display: \"block\", width: \"100%\", textAlign: \"center\" }}>{'>'}</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    login: state.login,\r\n    showTooltipOnTopicsList: state.options.items.showTooltipOnTopicsList\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(Row): any );","//@flow\r\nimport React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\n\r\nimport { paramsToString } from 'src/api'\r\nimport './pages.css'\r\n\r\ntype Props = {\r\n  locationParams: { page?: string },\r\n  baseUrl: string,\r\n  maxPage: number,\r\n  last20?: boolean\r\n}\r\n\r\nconst Pages = (props: Props): any => {\r\n\r\n  const { locationParams, baseUrl, maxPage, last20 } = props;\r\n  let currentPage;\r\n  if (!locationParams.page)\r\n    currentPage = 1;\r\n  else if (locationParams.page === \"last20\")\r\n    currentPage = \"last20\";\r\n  else\r\n    currentPage = parseInt(locationParams.page, 10) || 1;\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= maxPage; i++) {\r\n    let params = { ...locationParams, page: i };\r\n    let href = `${window.hash}/${baseUrl}` + paramsToString('?', params);\r\n\r\n    pages.push(<Pagination.Item active={currentPage === i} key={i} href={href}>{i}</Pagination.Item>);\r\n  }\r\n\r\n  if (last20 === true) {\r\n    let params = { ...locationParams, page: \"last20\" };\r\n    let href = `${window.hash}/${baseUrl}` + paramsToString('?', params);\r\n    pages.push(<Pagination.Item active={currentPage === \"last20\"} key=\"last20\" href={href}>»</Pagination.Item>);\r\n  }\r\n\r\n  return (\r\n    <Pagination style={{ margin: \"0px\" }}>\r\n      {pages}\r\n    </Pagination>\r\n  )\r\n\r\n}\r\n\r\nexport default Pages;","//@flow\r\nimport * as API from '../api'\r\nimport type { RequestNewTopic } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\nimport type { ResponseSection } from 'src/api'\r\n\r\nexport type postNewTopicParams = {\r\n  subject: string,\r\n  text: string,\r\n  section: number,\r\n  forum: string,\r\n  isVoting: boolean,\r\n  votingItems?: Array<string>,\r\n  onSuccess?: () => void\r\n};\r\n\r\nexport type POST_NEW_TOPIC_START = {\r\n  type: 'POST_NEW_TOPIC_START'\r\n}\r\n\r\nexport type POST_NEW_TOPIC_COMPLETE = {\r\n  type: 'POST_NEW_TOPIC_COMPLETE'\r\n}\r\n\r\nexport type POST_NEW_TOPIC_ERROR = {\r\n  type: 'POST_NEW_TOPIC_ERROR',\r\n  error: string\r\n}\r\n\r\nexport type NEW_TOPIC_TEXT = {\r\n  type: 'NEW_TOPIC_TEXT',\r\n  text: string\r\n}\r\n\r\nexport type NEW_TOPIC_SUBJECT = {\r\n  type: 'NEW_TOPIC_SUBJECT',\r\n  text: string\r\n}\r\n\r\nexport type NEW_TOPIC_CLEAR = {\r\n  type: 'NEW_TOPIC_CLEAR'\r\n}\r\n\r\nexport type NEW_TOPIC_SHOW_VOTING = {\r\n  type: 'SHOW_VOTING',\r\n  data: boolean\r\n}\r\n\r\nexport type NEW_TOPIC_SECTION = {\r\n  type: 'NEW_TOPIC_SECTION',\r\n  section: ResponseSection\r\n}\r\n\r\nexport type NewTopicAction = POST_NEW_TOPIC_START | POST_NEW_TOPIC_COMPLETE | POST_NEW_TOPIC_ERROR |\r\n  NEW_TOPIC_CLEAR | NEW_TOPIC_TEXT | NEW_TOPIC_SUBJECT | NEW_TOPIC_SHOW_VOTING | NEW_TOPIC_SECTION;\r\n\r\nexport const shouldPostNewTopic = (state: State): boolean => {\r\n  const newTopic = state.newTopic;\r\n  if (!newTopic) {\r\n    return false\r\n  }\r\n  if (newTopic.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const postNewTopicIfNeeded = (params: postNewTopicParams): any => (dispatch: any, getState: any) => {\r\n  if (shouldPostNewTopic(getState())) {\r\n    return dispatch(postNewTopic(params));\r\n  }\r\n}\r\n\r\nconst postNewTopic = (params: postNewTopicParams) => async (dispatch: any) => {\r\n\r\n  dispatch({\r\n    type: 'POST_NEW_TOPIC_START'\r\n  });\r\n\r\n  let fetchParams: RequestNewTopic = {\r\n    message_text: encodeURIComponent(params.text),\r\n    topic_text: encodeURIComponent(params.subject),\r\n    target_section: String(params.section),\r\n    target_forum: params.forum.toLowerCase(),\r\n    action: 'new',\r\n    rnd: Math.round(Math.random() * 10000000000),\r\n    voting: params.isVoting ? 1 : 0\r\n  };\r\n\r\n  if (params.votingItems)\r\n    for (let i = 0; i < params.votingItems.length; i++) {\r\n      fetchParams[`section${i + 1}`] = params.votingItems[i];\r\n    }\r\n\r\n  await API.postNewTopic(fetchParams);\r\n\r\n  dispatch({\r\n    type: 'POST_NEW_TOPIC_COMPLETE'\r\n  });\r\n\r\n  if (params.onSuccess)\r\n    params.onSuccess();\r\n}","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FormControl, Button, ButtonGroup, Form } from 'react-bootstrap'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\n\r\nimport './text_editor.css'\r\n\r\ntype TextEditorProps = {\r\n  placeholder: string,\r\n  showVoting: boolean,\r\n  isVoting: boolean,\r\n  text: string,\r\n  isFetching: boolean,\r\n  formName: string,\r\n  onChange?: (e: any, text: string) => void,\r\n}\r\n\r\ntype Props = TextEditorProps & DefaultProps;\r\n\r\nclass TextEditor extends Component<Props> {\r\n\r\n  textArea;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.textArea = React.createRef();\r\n  }\r\n\r\n  onButtonCode1c = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    var openTag = '[1C]\\n';\r\n    var closeTag = '\\n[/1C]';\r\n\r\n    var textArea: any = this.textArea.current;\r\n\r\n    var start = textArea.selectionStart;\r\n    var end = textArea.selectionEnd;\r\n\r\n    var oldText = textArea.value;\r\n    var len = oldText.length;\r\n    var selectedText = oldText.substring(start, end);\r\n    var replacement = openTag + selectedText + closeTag;\r\n    var newText = oldText.substring(0, start) + replacement + oldText.substring(end, len);\r\n\r\n    const { dispatch, formName } = this.props;\r\n    dispatch({\r\n      type: formName + '_TEXT',\r\n      text: newText\r\n    })\r\n\r\n  }\r\n\r\n  onVotingChange = (e: SyntheticEvent<HTMLInputElement>) => {\r\n    const { dispatch } = this.props;\r\n    dispatch({\r\n      type: 'SHOW_VOTING',\r\n      data: e.currentTarget.checked\r\n    })\r\n  }\r\n\r\n  onChange = (e: SyntheticEvent<HTMLTextAreaElement>) => {\r\n    const { dispatch, formName } = this.props;\r\n    dispatch({\r\n      type: formName + '_TEXT',\r\n      text: e.currentTarget.value\r\n    })\r\n  }\r\n\r\n  onKeyPress = (e: SyntheticKeyboardEvent<HTMLTextAreaElement>) => {\r\n\r\n    if (e.key === 'Enter' && e.ctrlKey) {\r\n      let parent = e.currentTarget.parentElement;\r\n      while (parent && parent.tagName.toUpperCase() !== \"FORM\") {\r\n        parent = parent.parentElement;\r\n      }\r\n      if (parent)\r\n        parent.dispatchEvent(new Event(\"submit\", { cancelable: true, bubbles: true }));\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { placeholder, showVoting, isVoting, isFetching, text } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <FormControl\r\n          as=\"textarea\"\r\n          placeholder={placeholder}\r\n          cols=\"70\" rows=\"3\"\r\n          value={text}\r\n          onChange={this.onChange}\r\n          onKeyPress={this.onKeyPress}\r\n          ref={this.textArea}\r\n          className=\"text-editor input\"\r\n        />\r\n        <div className=\"flex-row\">\r\n          <ButtonGroup>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"light\"\r\n              onClick={this.onButtonCode1c}\r\n              style={{ marginRight: \"5px\" }}\r\n              className='button'\r\n            >Код 1С</Button>\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"light\"\r\n              disabled={isFetching}\r\n              type=\"submit\"\r\n              className='button'\r\n            >\r\n              {isFetching ? 'Отправляется' : 'Отправить'}\r\n            </Button>\r\n          </ButtonGroup>\r\n          {showVoting &&\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              checked={isVoting}\r\n              onChange={this.onVotingChange}\r\n              label=\"Голосование\"\r\n              style={{ margin: \"auto 0px auto auto\" }} />\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default (connect()(TextEditor): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Form from 'react-bootstrap/Form'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport { FormGroup } from 'react-bootstrap'\r\n\r\nimport type { ResponseSection } from 'src/api'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { State } from 'src/reducers'\r\nimport type { SectionsState } from 'src/data/sections/reducer'\r\nimport type { NewTopicState } from 'src/reducers/new_topic'\r\n\r\nimport { postNewTopicIfNeeded } from 'src/actions/new_topic'\r\nimport type { NewTopicAction, postNewTopicParams } from 'src/actions/new_topic'\r\n\r\nimport SectionSelect from './sections'\r\nimport TextEditor from '../common/text_editor'\r\nimport ErrorElem from '../common/error'\r\n\r\nimport './new_topic.css'\r\n\r\ntype StateProps = {\r\n  sections: SectionsState,\r\n  newTopic: NewTopicState,\r\n}\r\n\r\ntype NewTopicProps = {\r\n  onSubmitSuccess?: () => void\r\n};\r\n\r\ntype Props = NewTopicProps & StateProps & DefaultProps;\r\n\r\nclass NewTopic extends Component<Props> {\r\n\r\n  currentSection: ?ResponseSection;\r\n\r\n  onSectionChange = (e: any, section: ResponseSection) => {\r\n    const { dispatch } = this.props;\r\n    this.currentSection = section;\r\n\r\n    const action: NewTopicAction = {\r\n      type: 'NEW_TOPIC_SECTION',\r\n      section\r\n    };\r\n\r\n    dispatch(action);\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n    const { dispatch, newTopic } = this.props;\r\n\r\n    let action: NewTopicAction;\r\n    if (!this.currentSection) {\r\n      action = {\r\n        type: 'POST_NEW_TOPIC_ERROR',\r\n        error: 'Не выбрана секция'\r\n      };\r\n      dispatch(action);\r\n      return;\r\n    }\r\n\r\n    let subject = newTopic.subject;\r\n    if (!subject) {\r\n      action = {\r\n        type: 'POST_NEW_TOPIC_ERROR',\r\n        error: 'Не указана тема'\r\n      };\r\n      dispatch(action);\r\n      return;\r\n    }\r\n\r\n    if (!newTopic.text) {\r\n      action = {\r\n        type: 'POST_NEW_TOPIC_ERROR',\r\n        error: 'Не указано сообщение'\r\n      };\r\n      dispatch(action);\r\n      return;\r\n\r\n    }\r\n\r\n    let params: postNewTopicParams = {\r\n      subject,\r\n      text: newTopic.text,\r\n      section: this.currentSection.id,\r\n      forum: this.currentSection.forum,\r\n      isVoting: newTopic.isVoting,\r\n      votingItems: [],\r\n      onSuccess: this.onSubmitSuccess\r\n    };\r\n\r\n    if (newTopic.isVoting) {\r\n      params.votingItems = [];\r\n      for (let i = 1; i <= 10; i++) {\r\n        let val = this.refs[`vote${i}`].value;\r\n        if (val) {\r\n          params.votingItems.push(val);\r\n        }\r\n      }\r\n    }\r\n\r\n    dispatch(postNewTopicIfNeeded(params));\r\n  }\r\n\r\n  onSubjectChange = (e) => {\r\n\r\n    const { dispatch } = this.props;\r\n    dispatch({\r\n      type: 'NEW_TOPIC_SUBJECT',\r\n      text: e.target.value\r\n    });\r\n\r\n  }\r\n\r\n\r\n  onSubmitSuccess = () => {\r\n\r\n    const { dispatch } = this.props;\r\n    dispatch({\r\n      type: 'NEW_TOPIC_CLEAR',\r\n      text: ''\r\n    });\r\n\r\n    if (this.props.onSubmitSuccess) {\r\n      this.props.onSubmitSuccess();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { sections, newTopic } = this.props;\r\n\r\n    let groupsElem = [];\r\n    for (let forum in sections.tree) {\r\n      groupsElem.push(<option key={forum} value={forum.toLowerCase()}>{forum}</option>);\r\n    }\r\n\r\n    let votingOptions = [];\r\n\r\n    if (newTopic.isVoting) {\r\n      votingOptions.push(<div key=\"p\">Варианты:</div>);\r\n      for (let i = 1; i <= 10; i++) {\r\n        votingOptions.push(\r\n          <InputGroup key={i} size=\"sm\" style={{ marginBottom: \"3px\", width: \"100%\" }}>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text\r\n                style={{ width: \"40px\" }} className='input'>\r\n                {`${i}.`}\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control\r\n              type=\"text\"\r\n              maxLength=\"50\"\r\n              ref={`vote${i}`}\r\n              className='input'\r\n            />\r\n          </InputGroup>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <form className=\"new-topic-container\" onSubmit={this.onSubmit}>\r\n        <div id=\"newtopic_form\" className=\"new-topic-text\">\r\n          <div><b>Новая тема:</b></div>\r\n          {newTopic.error && <ErrorElem text={newTopic.error} />}\r\n          <div className=\"flex-row\" style={{ marginBottom: \"3px\" }}>\r\n            <Form.Control as=\"select\"\r\n              size=\"sm\"\r\n              readOnly={true}\r\n              value={newTopic.forum}\r\n              style={{ flex: \"0 1 90px\" }}\r\n              className='input'\r\n            >\r\n              {groupsElem}\r\n            </Form.Control>\r\n            <SectionSelect\r\n              defaultValue=\"Секция\"\r\n              id=\"target_section\"\r\n              size=\"sm\"\r\n              style={{ flex: \"1 1 auto\" }}\r\n              onChange={this.onSectionChange}\r\n            />\r\n          </div>\r\n          <Form.Control\r\n            type=\"text\"\r\n            size=\"sm\"\r\n            value={newTopic.subject}\r\n            onChange={this.onSubjectChange}\r\n            style={{ marginBottom: \"3px\" }}\r\n            className='input'\r\n            placeholder=\"Тема\"\r\n            maxLength=\"90\"\r\n          />\r\n          <TextEditor\r\n            placeholder=\"Сообщение\"\r\n            showVoting={true}\r\n            isVoting={newTopic.isVoting}\r\n            text={newTopic.text}\r\n            isFetching={newTopic.isFetching}\r\n            formName=\"NEW_TOPIC\"\r\n          />\r\n        </div>\r\n        <FormGroup className=\"new-topic-voting\">\r\n          {votingOptions}\r\n        </FormGroup>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    sections: state.sections,\r\n    newTopic: state.newTopic\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(NewTopic): any );","\r\nfunction highlight(text) {\r\n\r\n  const keywords = new Set(\r\n    \"|if|если|then|тогда|elsif|иначеесли|else|иначе|endif|конецесли|do|цикл|for|для|to|по|each|каждого|in|из|while|пока|enddo|конеццикла|procedure|процедура|endprocedure|конецпроцедуры|function|функция|endfunction|конецфункции|var|перем|export|экспорт|goto|перейти|and|и|or|или|not|не|val|знач|break|прервать|continue|продолжить|return|возврат|try|попытка|except|исключение|endtry|конецпопытки|raise|вызватьисключение|false|ложь|true|истина|undefined|неопределено|null|new|новый|execute|выполнить|\"\r\n      .split('|')\r\n  );\r\n\r\n  const Спецсиволы = new Set(\"():;.,=+-*<>?[]%/\".split(''));\r\n  const НачалоТега = \"<span class=\";\r\n  const КонецТега = \"</span>\";\r\n\r\n  const мЦветФона = \"bg>\";\r\n  const мЦветЧисла = \"num>\";\r\n  const мЦветСтроки = \"str>\";\r\n  //const мЦветПараметра = \"par>\";\r\n  const мЦветКомментария = \"com>\";\r\n  const мЦветСпецСимвола = \"sp>\";\r\n  const мЦветПрепроцессора = \"pr>\";\r\n  const мЦветКлючевогоСлова1 = \"key>\";\r\n\r\n\r\n  let СтрокаРезультат;\r\n  let УстановленЦвет;\r\n  let ПоследнийЦвет;\r\n\r\n  let ВСтроке = false;\r\n  let Токен = \"\";\r\n\r\n  function ПустаяСтрока(Строка) {\r\n    return Строка.trim() === '';\r\n  }\r\n\r\n  function Сред(Строка, Нач, Длина) {\r\n    return Строка.substr(Нач - 1, Длина);\r\n  }\r\n\r\n  function Прав(Строка, Длина) {\r\n    return Строка.substr(-Длина);\r\n  }\r\n\r\n  function isKeyword(token) {\r\n    return keywords.has(token.toLowerCase().trim());\r\n  }\r\n\r\n  function ДобавитьЧастьСтроки1С(Часть, Цвет) {\r\n\r\n    if (Часть === \" \" || ПоследнийЦвет === Цвет) {\r\n      СтрокаРезультат = СтрокаРезультат + Часть;\r\n    } else {\r\n      if (УстановленЦвет) {\r\n        СтрокаРезультат = СтрокаРезультат + КонецТега;\r\n        УстановленЦвет = false;\r\n      };\r\n\r\n      СтрокаРезультат = СтрокаРезультат + НачалоТега + Цвет + Часть;\r\n      УстановленЦвет = true;\r\n      ПоследнийЦвет = Цвет;\r\n    };\r\n  }\r\n\r\n  function РазукраситьСтроку(СтрокаКода) {\r\n\r\n    //  https://infostart.ru/profile/34707/public/\r\n    let ВСтрокеСкобка = false;\r\n    let ВСтрокеТильда = false;\r\n    let НачалоСтроки = 1;\r\n    let ТокенДоТочки = true;\r\n    // Заменяем 8 символьную табуляцию на 4 символьную пробелами\r\n\r\n    // Последовательно перебираются все символы строки кода\r\n    let Поз = 1;\r\n    for (Поз = 1; Поз <= СтрокаКода.length; Поз++) {\r\n\r\n      let ТекущийСимвол = СтрокаКода.charAt(Поз - 1);\r\n      if (ВСтроке) {\r\n\r\n        // Операции встрече символа \"кавычка\"\r\n        if (ТекущийСимвол === '\"') {\r\n          // Нашли парную кавычку - окрашиваем как строку\r\n          ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\r\n          ВСтроке = false;\r\n          Токен = \"\";\r\n          ТокенДоТочки = true;\r\n        } else {\r\n          Токен = Токен + ТекущийСимвол;\r\n        };\r\n\r\n      } else if (ВСтрокеСкобка) {\r\n\r\n        // Операции встрече символа \"кавычка\" литерал\r\n        if (ТекущийСимвол === \"'\") {\r\n          // Нашли парную скобку - окрашиваем как комментарий\r\n          ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\r\n          ВСтрокеСкобка = false;\r\n          Токен = \"\";\r\n          ТокенДоТочки = true;\r\n        } else {\r\n          Токен = Токен + ТекущийСимвол;\r\n        };\r\n\r\n      } else if (ТекущийСимвол === \" \") {\r\n        // Операции при встрече символа табуляции или пробела\r\n        if (!ПустаяСтрока(Токен)) {\r\n          // Пробел после токена, значит\r\n          // токен - ключевое слово...\r\n          if (ВСтрокеТильда) {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветСтроки);\r\n            ВСтрокеТильда = false;\r\n\r\n          } else if (isKeyword(Токен.trim())) {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветКлючевогоСлова1);\r\n\r\n          } else if (!isNaN(parseInt(Токен, 10))) {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветЧисла);\r\n\r\n          } else {\r\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветФона);\r\n          };\r\n          Токен = \"\";\r\n        } else {\r\n          СтрокаРезультат = СтрокаРезультат + \" \";\r\n        };\r\n        ТокенДоТочки = true;\r\n\r\n      } else if (Спецсиволы.has(ТекущийСимвол)) {\r\n\r\n        // Встретился один из специальных символов\r\n        if (!ПустаяСтрока(Токен)) {\r\n          // Чтобы избежать окраски метода объекта с совпадающим именем\r\n          // с одним из ключевых слов, проверяем текущий символ на \".\"\r\n          if (ВСтрокеТильда) {\r\n\r\n            ДобавитьЧастьСтроки1С(Токен, мЦветСтроки);\r\n            ВСтрокеТильда = false;\r\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\r\n\r\n          } else if (ТокенДоТочки && isKeyword(Токен)) {\r\n            ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\r\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\r\n\r\n          } else {\r\n            // Не ключевое слово - значит число\r\n            if (!isNaN(parseInt(Токен, 10))) {\r\n              ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\r\n\r\n            } else {\r\n              ДобавитьЧастьСтроки1С(Токен, мЦветФона);\r\n            };\r\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\r\n          };\r\n          Токен = \"\";\r\n        };\r\n        // Один из специальных символов\r\n        if (ТекущийСимвол === \".\" && ПоследнийЦвет === мЦветЧисла) {\r\n          // Продолжение числа\r\n          ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветЧисла);\r\n          continue;\r\n\r\n        } else if (ТекущийСимвол === \"=\" && Сред(СтрокаКода, Поз - 1, 1) === \"<\") {\r\n          // Знак \"меньше или равно\" - вторая ошибка движка Инфостарт\r\n          ПоследнийЦвет = undefined;\r\n\r\n        } else if (ТекущийСимвол === \"/\" && Сред(СтрокаКода, Поз + 1, 1) === \"/\") {\r\n          // Проверяется на комментарий\r\n          ДобавитьЧастьСтроки1С(Прав(СтрокаКода, СтрокаКода.length - Поз + 1), мЦветКомментария);\r\n          return;\r\n        };\r\n        ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветСпецСимвола);\r\n\r\n      } else if (ТекущийСимвол === '\"' || ТекущийСимвол === \"|\") {\r\n\r\n        // Операции встрече символа \"кавычка\"\r\n        // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\r\n        if (ПустаяСтрока(Токен)) {\r\n          НачалоСтроки = Поз;\r\n          ВСтроке = true;\r\n        } else {\r\n          // Ошибка синтаксиса\r\n          ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\r\n          Токен = \"\";\r\n        };\r\n        ТокенДоТочки = true;\r\n\r\n      } else if (ТекущийСимвол === \"'\") {\r\n\r\n        // Операции встрече символа \"кавычка\" литерал\r\n        // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\r\n        if (ПустаяСтрока(Токен)) {\r\n          НачалоСтроки = Поз;\r\n          ВСтрокеСкобка = true;\r\n        } else {\r\n          // Ошибка синтаксиса\r\n          ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\r\n          Токен = \"\";\r\n        };\r\n        ТокенДоТочки = true;\r\n\r\n      } else if (ТекущийСимвол === \"#\" || (ТекущийСимвол === \"&\" && ПустаяСтрока(СтрокаРезультат))) {\r\n\r\n        // Встретился символ препроцессора\r\n        ДобавитьЧастьСтроки1С(Прав(СтрокаКода, СтрокаКода.length - Поз + 1), мЦветПрепроцессора);\r\n        Поз = СтрокаКода.length;\r\n        break;\r\n\r\n      } else if (ТекущийСимвол === \"~\") {\r\n        Токен = Токен + ТекущийСимвол;\r\n        ВСтрокеТильда = true;\r\n      } else {\r\n        // Остальные символы\r\n        Токен = Токен + ТекущийСимвол;\r\n      }\r\n    }\r\n\r\n    if (ВСтроке) {\r\n\r\n      // Многострочная строка\r\n      ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\r\n\r\n    } else if (ВСтрокеСкобка) {\r\n\r\n      // Незавершенный литерал\r\n      ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\r\n\r\n    } else if (!ПустаяСтрока(Токен)) {\r\n\r\n      // Анализируем последний токен строки кода\r\n      if (isKeyword(Токен)) {\r\n        ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\r\n\r\n      } else if (!isNaN(parseInt(Токен, 10))) {\r\n        ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\r\n\r\n      } else {\r\n        ДобавитьЧастьСтроки1С(Токен, мЦветФона);\r\n      };\r\n\r\n    };\r\n\r\n  }\r\n\r\n  ВСтроке = false;\r\n  Токен = \"\";\r\n  УстановленЦвет = false;\r\n  ПоследнийЦвет = undefined;\r\n  СтрокаРезультат = '';\r\n\r\n  let result = [];\r\n\r\n  for (let СтрокаКода of text.split('\\n')) {\r\n\r\n    if (ПустаяСтрока(СтрокаКода)) {\r\n      result.push('');\r\n      continue;\r\n    }\r\n\r\n    СтрокаРезультат = '';\r\n    РазукраситьСтроку(СтрокаКода);\r\n    if (УстановленЦвет && !ВСтроке) {\r\n      СтрокаРезультат += '</span>';\r\n      УстановленЦвет = false;\r\n      ПоследнийЦвет = '';\r\n      Токен = '';\r\n    } else if (!ВСтроке) {\r\n      ПоследнийЦвет = '';\r\n      Токен = '';\r\n    }\r\n\r\n    result.push(СтрокаРезультат);\r\n  }\r\n\r\n  return result.join('\\n');\r\n}\r\n\r\nexport default highlight;","//@flow\r\nimport React, { Component } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Form, FormControl, Button } from 'react-bootstrap'\r\n\r\nimport RadioOption from './radio_option'\r\nimport StringOption from './string_option'\r\n\r\nimport { saveOptions } from 'src/actions/options'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { OptionsState } from 'src/reducers/options'\r\nimport { defaultOptionsState } from 'src/reducers/options'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\nimport './options.css'\r\n\r\ntype Props = OptionsState & DefaultProps;\r\n\r\nexport const withNavigate = (Component: any) => {\r\n  return (props: any) => {\r\n    const navigate = useNavigate();\r\n    return <Component navigate={navigate} {...props} />;\r\n  };\r\n};\r\n\r\nclass Options extends Component<Props> {\r\n\r\n  optionsParams: any;\r\n  state: any;\r\n  form: any;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: props.options.items\r\n    };\r\n\r\n    this.optionsParams = {\r\n      'theme': {\r\n        type: 'radio',\r\n        label: 'Цветовая палитра:',\r\n        oneLine: true,\r\n        values: [\r\n          { name: 'yellow', descr: 'Золотая' },\r\n          { name: 'lightgray', descr: 'Серая' },\r\n          { name: 'dark', descr: 'Темная' }\r\n        ]\r\n      },\r\n      'topicsPerPage': {\r\n        type: 'number',\r\n        label: 'Тем на странице (max 99):',\r\n        min: 1,\r\n        max: 99\r\n      },\r\n      'autoRefreshTopicsList': {\r\n        type: 'checkbox',\r\n        label: 'Автообновление списка тем'\r\n      },\r\n      'autoRefreshTopicsListInterval': {\r\n        type: 'number',\r\n        label: '',\r\n        min: 60,\r\n        max: 1000000,\r\n        postfix: 'сек'\r\n      },\r\n      'autoRefreshTopic': {\r\n        type: 'checkbox',\r\n        label: 'Автообновление темы'\r\n      },\r\n      'autoRefreshTopicInterval': {\r\n        type: 'number',\r\n        label: '',\r\n        min: 60,\r\n        max: 1000000,\r\n        postfix: 'сек'\r\n      },\r\n      //Tooltips   \r\n      'showTooltips': {\r\n        type: 'checkbox',\r\n        label: 'Показывать тултипы, задержка'\r\n      },\r\n      'tooltipDelay': {\r\n        type: 'number',\r\n        max: 1000000,\r\n        label: '',\r\n        postfix: 'мс'\r\n      },\r\n      'showTooltipOnTopicsList': {\r\n        type: 'checkbox',\r\n        label: 'Показывать тултипы на главной странице, при наведении на кол-во ответов'\r\n      },\r\n      'showTooltipOnPostLink': {\r\n        type: 'checkbox',\r\n        label: 'Показывать тултип ссыки на другую ветку'\r\n      },\r\n      //links   \r\n      'showYoutubeVideoTitle': {\r\n        type: 'checkbox',\r\n        label: 'Показывать наименования роликов youtube'\r\n      },\r\n      'replaceCatalogMista': {\r\n        type: 'checkbox',\r\n        label: 'Обратно заменять catalog.mista.ru на infostart.ru'\r\n      },\r\n      'fixBrokenLinks': {\r\n        type: 'checkbox',\r\n        label: 'Чинить поломанные ссылки (с русскими символами)'\r\n      },\r\n    }\r\n\r\n    this.form = [\r\n      {\r\n        tabName: 'Общие',\r\n        rows: [\r\n          ['theme'],\r\n          ['topicsPerPage'],\r\n          ['autoRefreshTopicsList', 'autoRefreshTopicsListInterval'],\r\n          ['autoRefreshTopic', 'autoRefreshTopicInterval'],\r\n        ]\r\n      },\r\n      {\r\n        tabName: 'Тултипы',\r\n        rows: [\r\n          ['showTooltips', 'tooltipDelay'],\r\n          ['showTooltipOnTopicsList'],\r\n          ['showTooltipOnPostLink']\r\n        ]\r\n      },\r\n      {\r\n        tabName: 'Ссылки',\r\n        rows: [\r\n          ['showYoutubeVideoTitle'],\r\n          ['replaceCatalogMista'],\r\n          ['fixBrokenLinks'],\r\n        ]\r\n      }\r\n    ]\r\n\r\n  }\r\n\r\n  closeForm = () => {\r\n    const { navigate } = this.props;\r\n    navigate('/' + window.hash);\r\n  }\r\n\r\n  resetOptions = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      items: Object.assign({}, defaultOptionsState.items)\r\n    })\r\n  }\r\n\r\n  applyOptions = () => {\r\n\r\n    const { dispatch } = this.props;\r\n    dispatch(saveOptions(this.state.items));\r\n    this.closeForm();\r\n  }\r\n\r\n  onTabClick = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      activeTab: e.target.textContent\r\n    });\r\n  }\r\n\r\n  onChange = (e, name, value) => {\r\n\r\n    let items = Object.assign({}, this.state.items);\r\n    items[name] = value;\r\n    this.setState({\r\n      ...this.state,\r\n      items\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    let tabs = [];\r\n    for (let tab of this.form) {\r\n\r\n      let rows = [];\r\n      for (let i in tab.rows) {\r\n\r\n        const row = tab.rows[i];\r\n        let rowElem = [];\r\n        for (let name of row) {\r\n\r\n          const item = this.optionsParams[name];\r\n          if (!item) continue;\r\n\r\n          const value = this.state.items[name];\r\n\r\n          if (item.type === 'radio') {\r\n            rowElem.push(\r\n              <RadioOption\r\n                key={name}\r\n                name={name}\r\n                label={item.label}\r\n                values={item.values}\r\n                value={value}\r\n                oneLine={item.oneLine}\r\n                onChange={this.onChange}\r\n              />\r\n            );\r\n          } else if (item.type === 'number') {\r\n\r\n            if (item.label)\r\n              rowElem.push(\r\n                <label\r\n                  htmlFor={name}\r\n                  key={name + '_label'}\r\n                  style={{ fontWeight: \"inherit\" }}>\r\n                  {item.label}\r\n                </label>\r\n              );\r\n\r\n            rowElem.push(\r\n              <FormControl\r\n                key={name}\r\n                type=\"number\"\r\n                min={item.min}\r\n                max={item.max}\r\n                value={value}\r\n                onChange={(e) => this.onChange(e, name, e.target.value)}\r\n                style={{ flex: \"0 0 100px\", marginLeft: \"5px\" }}\r\n                className='input'\r\n                size=\"sm\"\r\n              >\r\n              </FormControl>\r\n            );\r\n\r\n            if (item.postfix) {\r\n              rowElem.push(\r\n                <span key={name + '_postfix'} style={{ marginLeft: \"5px\", flex: \"0 0 auto\", }}>{item.postfix}</span>\r\n              )\r\n            };\r\n\r\n          } else if (item.type === 'string') {\r\n            rowElem.push(\r\n              <StringOption\r\n                key={name}\r\n                name={name}\r\n                label={item.label}\r\n                postfix={item.postfix}\r\n                value={value}\r\n                onChange={this.onChange}\r\n              />\r\n            );\r\n          } else if (item.type === 'checkbox') {\r\n            rowElem.push(\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label={item.label}\r\n                key={name}\r\n                name={name}\r\n                checked={String(value) === 'true'}\r\n                onChange={(e) => this.onChange(e, name, e.target.checked)}\r\n                style={{ flex: \"0 0 auto\", margin: \"0px\", width: \"100%\" }}\r\n              />\r\n            );\r\n          }\r\n        }\r\n\r\n        rows.push(\r\n          <div key={i} className=\"options-row\">\r\n            {rowElem}\r\n          </div>\r\n        );\r\n\r\n      }\r\n\r\n      tabs.push(\r\n        <div key={tab.tabName}>\r\n          <div className=\"tab-header\">\r\n            {tab.tabName}\r\n          </div>\r\n          <div className=\"tab-content\">\r\n            {rows}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"options-form\">\r\n        <div className=\"options-header\" style={{ cursor: \"default\" }}>\r\n          <b>Настройки</b>\r\n        </div>\r\n        {tabs}\r\n        <div className=\"button-row\">\r\n          <Button\r\n            id=\"applyOptions\"\r\n            size=\"sm\"\r\n            variant=\"light\"\r\n            style={{ margin: \"5px\" }}\r\n            className='button'\r\n            onClick={this.applyOptions}>\r\n            OK\r\n                        </Button>\r\n          <Button\r\n            id=\"cancelOptions\"\r\n            size=\"sm\"\r\n            variant=\"light\"\r\n            style={{ margin: \"5px\", float: \"left\" }}\r\n            className='button'\r\n            onClick={this.closeForm}>\r\n            Отмена\r\n                        </Button>\r\n          <Button\r\n            id=\"defaultOptions\"\r\n            size=\"sm\"\r\n            variant=\"light\"\r\n            style={{ margin: \"5px\", float: \"right\" }}\r\n            className='button'\r\n            onClick={this.resetOptions}>\r\n            Сбросить настройки\r\n                        </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: State) => {\r\n\r\n  return {\r\n    options: state.options\r\n  };\r\n\r\n}\r\n\r\nexport default (connect(mapStateToProps)(withNavigate(Options)): any );","import React, { Component } from 'react'\r\nimport { childrenToText } from 'src/utils'\r\nimport highlight from './code_highlight'\r\nimport './code1c.css'\r\n\r\nclass Code extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onShowClick = this.onShowClick.bind(this);\r\n    this.state = { hidden: true };\r\n\r\n    const { children } = props;\r\n    if (children) {\r\n\r\n      const textArr = childrenToText(children);\r\n      this.text = textArr.join('');\r\n\r\n      // replace double new-lines\r\n      this.text = this.text\r\n        .replace(/\\n<br>/g, '\\n')\r\n        .replace(/<br>\\n/g, '\\n')\r\n        .replace(/\\r<br>/g, '\\n')\r\n        .replace(/<br>\\r/g, '\\n')\r\n        .replace(/<br>/g, '\\n');\r\n\r\n      // remove all leading|ending new-lines\r\n      while (this.text[0] === '\\n') {\r\n        this.text = this.text.substr(1);\r\n      }\r\n\r\n      while (this.text.substr(-1) === '\\n') {\r\n        this.text = this.text.substr(0, this.text.length - 1);\r\n      }\r\n\r\n      this.text = highlight(this.text);\r\n    }\r\n  }\r\n\r\n  onShowClick() {\r\n    this.setState({\r\n      hidden: !this.state.hidden\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    let buttonText;\r\n    let linesCount = 0;\r\n    if (this.text)\r\n      linesCount = this.text.split(\"\\n\").length;\r\n\r\n    if (this.state.hidden)\r\n      buttonText = `Показать: ${linesCount} строк`;\r\n    else\r\n      buttonText = 'Скрыть';\r\n\r\n    let buttonShow;\r\n    if (linesCount > 7)\r\n      buttonShow = (\r\n        <div className=\"expand-button-div\">\r\n          <span className=\"expand-button-span\" onClick={this.onShowClick}>{buttonText}</span>\r\n        </div>\r\n      );\r\n\r\n    let preStyle = {\r\n    }\r\n\r\n    if (this.state.hidden && linesCount > 7) {\r\n      preStyle.overflow = \"hidden\";\r\n      preStyle.height = \"135px\";\r\n    } else {\r\n      preStyle.overflow = \"auto\";\r\n      preStyle.height = \"auto\";\r\n    }\r\n\r\n    return (\r\n      <div style={{ marginTop: \"5px\" }}>\r\n        <pre className=\"code-pre\" style={preStyle} dangerouslySetInnerHTML={{ __html: this.text }}>\r\n        </pre>\r\n        {buttonShow}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default Code;","//@flow\r\nimport React, { Component } from 'react'\r\n\r\ntype LinkToUserProps = {\r\n  href: string,\r\n  children: any\r\n}\r\n\r\nclass LinkToUser extends Component<LinkToUserProps> {\r\n\r\n  render() {\r\n    const { href, children } = this.props;\r\n    return <a href={href} className=\"registered-user\">{children}</a>\r\n  }\r\n}\r\n\r\nexport default (LinkToUser: any);","//@flow\r\nimport React, { Component } from 'react'\r\nimport queryString from 'query-string'\r\n\r\ntype YoutubeLinkProps = {\r\n  href: string,\r\n}\r\n\r\nclass YoutubeLink extends Component<YoutubeLinkProps> {\r\n\r\n  state: any;\r\n\r\n  constructor(props: YoutubeLinkProps) {\r\n    super(props);\r\n    this.state = { hrefName: props.href, title: '' };\r\n  }\r\n\r\n  getVideoId(href: string): ?string {\r\n\r\n    if (href.search(/youtube/) !== -1) {\r\n      let arr = href.split('?');\r\n      return queryString.parse(arr[1]).v;\r\n    }\r\n\r\n    if (href.search(/youtu\\.be/) !== -1) {\r\n      let arr = href.match(/e\\/(.+?)(&|\\?|$)/);\r\n\r\n      if (arr && arr.length > 1)\r\n        return arr[1];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  async getVideoParams(videoId: string): any {\r\n\r\n    const apiKey = localStorage.getItem('youtubeApiKey') || 'AIzaSyCztN2QW4Fxw_1YuAHBTOZdYLbzigPz25g';\r\n    let apiUrl = `https://www.googleapis.com/youtube/v3/videos?key=${apiKey}&fields=items(snippet(title))&part=snippet&id=${videoId}`;\r\n    const response = await fetch(apiUrl);\r\n    const json = await response.json();\r\n\r\n    let title = json.items[0].snippet.title;\r\n    let hrefName = title;\r\n    let maxLength = 50;\r\n    if (title.length > maxLength + 5)\r\n      hrefName = hrefName.substring(0, maxLength) + '...'\r\n\r\n    return {\r\n      hrefName,\r\n      title\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n\r\n    const { href } = this.props;\r\n    const videoId = this.getVideoId(href);\r\n    if (!videoId)\r\n      return;\r\n\r\n    try {\r\n      const params = await this.getVideoParams(videoId);\r\n      this.setState({\r\n        ...params\r\n      });\r\n\r\n    } catch (e) {\r\n      console.error('youtube', e.message);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let prefix = 'youtube';\r\n    return <a href={this.props.href} title={this.state.title}>{`${prefix}: ${this.state.hrefName}`}</a>\r\n  }\r\n}\r\n\r\nexport default (YoutubeLink: any);","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport URL from 'url-parse'\r\n\r\nimport LinkToPost from './link_to_post'\r\nimport LinkToUser from './link_to_user'\r\nimport YoutubeLink from './youtube_link'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\n\r\nimport { childrenToText } from 'src/utils'\r\n\r\ntype CustomLinkProps = {\r\n  href: string,\r\n  parentText: string,\r\n  target: string,\r\n  class: string,\r\n  rel: string,\r\n  showTooltipOnPostLink: string,\r\n  showYoutubeVideoTitle: string,\r\n  replaceCatalogMista: string,\r\n  fixBrokenLinks: string,\r\n}\r\n\r\ntype Props = CustomLinkProps & DefaultProps;\r\n\r\nclass CustomLink extends Component<Props> {\r\n\r\n  fixBrokenLink(href: string, parentText: string): string {\r\n    let escapedHref = href\r\n      .replace(/\\[/g, '\\\\[')\r\n      .replace(/\\]/g, '\\\\]')\r\n      .replace(/\\./g, '\\\\.')\r\n      .replace(/\\./g, '.')\r\n      .replace(/\\*/g, '\\\\*')\r\n      .replace(/\\+/g, '\\\\+')\r\n      .replace(/\\(/g, '\\\\(')\r\n      .replace(/\\)/g, '\\\\)')\r\n      .replace(/\\?/g, '\\\\?')\r\n      .replace(/\\//g, '\\\\/');\r\n\r\n    try {\r\n      let regExp = new RegExp(escapedHref + '<\\\\/a>(\\\\)|[а-яёА-ЯЁ0-9#\\\\-\\\\+\\\\_\\\\%\\\\?=]*)');\r\n      let arr = parentText.match(regExp);\r\n      if (arr && arr.length > 1) {\r\n        if (arr[1] === ')' && href.search('\\\\(') === -1) {\r\n          return href;\r\n        }\r\n        href = href + arr[1];\r\n        return href;\r\n      }\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    return href;\r\n  }\r\n\r\n  render() {\r\n\r\n    const { href, children, parentText,\r\n      showTooltipOnPostLink, showYoutubeVideoTitle, replaceCatalogMista, fixBrokenLinks } = this.props;\r\n\r\n    try {\r\n      var url = new URL(href, true);\r\n    } catch (error) {\r\n      console.error(error.message, href);\r\n      return <a href={href}>{href}</a>;\r\n    }\r\n\r\n\r\n    let newHref = href;\r\n    if (newHref.startsWith('/')) {\r\n      url.set('protocol', 'https')\r\n      url.set('hostname', 'forum.mista.ru')\r\n      newHref = url.href;\r\n    }\r\n\r\n    if (showTooltipOnPostLink === 'true') {\r\n      if (url.hostname.search(/forum\\.mista.ru/) !== -1) {\r\n\r\n        if (url.pathname === '/topic.php') {\r\n          return (\r\n            <LinkToPost topicId={url.query.id} number={url.hash.replace('#', '') || \"0\"}>\r\n              {childrenToText(children)}\r\n            </LinkToPost>\r\n          )\r\n        } else if (url.pathname === '/users.php') {\r\n          return (\r\n            <LinkToUser href={url.href} >\r\n              {children}\r\n            </LinkToUser>\r\n          )\r\n        }\r\n      }\r\n\r\n      if (url.hostname === 'a-sitnikov.github.io' &&\r\n        url.pathname === '/react.mista/') {\r\n\r\n        if (Object.keys(url.query).length === 0) {\r\n\r\n          url = new URL(href.replace(/#\\//, ''), true);\r\n          if (url.pathname === '/react.mista/topic.php')\r\n            return (\r\n              <LinkToPost topicId={url.query.id} number={url.hash.replace('#', '') || \"0\"}>\r\n                {childrenToText(children)}\r\n              </LinkToPost>\r\n            )\r\n        }\r\n      }\r\n    }\r\n\r\n    if (showYoutubeVideoTitle === 'true')\r\n      if (url.hostname.search(/youtube/) !== -1\r\n        || url.hostname.search(/youtu\\.be/) !== -1) {\r\n        return <YoutubeLink href={href} />\r\n      }\r\n\r\n    if (replaceCatalogMista === 'true')\r\n      if (url.hostname.search(/catalog\\.mista/) !== -1) {\r\n        url.set('hostname', 'infostart.ru')\r\n\r\n        return (\r\n          <a target={this.props.target}\r\n            className={this.props.class}\r\n            rel={this.props.rel}\r\n            href={url.href} >{url.href} </a>\r\n        )\r\n      }\r\n\r\n    if (fixBrokenLinks === 'true' && parentText) {\r\n      newHref = this.fixBrokenLink(newHref, parentText);\r\n    }\r\n\r\n    return (\r\n      <a target={this.props.target}\r\n        className={this.props.class}\r\n        rel={this.props.rel}\r\n        href={newHref} >{children}</a>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  const {\r\n    showTooltipOnPostLink,\r\n    showYoutubeVideoTitle,\r\n    replaceCatalogMista,\r\n    fixBrokenLinks\r\n  } = state.options.items;\r\n\r\n  return {\r\n    showTooltipOnPostLink,\r\n    showYoutubeVideoTitle,\r\n    replaceCatalogMista,\r\n    fixBrokenLinks\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(CustomLink): any );","//@flow\r\nimport React from 'react'\r\nimport { domain } from 'src/api'\r\n\r\nimport type { ResponseVoteItem } from 'src/api'\r\n\r\ntype Props = {\r\n  topicId: string,\r\n  data: ResponseVoteItem,\r\n  colors: Array<string>,\r\n  total: number,\r\n  n: number\r\n}\r\n\r\nconst VoteItem = (props: Props) => {\r\n\r\n  const { topicId, data, total, n, colors } = props;\r\n\r\n  const img = `${domain}/css/voting${n}.png`;\r\n\r\n  let percent = 0;\r\n\r\n  if (total) {\r\n    percent = Math.round(100 * data.result / total);\r\n  }\r\n\r\n  const imgStyle = { maxWwidth: \"500px\", width: \"100%\", height: \"15px\" };\r\n\r\n  return (\r\n    <div className=\"voting-item\">\r\n      <div className=\"voting-title\">\r\n        <a rel=\"nofollow\" style={{ textDecoration: \"none\" }} href={`${window.hash}/topic.php?id=${topicId}&sel=${n}`}>\r\n          <b><span style={{ color: colors[n - 1] }}>{`${n}. ${data.select}`}</span></b>\r\n        </a>\r\n      </div>\r\n      <div className=\"voting-percentage\">\r\n        {/*<div className=\"div-va-middle\">*/}\r\n        <b><span style={{ color: colors[n - 1] }}>{`${percent}% (${data.result})`}</span></b>\r\n        {/*</div>*/}\r\n      </div>\r\n      <div className=\"voting-bar\">\r\n        <div style={{ width: `${percent}%` }}>\r\n          <a href={img}>\r\n            <img src={img} style={imgStyle} alt={`п${n}`} />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default (VoteItem: any);","//@flow\r\nimport React from 'react'\r\nimport VoteItem from './vote_item'\r\nimport type { ResponseVoteItem } from 'src/api'\r\n\r\ntype Props = {\r\n  items: Array<ResponseVoteItem>,\r\n  topicId: string,\r\n  colors: Array<string>\r\n}\r\n\r\nconst VoteChart = (props: Props) => {\r\n\r\n  const { items, topicId, colors } = props;\r\n\r\n  let total = items.reduce((sum, e) => sum + e.result, 0);\r\n\r\n  return (\r\n    <div style={{ marginBottom: \"10px\" }}>\r\n      {items.filter(val => val.select).map((data, i) => <VoteItem key={i} data={data} total={total} n={i + 1} topicId={topicId} colors={colors} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default (VoteChart: any);","import React, { Component } from 'react'\r\n\r\nclass Vote extends Component {\r\n\r\n  render() {\r\n    const { colors, info, vote } = this.props;\r\n\r\n    const voteOption = info[vote - 1];\r\n    return (\r\n      <div style={{ marginTop: \"5px\" }}>\r\n        <b><span style={{ color: colors[vote - 1] }}>{`${vote}. ${voteOption.select}`}</span></b>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Vote;","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport activeHtml from 'react-active-html';\r\n\r\nimport Code from 'src/components/extensions/code1c'\r\nimport LinkToPost from 'src/components/extensions/link_to_post'\r\nimport CustomLink from 'src/components/extensions/custom_link'\r\n\r\nimport VoteChart from './vote_chart'\r\nimport Vote from './vote'\r\n\r\nimport type { ResponseInfo, ResponseMessage } from 'src/api'\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { State } from 'src/reducers'\r\n\r\ntype MsgTextProps = {\r\n  topicId: string,\r\n  n: string,\r\n  html: string,\r\n  vote: number,\r\n  data: ResponseMessage,\r\n  style: {}\r\n}\r\n\r\ntype StateProps = {\r\n  info: ResponseInfo,\r\n  showTooltips: string,\r\n  voteColors?: Array<string>\r\n}\r\n\r\ntype Props = MsgTextProps & StateProps & DefaultProps;\r\n\r\nclass MsgText extends Component<Props> {\r\n\r\n  processLinksToPosts(text: string): string {\r\n\r\n    const { topicId } = this.props;\r\n\r\n    const regexp = /(\\()(\\d+)(\\))/gi; // (12)\r\n    return text.replace(regexp, (res, ...segments) => {\r\n      const number = segments[1];\r\n      return `(<link data-topicid='${topicId}' data-number='${number}' ></link>)`\r\n    });\r\n  }\r\n\r\n  processCode1C(text: string): string {\r\n\r\n    const regexp = /(\\[1[CС]\\])((.|\\n|\\r)*?)(\\[\\/1[CС]\\])/gi; // [1C] text [/1C]\r\n    return text.replace(regexp, (res, ...segments) => {\r\n      let txt = segments[1];\r\n\r\n      //remove first <br>\r\n      if (txt.substr(0, 4) === \"<br>\")\r\n        txt = txt.substr(4);\r\n      return `<code>${txt}</code>`\r\n    });\r\n  }\r\n\r\n  processText(text: ?string): ?string {\r\n\r\n    if (!text)\r\n      return text;\r\n\r\n    const { showTooltips } = this.props;\r\n\r\n    text = this.processCode1C(text);\r\n\r\n    if (showTooltips === 'true')\r\n      text = this.processLinksToPosts(text);\r\n\r\n    return text;\r\n  }\r\n\r\n  render() {\r\n    const { topicId, n, html, vote, info, style, voteColors } = this.props;\r\n\r\n    let voteElement;\r\n    if (vote && info.voting && topicId === info.id) {\r\n      let voteOption = info.voting[vote - 1];\r\n      if (voteOption)\r\n        voteElement = <Vote info={info.voting} vote={vote} colors={voteColors} />\r\n    }\r\n\r\n    let voteChart;\r\n    if (n === \"0\" && info.is_voting === 1 && info.voting) {\r\n      voteChart = <VoteChart items={info.voting} topicId={topicId} colors={voteColors} />\r\n    }\r\n\r\n    let processedHtml = this.processText(html);\r\n    const componentsMap = {\r\n      link: props => <LinkToPost topicId={props['data-topicid']} number={props['data-number']} key={props.key} />,\r\n      code: props => <Code {...props} />,\r\n      a: props => <CustomLink {...props} parentText={processedHtml} />\r\n    };\r\n    let textComponent = activeHtml(processedHtml, componentsMap);\r\n\r\n    return (\r\n      <div className=\"message\" style={{ ...style }}>\r\n        {voteChart}\r\n        <div>\r\n          {textComponent}\r\n        </div>\r\n        {voteElement}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  const { info } = state.topic;\r\n\r\n  return {\r\n    info,\r\n    voteColors: state.options.voteColors,\r\n    showTooltips: state.options.items['showTooltips']\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(MsgText): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport dateFormat from 'dateformat'\r\n\r\nimport './topic_preview.css'\r\n\r\ntype TopicPreviewProps = {\r\n    user: ?string,\r\n    utime: ?number,\r\n    topicId: string,\r\n    n: number,\r\n    onFirst: any,   \r\n    onLast: any,   \r\n    onPrev: any,   \r\n    onNext: any\r\n}\r\n\r\nclass PreviewHeader extends Component<TopicPreviewProps> {\r\n\r\n    render() {\r\n        const { user, utime, topicId, n } = this.props;\r\n\r\n        if (utime)\r\n            var date = new Date(utime*1000);\r\n\r\n        return (\r\n            <div>\r\n                <span className=\"plus-nav\" onClick={this.props.onFirst}>[← </span>\r\n                <span className=\"plus-nav\" onClick={this.props.onPrev}> « </span>\r\n                <Link className=\"plus-nav\" title={`Перейти к сообщению ${n}`} to={`/topic.php?id=${topicId}#${n}`}>{n}</Link>\r\n                <span className=\"plus-nav\" onClick={this.props.onNext}> » </span>\r\n                <span className=\"plus-nav\" onClick={this.props.onLast}> →]</span>\r\n                <b style={{margin: \"auto 5px\"}}>{user}</b>\r\n                <span className=\"agh\">{dateFormat(date, 'dd.mm.yy - HH:MM')}</span>\r\n            </div>\r\n        )    \r\n    }\r\n\r\n}\r\n\r\nexport default ( PreviewHeader: any );","//@flow\r\nimport React, { Component } from 'react'\r\n\r\nimport * as API from 'src/api'\r\n\r\nimport MsgText from 'src/components/topic/row/msg_text'\r\n\r\nimport PreviewHeader from './preview_header'\r\nimport './topic_preview.css'\r\n\r\ntype TopicPreviewProps = {\r\n    topicId: string,\r\n    n: number   \r\n}\r\n\r\ntype Props = TopicPreviewProps;\r\ntype State = {\r\n    n: number,\r\n    data: ?any,\r\n    error: ?string    \r\n}\r\n\r\nclass TopicPreview extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            n: props.n,\r\n            data: null,\r\n            error: null\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.fetchData(this.state.n);\r\n    }\r\n\r\n    fetchData = async (n: number) => {\r\n        let data, error;\r\n        try {\r\n            data = await API.getMessage(this.props.topicId, n);\r\n            if (!data)\r\n                error = `Сообщение не найдено ${n}`;\r\n\r\n        } catch(e) {\r\n            error = e.message\r\n        };\r\n        this.setState({\r\n            n,\r\n            data,\r\n            error\r\n        })\r\n    }\r\n\r\n    onClickFirst = () => {\r\n        this.fetchData(0);\r\n    }\r\n    \r\n    onClickNext = () => {\r\n        this.fetchData(this.state.n + 1);\r\n    }\r\n\r\n    onClickPrev = () => {\r\n        if (this.state.n > 0)\r\n            this.fetchData(this.state.n - 1);\r\n    }\r\n\r\n    onClickLast = async () => {\r\n        const n = await API.getTopicMessagesCount(this.props.topicId);\r\n        this.fetchData(n);\r\n    }\r\n\r\n    render() {\r\n        const { topicId } = this.props;\r\n        const { data, error, n } = this.state;\r\n        if (!data && !error)\r\n            return null;\r\n\r\n        if (data)\r\n            var { user, utime } = data;\r\n\r\n        return (\r\n            <div className=\"topic-preview\">\r\n                <PreviewHeader \r\n                    user={user}\r\n                    utime={+utime}\r\n                    topicId={topicId}\r\n                    n={n}\r\n                    onFirst={this.onClickFirst}\r\n                    onLast={this.onClickLast}\r\n                    onNext={this.onClickNext}\r\n                    onPrev={this.onClickPrev}\r\n                />\r\n                {data && <MsgText \r\n                    data={data} \r\n                    html={data.text} \r\n                    topicId={topicId} \r\n                    style={{maxHeight: \"500px\", overflowY: \"auto\", overflowWrap: \"break-word\"}}\r\n                />}\r\n                {error && <p>{error}</p>}\r\n            </div>\r\n        )    \r\n    }\r\n\r\n}\r\n\r\nexport default ( TopicPreview: any );","import React, { Component, useEffect } from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport { useLocation } from 'react-router-dom'\r\nimport queryString from 'query-string'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { DefaultProps, Location } from 'src/components'\r\n\r\nimport type { TopicsListState } from 'src/data/topicslist/reducer'\r\nimport type { SectionsState } from 'src/data/sections/reducer'\r\nimport type { LoginState } from 'src/reducers/login'\r\n\r\nimport { fetchTopicsListIfNeeded } from 'src/data/topicslist/actions'\r\n\r\nimport Header from './header'\r\nimport Row from './row'\r\nimport Pages from 'src/components/common/pages'\r\nimport NewTopic from './new_topic'\r\nimport Error from 'src/components/common/error'\r\n\r\nimport TopicPreview from 'src/components/preview/topic_preview'\r\n\r\nimport './topics_list.css'\r\n\r\ntype StateProps = {\r\n  topicsList: TopicsListState,\r\n  sections: SectionsState,\r\n  login: LoginState,\r\n  topicsPerPage: string,\r\n  autoRefreshTopicsList: string,\r\n  autoRefreshTopicsListInterval: string\r\n}\r\n\r\ntype Props = {\r\n  fetchTopicsListIfNeeded: any\r\n} & DefaultProps & StateProps;\r\n\r\nconst TopicsList = (props) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const location = useLocation();\r\n  const locationParams = queryString.parse(location.search);\r\n\r\n  const updateTopicsList = () => {\r\n    dispatch(fetchTopicsListIfNeeded(locationParams));\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = 'React.Mista';\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateTopicsList();\r\n  }, [location.search]);\r\n\r\n  const { topicsList, sections } = props;\r\n\r\n  let rows = [];\r\n  for (let item of topicsList.items) {\r\n\r\n    rows.push(<Row key={item.id} data={item} />);\r\n    if (item.showPreview)\r\n      rows.push(\r\n        <div key={`preview${String(item.id)}`} className=\"preview-container\">\r\n          <TopicPreview topicId={String(item.id)} n={0} />\r\n        </div>\r\n      )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      {topicsList.error && (<Error text={topicsList.error} />)}\r\n      <div className=\"table\">\r\n        <div className=\"th\" style={{ position: \"sticky\", top: \"39px\" }}>\r\n          <div style={{ letterSpacing: \"-1px\" }}>Раздел</div>\r\n          <div>Re</div>\r\n          <div></div>\r\n          <div>Тема</div>\r\n          <div>Автор</div>\r\n          <div><span style={{ cursor: \"pointer\" }} title=\"Обновить список\" onClick={updateTopicsList}>{topicsList.isFetching ? \"Обновляется\" : \"Обновлено\"}</span></div>\r\n        </div>\r\n        {rows}\r\n        <div className=\"tf\">\r\n          <Pages baseUrl='index.php' locationParams={locationParams} maxPage={10} />\r\n        </div>\r\n      </div>\r\n      <div id=\"F\" className=\"newtopic\" style={{ marginBottom: \"10px\", marginTop: \"5px\", position: 'relative' }}>\r\n        <NewTopic \r\n          sections={sections.items} \r\n          locationParams={locationParams} \r\n          onSubmitSuccess={updateTopicsList}\r\n          />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass TopicsList1 extends Component<Props> {\r\n\r\n  location: Location;\r\n  locationParams: { page?: string };\r\n  page: string;\r\n  timer: any;\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.locationParams = { page: '1' };\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.location = window.location.hash.substring(2);\r\n    console.log(window.location.hash);\r\n    this.updateTopicsList();\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timer);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n\r\n    const { location, topicsPerPage } = this.props;\r\n\r\n    if (this.location.search !== location.search\r\n      || this.props.topicsPerPage !== topicsPerPage) {\r\n\r\n      this.location = location;\r\n      this.updateTopicsList();\r\n      window.scrollTo(0, 0);\r\n    }\r\n\r\n    document.title = 'React.Mista';\r\n  }\r\n\r\n  updateTopicsList = () => {\r\n\r\n    const { fetchTopicsListIfNeeded } = this.props;\r\n    let { autoRefreshTopicsList, autoRefreshTopicsListInterval } = this.props;\r\n\r\n    //this.locationParams = queryString.parse(this.location.search);\r\n    fetchTopicsListIfNeeded(this.locationParams);\r\n\r\n    if (autoRefreshTopicsList === 'true') {\r\n\r\n      autoRefreshTopicsListInterval = +autoRefreshTopicsListInterval;\r\n      if (autoRefreshTopicsListInterval < 60) autoRefreshTopicsListInterval = 60;\r\n\r\n      clearTimeout(this.timer);\r\n      this.timer = setTimeout(this.updateTopicsList, autoRefreshTopicsListInterval * 1000);\r\n    }\r\n  }\r\n\r\n  onPostNewTopicSuccess = () => {\r\n    this.updateTopicsList();\r\n  }\r\n\r\n  render() {\r\n\r\n    const { topicsList, sections } = this.props;\r\n\r\n    let rows = [];\r\n    for (let item of topicsList.items) {\r\n\r\n      rows.push(<Row key={item.id} data={item} />);\r\n      if (item.showPreview)\r\n        rows.push(\r\n          <div key={`preview${String(item.id)}`} className=\"preview-container\">\r\n            <TopicPreview topicId={String(item.id)} n={0} />\r\n          </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header history={this.props.history} />\r\n        {topicsList.error && (<Error text={topicsList.error} />)}\r\n        <div className=\"table\">\r\n          <div className=\"th\" style={{ position: \"sticky\", top: \"39px\" }}>\r\n            <div style={{ letterSpacing: \"-1px\" }}>Раздел</div>\r\n            <div>Re</div>\r\n            <div></div>\r\n            <div>Тема</div>\r\n            <div>Автор</div>\r\n            <div><span style={{ cursor: \"pointer\" }} title=\"Обновить список\" onClick={this.updateTopicsList}>{topicsList.isFetching ? \"Обновляется\" : \"Обновлено\"}</span></div>\r\n          </div>\r\n          {rows}\r\n          <div className=\"tf\">\r\n            <Pages baseUrl='index.php' locationParams={this.locationParams} maxPage={10} />\r\n          </div>\r\n        </div>\r\n        <div id=\"F\" className=\"newtopic\" style={{ marginBottom: \"10px\", marginTop: \"5px\", position: 'relative' }}>\r\n          <NewTopic sections={sections.items} onSubmitSuccess={this.onPostNewTopicSuccess} locationParams={this.locationParams} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    topicsList: state.topicsList,\r\n    sections: state.sections,\r\n    login: state.login,\r\n    topicsPerPage: state.options.items.topicsPerPage,\r\n    autoRefreshTopicsList: state.options.items.autoRefreshTopicsList,\r\n    autoRefreshTopicsListInterval: state.options.items.autoRefreshTopicsListInterval,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchTopicsListIfNeeded: (...params) => dispatch(fetchTopicsListIfNeeded(...params)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicsList);","//@flow\r\nimport * as API from 'src/api'\r\n\r\nimport type { ResponseInfo, ResponseMessage, ResponseMessages } from 'src/api'\r\n\r\nexport type REQUEST_TOPIC = {\r\n  type: 'REQUEST_TOPIC'\r\n}\r\n\r\nexport type RECEIVE_TOPIC = {\r\n  type: 'RECEIVE_TOPIC',\r\n  info: ResponseInfo,\r\n  item0: ResponseMessage,\r\n  items: ResponseMessages,\r\n  receivedAt: Date\r\n}\r\n\r\nexport type RECEIVE_TOPIC_FAILED = {\r\n  type: 'RECEIVE_TOPIC_FAILED',\r\n  error: any,\r\n  receivedAt: Date\r\n}\r\n\r\nexport type REQUEST_NEW_MESSAGES = {\r\n  type: 'REQUEST_NEW_MESSAGES'\r\n}\r\n\r\nexport type RECEIVE_NEW_MESSAGES = {\r\n  type: 'RECEIVE_NEW_MESSAGES',\r\n  items: ResponseMessages,\r\n  receivedAt: Date\r\n}\r\n\r\nexport type CLOSE_TOPIC = {\r\n  type: 'CLOSE_TOPIC'\r\n}\r\n\r\n\r\nexport type TopicAction = REQUEST_TOPIC | RECEIVE_TOPIC | RECEIVE_TOPIC_FAILED | CLOSE_TOPIC | REQUEST_NEW_MESSAGES | RECEIVE_NEW_MESSAGES;\r\n\r\nexport const requestTopic = (): any => ({\r\n  type: 'REQUEST_TOPIC'\r\n})\r\n\r\nexport const receiveTopic = (info: ResponseInfo, item0: ?ResponseMessage, items: ResponseMessages): any => {\r\n\r\n  return {\r\n    type: 'RECEIVE_TOPIC',\r\n    info,\r\n    item0,\r\n    items,\r\n    receivedAt: Date.now()\r\n  }\r\n}\r\n\r\nexport const closeTopic = (): any => {\r\n\r\n  return {\r\n    type: 'CLOSE_TOPIC',\r\n  }\r\n}\r\n\r\nexport const fetchTopic = (params: any, item0: ?ResponseMessage): any => async (dispatch: any) => {\r\n\r\n  dispatch(requestTopic())\r\n\r\n  let info;\r\n  try {\r\n    info = await API.getTopicInfo({ id: params.id });\r\n  } catch (e) {\r\n    console.error(e);\r\n    info = {\r\n      id: params.id,\r\n      text: '',\r\n      answers_count: \"0\"\r\n    };\r\n  }\r\n\r\n  try {\r\n    let page = params.page || 1;\r\n\r\n    let _item0 = item0;\r\n    let _items;\r\n    if (page === 'last20') {\r\n\r\n      if (+info.answers_count > 21) {\r\n\r\n        if (!_item0) {\r\n          let items = await API.getTopicMessages({\r\n            id: params.id,\r\n            from: 0,\r\n            to: 1\r\n          });\r\n          _item0 = items[0];\r\n        }\r\n\r\n        let first = +info.answers_count - 20;\r\n        _items = await API.getTopicMessages({\r\n          id: params.id,\r\n          from: first,\r\n          to: 1010\r\n        });\r\n\r\n      } else {\r\n        let items = await API.getTopicMessages({\r\n          id: params.id,\r\n          from: 0,\r\n          to: 1010\r\n        });\r\n        _item0 = items[0];\r\n        _items = items.slice(1);\r\n      }\r\n\r\n    } else {\r\n\r\n      page = +page;\r\n      let first = 0;\r\n      let last = page * 100 - 1;\r\n\r\n      if (page > 1) {\r\n\r\n        first = (page - 1) * 100;\r\n        if (!_item0) {\r\n          let items = await API.getTopicMessages({\r\n            id: params.id,\r\n            from: 0,\r\n            to: 1\r\n          });\r\n          _item0 = items[0];\r\n        }\r\n\r\n        _items = await API.getTopicMessages({\r\n          id: params.id,\r\n          from: first,\r\n          to: last\r\n        });\r\n\r\n      } else {\r\n        if (_item0)\r\n          first = 1;\r\n        else\r\n          first = 0;\r\n\r\n        let items = await API.getTopicMessages({\r\n          id: params.id,\r\n          from: first,\r\n          to: last\r\n        });\r\n\r\n        if (_item0) {\r\n          _items = items;\r\n        } else {\r\n          _item0 = items[0];\r\n          _items = items.slice(1);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    if (info.answers_count === \"0\" && _items.length > 0)\r\n      info.answers_count = _items[_items.length - 1].n;\r\n\r\n    if (page === 'last20' && _items.length > 20) {\r\n      _items = _items.slice(-20);\r\n    }\r\n\r\n    dispatch(receiveTopic(info, _item0, _items));\r\n\r\n  } catch (error) {\r\n\r\n    console.error('Failed to fetch topic:', error);\r\n\r\n    dispatch({\r\n      type: 'RECEIVE_TOPIC_FAILED',\r\n      error,\r\n      receivedAt: Date.now()\r\n    });\r\n\r\n  }\r\n}\r\n\r\nconst shouldFetch = (state) => {\r\n  const topic = state.topic;\r\n  if (!topic) {\r\n    return true\r\n  }\r\n  if (topic.isFetching) {\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport const fetchTopicIfNeeded = (params: any, item0: ?ResponseMessage): any => (dispatch: any, getState: any) => {\r\n  if (shouldFetch(getState())) {\r\n    return dispatch(fetchTopic(params, item0));\r\n  }\r\n}\r\n\r\nexport type FetchNewMessageseParams = {\r\n  id: number | string,\r\n  last: number\r\n}\r\n\r\nexport const fetchNewMessages = (params: FetchNewMessageseParams): any => async (dispatch: any) => {\r\n\r\n  dispatch({\r\n    type: 'REQUEST_NEW_MESSAGES'\r\n  });\r\n\r\n  try {\r\n    const json = await API.getTopicMessages({\r\n      id: params.id,\r\n      from: params.last + 1,\r\n      to: 1002\r\n    });\r\n\r\n    dispatch({\r\n      type: 'RECEIVE_NEW_MESSAGES',\r\n      items: json,\r\n      receivedAt: Date.now()\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Failed to fetch new messages:', error);\r\n\r\n    dispatch({\r\n      type: 'RECEIVE_NEW_MESSAGES_FAILED',\r\n      error,\r\n      receivedAt: Date.now()\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport const fetchNewMessagesIfNeeded = (params: FetchNewMessageseParams): any => (dispatch: any, getState: any) => {\r\n  if (shouldFetch(getState())) {\r\n    return dispatch(fetchNewMessages(params));\r\n  }\r\n}","// @flow\r\nimport * as React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Login from '../login'\r\n\r\ntype Props = {\r\n  info: { forum: string }\r\n}\r\n\r\nclass Header extends React.Component<Props> {\r\n\r\n  render() {\r\n\r\n    const { info } = this.props;\r\n\r\n    const forums = {\r\n      '1c': '1С:Предприятие',\r\n      'life': 'О жизни',\r\n      'it': 'Информационные технологии',\r\n      'job': 'Работа'\r\n    };\r\n\r\n    return (\r\n\r\n      <div className=\"flex-row\">\r\n        <div className=\"user-td\">\r\n          <Login />\r\n        </div>\r\n        <div className=\"section-td\">\r\n          <span id=\"forum_string\" className=\"bold120\">\r\n            <a rel=\"nofollow\" href={`${window.hash}/index.php?forum=${info.forum}`} style={{ textDecoration: \"none\" }}>{forums[info.forum]}</a>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n  const {\r\n    info\r\n  } = state.topic || {\r\n    info: {\r\n      forum: ''\r\n    }\r\n  }\r\n\r\n  return {\r\n    info\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(Header): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { defaultTopicState } from 'src/reducers/topic'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { ResponseInfo } from 'src/api'\r\nimport { domain, urlTopicInfo, urlTopicMessages } from 'src/api'\r\n\r\ntype StateProps = {\r\n  info: ResponseInfo\r\n}\r\n\r\nclass TopicInfo extends Component<StateProps> {\r\n\r\n  render() {\r\n\r\n    const { info } = this.props;\r\n\r\n    let yandexUrl = \"https://www.yandex.ru/yandsearch?rpt=rad&text=\" + encodeURIComponent(info.text);\r\n\r\n    return (\r\n      <div className=\"topic-row\">\r\n        <div className=\"cell-userinfo\">\r\n          <div className=\"topic-tools\">\r\n            <a title=\"API.info\" href={`${domain}/${urlTopicInfo}?id=${info.id}`} className=\"agh\" style={{ display: \"block\", lineHeight: \"1em\" }}>i</a>\r\n            <a title=\"API.messages\" href={`${domain}/${urlTopicMessages}?id=${info.id}&from=0&to=20`} className=\"agh\" style={{ display: \"block\", lineHeight: \"1em\" }}>m</a>\r\n            {/*<a href=\"add_voting.php?topic_id=815217\" title=\"Добавить голосование\">vote</a> &nbsp;&nbsp;*/}\r\n          </div>\r\n        </div>\r\n        <div className=\"cell-message\">\r\n          <div className=\"flex-row\">\r\n            <div style={{ flex: 1, textAlign: \"center\" }}>\r\n              <a href={`${domain}/topic.php?id=${info.id}`}>\r\n                <h1 className=\"topic-title\" dangerouslySetInnerHTML={{ __html: info.text }}></h1>\r\n              </a>\r\n              <div className=\"moder-action\"></div>\r\n            </div>\r\n            <div style={{ flex: \"0 0 20px\", position: \"relative\" }}>\r\n              <div className=\"div-va-middle\">\r\n                <a rel=\"noopener noreferrer\" href={yandexUrl} title=\"Искать в Яндексе\" target=\"_blank\" className=\"yandex\">Я</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  const {\r\n    info\r\n  } = state.topic || defaultTopicState;\r\n\r\n  return {\r\n    info\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(TopicInfo): any );","//@flow\r\nimport * as API from '../api'\r\nimport type { RequestNewMessage } from 'src/api'\r\n\r\nexport type POST_NEW_MESSAGE_START = {\r\n  type: 'POST_NEW_MESSAGE_START'\r\n}\r\n\r\nexport type POST_NEW_MESSAGE_COMPLETE = {\r\n  type: 'POST_NEW_MESSAGE_COMPLETE'\r\n}\r\n\r\nexport type NEW_MESSAGE_TEXT = {\r\n  type: 'NEW_MESSAGE_TEXT',\r\n  text: string\r\n}\r\n\r\nexport type ADD_MESSAGE_TEXT = {\r\n  type: 'ADD_MESSAGE_TEXT',\r\n  text: string\r\n}\r\n\r\n\r\nexport type NewMessageAction = POST_NEW_MESSAGE_START | POST_NEW_MESSAGE_COMPLETE | NEW_MESSAGE_TEXT | ADD_MESSAGE_TEXT;\r\n\r\nexport type PostNewmessageParams = {\r\n  text: string,\r\n  topicId: string,\r\n  voting_select?: number,\r\n  onSuccess?: () => void\r\n}\r\n\r\nexport const postNewMessage = (params: PostNewmessageParams): any => async (dispatch: any) => {\r\n\r\n  dispatch({\r\n    type: 'POST_NEW_MESSAGE_START'\r\n  });\r\n\r\n  let fetchParams: RequestNewMessage = {\r\n    message_text: encodeURIComponent(params.text),\r\n    action: \"new\",\r\n    topic_id: params.topicId,\r\n    rnd: Math.round(Math.random() * 10000000000)\r\n  };\r\n\r\n  if (params.voting_select)\r\n    fetchParams.voting_select = params.voting_select;\r\n\r\n  try {\r\n    await API.postNewMessage(fetchParams);\r\n    await dispatch({\r\n      type: 'POST_NEW_MESSAGE_COMPLETE'\r\n    });\r\n    if (params.onSuccess)\r\n      params.onSuccess();\r\n\r\n  } catch (err) {\r\n    console.error(\"Failed to post new message: \" + err);\r\n  }\r\n}\r\n\r\nexport const addMessageText = (text: string): any => (dispatch: any) => {\r\n  dispatch({\r\n    type: 'ADD_MESSAGE_TEXT',\r\n    text\r\n  })\r\n}","//@flow\r\nimport React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport dateFormat from 'dateformat'\r\nimport classNames from 'classnames'\r\nimport { domain } from 'src/api'\r\n\r\nimport { addMessageText } from 'src/actions/new_message'\r\n\r\nimport type { ResponseMessage } from 'src/api'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype UserInfoProps = {\r\n  data: ResponseMessage,\r\n  isAuthor: boolean,\r\n  isYou?: boolean,\r\n  isTooltip?: boolean\r\n}\r\n\r\ntype Props = UserInfoProps & DefaultProps;\r\n\r\nclass UserInfo extends Component<Props> {\r\n\r\n  onClick = () => {\r\n    const { dispatch, data } = this.props;\r\n    dispatch(addMessageText(`(${data.n})`));\r\n\r\n    let elem = document.getElementById('message_text');\r\n    if (elem)\r\n      window.scrollTo(0, elem.offsetTop);\r\n  }\r\n\r\n  onImageLoad = (event) => {\r\n    event.target.style.display = 'inline';\r\n  }\r\n\r\n  render() {\r\n    const { data, isAuthor, isYou, isTooltip } = this.props;\r\n    const href = `${domain}/users.php?id=${data.userId}`;\r\n    let dataStr;\r\n    if (!data) {\r\n      dataStr = '';\r\n    } else if (data.n === \"0\") {\r\n      dataStr = dateFormat(new Date(+data.utime * 1000), 'dd.mm.yy - HH:MM');\r\n    } else {\r\n      dataStr = (\r\n        <Fragment>\r\n          <span className=\"message-number\">{data.n}</span>{' - ' + dateFormat(new Date(+data.utime * 1000), 'dd.mm.yy - HH:MM')}\r\n        </Fragment>\r\n      )\r\n    }\r\n\r\n    const userClassNames = classNames(\"registered-user\", {\r\n      \"is-author\": isAuthor,\r\n      \"is-you\": isYou\r\n    });\r\n\r\n    let imgElem;\r\n    if (window.innerWidth > 768)\r\n    imgElem = <img src={`${domain}/css/user_icons/${data.userId}_16x16.png`} \r\n              onLoad={this.onImageLoad} \r\n              style={{display:\"none\", marginBottom:\"4px\", marginRight:\"1px\"}}/>\r\n\r\n    let timeElem;  \r\n    if (isTooltip) {\r\n      timeElem = <div className=\"ah\" style={{display:\"inline-block\", marginLeft:\"5px\"}}>{dataStr}</div>;\r\n    } else {\r\n      timeElem =\r\n        <div className=\"message-time\">\r\n          <span className=\"ah\" >{dataStr}</span>\r\n          <button className=\"button ah\" onClick={this.onClick}>{dataStr}</button>\r\n        </div>\r\n    }  \r\n\r\n    return (\r\n      <div className=\"user-info\">\r\n        {imgElem}\r\n        <a className={userClassNames} href={href}>{data.user}</a>\r\n        {timeElem}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default (connect()(UserInfo): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport UserInfo from './user_info'\r\nimport MsgText from './msg_text'\r\n\r\nimport type { ResponseMessage } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\nimport type { LoginState } from 'src/reducers/login'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype RowProps = {\r\n    data: ResponseMessage\r\n}\r\n\r\ntype StateProps = {\r\n    topicId: string,\r\n    author: string,\r\n    login: LoginState\r\n}\r\n\r\ntype Props = RowProps & StateProps & DefaultProps;\r\n\r\nclass Row extends Component<Props> {\r\n\r\n    render() {\r\n        const { data, author, topicId, login } = this.props;\r\n\r\n        if (!data)\r\n            return null;\r\n\r\n        return (\r\n            <div className=\"topic-row\" id={data.n}>\r\n                <div className=\"cell-userinfo\">\r\n                    <UserInfo data={data} isAuthor={data.user === author} isYou={data.user === login.username}/>\r\n                </div>\r\n                <div className=\"cell-message\">\r\n                    <MsgText data={data} html={data.text} topicId={topicId} n={data.n} vote={+data.vote}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n    const {\r\n        info,\r\n        item0,\r\n    } = state.topic || {\r\n        info: {},\r\n        item0: {},\r\n    }\r\n\r\n    return {\r\n        topicId: info.id,\r\n        author: item0 ? item0.user : '',\r\n        login: state.login\r\n    }\r\n}\r\n\r\nexport default ( connect(mapStateToProps)(Row): any );","//@flow\r\nimport * as API from 'src/api'\r\nimport type { RequestBookmark } from 'src/api'\r\n\r\nexport type ADD_BOOKMARK_START = {\r\n  type: 'ADD_BOOKMARK_START'\r\n}\r\n\r\nexport type ADD_BOOKMARK_COMPLETE = {\r\n  type: 'ADD_BOOKMARK_COMPLETE'\r\n}\r\n\r\nexport type ADD_BOOKMARK_FAIL = {\r\n  type: 'ADD_BOOKMARK_FAIL'\r\n}\r\n\r\nexport type AddBookmarkAction = ADD_BOOKMARK_START | ADD_BOOKMARK_COMPLETE | ADD_BOOKMARK_FAIL;\r\n\r\n\r\nexport const addBookmark = (params: RequestBookmark): any => async (dispatch: any) => {\r\n\r\n  dispatch({\r\n    type: \"ADD_BOOKMARK_START\"\r\n  });\r\n\r\n  try {\r\n    await API.postBookmark(params);\r\n\r\n    dispatch({\r\n      type: \"ADD_BOOKMARK_COMPLETE\"\r\n    });\r\n\r\n  } catch (err) {\r\n    console.error('Error adding bookmark:', err);\r\n    dispatch({\r\n      type: \"ADD_BOOKMARK_FAIL\"\r\n    });\r\n  }\r\n\r\n}\r\n","//@flow\r\nimport * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nimport { fetchNewMessagesIfNeeded } from 'src/actions/topic'\r\nimport { addBookmark } from 'src/actions/bookmark'\r\nimport { getMaxPage } from 'src/utils'\r\n\r\ntype FooterProps = {\r\n  info: any,\r\n  dispatch: any,\r\n  bookmark: any,\r\n  isFetching: boolean,\r\n  params: any\r\n}\r\n\r\nclass Footer extends React.Component<FooterProps> {\r\n\r\n  onBookmarkClick = () => {\r\n    const { info, dispatch } = this.props;\r\n    dispatch(addBookmark(info));\r\n  }\r\n\r\n  onRefreshClick = () => {\r\n\r\n    const { info, dispatch } = this.props;\r\n\r\n    dispatch(fetchNewMessagesIfNeeded({\r\n      id: info.id,\r\n      last: parseInt(info.answers_count, 10)\r\n    }));\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { info, bookmark, isFetching, params } = this.props;\r\n    const maxPage = getMaxPage(info.answers_count);\r\n\r\n    let updateButton;\r\n    let page = params.page || 1;\r\n    if (page === 'last20' || page === maxPage)\r\n      updateButton =\r\n        <Button\r\n          onClick={this.onRefreshClick}\r\n          disabled={bookmark.isFetching}\r\n          size=\"sm\"\r\n          className='button'\r\n          variant=\"light\">\r\n          {isFetching ? 'Обновляется' : 'Обновить ветку'}\r\n        </Button>\r\n\r\n    return (\r\n      <div className=\"flex-row\" id=\"F\">\r\n        <div className=\"ta-left va-top\" style={{ width: \"50%\" }}>\r\n          <Button\r\n            onClick={this.onBookmarkClick}\r\n            disabled={bookmark.isFetching}\r\n            size=\"sm\"\r\n            className='button'\r\n            variant=\"light\">\r\n            {bookmark.isFetching ? 'Подождите...' : 'Закладка'}\r\n          </Button>\r\n        </div>\r\n        <div className=\"ta-right va-middle\" style={{ marginLeft: \"auto\" }}>\r\n          {updateButton}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n  const {\r\n    isFetching,\r\n    lastUpdated,\r\n    info,\r\n  } = state.topic || {\r\n    isFetching: true,\r\n    info: {},\r\n  }\r\n\r\n  return {\r\n    info,\r\n    isFetching,\r\n    lastUpdated,\r\n    bookmark: state.bookmark || {}\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(Footer): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { FormGroup, Form } from 'react-bootstrap'\r\n\r\nimport TextEditor from 'src/components/common/text_editor'\r\nimport { postNewMessage } from 'src/actions/new_message'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { NewMessageState } from 'src/reducers/new_message'\r\n\r\nimport type { ResponseInfo } from 'src/api'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype NewMessageProps = {\r\n  onSubmitSuccess?: () => void\r\n}\r\n\r\ntype StateProps = {\r\n  info: ResponseInfo,\r\n  newMessage: NewMessageState\r\n}\r\n\r\ntype Props = NewMessageProps & StateProps & DefaultProps;\r\ntype ComponentState = {\r\n  voting?: number\r\n}\r\n\r\nclass NewMessage extends Component<Props, ComponentState> {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { voting: undefined };\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    const { dispatch, info, newMessage } = this.props;\r\n\r\n    let params = {\r\n      text: newMessage.text,\r\n      topicId: info.id,\r\n      onSuccess: this.onSubmitSuccess,\r\n      voting_select: undefined\r\n    };\r\n\r\n    if (this.state.voting) {\r\n      params.voting_select = this.state.voting;\r\n    }\r\n\r\n    dispatch(postNewMessage(params));\r\n  }\r\n\r\n  onSubmitSuccess = () => {\r\n\r\n    const { dispatch } = this.props;\r\n\r\n    dispatch({\r\n      type: 'NEW_MESSAGE_TEXT',\r\n      text: ''\r\n    });\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      voting: undefined\r\n    });\r\n\r\n    if (this.props.onSubmitSuccess) {\r\n      this.props.onSubmitSuccess();\r\n    }\r\n  }\r\n\r\n  clearVoting = (e) => {\r\n\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      voting: undefined\r\n    })\r\n\r\n  }\r\n\r\n  setVotingOption = (i) => {\r\n    this.setState({\r\n      ...this.state,\r\n      voting: i\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { info, newMessage } = this.props;\r\n\r\n    let votingElem;\r\n    if (info.is_voting && info.voting) {\r\n\r\n      let votingOptions = [];\r\n      for (let i = 1; i <= info.voting.length; i++) {\r\n\r\n        const item = info.voting[i - 1];\r\n        if (!item.select)\r\n          continue;\r\n\r\n        votingOptions.push(\r\n          <Form.Check\r\n            type=\"radio\"\r\n            key={i}\r\n            name=\"voting\"\r\n            checked={this.state.voting === i}\r\n            onChange={() => this.setVotingOption(i)}\r\n            label={`${i}. ${item.select}`}\r\n          />\r\n        );\r\n      }\r\n\r\n\r\n      votingElem = (\r\n        <FormGroup>\r\n          <legend>\r\n            <small>Ваш выбор:\r\n              <span href=\"\" id=\"voting_clear\" style={{ marginLeft: \"5px\", cursor: \"pointer\" }} onClick={this.clearVoting}>очистить</span>\r\n            </small>\r\n          </legend>\r\n          {votingOptions}\r\n          Обоснуйте свой выбор!\r\n        </FormGroup>\r\n      );\r\n\r\n    }\r\n\r\n    return (\r\n      <form style={{ marginTop: \"5px\" }} onSubmit={this.onSubmit}>\r\n        <div className=\"bold\">Добавить сообщение в тему:</div>\r\n        <div className=\"new-message-container\">\r\n          <div className=\"new-message-text\">\r\n            <TextEditor\r\n              isFetching={newMessage.isFetching}\r\n              text={newMessage.text}\r\n              placeholder=\"Сообщение\"\r\n              formName=\"NEW_MESSAGE\"\r\n            />\r\n          </div>\r\n          <div className=\"new-message-voting\">\r\n            {votingElem}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    info: state.topic.info,\r\n    newMessage: state.newMessage\r\n  };\r\n\r\n}\r\n\r\nexport default (connect(mapStateToProps)(NewMessage): any );","//@flow\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport queryString from 'query-string'\r\nimport { fetchTopicIfNeeded, fetchNewMessagesIfNeeded, closeTopic } from 'src/actions/topic'\r\n\r\nimport type { DefaultProps, Location } from 'src/components'\r\nimport type { ResponseInfo, ResponseMessage, ResponseMessages } from 'src/api'\r\nimport type { State } from 'src/reducers'\r\nimport type { LoginState } from 'src/reducers/login'\r\nimport type { OptionsItems } from 'src/reducers/options'\r\n\r\nimport Error from 'src/components/common/error'\r\nimport Pages from 'src/components/common/pages'\r\nimport Header from './header'\r\nimport TopicInfo from './topic_info'\r\nimport Row from './row'\r\nimport Footer from './footer'\r\nimport NewMessage from './new_message';\r\nimport { getMaxPage } from 'src/utils';\r\n\r\nimport './topic.css'\r\n\r\ntype TopicLocationParams = {\r\n  id: string,\r\n  page?: string,\r\n  hash?: string\r\n}\r\n\r\ntype StateProps = {\r\n  login: LoginState,\r\n  info: ResponseInfo,\r\n  item0?: ?ResponseMessage,\r\n  items: ResponseMessages,\r\n  error?: any,\r\n  options: OptionsItems\r\n}\r\n\r\ntype Props = {\r\n  fetchTopicIfNeeded: any,\r\n  fetchNewMessagesIfNeeded: any,\r\n  closeTopic: any,\r\n  clearText: any\r\n} & DefaultProps & StateProps\r\n\r\nclass Topic extends Component<Props> {\r\n\r\n  locationParams: TopicLocationParams;\r\n  location: Location;\r\n  timer: any;\r\n  scrolledToHash: boolean;\r\n  nodeF: any;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.locationParams = { id: '' };\r\n    this.scrolledToHash = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.location = this.props.location;\r\n    this.updateTopic();\r\n\r\n    if (this.props.options.autoRefreshTopic === 'true') {\r\n\r\n      let autoRefreshTopicInterval = +this.props.options.autoRefreshTopicInterval;\r\n      if (autoRefreshTopicInterval < 60) autoRefreshTopicInterval = 60;\r\n\r\n      this.timer = setInterval(this.autoUpdate, autoRefreshTopicInterval * 1000);\r\n    }\r\n\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    \r\n    const { location, items, info } = this.props;\r\n    if (!this.scrolledToHash &&\r\n      location.hash &&\r\n      items.length > 0) {\r\n\r\n      this.scrolledToHash = true;\r\n      let nodeHash = document.getElementById(location.hash.slice(1));\r\n      if (nodeHash)\r\n        setTimeout(() => window.scrollTo(0, nodeHash.offsetTop), 1);\r\n    }\r\n\r\n    let title = info.text;\r\n    if (title && document.title !== title) {\r\n      \r\n      const parser = new DOMParser();\r\n      const floatingElement = parser.parseFromString(title, 'text/html');\r\n      title = floatingElement.firstChild.innerText;\r\n\r\n      document.title = title;\r\n    }\r\n    \r\n    if (this.location.search !== location.search) {\r\n      this.location = location;\r\n      this.updateTopic();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n    const { closeTopic, clearText } = this.props;\r\n\r\n    clearInterval(this.timer);\r\n    closeTopic();\r\n    clearText();\r\n  }\r\n\r\n  autoUpdate = () => {\r\n    const { info, fetchNewMessagesIfNeeded } = this.props;\r\n    const isLastPage = (this.locationParams.page === 'last20' || this.locationParams.page === getMaxPage(+info.answers_count));\r\n\r\n    if (isLastPage)\r\n      fetchNewMessagesIfNeeded({\r\n        id: info.id,\r\n        last: parseInt(info.answers_count, 10)\r\n      })\r\n  }\r\n\r\n  updateTopic = () => {\r\n\r\n    let { fetchTopicIfNeeded, item0 } = this.props;\r\n    let locationParams = queryString.parse(this.location.search);\r\n\r\n    if (!locationParams.page)\r\n      locationParams.page = 1;\r\n\r\n    else if (locationParams.page !== 'last20') {\r\n      locationParams.page = +locationParams.page;\r\n      if (isNaN(locationParams.page))\r\n        locationParams.page = 1;\r\n    }\r\n\r\n    if (locationParams.id !== this.locationParams.id)\r\n      item0 = null;\r\n\r\n    this.locationParams = locationParams;\r\n    fetchTopicIfNeeded(this.locationParams, item0);\r\n  }\r\n\r\n  onPostNewMessageSuccess = () => {\r\n\r\n    const { fetchNewMessagesIfNeeded, info } = this.props;\r\n\r\n    const isLastPage = (this.locationParams.page === 'last20' || this.locationParams.page === getMaxPage(+info.answers_count));\r\n\r\n    if (isLastPage)\r\n      fetchNewMessagesIfNeeded({\r\n        id: info.id,\r\n        last: parseInt(info.answers_count, 10)\r\n      });\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const { login, items, item0, info, error } = this.props;\r\n    const maxPage = getMaxPage(+info.answers_count);\r\n\r\n    return (\r\n      <div style={{ marginBottom: \"5px\" }}>\r\n        {error && <Error text={error.message} />}\r\n        <Header currentPage={this.locationParams.page} />\r\n        <div className=\"topic-table\">\r\n          <TopicInfo />\r\n          <Row key='0' data={item0} />\r\n          {items.map((item, i) => (\r\n            <Row key={item.n} data={item} />\r\n          ))}\r\n          {(maxPage > 1 || this.locationParams.page === \"last20\") &&\r\n            <div className=\"tf\">\r\n              <Pages baseUrl='topic.php' locationParams={this.locationParams} maxPage={maxPage} last20 />\r\n            </div>\r\n          }\r\n        </div>\r\n        <Footer params={this.locationParams} />\r\n        {login.logged &&\r\n          <NewMessage onSubmitSuccess={this.onPostNewMessageSuccess} />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  const {\r\n    isFetching,\r\n    lastUpdated,\r\n    info,\r\n    item0,\r\n    items,\r\n    error\r\n  } = state.topic;\r\n\r\n  return {\r\n    login: state.login,\r\n    info,\r\n    item0,\r\n    items,\r\n    isFetching,\r\n    lastUpdated,\r\n    error,\r\n    options: state.options.items\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchTopicIfNeeded: (...params) => dispatch(fetchTopicIfNeeded(...params)),\r\n  fetchNewMessagesIfNeeded: (...params) => dispatch(fetchNewMessagesIfNeeded(...params)),\r\n  closeTopic: (...params) => dispatch(closeTopic(...params)),\r\n  clearText: () => dispatch({ type: 'NEW_MESSAGE_TEXT', text: '' })\r\n})\r\n\r\nexport default (connect(mapStateToProps, mapDispatchToProps)(Topic): any );","//@flow\r\nimport React, { Component } from 'react'\r\n\r\ntype RadioOptionProps = {\r\n  name: string,\r\n  label: string,\r\n  value: string,\r\n  values: Array<{ name: string, descr: string }>,\r\n  onChange: any,\r\n  oneLine: boolean\r\n}\r\n\r\nclass RadioOption extends Component<RadioOptionProps> {\r\n\r\n  onChange = (e: any) => {\r\n    const { name } = this.props;\r\n    this.props.onChange(e, name, e.target.value);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { name, label, values, oneLine } = this.props;\r\n\r\n    let valuesElem = [];\r\n    for (let i = 0; i < values.length; i++) {\r\n      let item = values[i];\r\n      valuesElem.push(\r\n        <label key={i} htmlFor={item.name} style={{ marginRight: \"5px\" }}>\r\n          <input type=\"radio\" name={name} value={item.name} checked={item.name === this.props.value} onChange={this.onChange} />\r\n          {item.descr}\r\n        </label>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <span>\r\n        <span style={{ marginRight: \"5px\" }}>{label}</span>\r\n        {oneLine ? null : <br />}\r\n        {valuesElem}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (RadioOption: any);","//@flow\r\nimport React, { Component } from 'react'\r\n\r\ntype StringOptionProps = {\r\n  name: string,\r\n  label: string,\r\n  value: string,\r\n  onChange: any,\r\n  postfix: ?string\r\n}\r\n\r\nclass StringOption extends Component<StringOptionProps> {\r\n\r\n  onChange = (e: any) => {\r\n    const { name } = this.props;\r\n    this.props.onChange(e, name, e.target.value);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { name, value, label, postfix } = this.props;\r\n\r\n    return (\r\n      <label htmlFor={name} style={{ marginRight: \"5px\" }}>\r\n        <span style={{ marginRight: \"5px\" }}>{label}</span>\r\n        <input type=\"string\" name={name} value={value} onChange={this.onChange} className='input' />\r\n        {postfix !== undefined ?\r\n          <span style={{ marginLeft: \"5px\" }}>{postfix}</span>\r\n          : null}\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (StringOption: any);","import type { OptionsItems } from 'src/reducers/options'\r\n\r\nexport type READ_OPTIONS = {\r\n  type: 'READ_OPTIONS',\r\n}\r\nexport type SAVE_OPTIONS = {\r\n  type: 'SAVE_OPTIONS',\r\n  options: OptionsItems\r\n}\r\n\r\nexport type OptionsAction = READ_OPTIONS | SAVE_OPTIONS;\r\n\r\nexport const readOptions = () => (dispatch: any) => {\r\n\r\n  let action: OptionsAction = {\r\n    type: 'READ_OPTIONS'\r\n  };\r\n  dispatch(action);\r\n\r\n}\r\n\r\nexport const saveOptions = (options: OptionsItems) => (dispatch: any) => {\r\n\r\n  let action: OptionsAction = {\r\n    type: 'SAVE_OPTIONS',\r\n    options\r\n  };\r\n  dispatch(action);\r\n\r\n}\r\n","//@flow\r\nimport { HashRouter, Routes, Route } from 'react-router-dom'\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport TopicsList from './topics_list'\r\nimport Topic from './topic'\r\nimport Options from './options'\r\nimport { clearTooltipsIfNeeded } from 'src/actions/tooltips'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\n\r\nclass Container extends Component<DefaultProps> {\r\n\r\n  onClick = (e: SyntheticEvent<HTMLElement>) => {\r\n    const { dispatch } = this.props;\r\n    dispatch(clearTooltipsIfNeeded());\r\n  }\r\n\r\n  render() {\r\n\r\n    const routes =\r\n      <Routes>\r\n        <Route path='/' element={<TopicsList />} />\r\n        <Route path='/index.php' element={<TopicsList />} />\r\n        <Route path='/topic.php' element={<Topic />} />\r\n        <Route path='/options.php' element={<Options />} />   \r\n      </Routes>\r\n\r\n    if (window.hash)\r\n\r\n      return (\r\n        <div onClick={this.onClick} style={{ flex: \"auto\" }}>\r\n          <div className=\"container\" >\r\n              {routes}\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n    else\r\n      return (\r\n        <div onClick={this.onClick} style={{ flex: \"auto\" }}>\r\n          <div className=\"container\">\r\n            {routes}\r\n          </div>\r\n        </div>\r\n      )\r\n  }\r\n\r\n}\r\n\r\nexport default ( connect()(Container): any );","import React from 'react'\r\nimport { domain } from 'src/api'\r\n\r\nconst NavBarFooter = (props) => {\r\n\r\n    return (\r\n        <footer className=\"flex-row navbar-footer\">\r\n            <a href={`${domain}/rules.php`}>Правила</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/about.php`}>Описание</a>\r\n            <span className=\"separator\">|</span>\r\n            <b><a href={`${domain}/ad.php`}>Реклама на сайте</a>  </b>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/find.php`}>Поиск</a>\r\n            <span className=\"separator\">|</span>\r\n            <a rel=\"nofollow\" href={`${domain}/sections_list.php`}>Секции</a>\r\n            <span className=\"separator\">|</span>\r\n            <a rel=\"nofollow\" href={`${domain}/rating.php`}>Рейтинг</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href=\"http://kb.mista.ru\">Книга знаний</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href=\"http://wiki.mista.ru\">Вики-миста (КЗ2)</a>\r\n            <span className=\"separator\">|</span>\r\n            <a rel=\"nofollow\" href=\"http://m.mista.ru/\">Мобильная</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/archive.php`}>Архив</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/moders.php`}>Модераторы</a>\r\n            <span className=\"separator\">|</span>\r\n            <a href={`${domain}/users_gallery.php`}>Галерея</a>\r\n            <span className=\"separator\">|</span>\r\n            <span>18+</span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default NavBarFooter;","import React from 'react'\r\n\r\nconst TooltipHeader = ({children, closeWindow}) => {\r\n    return (\r\n        <div className=\"tooltip-header\">\r\n            {children}\r\n            <div className=\"tooltip-close\" onClick={closeWindow} onTouchEnd={closeWindow}>\r\n                <span className=\"tooltip-close-x\">x</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TooltipHeader;","import React from 'react'\r\n\r\nconst TooltipBody = ({children, onScroll}) => {\r\n    \r\n    var startX = 0;\r\n\r\n    function onTouchStart(e) {\r\n        startX = e.nativeEvent.changedTouches[0].clientX;\r\n    }\r\n    \r\n    function onTouchEnd(e) {\r\n        let endX = e.nativeEvent.changedTouches[0].clientX;\r\n        if (Math.abs(endX - startX) > 100)\r\n            onScroll(-endX + startX);\r\n    }\r\n\r\n    return (\r\n        <div className=\"tooltip-text\" onTouchStart={onTouchStart} onTouchEnd={onTouchEnd}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TooltipBody;","//@flow\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport Draggable from 'react-draggable';\r\n\r\nimport TooltipHeader from './tooltip_header'\r\nimport TooltipBody from './tooltip_body'\r\n\r\nimport './tooltip.css'\r\n\r\nimport { closeTooltip } from 'src/actions/tooltips'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { TooltipItemState } from 'src/reducers/tooltips'\r\n\r\ntype TooltipProps = {\r\n  tooltip: TooltipItemState,\r\n  onScroll: (delta: any) => void\r\n}\r\n\r\ntype Props = TooltipProps & DefaultProps;\r\n\r\nclass TooltipWindow extends Component<Props> {\r\n\r\n  onCloseClick = () => {\r\n    const { dispatch, tooltip } = this.props;\r\n    dispatch(closeTooltip(tooltip.keys));\r\n  }\r\n\r\n  onWheel = (e) => {\r\n    e.preventDefault();\r\n    this.props.onScroll(-e.nativeEvent.deltaY);\r\n  }\r\n\r\n  render() {\r\n    const { coords, i } = this.props.tooltip;\r\n\r\n    let axis;\r\n    let position;\r\n    if (window.innerWidth <= 768) {\r\n      axis = \"y\";\r\n      position = { top: coords.y, left: 5 };\r\n    } else {\r\n      axis = \"both\";\r\n      position = { top: coords.y, left: Math.min(coords.x, window.innerWidth - 670) }\r\n    }\r\n\r\n    let [header, body] = React.Children.toArray(this.props.children);\r\n\r\n    return (\r\n      <Draggable\r\n        axis={axis}\r\n        handle=\".tooltip-header\"\r\n        defaultClassNameDragging=\"dragging\"\r\n        key={i}>\r\n\r\n        <div className=\"tooltip-window\" style={{ ...position }} onWheelCapture={this.onWheel}>\r\n          <TooltipHeader closeWindow={this.onCloseClick}>\r\n            {header.props.children}\r\n          </TooltipHeader>\r\n          <TooltipBody onScroll={this.props.onScroll}>\r\n            {body.props.children}\r\n          </TooltipBody>\r\n        </div>\r\n      </Draggable>\r\n    )\r\n  }\r\n}\r\n\r\nexport default (connect()(TooltipWindow): any );","//@flow\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as API from 'src/api'\r\n\r\nimport MsgText from '../topic/row/msg_text'\r\nimport UserInfo from '../topic/row/user_info';\r\n\r\nimport TooltipWindow from './tooltip_window'\r\nimport TooltipHeader from './tooltip_header'\r\nimport TooltipBody from './tooltip_body'\r\nimport './tooltip.css'\r\n\r\nimport type { DefaultProps } from 'src/components'\r\nimport type { TooltipItemState } from 'src/reducers/tooltips'\r\nimport type { TooltipKeys } from 'src/actions/tooltips'\r\n\r\ntype TooltipProps = {\r\n  tooltip: TooltipItemState,\r\n  info: any,\r\n  items: any,\r\n  item0: any\r\n}\r\n\r\ntype Props = TooltipProps & DefaultProps;\r\ntype State = {\r\n  data: any,\r\n  text: string,\r\n  number: number\r\n}\r\n\r\nclass Tooltip extends Component<Props, State> {\r\n\r\n  data: any;\r\n  text: string;\r\n  fetchData: any;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { tooltip, info, items, item0 } = props;\r\n    const { keys } = tooltip;\r\n\r\n    let text = '';\r\n    let data;\r\n    if (keys.topicId === info.id) {\r\n      if (keys.number === 0)\r\n        data = item0;\r\n      else\r\n        data = items.find(item => item.n === String(keys.number));\r\n\r\n      if (data)\r\n        text = data.text;\r\n    }\r\n\r\n    this.state = {\r\n      data,\r\n      text,\r\n      number: keys.number\r\n    }\r\n  }\r\n\r\n  fetchData = async (number: number) => {\r\n\r\n    if (number < 0) return;\r\n\r\n    let data;\r\n    let text = '';\r\n    const topicId = this.props.tooltip.keys.topicId;\r\n\r\n    try {\r\n      data = await API.getMessage(topicId, number);\r\n      if (data)\r\n        text = data.text;\r\n      else\r\n        text = `Сообщение не найдено ${number}`;\r\n\r\n    } catch (e) {\r\n      text = e.message;\r\n    }\r\n\r\n    this.setState({ data, text, number });\r\n  }\r\n\r\n  onScroll = (delta) => {\r\n\r\n    const { keys } = this.props.tooltip;\r\n    if (keys.type !== 'TOPIC_PREVIEW') return;\r\n    if (delta > 0) {\r\n      this.fetchData(this.state.number + 1)\r\n    } else {\r\n      this.fetchData(this.state.number - 1)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    if (!this.state.data)\r\n      this.fetchData(this.state.number);\r\n\r\n  }\r\n\r\n  render() {\r\n    const { keys } = this.props.tooltip;\r\n\r\n    if (!this.state.text)\r\n      return null;\r\n\r\n    let header;\r\n    if (!this.state.data) {\r\n      header = <b>Заголовок</b>\r\n    } else {\r\n      header = <UserInfo data={this.state.data} isAuthor={false} isTooltip={true}/>\r\n    }\r\n\r\n    if (keys.type === 'TOPIC' || keys.type === 'TOPIC_PREVIEW')\r\n      return (\r\n        <TooltipWindow tooltip={this.props.tooltip} onScroll={this.onScroll}>\r\n          <TooltipHeader>\r\n            {header}\r\n          </TooltipHeader>\r\n          <TooltipBody>\r\n            <MsgText\r\n              data={this.state.data}\r\n              html={this.state.text}\r\n              topicId={keys.topicId}\r\n              style={{ maxHeight: \"min(550px, 80vh)\", overflowY: \"auto\" }}\r\n            />\r\n          </TooltipBody>\r\n        </TooltipWindow>\r\n      )\r\n    else\r\n      return null;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n  const {\r\n    info,\r\n    items,\r\n    item0\r\n  } = state.topic;\r\n\r\n  return {\r\n    info,\r\n    items,\r\n    item0\r\n  }\r\n}\r\n\r\nexport default (connect(mapStateToProps)(Tooltip): any );","//@flow\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport Tooltip from './tooltip'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { TooltipItemState } from 'src/reducers/tooltips'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype StateProps = {\r\n    items: Array<TooltipItemState>\r\n}\r\n\r\ntype Props = StateProps & DefaultProps;\r\n\r\nclass TooltipsList extends Component<Props> {\r\n\r\n    render() {\r\n\r\n        const { items } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                {items.map((item, i) => {\r\n                    return (\r\n                        <Tooltip key={item.hash} tooltip={item} keys={item.keys}>\r\n                        </Tooltip>\r\n                    )}\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n    const {\r\n        items\r\n    } = state.tooltips\r\n\r\n    return {\r\n        items,\r\n    }\r\n}\r\n\r\nexport default ( connect(mapStateToProps)(TooltipsList): any );","//@flow\r\nimport React, { Component, Fragment, useEffect } from 'react';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nimport { connect } from 'react-redux'\r\nimport NavBar from './components/nav_bar';\r\nimport Container from './components/container';\r\nimport NavBarFooter from './components/nav_bar_footer';\r\nimport TooltipsList from './components/tooltips/tooltips_list';\r\n\r\nimport { readOptions } from 'src/actions/options'\r\n\r\nimport type { State } from 'src/reducers'\r\nimport type { DefaultProps } from 'src/components'\r\n\r\ntype StateProps = {\r\n  theme: string\r\n}\r\n\r\ntype Props = StateProps & DefaultProps\r\n\r\nfunction App(props): Props {\r\n\r\n  useEffect(() => {\r\n    document.body.setAttribute('theme', props.theme);\r\n  })\r\n\r\n  return (\r\n    <HashRouter>\r\n      <NavBar />\r\n      <Container />\r\n      <NavBarFooter />\r\n      <TooltipsList />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state: State): StateProps => {\r\n\r\n  return {\r\n    theme: state.options.items.theme\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","//@flow\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware } from 'redux'\r\n\r\nimport thunk from 'redux-thunk'\r\n\r\n// eslint-disable-next-line \r\nimport { createLogger } from 'redux-logger'\r\n\r\nimport reducer from './reducers'\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst middleware = [thunk];\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n    //middleware.push(createLogger())\r\n}\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    applyMiddleware(...middleware)\r\n)\r\n\r\nconst Root = ({ store }) => (\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n)\r\n\r\n// for github pages\r\nwindow.hash = \"#\";\r\n\r\nReactDOM.render(<Root store={store} />,\r\n    document.getElementById('root'));\r\n\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}