{"version":3,"sources":["registerServiceWorker.js","utils.js","api.js","actions/topics_list.js","reducers/topics_list.js","reducers/topic.js","reducers/login.js","reducers/sections.js","reducers/bookmark.js","reducers/new_topic.js","reducers/new_message.js","reducers/tooltips.js","reducers/topic_preview.js","reducers/options.js","reducers/index.js","components/common/search.js","components/nav_bar.js","actions/login.js","components/login/logged_user.js","components/login/login_form.js","components/common/error.js","components/login/index.js","actions/sections.js","components/topics_list/section_select.js","components/topics_list/header.js","components/topics_list/row/pages.js","components/topics_list/row/topic_name_cell.js","actions/tooltips.js","components/extensions/link_to_post.js","components/topics_list/row/preview_link.js","components/topics_list/row/index.js","components/common/pages.js","actions/new_topic.js","components/common/text_editor.js","components/topics_list/new_topic.js","components/extensions/code_highlight.js","components/extensions/code1c.js","components/extensions/link_to_user.js","components/extensions/youtube_link.js","components/extensions/custom_link.js","components/topic/row/vote_item.js","components/topic/row/vote_chart.js","components/topic/row/vote.js","components/topic/row/msg_text.js","components/preview/preview_header.js","components/preview/topic_preview.js","components/topics_list/index.js","actions/topic.js","components/topic/header.js","components/topic/topic_info.js","components/topic/row/user_info.js","actions/new_message.js","components/topic/row/index.js","actions/bookmark.js","components/topic/footer.js","components/topic/new_message.js","components/topic/index.js","components/options/radio_option.js","components/options/string_option.js","components/options/index.js","actions/options.js","components/container.js","components/nav_bar_footer.js","components/tooltips/tooltip_header.js","components/tooltips/tooltip_body.js","components/tooltips/tooltip_window.js","components/tooltips/tooltip.js","components/tooltips/tooltips_list.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","groupBy","xs","key","reduce","rv","x","push","parseJSON","text","JSON","parse","e","replace","message","getMaxPage","answ","Math","min","ceil","childrenToText","children","map","value","type","displayName","props","number","domain","localStorage","getItem","urlTopicsList","urlTopicInfo","urlTopicMessages","urlLogin","urlLogout","urlCookies","urlSections","urlNewMessage","urlNewTopic","urlAddBookmark","getTopicsList","params","a","fetchJsonpAndGetJson","json","defaultInfo","id","answers_count","getTopicInfo","getTopicMessages","getMessage","n","from","to","length","data","find","val","String","getTopicMessagesCount","info","getLogin","getLogout","action","getCookies","getSections","postNewMessage","url","topic_id","fetch","method","body","paramsToString","mode","credentials","headers","redirect","result","postNewTopic","postBookmark","paramsPrefix","arr","undefined","join","fullUrl","fetchJsonp","response","responseJson","utils","REQUEST_TOPICS_LIST","RECEIVE_TOPICS_LIST","RECEIVE_TOPICS_LIST_FAILED","TOGGLE_PREVIEW","receiveTopicsList","items","receivedAt","Date","fetchTopicsListIfNeeded","dispatch","getState","topicsList","isFetching","shouldFetchTopicsList","page","reqestParams","topicsPerPage","options","topicsCount","topics","section","section_short_name","forum","user_id","mytopics","API","slice","fetchTopicsList","defaultTopicsListState","lastUpdated","ind","findIndex","item","topicId","Object","assign","showPreview","defaultTopicState","topic","item0","concat","defaultLoginState","logged","login","userid","username","hashkey","defaultSectionsState","tree","sections","forEach","shortn","fulln","defaultBookmarkState","bookmark","defaultNewTopicState","subject","isVoting","newTopic","toLowerCase","defaultNewMessageState","newMessage","defaultTooltipsState","tooltips","hash","tooltip","stringify","keys","i","coords","filter","defaultTopicPreviewState","topicPreview","user","userId","utime","vote","defaultOptionsState","voteColors","theme","autoRefreshTopicsList","autoRefreshTopicsListInterval","autoRefreshTopic","autoRefreshTopicInterval","showTooltips","tooltipDelay","showTooltipOnTopicsList","showTooltipOnPostLink","showYoutubeVideoTitle","replaceCatalogMista","fixBrokenLinks","readOption","name","defaultValue","readOptions","setItem","rootReducer","combineReducers","Search","useState","searchEngine","setSearchEngine","setText","doSearch","open","InputGroup","size","Prepend","DropdownButton","title","style","marginRight","className","variant","Dropdown","Item","eventKey","onSelect","FormControl","placeholder","paddingRight","onKeyPress","onChange","target","Append","marginLeft","marginTop","marginBottom","cursor","onClick","zIndex","NavBar","locationParams","queryString","search","menuItems","link","Nav","Link","href","Navbar","bg","expand","fixed","Brand","this","Toggle","aria-controls","Collapse","Form","inline","Component","connect","withRouter","loginComplete","loginFailed","shouldLogin","checkLogin","cookie","session","last_error","trim","user_name","entr_hash","doLoginIfNeeded","encodeURIComponent","password","doLogin","CustomToggle","React","forwardRef","ref","preventDefault","LoggedUser","onMenuSelect","event","onLogout","bind","userName","float","as","bsRole","Menu","Divider","LoginForm","onLogin","current","createRef","flexWrap","flex","maxLength","autoComplete","Button","margin","rel","ErrorElem","dangerouslySetInnerHTML","__html","Login","elem","receiveSections","fetchSectionsIfNeeded","shouldfetchSections","action2","SectionSelect","currentTarget","selected","sectionsElem","group","label","Control","Header","onSectionSelect","history","Pages","pages","maxPage","TopicNameCell","classes","classNames","user0","is_voting","closed","down","sectionHref","sect2","sect1","substr","overflowWrap","closeTooltip","LinkToPost","onMouseOver","persist","timer","setTimeout","showToolTip","stopPropagation","clearTimeout","onMouseOut","showTooltip","isPreview","pageX","y","pageY","setState","startsWith","pageParam","isNaN","PreviewLink","expanded","time","td","d","getDate","getMonth","getFullYear","today","dateFormat","aria-hidden","color","display","width","textAlign","currentPage","baseUrl","last20","parseInt","Pagination","active","postNewTopicIfNeeded","shouldPostNewTopic","fetchParams","message_text","topic_text","target_section","target_forum","rnd","round","random","voting","votingItems","onSuccess","TextEditor","onButtonCode1c","textArea","start","selectionStart","end","selectionEnd","oldText","len","replacement","substring","newText","formName","onVotingChange","checked","ctrlKey","parent","parentElement","tagName","toUpperCase","dispatchEvent","Event","cancelable","bubbles","showVoting","cols","rows","ButtonGroup","disabled","Check","NewTopic","onSectionChange","currentSection","onSubmit","onSubmitSuccess","refs","onSubjectChange","groupsElem","votingOptions","Text","readOnly","FormGroup","highlight","СтрокаРезультат","УстановленЦвет","ПоследнийЦвет","keywords","Set","split","Спецсиволы","мЦветФона","мЦветЧисла","мЦветСтроки","мЦветКлючевогоСлова1","ВСтроке","Токен","ПустаяСтрока","Строка","Сред","Нач","Длина","Прав","isKeyword","token","has","ДобавитьЧастьСтроки1С","Часть","Цвет","РазукраситьСтроку","СтрокаКода","ВСтрокеСкобка","ВСтрокеТильда","НачалоСтроки","ТокенДоТочки","Поз","ТекущийСимвол","charAt","lenth","Code","onShowClick","hidden","textArr","buttonText","buttonShow","linesCount","preStyle","overflow","height","LinkToUser","YoutubeLink","hrefName","v","videoId","apiKey","apiUrl","snippet","getVideoId","getVideoParams","CustomLink","parentText","escapedHref","regExp","RegExp","URL","newHref","set","pathname","query","class","fixBrokenLink","VoteItem","total","colors","img","percent","textDecoration","select","src","maxWwidth","alt","VoteChart","sum","Vote","voteOption","MsgText","res","txt","processCode1C","processLinksToPosts","voteElement","voteChart","html","processedHtml","processText","componentsMap","code","textComponent","activeHtml","PreviewHeader","date","onFirst","onPrev","onNext","onLast","TopicPreview","fetchData","onClickFirst","onClickNext","onClickPrev","onClickLast","maxHeight","overflowY","TopicsList","updateTopicsList","onPostNewTopicSuccess","scrollTo","document","position","top","letterSpacing","receiveTopic","now","closeTopic","shouldFetch","fetchTopicIfNeeded","_item0","first","_items","last","fetchTopic","fetchNewMessagesIfNeeded","fetchNewMessages","TopicInfo","yandexUrl","lineHeight","UserInfo","getElementById","offsetTop","dataStr","isAuthor","isYou","userClassNames","Row","author","addBookmark","Footer","onBookmarkClick","onRefreshClick","updateButton","NewMessage","voting_select","clearVoting","setVotingOption","votingElem","Topic","autoUpdate","updateTopic","onPostNewMessageSuccess","scrolledToHash","setInterval","nodeHash","DOMParser","parseFromString","firstChild","innerText","clearText","clearInterval","RadioOption","values","oneLine","valuesElem","htmlFor","descr","StringOption","postfix","Options","closeForm","resetOptions","applyOptions","onTabClick","activeTab","textContent","optionsParams","max","form","tabName","tabs","tab","row","rowElem","fontWeight","Container","routes","exact","path","component","NavBarFooter","TooltipHeader","closeWindow","onTouchEnd","TooltipBody","onScroll","startX","onTouchStart","nativeEvent","changedTouches","clientX","endX","abs","TooltipWindow","onCloseClick","onWheel","deltaY","axis","innerWidth","left","Children","toArray","header","handle","defaultClassNameDragging","onWheelCapture","Tooltip","delta","TooltipsList","useEffect","setAttribute","middleware","thunk","store","createStore","reducer","applyMiddleware","Root","ReactDOM","render","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1b89bc65.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nexport function today(td) {\n    var d = new Date();\n    return td.getDate() === d.getDate() && td.getMonth() === d.getMonth() && td.getFullYear() === d.getFullYear();\n}\n\nexport const groupBy = function (xs, key) {\n    return xs.reduce(function (rv, x) {\n        (rv[x[key]] = rv[x[key]] || []).push(x);\n        return rv;\n    }, {});\n};\n\nexport const parseJSON = (text) => {\n\n    try {\n        return JSON.parse(text);    \n    } catch(e) {\n\n    }\n\n    try {\n        text = text\n            .replace(/\\\\</g, '<')\n            .replace(/\\\\>/g, '>')\n            .replace(/\\\\&/g, '&')\n            .replace(/\\\\'/g, \"'\")\n            .replace(/\\\\\"/g, \"\")\n            .replace(/ \"/g, ' \\\\\"')\n            .replace(/\"\"/g, '\\\\\"\"')\n            .replace(/\\t/g, '\\\\t')\n            .replace(/\"(\\.| |\\?)/g, '\\\\\"$1')\n\n        //           console.log(text);\n        return JSON.parse(text);\n\n        //return eval(text);\n    } catch (e) {\n        console.error(e.message);\n        console.log(text);\n\n        return {};\n    }\n}\n\nexport const getMaxPage = (answ) => Math.min(Math.ceil(answ / 100), 10) || 1;\n\nexport const encodeText = (text) => {\n    text = text\n        .replace(/&/g, '%26')\n        .replace(/\\+/g, '%2B')\n\n    return text;\n}\n\nexport const compare = (obj1, obj2) => {\n\n    for (let key in obj2) {\n        if (obj1[key] !== obj2[key])\n            return false\n    }\n\n    return true;\n}\n\nexport const join = (obj, str) => {\n\n    let res = [];\n    for (let key in obj) {\n        res.push('' + key + ':' + obj[key]);\n    }\n\n    return res.join(str);\n}\n\nexport const childrenToText = (children) => {\n\n    if (!children) return children;\n\n    return children.map(value => {\n        if (typeof(value) === 'string') {\n            return value;\n        } else if (value.type === 'br') {\n            return '<br>'\n        } else if (value.type.displayName === 'Connect(LinkToPost)' || value.type.displayName === 'Connect(t)') {\n            return value.props.number;\n        } else {  \n            console.log(value);\n            return value;\n        }    \n    })    \n}","//@flow\nimport fetchJsonp from 'fetch-jsonp'\nimport * as utils from './utils'\n\nexport const domain: string = localStorage.getItem('domain') || 'https://forum.mista.ru';\n//export const domain = 'https://dev.mista.ru';\nexport const urlTopicsList: string = localStorage.getItem('urlTopicsList') || 'api/topic.php';\nexport const urlTopicInfo: string = localStorage.getItem('urlTopicInfo') || 'ajax_gettopic.php';\nexport const urlTopicMessages: string = localStorage.getItem('urlTopicMessages') || 'api/message.php';\nexport const urlLogin: string = localStorage.getItem('urlLogin') || 'ajax_login.php';\nexport const urlLogout: string = localStorage.getItem('urlLogout') || 'users.php'; // users.php?&action=exit\nexport const urlCookies: string = localStorage.getItem('urlCookies') || 'ajax_cookie.php';\nexport const urlSections: string = localStorage.getItem('urlSections') || 'ajax_getsectionslist.php';\nexport const urlNewMessage: string = localStorage.getItem('urlNewMessage') || 'topic.php?id=:id&page=1';\nexport const urlNewTopic: string = localStorage.getItem('urlNewTopic') || 'index.php';\nexport const urlAddBookmark: string = localStorage.getItem('urlAddBookmark') || 'ajax_addbookmark.php';\nexport const urlSearch: string = localStorage.getItem('urlSearch') || 'ajax_find.php';\n\n// Topics list\nexport type RequestTopicsList = {\n  topics?: number, // число тем, которые нужно вернуть (по умолчанию - 20);\n  utime?: number, // время (в формате unixtime) после которого надо вернуть ветки;\n  callback?: string, // если указано, то ответ заворачивается в вызов функции, имя которой передано в параметре (реализация JSONP)\n  forum?: string, // раздел форума (1c|it|life);\n  section_short_name?: string,\n  user_id?: string,\n  mytopics?: string\n}\n\nexport type ResponseTopicsListItem = {\n  id: number,\n  forum: string,\n  sect1: string,\n  sect2: string,\n  v8: string,\n  closed: number,\n  down: number,\n  text: string,\n  utime: number,\n  created: number,\n  user: string,\n  user0: string,\n  is_voting: number,\n  answ: number\n}\n\nexport type ResponseTopicsList = Array<ResponseTopicsListItem>;\n\nexport const getTopicsList = async (params: RequestTopicsList): Promise<ResponseTopicsList> => {\n  const json = await fetchJsonpAndGetJson(urlTopicsList, params);\n  return json;\n}\n\n\n// Topics info\nexport type RequestInfo = {\n  id: string // идентификатор (topic_id) темы\n}\n\nexport type ResponseVoteItem = {\n  select: string,\n  result: number\n}\n\nexport type ResponseInfo = {\n  id: string,\n  text: string,\n  forum?: string,\n  section?: string,\n  created?: string,\n  user_id?: string,\n  user_name?: string,\n  answers_count: string,\n  down?: number,\n  closed?: number,\n  deleted?: number,\n  is_voting?: number,\n  voting?: Array<ResponseVoteItem>\n}\n\nexport const defaultInfo = {\n  id: \"\",\n  text: \"\",\n  answers_count: \"\"\n}\n\nexport const getTopicInfo = async (params: RequestInfo): Promise<ResponseInfo> => {\n  const json = await fetchJsonpAndGetJson(urlTopicInfo, params);\n  return json;\n}\n\n\n// Topic messages\nexport type RequestMessages = {\n  id: number | string, // идентификатор (topic_id) темы\n  from?: number, // с какого сообщения. если не указан, то с первого\n  to?: number  // до какого сообщения. если не указан, то from+10\n}\n\nexport type ResponseMessage = {\n  id: string,\n  n: string,\n  user: string,\n  userId: string,\n  text: string,\n  utime: string,\n  vote: number\n}\n\nexport type ResponseMessages = Array<ResponseMessage>;\n\nexport const getTopicMessages = async (params: RequestMessages): Promise<ResponseMessages> => {\n  const json = await fetchJsonpAndGetJson(urlTopicMessages, params);\n  return json;\n}\n\nexport const getMessage = async (id: number | string, n: number): Promise<?ResponseMessage> => {\n  const json = await getTopicMessages({\n    id,\n    from: n,\n    to: n + 1\n  }\n  );\n\n  let data;\n  if (json && json.length > 0)\n    data = json.find(val => val.n === String(n));\n\n  return data;\n}\n\nexport const getTopicMessagesCount = async (id: number | string): Promise<number> => {\n  const info = await getTopicInfo({ id: String(id) });\n  return +info.answers_count;\n}\n\n// Login\nexport type RequestLogin = {\n  username: string, // логин (ник) пользователя\n  password: string, // пароль пользователя\n  callback?: string, // если указано, то ответ заворачивается в вызов функции, имя которой передано в параметре (реализация JSONP)\n}\n\nexport type ResponseLogin = {\n  userid: string,\n  username: string,\n  hashkey: string,\n  error?: string\n}\n\nexport const getLogin = async (params: RequestLogin): Promise<ResponseLogin> => {\n  const json = await fetchJsonpAndGetJson(urlLogin, params);\n  return json;\n}\n\nexport const getLogout = async (): Promise<any> => {\n  const params = { action: \"exit\" };\n  await fetchJsonpAndGetJson(urlLogout, params);\n}\n\n\n// Cookies\nexport type ResponseCookies = {\n  cookie: {\n    entr_id: string,\n    entr_key: string,\n    entr_hash: string\n  },\n  session: {\n    user_id: string,\n    user_name: string,\n    user_hash: string,\n    is_moderator: number,\n    light_moderator: number,\n    section: string,\n    show_moderator_tools: number,\n    last_error?: string\n  }\n}\n\nexport const getCookies = async (): Promise<ResponseCookies> => {\n  const json = await fetchJsonpAndGetJson(urlCookies);\n  return json;\n}\n\n\n// Sections\nexport type ResponseSection = {\n  id: number,\n  forum: string,\n  shortn: string,\n  fulln: string,\n  id: number\n}\n\nexport type ResponseSections = Array<ResponseSection>;\n\nexport const getSections = async (): Promise<ResponseSections> => {\n  const json = await fetchJsonpAndGetJson(urlSections);\n  return json;\n}\n\n\n// New message\nexport type RequestNewMessage = {\n  message_text: string,\n  action: \"new\",\n  topic_id: string,\n  rnd: number,\n  voting_select?: number,\n  as_admin?: boolean\n}\n\nexport const postNewMessage = async (params: RequestNewMessage): Promise<any> => {\n\n  let url = urlNewMessage.replace(':id', params.topic_id);\n\n  let result = await fetch(`${domain}/${url}`, {\n    method: 'POST',\n    body: paramsToString('', params),\n    mode: 'no-cors',\n    credentials: 'include',\n    headers: {\n      'Accept': 'text/html,application/xhtml+xml,application/xml',\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow'\n  });\n\n  return result;\n}\n\n\n// New topic\nexport type RequestNewTopic = {\n  action: \"new\",\n  rnd: number,\n  topic_text: string,\n  message_text: string,\n  target_section: string,\n  target_forum: string,\n  voting: number,\n  select1?: string,\n  select2?: string,\n  select3?: string,\n  select4?: string,\n  select5?: string,\n  select6?: string,\n  select7?: string,\n  select8?: string,\n  select9?: string,\n  select10?: string\n}\n\nexport const postNewTopic = async (params: RequestNewTopic): Promise<any> => {\n\n  await fetch(`${domain}/${urlNewTopic}`, {\n    method: 'POST',\n    body: paramsToString('', params),\n    mode: 'no-cors',\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  });\n}\n\n\n//Bookmark\nexport type RequestBookmark = {\n  id: string\n}\n\nexport const postBookmark = async (params: RequestBookmark) => {\n\n  await fetch(`${domain}/${urlAddBookmark}`, {\n    method: 'POST',\n    body: paramsToString('', params),\n    mode: 'no-cors',\n    credentials: 'include',\n  });\n}\n\n\n//Search\nexport type RequestSearch = {\n  keywords: string\n}\n\nexport type ResponseSearch = {\n\n}\n\nexport const postSearch = async (params: RequestSearch) => {\n\n  await fetch(`${domain}/${urlSearch}`, {\n    method: 'POST',\n    body: paramsToString('', params),\n    mode: 'no-cors',\n    credentials: 'include',\n  });\n}\n\nexport const paramsToString = (paramsPrefix: string, params: ?{}): string => {\n\n  if (!params)\n    return '';\n\n  let arr = [];\n  for (let key in params) {\n    if (params[key] !== undefined)\n      arr.push(key + '=' + params[key]);\n  }\n\n  if (arr.length > 0)\n    return paramsPrefix + arr.join('&');\n  else\n    return '';\n}\n\nexport const fetchJsonpAndGetJson = async (url: string, params: any): Promise<any> => {\n\n  let fullUrl = `${domain}/${url}${paramsToString('?', params)}`;\n  const response = await fetchJsonp(fullUrl);\n  let responseJson = await response.json();\n  let json;\n  if (typeof (responseJson) === 'string') {\n\n    try {\n      json = JSON.parse(responseJson)\n    } catch (e) {\n      json = utils.parseJSON(responseJson);\n    }\n  } else {\n    json = responseJson;\n  }\n  return json;\n}\n","//@flow\nimport * as API from '../api'\nimport type { RequestTopicsList, ResponseTopicsList } from 'src/api'\nimport type { State } from 'src/reducers'\n\nexport const REQUEST_TOPICS_LIST = 'REQUEST_TOPICS_LIST';\nexport const RECEIVE_TOPICS_LIST = 'RECEIVE_TOPICS_LIST';\nexport const RECEIVE_TOPICS_LIST_FAILED = 'RECEIVE_TOPICS_LIST_FAILED';\nexport const TOGGLE_PREVIEW = 'TOGGLE_PREVIEW';\n\nexport type typeREQUEST_TOPICS_LIST = {\n  type: typeof REQUEST_TOPICS_LIST\n}\n\nexport type typeRECEIVE_TOPICS_LIST = {\n  type: typeof RECEIVE_TOPICS_LIST,\n  items: ResponseTopicsList,\n  receivedAt: Date\n}\n\nexport type typeRECEIVE_TOPICS_LIST_FAILED = {\n  type: typeof RECEIVE_TOPICS_LIST_FAILED,\n  error: string,\n  receivedAt: Date\n}\n\nexport type typeTOGGLE_PREVIEW = {\n  type: typeof TOGGLE_PREVIEW,\n  topicId: string\n}\n\nexport type TopicsListAction = typeREQUEST_TOPICS_LIST | typeRECEIVE_TOPICS_LIST | typeRECEIVE_TOPICS_LIST_FAILED | typeTOGGLE_PREVIEW;\n\nexport const requestTopicsList = (): typeREQUEST_TOPICS_LIST => ({\n  type: REQUEST_TOPICS_LIST\n})\n\nexport const receiveTopicsList = (data: ResponseTopicsList): typeRECEIVE_TOPICS_LIST => ({\n  type: RECEIVE_TOPICS_LIST,\n  items: data,\n  receivedAt: new Date()\n})\n\nconst fetchTopicsList = (params: any) => async (dispatch: any, getState: any) => {\n\n  dispatch(requestTopicsList())\n\n  const page = params.page || 1;\n  let reqestParams: RequestTopicsList = {};\n\n  let topicsPerPage = +getState().options.items.topicsPerPage;\n  if (topicsPerPage > 99) topicsPerPage = 99;\n\n  let topicsCount = page * topicsPerPage;\n  reqestParams.topics = topicsCount;\n\n  if (params.section)\n    reqestParams.section_short_name = params.section;\n\n  if (params.forum)\n    reqestParams.forum = params.forum;\n\n  if (params.user_id)\n    reqestParams.user_id = params.user_id;\n\n  if (params.mytopics)\n    reqestParams.mytopics = params.mytopics;\n\n  try {\n    const json = await API.getTopicsList(reqestParams);\n\n    let data = json.slice(-topicsPerPage);\n    dispatch(receiveTopicsList(data));\n  } catch (e) {\n\n    let action: TopicsListAction = {\n      type: RECEIVE_TOPICS_LIST_FAILED,\n      error: e.message,\n      receivedAt: new Date()\n    }\n    dispatch(action);\n    console.error(e);\n  }\n\n}\n\nconst shouldFetchTopicsList = (state: State) => {\n  const topicsList = state.topicsList;\n  if (!topicsList) {\n    return true\n  }\n  if (topicsList.isFetching) {\n    return false\n  }\n  return true\n}\n\nexport const fetchTopicsListIfNeeded = (params: any): any => (dispatch: any, getState: any) => {\n  if (shouldFetchTopicsList(getState())) {\n    return dispatch(fetchTopicsList(params));\n  }\n}\n","//@flow\nimport type { TopicsListAction } from 'src/actions/topics_list'\nimport type { ResponseTopicsListItem } from 'src/api'\n\nimport { REQUEST_TOPICS_LIST, RECEIVE_TOPICS_LIST, RECEIVE_TOPICS_LIST_FAILED, TOGGLE_PREVIEW } from 'src/actions/topics_list'\n\nexport type TopicsListItem = ResponseTopicsListItem & {\n  showPreview?: ?boolean\n}\n\nexport type TopicsListState = {\n  isFetching: boolean;\n  items: Array<TopicsListItem>,\n  error?: ?string,\n  lastUpdated?: Date\n};\n\nexport const defaultTopicsListState: TopicsListState = {\n  isFetching: false,\n  items: []\n}\n\nconst topicsList = (state: TopicsListState = defaultTopicsListState, action: TopicsListAction): TopicsListState => {\n\n  switch (action.type) {\n    case REQUEST_TOPICS_LIST:\n      return {\n        ...state,\n        error: null,\n        isFetching: true\n      }\n    case RECEIVE_TOPICS_LIST:\n      return {\n        ...state,\n        isFetching: false,\n        items: action.items,\n        lastUpdated: action.receivedAt\n      }\n    case RECEIVE_TOPICS_LIST_FAILED:\n      return {\n        ...state,\n        isFetching: false,\n        error: action.error,\n        lastUpdated: action.receivedAt\n      }\n    case TOGGLE_PREVIEW:\n      let items = state.items.slice();\n      const ind = items.findIndex(item => item.id === action.topicId);\n\n      let item = Object.assign({}, items[ind]);\n      item.showPreview = !item.showPreview;\n      items[ind] = item;\n\n      return {\n        ...state,\n        items\n      }\n    default:\n      return state\n  }\n}\n\nexport default topicsList;","//@flow \nimport { defaultInfo } from 'src/api'\nimport type { ResponseInfo, ResponseMessages, ResponseMessage } from 'src/api'\nimport type { TopicAction } from 'src/actions/topic'\n\nexport type TopicState = {\n  isFetching: boolean;\n  info: ResponseInfo,\n  item0?: ?ResponseMessage,\n  items: ResponseMessages,\n  lastUpdated?: ?Date,\n  error?: ?string\n};\n\nexport const defaultTopicState: TopicState = {\n    isFetching: false,\n    info: defaultInfo,\n    items: []\n}\n\nconst topic = (state: TopicState = defaultTopicState, action: TopicAction): TopicState => {\n    switch (action.type) {\n        case 'REQUEST_TOPIC':\n            return {\n                ...state,\n                isFetching: true,\n                error: null\n            }\n        case 'RECEIVE_TOPIC':\n            return {\n                ...state,\n                isFetching: false,\n                info: action.info,\n                item0: action.item0,\n                items: action.items,\n                lastUpdated: action.receivedAt,\n                error: null\n            }\n        case 'RECEIVE_TOPIC_FAILED':\n            return {\n                ...state,\n                isFetching: false,\n                lastUpdated: action.receivedAt,\n                error: action.error\n            }\n        case 'REQUEST_NEW_MESSAGES':\n            return {\n                ...state,\n                isFetching: true\n            }\n            \n        case 'RECEIVE_NEW_MESSAGES':\n\n            let info = state.info;\n            if (action.items.length > 0) {\n                info.answers_count = action.items[action.items.length - 1].n;\n            }\n\n            return {\n                ...state,\n                isFetching: false,\n                items: state.items.concat(action.items),\n                info,\n                lastUpdated: action.receivedAt\n            }\n\n        case 'CLOSE_TOPIC': \n        \n            return {\n                ...state,\n                items: [],\n                info: defaultInfo,\n                item0: null,\n                lastUpdated: null,\n                error: null            \n            }\n        default:\n            return state\n    }\n}\n\nexport default topic;","//@flow \nimport type { LoginAction } from 'src/actions/login'\n\nexport type LoginState = {\n  isFetching: boolean;\n  logged: any,\n  userid?: string,\n  username?: string,\n  hashkey?: string,\n  error?: string\n};\n\nexport const defaultLoginState: LoginState = {\n    isFetching: false,\n    logged: undefined\n}\n\nconst login = (state: LoginState = defaultLoginState, action: LoginAction): LoginState => {\n    switch (action.type) {\n        case 'LOGIN_START':\n            return {\n                ...state,\n                isFetching: true\n            }\n        case 'LOGIN_COMPLETE':\n            return {\n                ...state,\n                ...action.data,\n                isFetching: false,\n                logged: true,\n                error: undefined\n            }\n         case 'LOGIN_FAILED':\n            return {\n                isFetching: false,\n                logged: false,\n                error: action.error\n            }\n        case 'LOGOUT_COMPLETE':\n            return {\n                ...state,\n                userid: undefined,\n                username: undefined,\n                hashkey: undefined,\n                logged: false\n            }\n        default:\n            return state\n    }\n}\n\nexport default login;","//@flow \nimport type { ResponseSections } from 'src/api'\nimport type { SectionsAction } from 'src/actions/sections'\n\nimport { groupBy } from 'src/utils'\n\nexport type SectionsState = {\n  isFetching: boolean;\n  items: ResponseSections,\n  tree: {[string]: any},\n  map: {[string]: any},\n  lastUpdated?: Date,\n  error?: ?string\n};\n\nexport const defaultSectionsState: SectionsState = {\n    isFetching: false,\n    items: [],\n    tree: {},\n    map: {}\n}\n\nconst sections = (state: SectionsState = defaultSectionsState, action: SectionsAction): SectionsState => {\n    switch (action.type) {\n        case 'REQUEST_SECTIONS':\n            return {\n                ...state,\n                isFetching: true\n            }\n        case 'RECEIVE_SECTIONS':\n\n            let map = {};\n            action.items.forEach(val => {\n                map[val.shortn] = val.fulln\n            });\n\n            return {\n                ...state,\n                isFetching: false,\n                items: action.items,\n                tree: groupBy(action.items, 'forum'),\n                map,\n                lastUpdated: action.receivedAt\n            }\n        default:\n            return state\n    }\n}\n\nexport default sections;","//@flow\nimport type { AddBookmarkAction } from 'src/actions/bookmark'\n\nexport type BookmarkState = {\n  isFetching: boolean\n};\n\nexport const defaultBookmarkState: BookmarkState = {\n  isFetching: false\n};\n\nconst bookmark = (state: BookmarkState = defaultBookmarkState, action: AddBookmarkAction): BookmarkState => {\n    switch (action.type) {\n        case 'ADD_BOOKMARK_START':\n            return {\n                ...state,\n                isFetching: true\n            }\n        case 'ADD_BOOKMARK_COMPLETE':\n        case 'ADD_BOOKMARK_FAIL':\n            return {\n                ...state,\n                isFetching: false\n            }\n        default:\n            return state\n    }\n}\n\nexport default bookmark;","//@flow\nimport type { NewTopicAction } from '../actions/new_topic'\nimport type { ResponseSection } from 'src/api'\n\nexport type NewTopicState = {\n    isFetching: boolean,\n    section: ?ResponseSection,\n    text: string,\n    subject: string,\n    forum: string,\n    isVoting: boolean,\n    error?: ?string\n};\n\nexport const defaultNewTopicState: NewTopicState = {\n    isFetching: false,\n    section: null,\n    text: '',\n    subject: '',\n    forum: '1C',\n    isVoting: false\n}\n\nconst newTopic = (state: NewTopicState = defaultNewTopicState, action: NewTopicAction): NewTopicState => {\n    switch (action.type) {\n        case 'POST_NEW_TOPIC_START':\n            return {\n                ...state,\n                isFetching: true,\n                error: undefined\n            }\n        case 'POST_NEW_TOPIC_COMPLETE':\n            return {\n                ...state,\n                isFetching: false\n            }\n       case 'POST_NEW_TOPIC_ERROR':\n            return {\n                ...state,\n                isFetching: false,\n                error: action.error\n            }\n        case 'NEW_TOPIC_SECTION':\n            return {\n                ...state,\n                section: action.section,\n                forum: action.section == null ? '' : action.section.forum.toLowerCase()\n            }\n        case 'NEW_TOPIC_TEXT':\n            return {\n                ...state,\n                text: action.text\n            }\n        case 'NEW_TOPIC_SUBJECT':\n            return {\n                ...state,\n                subject: action.text\n            }\n        case 'NEW_TOPIC_CLEAR':\n            return {\n                ...state,\n                text: '',\n                subject: '',\n                isVoting: false\n            }\n        case 'SHOW_VOTING':\n            return {\n                ...state,\n                isVoting: action.data\n            }\n        default:\n            return state\n    }\n}\n\nexport default newTopic;","//@flow\nimport type { NewMessageAction } from 'src/actions/new_message'\n\nexport type NewMessageState = {\n    isFetching: boolean;\n    text: string\n};\n\nexport const defaultNewMessageState: NewMessageState = {\n    isFetching: false,\n    text: ''\n}\n\nconst newMessage = (state: NewMessageState = defaultNewMessageState, action: NewMessageAction): NewMessageState => {\n    switch (action.type) {\n        case 'POST_NEW_MESSAGE_START':\n            return {\n                ...state,\n                isFetching: true\n            }\n        case 'POST_NEW_MESSAGE_COMPLETE':\n            return {\n                ...state,\n                isFetching: false\n            }\n        case 'NEW_MESSAGE_TEXT':\n            return {\n                ...state,\n                text: action.text\n            }\n        case 'ADD_MESSAGE_TEXT':\n            return {\n                ...state,\n                text: state.text + action.text\n            }\n        default:\n            return state\n    }\n}\n\nexport default newMessage;","//@flow\nimport type { TooltipItem, TooltipsAction } from 'src/actions/tooltips'\n\nexport type TooltipItemState = {\n    i: number,\n    hash: string\n} & TooltipItem\n\nexport type TooltipsState = {\n    items: Array<TooltipItemState>\n};\n\nexport const defaultTooltipsState: TooltipsState = {\n    items: []\n}\n\nconst tooltips = (state: TooltipsState = defaultTooltipsState, action: TooltipsAction): TooltipsState => {\n    let hash: string;\n    let items: Array<TooltipItemState>;\n    let tooltip;\n    switch (action.type) {\n        case 'CREATE_TOOLTIP':\n\n            items = state.items.slice();\n\n            hash = JSON.stringify(action.keys);\n            var ind = items.findIndex(val => val.hash === hash);\n            if (ind === - 1)\n                items.push({\n                    i: 0,\n                    keys: action.keys,\n                    hash,\n                    coords: action.coords\n                });\n            else {   \n                tooltip = Object.assign({}, items[ind]);\n                tooltip.coords = action.coords;\n                //to reset draggable position\n                tooltip.i += 1;\n                items[ind] = tooltip;\n            }\n\n            return {\n                ...state,\n                items\n            }\n        case 'CLOSE_TOOLTIP':\n            hash = JSON.stringify(action.keys);\n            return {\n                ...state,\n                items: state.items.filter(val => val.hash !== hash)\n            }\n        case 'CLEAR_TOOLTIPS':\n            if (state.items.length === 0)\n                return state\n            else     \n                return {\n                    ...state,\n                    items: []\n                }\n\n        default:\n            return state\n    }\n}\n\nexport default tooltips;","//@flow\nimport type { TopicPreviewAction } from 'src/actions/topic_preview'\nimport type { ResponseMessage } from 'src/api'\n\nexport type TopicPreviewState = {\n    items: {[string]: ResponseMessage | null}\n};\n\nexport const defaultTopicPreviewState: TopicPreviewState = {\n    items: {}\n};\n\nconst topicPreview = (state: TopicPreviewState = defaultTopicPreviewState, action: TopicPreviewAction): TopicPreviewState => {\n\n    let previewItem;\n\n    switch (action.type) {\n         case 'SHOW_PREVIEW':\n\n            previewItem = state[action.topicId];\n            if (previewItem === undefined)\n                state.items[action.topicId] = {\n                    n: '0',\n                    id: action.topicId,\n                    text: '',\n                    user: '',\n                    userId: '',\n                    utime: '0',\n                    vote: 0\n                };    \n            return {\n                ...state,\n            }\n         case 'CLOSE_PREVIEW': {\n            delete state.items[action.topicId];\n            return {\n                ...state\n            }\n         }\n        case 'RECEIVE_PREVIEW_TEXT':\n\n            previewItem = state.items[action.topicId];\n            if (previewItem === undefined)\n                return state;\n            else\n                state.items[action.topicId] = action.message;        \n            \n            return {\n                ...state,\n            }\n        default:\n            return state\n    }\n}\n\nexport default topicPreview;","//@flow\nexport type Column = {\n  name: string,\n  className?: string,\n  width?: string\n}\n\nexport type OptionsItems = {\n  theme: 'yellow' | 'lightgray' | 'dark',\n  topicsPerPage: string,\n  autoRefreshTopicsList: string,\n  autoRefreshTopicsListInterval: string,\n  autoRefreshTopic: string,\n  autoRefreshTopicInterval: string,\n  contetnMaxWidth?: string,\n  tooltipDelay: string,\n  showTooltips: string,\n  showTooltipOnTopicsList: string\n}\n\nexport type OptionsState = {\n  voteColors: Array<string>,\n  items: OptionsItems,\n  show?: boolean\n};\n\nexport const defaultOptionsState: OptionsState = {\n  voteColors: [\n    \"#FF1616\", //1\n    \"#1A861A\", //2\n    \"#0023FF\", //3\n    \"#FF6B18\", //4\n    \"#9B3A6E\", //5\n    \"#567655\", //6\n    \"#233345\", //7\n    \"#CC0000\", //8\n    \"#00CCCC\", //9\n    \"#0000CC\", //10\n  ],\n  items: {\n    theme: 'lightgray',\n    topicsPerPage: '20',\n    autoRefreshTopicsList: 'false',\n    autoRefreshTopicsListInterval: '60',\n    autoRefreshTopic: 'true',\n    autoRefreshTopicInterval: '60',\n    //tooltips\n    showTooltips: 'true',\n    tooltipDelay: '500',\n    showTooltipOnTopicsList: 'true',\n    showTooltipOnPostLink: 'true',\n    //links\n    showYoutubeVideoTitle: 'true',\n    replaceCatalogMista: 'true',\n    fixBrokenLinks: 'true',\n  }\n}\n\nfunction readOption(name, defaultValue) {\n  return window.localStorage.getItem(name) || defaultValue;\n}\n\nfunction readOptions() {\n  \n  let state: OptionsState = defaultOptionsState;\n  for (let key in state.items) {\n    state.items[key] = readOption(key, state.items[key]);\n  }\n\n  return state;\n}\n\nconst options = (state: OptionsState, action: any): OptionsState => {\n\n  if (!state)\n    state = readOptions();\n\n  switch (action.type) {\n\n    case 'READ_OPTIONS':\n\n      let items = Object.assign({}, defaultOptionsState.items);\n      for (let key in items) {\n        items[key] = readOption(key, defaultOptionsState.items[key]);\n      }\n\n      return {\n        ...state,\n        items\n      }\n\n    case 'SAVE_OPTIONS':\n\n      for (let key in action.options) {\n        window.localStorage.setItem(key, String(action.options[key]));\n      }\n\n      return {\n        ...state,\n        items: action.options\n      }\n    default:\n      return state\n  }\n}\n\nexport default options;","//@flow\nimport { combineReducers } from 'redux'\n\nimport topicsList from './topics_list'\nimport type { TopicsListState } from './topics_list'\n\nimport topic from './topic'\nimport type { TopicState } from './topic'\n\nimport login from './login'\nimport type { LoginState } from './login'\n\nimport sections from './sections'\nimport type { SectionsState } from './sections'\n\nimport bookmark from './bookmark'\nimport type { BookmarkState } from './bookmark'\n\nimport newTopic from './new_topic'\nimport type { NewTopicState } from './new_topic'\n\nimport newMessage from './new_message'\nimport type { NewMessageState } from './new_message'\n\nimport tooltips from './tooltips'\nimport type { TooltipsState } from './tooltips'\n\nimport topicPreview from './topic_preview'\nimport type { TopicPreviewState } from './topic_preview'\n\nimport options from './options'\nimport type { OptionsState } from './options'\n\nexport type State = {\n  topicsList: TopicsListState,\n  sections: SectionsState,\n  topic: TopicState,\n  login: LoginState,\n  bookmark: BookmarkState,\n  newTopic: NewTopicState,\n  newMessage: NewMessageState,\n  tooltips: TooltipsState,\n  topicPreview: TopicPreviewState,\n  options: OptionsState\n}\n\nconst rootReducer = combineReducers({\n  topicsList,\n  sections,\n  topic,\n  login,\n  bookmark,\n  newTopic,\n  newMessage,\n  tooltips,\n  topicPreview,\n  options\n})\n\nexport default (rootReducer: any);","//@flow\nimport React, { Component, useState } from 'react'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\n\nimport './search.css'\n\nconst Search = () => {\n\n  const [searchEngine, setSearchEngine] = useState('Яндекс');\n  const [text, setText] = useState('');\n\n  function onKeyPress(e: any) {\n    if (e.key === 'Enter') {\n      doSearch();\n    }\n  }\n\n  function doSearch() {\n\n    let url;\n    if (searchEngine === 'Яндекс') {\n      url = `https://www.yandex.ru/search/?text=${text}&site=forum.mista.ru`;\n\n    } else if (searchEngine === 'Google') {\n      url = `https://www.google.ru/search?q=${text}+site:forum.mista.ru`\n    }\n\n    window.open(url);\n\n    setText('');\n\n  }\n\n  return (\n    <InputGroup size=\"sm\">\n      <InputGroup.Prepend>\n        <DropdownButton id=\"search-engine\" title=\"\" size=\"sm\" style={{ marginRight: \"2px\" }} className='button' variant=\"light\">\n          <Dropdown.Item eventKey=\"Яндекс\" onSelect={() => setSearchEngine(\"Яндекс\")}>Яндекс</Dropdown.Item>\n          <Dropdown.Item eventKey=\"Google\" onSelect={() => setSearchEngine(\"Google\")}>Google</Dropdown.Item>\n        </DropdownButton>\n      </InputGroup.Prepend>\n      <FormControl\n        type=\"text\"\n        placeholder={`${searchEngine}: поиск`}\n        style={{ marginRight: \"4px\", paddingRight: \"27px\" }}\n        className='input'\n        onKeyPress={onKeyPress}\n        onChange={e => setText(e.target.value)}\n        value={text}\n      />\n      <InputGroup.Append style={{ marginLeft: \"-25px\", marginTop: \"auto\", marginBottom: \"auto\", cursor: \"pointer\" }} onClick={doSearch}>\n        <i className=\"fa fa-search input\" style={{ zIndex: 1000 }} />\n      </InputGroup.Append>\n    </InputGroup>\n  )\n\n}\n\nexport default (Search: any);","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Form from 'react-bootstrap/Form'\nimport queryString from 'query-string'\nimport { withRouter } from 'react-router-dom'\n\nimport Search from 'src/components/common/search'\nimport { fetchTopicsListIfNeeded } from 'src/actions/topics_list'\n\nimport './nav_bar.css'\n\nclass NavBar extends Component {\n\n    onClick = (e) => {\n        const { dispatch, location } = this.props;\n        let locationParams = queryString.parse(location.search);\n        dispatch(fetchTopicsListIfNeeded(locationParams));\n    }\n\n    render() {\n\n        const menu = [\n            { name: '1С', link: `${window.hash}/index.php?forum=1C` },\n            { name: 'IT', link: `${window.hash}/index.php?forum=IT` },\n            { name: 'JOB', link: `${window.hash}/index.php?forum=JOB` },\n            { name: 'LIFE', link: `${window.hash}/index.php?forum=LIFE` },\n            { name: 'Wiki', link: 'https://wiki.mista.ru' },\n            { name: 'Книга знаний', link: 'https://kb.mista.ru' },\n        ];\n\n        const menuItems = menu.map((item, i) => {\n            return (\n                <Nav.Item key={i}>\n                    <Nav.Link href={item.link}>\n                        {item.name}\n                    </Nav.Link>\n                </Nav.Item>\n            )\n        });\n        \n        return (\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" fixed=\"top\">\n                <Navbar.Brand\n                    href={`${window.hash}`} \n                    onClick={this.onClick}>\n                    React.Mista\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse>\n                    <Nav className=\"mr-auto\">\n                        {menuItems}\n                    </Nav>\n                    <Form inline>\n                        <Search />\n                    </Form>\n               </Navbar.Collapse>\n            </Navbar>\n        )\n    }\n}\n\nexport default connect()(withRouter(NavBar));","//@flow\nimport * as API from 'src/api'\nimport type { RequestLogin, ResponseLogin } from 'src/api'\nimport type { State } from 'src/reducers'\n\nexport type LOGIN_START = {\n  type: 'LOGIN_START',\n}\n\nexport type LOGIN_COMPLETE = {\n  type: 'LOGIN_COMPLETE',\n  data: ResponseLogin\n}\n\nexport type CHECK_LOGIN_START = {\n  type: 'CHECK_LOGIN_START'\n}\n\nexport type LOGOUT_START = {\n  type: 'LOGOUT_START'\n}\n\nexport type LOGOUT_COMPLETE = {\n  type: 'LOGOUT_COMPLETE'\n}\n\nexport type LOGIN_FAILED = {\n  type: 'LOGIN_FAILED',\n  error: string\n}\n\n\nexport type LoginAction = LOGIN_START | LOGIN_COMPLETE | LOGIN_FAILED | CHECK_LOGIN_START | LOGOUT_START | LOGOUT_COMPLETE;\n\nexport const loginStart = (): LOGIN_START => {\n\n  return {\n    type: 'LOGIN_START'\n  }\n}\n\nexport const loginComplete = (json: ResponseLogin): LOGIN_COMPLETE => {\n\n  return {\n    type: 'LOGIN_COMPLETE',\n    data: json\n  }\n}\n\nexport const loginFailed = (error: string): LOGIN_FAILED => {\n\n  return {\n    type: 'LOGIN_FAILED',\n    error\n  }\n}\n\nexport const checkLoginStart = (): CHECK_LOGIN_START => {\n\n  return {\n    type: 'CHECK_LOGIN_START'\n  }\n}\n\nexport const logoutStart = (): LOGOUT_START => {\n\n  return {\n    type: 'LOGOUT_START'\n  }\n}\n\nexport const logoutComplete = (): LOGOUT_COMPLETE => {\n\n  return {\n    type: 'LOGOUT_COMPLETE'\n  }\n}\n\nconst shouldLogin = (state: State): boolean => {\n  const { login } = state;\n  if (!login) {\n    return true\n  }\n  if (login.isFetching) {\n    return false\n  }\n  return true\n}\n\nexport const checkLogin = (params: any): any => async (dispatch: any) => {\n\n  dispatch(checkLoginStart());\n\n  let json;\n  try {\n    json = await API.getCookies();\n  } catch (e) {\n    dispatch(loginFailed(e.message));\n    return;\n  }\n  const { cookie, session } = json;\n\n  if (session && session.user_id) {\n\n    let error = (session.last_error || '').trim();\n    if (error === 'Не указано сообщение.') error = '';\n    dispatch(loginComplete({\n      error,\n      userid: session.user_id,\n      username: session.user_name,\n      hashkey: cookie.entr_hash\n    }));\n  } else\n    dispatch(loginFailed(''));\n}\n\nexport const checkLoginIfNeeded = (params: any): any => (dispatch: any, getState: any) => {\n  if (shouldLogin(getState())) {\n    return dispatch(checkLogin(params))\n  }\n}\n\nexport const doLogout = (params: any): any => async (dispatch: any) => {\n\n  dispatch(logoutStart());\n\n  try {\n    API.getLogout();\n  } catch (e) {\n\n    dispatch(logoutComplete());\n    checkLogin();\n\n  }\n\n}\n\nexport const doLogin = (params: RequestLogin): any => async (dispatch: any) => {\n\n  dispatch(loginStart());\n\n  try {\n\n    const json = await API.getLogin({\n      username: encodeURIComponent(params.username),\n      password: encodeURIComponent(params.password)\n    })\n    if (!json.error) {\n      dispatch(loginComplete(json));\n    } else {\n      dispatch(loginFailed(\n        'ОШИБКА: Вход не выполнен! Возможно указан неверный пароль.'\n      ));\n    }\n\n  } catch (err) {\n    console.error('Login error :', err);\n    dispatch(loginFailed(err.message));\n  }\n\n}\n\nexport const doLoginIfNeeded = (params: RequestLogin): any => (dispatch: any, getState: any) => {\n  if (shouldLogin(getState())) {\n    return dispatch(doLogin(params))\n  }\n}","//@flow\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Dropdown } from 'react-bootstrap'\n\nimport { doLogout } from 'src/actions/login'\nimport { domain } from 'src/api'\n\nimport type { DefaultProps } from 'src/components'\n\ntype LoggedUserProps = {\n    userId: string,\n    userName: string    \n}\n\ntype Props = LoggedUserProps & DefaultProps;\n\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n  <span\n    ref={ref} \n    style={{ cursor: \"pointer\" }} \n    className='link'\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n  </span>\n));\n\nclass LoggedUser extends Component<Props> {\n\n    onLogout;\n\n    constructor(props: Props) {\n        super(props);\n        this.onLogout = this.onLogout.bind(this);\n    }\n    \n    onLogout(event: any) {\n\n        event.preventDefault();\n\n        const { dispatch } = this.props;\n        dispatch(doLogout());  \n    }\n\n    onMenuSelect = (eventKey: any, event: Object): any => {\n\n        if (eventKey === 'exit') {\n           this.onLogout(event);\n        }\n\n    }\n\n    render() {\n\n        const { userId, userName } = this.props;\n        return (\n            <div style={{float: \"left\"}}>\n                <Dropdown id=\"dropdown-custom-menu\" onSelect={this.onMenuSelect}>\n                    <span>Привет, </span>\n                    <Dropdown.Toggle as={CustomToggle} bsRole=\"toggle\">{userName} ▼</Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item eventKey=\"profile\" href={`${domain}/users.php?id=${userId}`}>Профиль</Dropdown.Item>\n                        <Dropdown.Item eventKey=\"myTopics\" href={`${window.hash}/index.php?user_id=${userId}`}>Мои темы</Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"options\" href={`${window.hash}/options.php`}>Настройки</Dropdown.Item>\n                        <Dropdown.Divider />\n                        <Dropdown.Item eventKey=\"exit\">Выход</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n            </div>\n        )\n    }\n}\n\nexport default ( connect()(withRouter(LoggedUser)): any );","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { FormControl, Button } from 'react-bootstrap'\n\nimport { doLoginIfNeeded } from 'src/actions/login'\n\nimport type { DefaultProps } from 'src/components'\nimport type { LoginState } from 'src/reducers/login'\nimport type { State } from 'src/reducers'\n\ntype Props = LoginState & DefaultProps;\n\nclass LoginForm extends Component<Props> {\n\n    username: any;\n    password: any;\n\n    constructor(props) {\n        super(props);\n        this.username = React.createRef();  \n        this.password = React.createRef();  \n    }\n        \n    onLogin = (event) => {\n\n        event.preventDefault();\n\n        const { dispatch } = this.props;\n\n        const params = {\n            username: this.username.current.value,\n            password: this.password.current.value\n        }\n        dispatch(doLoginIfNeeded(params));  \n    }\n\n    render() {\n\n        return (\n            <div>\n                <form name=\"enterform\" className=\"flex-row\" style={{flexWrap: \"wrap\"}}>\n                    <FormControl \n                        type=\"text\" \n                        placeholder=\"Имя\" \n                        ref={this.username} \n                        size=\"sm\" \n                        style={{marginRight: \"5px\", flex: \"0 1 300px\"}}\n                    />\n                    <FormControl \n                        type=\"password\" \n                        placeholder=\"Пароль\" \n                        maxLength=\"20\" \n                        autoComplete=\"off\" \n                        ref={this.password}\n                        size=\"sm\" \n                        style={{marginRight: \"5px\", flex: \"0 1 300px\"}}\n                    />\n                    <Button \n                        size=\"sm\"\n                        variant=\"light\" \n                        onClick={this.onLogin}\n                    >Войти</Button>\n                </form>\n                <p style={{margin: \"0px\"}}>Войти можно на сайте <a href=\"https://forum.mista.ru/\">forum.mista.ru</a></p>\n                <a rel=\"nofollow\" href=\"https://forum.mista.ru/user_registration.php\">Регистрация</a>\n                <span style={{ margin: \"5px\" }}>|</span>\n                <a rel=\"nofollow\" href=\"https://forum.mista.ru/remember_password.php\">Забыли пароль?</a>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): LoginState => {\n    return state.login;\n}\n\nexport default ( connect(mapStateToProps)(LoginForm): any );","//@flow\nimport React from 'react'\n\nimport './error.css'\n\ntype Props = {\n  text: ?string\n}\n\nconst ErrorElem = (props: Props): any => {\n  if (!props.text)\n    return null;\n\n  return (\n    <div className=\"error\" dangerouslySetInnerHTML={{ __html: props.text }}></div>\n  )\n}\n\nexport default ErrorElem;","//@flow\nimport React, { Fragment, Component } from 'react'\nimport { connect } from 'react-redux'\nimport LoggedUser from './logged_user'\nimport LoginForm from './login_form'\nimport ErrorElem from '../common/error'\n\nimport { checkLoginIfNeeded } from 'src/actions/login'\n\nimport type { State } from 'src/reducers'\nimport type { DefaultProps } from 'src/components'\nimport type { LoginState } from 'src/reducers/login'\n\ntype Props = LoginState & DefaultProps;\n\nclass Login extends Component<Props> {\n\n    componentDidMount() {\n        const { dispatch } = this.props;\n        dispatch(checkLoginIfNeeded());        \n    }\n\n    render() {\n\n        const { logged, userid, username, error, dispatch } = this.props;\n\n        let elem;\n        if (logged === true) \n            elem = <LoggedUser dispatch={dispatch} userId={userid} userName={username} />\n        else if (logged === false)\n            elem = <LoginForm /> \n        else \n            elem = null;   \n\n        return (\n            <Fragment>\n                {elem}\n                {error && <ErrorElem text={error} />}\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): LoginState => {\n    \n    return state.login;\n}\n\nexport default ( connect(mapStateToProps)(Login): any );","//@flow\nimport * as API from 'src/api'\nimport type { ResponseSections } from 'src/api'\nimport type { State } from 'src/reducers'\n\nexport type REQUEST_SECTIONS = {\n  type: 'REQUEST_SECTIONS',\n}\n\nexport type RECEIVE_SECTIONS = {\n  type: 'RECEIVE_SECTIONS',\n  items: ResponseSections,\n  receivedAt: Date\n}\n\nexport type SectionsAction = REQUEST_SECTIONS | RECEIVE_SECTIONS;\n\nexport const requestSections = (): REQUEST_SECTIONS => ({\n  type: 'REQUEST_SECTIONS'\n})\n\nexport const receiveSections = (json: ResponseSections): RECEIVE_SECTIONS => ({\n  type: 'RECEIVE_SECTIONS',\n  items: json,\n  receivedAt: new Date()\n})\n\nexport const fetchSections = (): any => async (dispatch: any) => {\n\n  let action1 = requestSections();\n  dispatch(action1);\n\n  const json: ResponseSections = await API.getSections();\n\n  let action2 = receiveSections(json);\n  dispatch(action2);\n\n}\n\nconst shouldfetchSections = (state: State): boolean => {\n\n  const sections = state.sections;\n\n  if (!sections)\n    return true\n\n  if (sections.isFetching)\n    return false\n\n  if (sections.items.length > 0)\n    return false;\n\n  return true\n}\n\nexport const fetchSectionsIfNeeded = (): any => (dispatch: any, getState: any) => {\n  if (shouldfetchSections(getState())) {\n    return dispatch(fetchSections());\n  }\n}","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Form from 'react-bootstrap/Form'\n\nimport { fetchSectionsIfNeeded } from 'src/actions/sections'\n\nimport type { ResponseSection, ResponseSections } from 'src/api'\n\nimport type { DefaultProps } from 'src/components'\nimport type { State } from 'src/reducers'\n\ntype SectionSelectProps = {\n  defaultValue: string,\n  selected: string,\n  className: string,\n  id: string,\n  style?: {},\n  size: ?string,\n  onChange: (e: any, section: ResponseSection | null) => void\n}\n\ntype StateProps = {\n  items: ResponseSections,\n  tree: {}\n}\n\ntype Props = SectionSelectProps & StateProps & DefaultProps;\n\nclass SectionSelect extends Component<Props> {\n\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(fetchSectionsIfNeeded());\n  }\n\n  onSelect: (e: SyntheticEvent<HTMLSelectElement>) => void = (e: SyntheticEvent<HTMLSelectElement>) => {\n\n    const { items, onChange } = this.props;\n\n    if (onChange) {\n      const shortn = e.currentTarget.value;\n      const arr = items.filter(val => val.shortn === shortn);\n      if (arr.length > 0)\n        onChange(e, arr[0]);\n      else\n        onChange(e, null);\n    }\n  }\n\n  render() {\n\n    const { id, tree, defaultValue, selected, style, size } = this.props;\n\n    let sectionsElem = [];\n    for (let forum in tree) {\n\n      let group =\n        <optgroup key={forum} label={forum}>\n          {tree[forum].map((item, i) => (\n            <option key={item.id} value={item.shortn}>\n              {item.fulln}\n            </option>\n          ))}\n        </optgroup>\n\n      sectionsElem.push(group);\n    }\n\n    return (\n      <Form.Control as=\"select\"\n        onChange={this.onSelect}\n        value={selected}\n        style={style}\n        className='input'\n        size={size}\n        id={id}\n      >\n        <option value=\"\">{defaultValue}</option>\n        {sectionsElem}\n      </Form.Control>\n    )\n  }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n  const { items, tree } = state.sections;\n\n  return {\n    items,\n    tree\n  }\n}\n\nexport { SectionSelect };\nexport default (connect(mapStateToProps)(SectionSelect): any );","//@flow\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport queryString from 'query-string'\n\nimport Login from '../login'\nimport SectionSelect from './section_select'\nimport { fetchSectionsIfNeeded } from 'src/actions/sections'\n\nimport type { DefaultProps } from 'src/components'\n\ntype StateProps = {\n}\n\ntype Props = StateProps & DefaultProps;\n\nclass Header extends Component<Props> {\n\n    componentDidMount() {\n        const { dispatch } = this.props;\n        dispatch(fetchSectionsIfNeeded());\n    }\n    \n    onSectionSelect = (e, value) => {\n        if (value)\n            this.props.history.push(`/index.php?section=${value.shortn}`);\n        else\n            this.props.history.push(`/`);\n    }\n\n    render() {\n\n        const { location } = this.props;\n        const params = queryString.parse(location.search);\n\n        return (\n            <div className=\"flex-row\">\n                <div className=\"user-td\">\n                    <Login />\n                </div>\n                <div className=\"section-td\" style={{marginLeft: \"auto\"}}>\n                    <SectionSelect \n                        defaultValue=\"--Все секции--\" \n                        selected={params.section} \n                        onChange={this.onSectionSelect}\n                        size=\"sm\" \n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ( connect()(withRouter(Header)): any );","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { getMaxPage } from 'src/utils'\n\n\nconst Pages = (props) => {\n\n    const { answ, topicId } = props;\n\n    let pages = [];\n    if (answ > 100) {\n        let maxPage = getMaxPage(answ);\n        for (let i = 1; i <= maxPage; i++) {\n            let href = `/topic.php?id=${topicId}&page=${i}`;\n            let text;\n            if (i > 3 && i < maxPage)\n                text = '•';\n            else\n                text = i;\n            pages.push(<Link key={i}  className=\"agh\" style={{ margin: \"3px\" }} to={href}>{text}</Link>);\n        }\n    }\n\n    if (answ > 20) {\n        let href = `/topic.php?id=${topicId}&page=last20#F`;\n        pages.push(<Link key=\"last20\" className=\"agh\" style={{ margin: \"3px\" }} to={href}>»</Link>);\n    }\n\n    return (\n        <span className=\"topic-pages\">\n            {pages}\n        </span>\n    )\n}\n\nexport default Pages;","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport classNames from 'classnames'\nimport { Link } from 'react-router-dom'\n\nimport type { ResponseTopicsListItem } from 'src/api'\nimport type { State } from 'src/reducers'\n\nimport type { LoginState } from 'src/reducers/login'\nimport type { DefaultProps } from 'src/components'\nimport type { TopicPreviewState } from 'src/reducers/topic_preview'\n\nimport Pages from './pages';\n\ntype TopicNameCellProps = {\n    data: ResponseTopicsListItem,\n    preview: ?number\n};\n\ntype StateProps = {\n    login: LoginState,\n    topicPreview: TopicPreviewState\n};\n\ntype Props = TopicNameCellProps & StateProps & DefaultProps;\n\nclass TopicNameCell extends Component<Props> {\n\n    componentDidMount(){\n\n    }\n\n    render() {\n\n        const { data, login } = this.props;\n\n        let href = `/topic.php?id=${data.id}`;\n        let classes = classNames('agb', 'mr5', {\n            'bold': data.answ >= 100,\n            'mytopics': data.user0 === login.username\n        });\n\n        let isVoting;\n        if (data.is_voting === 1) {\n            isVoting = <span className=\"agh separator\">[±]</span>\n        }\n        \n        let sectionHref = `/index.php?section=${data.sect2}`;\n        let section;\n\n        if (data.sect1) {\n            section = (\n            <span className=\"topic-section\">\n                <span className=\"agh\" style={{margin: \"0px 5px\"}}>/</span>\n                <Link key=\"1\" rel=\"nofollow\" className=\"agh\" to={sectionHref} >{data.sect1}</Link>\n            </span>    \n            )\n        }\n\n        let closed;\n        let down;\n        let text = data.text;\n        if (data.closed)\n            closed = <span className=\"agh\">Ø</span>\n\n        if (data.down === 1)\n            down = <span className=\"agh\">↓</span>\n\n        if (data.sect2 === 'job' && text.substr(0, 3) !== 'JOB')\n            text = 'JOB: ' + text;\n\n        else if (data.forum === 'life' && text.substr(0, 3) !== 'OFF')\n            text = 'OFF: ' + text;\n\n        else if (data.sect2 === 'v7' && text.substr(0, 2) !== 'v7')\n            text = 'v7: ' + text;\n\n        return (\n            <div className=\"cell-title\">\n                <Link to={href} className={classes} dangerouslySetInnerHTML={{ __html: text }} style={{overflowWrap: \"anywhere\"}}></Link>\n                {isVoting}\n                <Pages answ={data.answ} topicId={data.id} />\n                {closed}\n                {down}\n                {section}\n            </div>\n        )\n\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    return {\n        login: state.login,\n        topicPreview: state.topicPreview\n    }\n}\n\nexport default ( connect(mapStateToProps)(TopicNameCell): any );","//@flow\nimport type { State } from '../reducers'\n\nexport type TooltipKeys = {\n  type: 'TOPIC' | 'TOPIC_PREVIEW',\n  topicId: string,\n  number: number\n}\n\nexport type Coords = {\n  x: number,\n  y: number\n}\n\nexport type TooltipItem = {\n  keys: TooltipKeys,\n  coords: Coords\n}\n\nexport type CREATE_TOOLTIP = {\n  type: 'CREATE_TOOLTIP',\n} & TooltipItem\n\nexport type CLEAR_TOOLTIPS = {\n  type: 'CLEAR_TOOLTIPS',\n}\n\nexport type CLOSE_TOOLTIP = {\n  type: 'CLOSE_TOOLTIP',\n  keys: TooltipKeys\n}\n\nexport type TooltipsAction = CREATE_TOOLTIP | CLOSE_TOOLTIP | CLEAR_TOOLTIPS;\n\nexport const showTooltip = (keys: TooltipKeys, coords: Coords): any => async (dispatch: any) => {\n\n  if (keys.type === 'TOPIC' || keys.type === 'TOPIC_PREVIEW') {\n\n    const action: CREATE_TOOLTIP = {\n      type: 'CREATE_TOOLTIP',\n      keys,\n      coords\n    }\n    dispatch(action);\n\n  }\n}\n\nexport const closeTooltip = (keys: TooltipKeys): any => (dispatch: any) => {\n  dispatch({\n    type: 'CLOSE_TOOLTIP',\n    keys\n  });\n}\n\nexport const clearTooltipsIfNeeded = (): any => (dispatch: any, getState: any) => {\n  const state: State = getState();\n  if (state.tooltips.items.length > 0) {\n\n    const action: CLEAR_TOOLTIPS = {\n      type: 'CLEAR_TOOLTIPS'\n    };\n\n    dispatch(action);\n  }\n}","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { showTooltip } from '../../actions/tooltips'\n\nimport { getMaxPage, childrenToText } from 'src/utils';\nimport { getTopicInfo } from 'src/api'\n\nimport type { State } from 'src/reducers'\nimport type { DefaultProps } from 'src/components'\nimport type { ResponseInfo, ResponseMessages } from 'src/api'\n\ntype LinkToPostProps = {\n  topicId: string,\n  number: number,\n  isPreview: boolean,\n  style: {}\n}\n\ntype StateProps = {\n  info: ResponseInfo,\n  items: ResponseMessages,\n  tooltipDelay: string\n}\n\ntype Props = LinkToPostProps & StateProps & DefaultProps;\n\nclass LinkToPost extends Component<Props, { text: string }> {\n\n  timer;\n\n  constructor(props) {\n    super(props);\n\n    const { children, number } = this.props;\n    if (children)\n      this.state = { text: childrenToText(children).join('') };\n    else\n      this.state = { text: String(number) };\n  }\n\n  UNSAFE_componentWillReceiveProps(props) {\n    if (!props.children) {\n      this.setState({ text: String(props.number) });\n    }\n  }\n\n  componentDidMount() {\n\n    if (this.state.text.startsWith(\"http\")) {\n\n      const { topicId } = this.props;\n      getTopicInfo({ id: topicId })\n        .then(response => {\n          this.setState({\n            text: response.text\n          })\n        });\n\n    }\n  }\n\n  onMouseOver = (event) => {\n    event.persist();\n    const { tooltipDelay } = this.props;\n    this.timer = setTimeout(() => this.showToolTip(event), +tooltipDelay);\n  }\n\n  onClick = (event) => {\n    event.stopPropagation();\n    clearTimeout(this.timer);\n    this.showToolTip(event);\n  }\n\n  onMouseOut = (event) => {\n    clearTimeout(this.timer);\n  }\n\n  showToolTip = (e) => {\n    const { topicId, number, dispatch, isPreview } = this.props;\n\n    const coords = {\n      x: e.pageX,\n      y: e.pageY - 50 // remove navbar margin-top\n    }\n\n    const keys = {\n      type: isPreview ? 'TOPIC_PREVIEW' : 'TOPIC',\n      topicId,\n      number\n    }\n\n    dispatch(showTooltip(\n      keys,\n      coords\n    ));\n  }\n\n  render() {\n\n    const { topicId, number, style, info } = this.props;\n    const page = getMaxPage(number);\n\n    let pageParam = '';\n    if (page > 1)\n      pageParam = `&page=${page}`;\n\n    let a;\n    if (topicId === info.id || !isNaN(this.state.text))\n      a = (\n        <span\n          onMouseOver={this.onMouseOver}\n          onMouseOut={this.onMouseOut}\n          onClick={this.onClick}\n          className='link'\n          style={{ ...style }}\n        >{this.state.text}</span>\n      )\n    else\n      a = (\n        <span>\n          <a href={`${window.hash}/topic.php?id=${topicId}${pageParam}#${number}`}\n            style={{ ...style }}\n          >{this.state.text}</a>{' '}\n                    (<span onMouseOver={this.onMouseOver}\n            onMouseOut={this.onMouseOut}\n            onClick={this.onClick}\n            className='link'\n          >{number}</span>)\n        </span>\n      )\n\n    return a;\n  }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n  const {\n    items, info\n  } = state.topic;\n\n  return {\n    items,\n    info,\n    tooltipDelay: state.options.items['tooltipDelay']\n  }\n}\n\nexport default (connect(mapStateToProps)(LinkToPost): any );","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport type { DefaultProps } from 'src/components'\n\ntype PreviewLinkProps = {\n    topicId: string,\n    expanded: boolean\n};\n\ntype Props = PreviewLinkProps & DefaultProps;\n\nclass PreviewLink extends Component<Props> {\n\n    onClick = () => {\n        const { topicId, dispatch } = this.props;\n\n        dispatch({\n            type: 'TOGGLE_PREVIEW',\n            topicId \n        });\n    }\n\n    render() {\n\n        const { expanded } = this.props;\n        let text;\n        if (expanded)\n            text = '-'\n        else\n            text = '+'    \n\n        return (\n            <div className=\"cell-preview-link\" onClick={this.onClick}>\n                <span>{text}</span>\n            </div>\n        )        \n    }\n\n}\n\nexport default ( connect()(PreviewLink): any );","//@flow\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport dateFormat from 'dateformat'\n\nimport TopicNameCell from './topic_name_cell';\nimport LinkToPost from 'src/components/extensions/link_to_post'\nimport PreviewLink from './preview_link'\n\nimport { today } from 'src/utils'\n\nimport type { State } from 'src/reducers'\nimport type { TopicsListItem } from 'src/reducers/topics_list'\nimport type { LoginState } from 'src/reducers/login'\nimport type { DefaultProps } from 'src/components'\n\ntype RowProps = {\n  columns: any,\n  data: TopicsListItem\n}\n\ntype StateProps = {\n  login: LoginState,\n  showTooltipOnTopicsList: string\n}\n\ntype Props = RowProps & StateProps & DefaultProps;\n\nconst Row = (props: Props) => {\n\n  const { data, showTooltipOnTopicsList } = props;\n  let time = new Date(+data.utime * 1000);\n  if (today(time)) {\n    time = dateFormat(time, 'HH:MM')\n  } else {\n    time = dateFormat(time, 'dd.mm.yy');\n  }\n  return (\n    <div className=\"topics-list-row\">\n      {/*{cells}*/}\n      <div className=\"cell-forum\">\n        {data.forum}\n      </div>\n      <div className=\"cell-section\">\n        {data.sect1}\n      </div>\n      <div className=\"cell-answ\">\n        <i className=\"fa fa-comments-o\" aria-hidden=\"true\" style={{marginRight: \"3px\"}}></i>\n        {showTooltipOnTopicsList === 'true' ?\n          <LinkToPost topicId={data.id} number={data.answ} style={{ color: \"inherit\" }} isPreview />\n          :\n          data.answ\n        }\n      </div>\n      <PreviewLink topicId={data.id} expanded={data.showPreview} />\n      <TopicNameCell data={data} />\n      <div className=\"cell-author\">\n        {data.user0}\n      </div>\n      <div className=\"cell-lastuser\">\n        <div style={{ display: \"flex\" }}>\n          <span className=\"cell-lastuser-time\">{time}</span>\n          <span className=\"cell-lastuser-user\">{data.user}</span>\n        </div>\n      </div>\n      <div className=\"cell-last20\">\n        <Link to={`/topic.php?id=${String(data.id)}&page=last20`} style={{ color: \"inherit\", display: \"block\", width: \"100%\", textAlign: \"center\" }}>{'>'}</Link>\n      </div>\n    </div>\n  )\n\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n  return {\n    login: state.login,\n    showTooltipOnTopicsList: state.options.items.showTooltipOnTopicsList\n  }\n}\n\nexport default (connect(mapStateToProps)(Row): any );","//@flow\nimport React from 'react'\nimport { Pagination } from 'react-bootstrap'\n\nimport { paramsToString } from 'src/api'\nimport './pages.css'\n\ntype Props = {\n  locationParams: { page?: string },\n  baseUrl: string,\n  maxPage: number,\n  last20?: boolean\n}\n\nconst Pages = (props: Props): any => {\n\n  const { locationParams, baseUrl, maxPage, last20 } = props;\n  let currentPage;\n  if (!locationParams.page)\n    currentPage = 1;\n  else if (locationParams.page === \"last20\")\n    currentPage = \"last20\";\n  else\n    currentPage = parseInt(locationParams.page, 10) || 1;\n\n  let pages = [];\n  for (let i = 1; i <= maxPage; i++) {\n    let params = { ...locationParams, page: i };\n    let href = `${window.hash}/${baseUrl}` + paramsToString('?', params);\n\n    pages.push(<Pagination.Item active={currentPage === i} key={i} href={href}>{i}</Pagination.Item>);\n  }\n\n  if (last20 === true) {\n    let params = { ...locationParams, page: \"last20\" };\n    let href = `${window.hash}/${baseUrl}` + paramsToString('?', params);\n    pages.push(<Pagination.Item active={currentPage === \"last20\"} key=\"last20\" href={href}>»</Pagination.Item>);\n  }\n\n  return (\n    <Pagination style={{ margin: \"0px\" }}>\n      {pages}\n    </Pagination>\n  )\n\n}\n\nexport default Pages;","//@flow\nimport * as API from '../api'\nimport type { RequestNewTopic } from 'src/api'\nimport type { State } from 'src/reducers'\nimport type { ResponseSection } from 'src/api'\n\nexport type postNewTopicParams = {\n  subject: string,\n  text: string,\n  section: number,\n  forum: string,\n  isVoting: boolean,\n  votingItems?: Array<string>,\n  onSuccess?: () => void\n};\n\nexport type POST_NEW_TOPIC_START = {\n  type: 'POST_NEW_TOPIC_START'\n}\n\nexport type POST_NEW_TOPIC_COMPLETE = {\n  type: 'POST_NEW_TOPIC_COMPLETE'\n}\n\nexport type POST_NEW_TOPIC_ERROR = {\n  type: 'POST_NEW_TOPIC_ERROR',\n  error: string\n}\n\nexport type NEW_TOPIC_TEXT = {\n  type: 'NEW_TOPIC_TEXT',\n  text: string\n}\n\nexport type NEW_TOPIC_SUBJECT = {\n  type: 'NEW_TOPIC_SUBJECT',\n  text: string\n}\n\nexport type NEW_TOPIC_CLEAR = {\n  type: 'NEW_TOPIC_CLEAR'\n}\n\nexport type NEW_TOPIC_SHOW_VOTING = {\n  type: 'SHOW_VOTING',\n  data: boolean\n}\n\nexport type NEW_TOPIC_SECTION = {\n  type: 'NEW_TOPIC_SECTION',\n  section: ResponseSection\n}\n\nexport type NewTopicAction = POST_NEW_TOPIC_START | POST_NEW_TOPIC_COMPLETE | POST_NEW_TOPIC_ERROR |\n  NEW_TOPIC_CLEAR | NEW_TOPIC_TEXT | NEW_TOPIC_SUBJECT | NEW_TOPIC_SHOW_VOTING | NEW_TOPIC_SECTION;\n\nexport const shouldPostNewTopic = (state: State): boolean => {\n  const newTopic = state.newTopic;\n  if (!newTopic) {\n    return false\n  }\n  if (newTopic.isFetching) {\n    return false\n  }\n  return true\n}\n\nexport const postNewTopicIfNeeded = (params: postNewTopicParams): any => (dispatch: any, getState: any) => {\n  if (shouldPostNewTopic(getState())) {\n    return dispatch(postNewTopic(params));\n  }\n}\n\nconst postNewTopic = (params: postNewTopicParams) => async (dispatch: any) => {\n\n  dispatch({\n    type: 'POST_NEW_TOPIC_START'\n  });\n\n  let fetchParams: RequestNewTopic = {\n    message_text: encodeURIComponent(params.text),\n    topic_text: encodeURIComponent(params.subject),\n    target_section: String(params.section),\n    target_forum: params.forum.toLowerCase(),\n    action: 'new',\n    rnd: Math.round(Math.random() * 10000000000),\n    voting: params.isVoting ? 1 : 0\n  };\n\n  if (params.votingItems)\n    for (let i = 0; i < params.votingItems.length; i++) {\n      fetchParams[`section${i + 1}`] = params.votingItems[i];\n    }\n\n  await API.postNewTopic(fetchParams);\n\n  dispatch({\n    type: 'POST_NEW_TOPIC_COMPLETE'\n  });\n\n  if (params.onSuccess)\n    params.onSuccess();\n}","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { FormControl, Button, ButtonGroup, Form } from 'react-bootstrap'\n\nimport type { DefaultProps } from 'src/components'\n\nimport './text_editor.css'\n\ntype TextEditorProps = {\n  placeholder: string,\n  showVoting: boolean,\n  isVoting: boolean,\n  text: string,\n  isFetching: boolean,\n  formName: string,\n  onChange?: (e: any, text: string) => void,\n}\n\ntype Props = TextEditorProps & DefaultProps;\n\nclass TextEditor extends Component<Props> {\n\n  textArea;\n\n  constructor(props) {\n    super(props);\n    this.textArea = React.createRef();\n  }\n\n  onButtonCode1c = (e) => {\n\n    e.preventDefault();\n\n    var openTag = '[1C]\\n';\n    var closeTag = '\\n[/1C]';\n\n    var textArea: any = this.textArea.current;\n\n    var start = textArea.selectionStart;\n    var end = textArea.selectionEnd;\n\n    var oldText = textArea.value;\n    var len = oldText.length;\n    var selectedText = oldText.substring(start, end);\n    var replacement = openTag + selectedText + closeTag;\n    var newText = oldText.substring(0, start) + replacement + oldText.substring(end, len);\n\n    const { dispatch, formName } = this.props;\n    dispatch({\n      type: formName + '_TEXT',\n      text: newText\n    })\n\n  }\n\n  onVotingChange = (e: SyntheticEvent<HTMLInputElement>) => {\n    const { dispatch } = this.props;\n    dispatch({\n      type: 'SHOW_VOTING',\n      data: e.currentTarget.checked\n    })\n  }\n\n  onChange = (e: SyntheticEvent<HTMLTextAreaElement>) => {\n    const { dispatch, formName } = this.props;\n    dispatch({\n      type: formName + '_TEXT',\n      text: e.currentTarget.value\n    })\n  }\n\n  onKeyPress = (e: SyntheticKeyboardEvent<HTMLTextAreaElement>) => {\n\n    if (e.key === 'Enter' && e.ctrlKey) {\n      let parent = e.currentTarget.parentElement;\n      while (parent && parent.tagName.toUpperCase() !== \"FORM\") {\n        parent = parent.parentElement;\n      }\n      if (parent)\n        parent.dispatchEvent(new Event(\"submit\", { cancelable: true, bubbles: true }));\n    }\n\n  }\n\n  render() {\n\n    const { placeholder, showVoting, isVoting, isFetching, text } = this.props;\n\n    return (\n      <div>\n        <FormControl\n          as=\"textarea\"\n          placeholder={placeholder}\n          cols=\"70\" rows=\"3\"\n          value={text}\n          onChange={this.onChange}\n          onKeyPress={this.onKeyPress}\n          ref={this.textArea}\n          className=\"text-editor input\"\n        />\n        <div className=\"flex-row\">\n          <ButtonGroup>\n            <Button\n              size=\"sm\"\n              variant=\"light\"\n              onClick={this.onButtonCode1c}\n              style={{ marginRight: \"5px\" }}\n              className='button'\n            >Код 1С</Button>\n            <Button\n              size=\"sm\"\n              variant=\"light\"\n              disabled={isFetching}\n              type=\"submit\"\n              className='button'\n            >\n              {isFetching ? 'Отправляется' : 'Отправить'}\n            </Button>\n          </ButtonGroup>\n          {showVoting &&\n            <Form.Check\n              type=\"checkbox\"\n              checked={isVoting}\n              onChange={this.onVotingChange}\n              label=\"Голосование\"\n              style={{ margin: \"auto 0px auto auto\" }} />\n          }\n        </div>\n      </div>\n    )\n\n  }\n}\n\nexport default (connect()(TextEditor): any );","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Form from 'react-bootstrap/Form'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport { FormGroup } from 'react-bootstrap'\n\nimport type { ResponseSection } from 'src/api'\n\nimport type { DefaultProps } from 'src/components'\nimport type { State } from 'src/reducers'\nimport type { SectionsState } from 'src/reducers/sections'\nimport type { NewTopicState } from 'src/reducers/new_topic'\n\nimport { postNewTopicIfNeeded } from 'src/actions/new_topic'\nimport type { NewTopicAction, postNewTopicParams } from 'src/actions/new_topic'\n\nimport SectionSelect from './section_select'\nimport TextEditor from '../common/text_editor'\nimport ErrorElem from '../common/error'\n\nimport './new_topic.css'\n\ntype StateProps = {\n  sections: SectionsState,\n  newTopic: NewTopicState,\n}\n\ntype NewTopicProps = {\n  onSubmitSuccess?: () => void\n};\n\ntype Props = NewTopicProps & StateProps & DefaultProps;\n\nclass NewTopic extends Component<Props> {\n\n  currentSection: ?ResponseSection;\n\n  onSectionChange = (e: any, section: ResponseSection) => {\n    const { dispatch } = this.props;\n    this.currentSection = section;\n\n    const action: NewTopicAction = {\n      type: 'NEW_TOPIC_SECTION',\n      section\n    };\n\n    dispatch(action);\n  }\n\n  onSubmit = (e) => {\n\n    e.preventDefault();\n    const { dispatch, newTopic } = this.props;\n\n    let action: NewTopicAction;\n    if (!this.currentSection) {\n      action = {\n        type: 'POST_NEW_TOPIC_ERROR',\n        error: 'Не выбрана секция'\n      };\n      dispatch(action);\n      return;\n    }\n\n    let subject = newTopic.subject;\n    if (!subject) {\n      action = {\n        type: 'POST_NEW_TOPIC_ERROR',\n        error: 'Не указана тема'\n      };\n      dispatch(action);\n      return;\n    }\n\n    if (!newTopic.text) {\n      action = {\n        type: 'POST_NEW_TOPIC_ERROR',\n        error: 'Не указано сообщение'\n      };\n      dispatch(action);\n      return;\n\n    }\n\n    let params: postNewTopicParams = {\n      subject,\n      text: newTopic.text,\n      section: this.currentSection.id,\n      forum: this.currentSection.forum,\n      isVoting: newTopic.isVoting,\n      votingItems: [],\n      onSuccess: this.onSubmitSuccess\n    };\n\n    if (newTopic.isVoting) {\n      params.votingItems = [];\n      for (let i = 1; i <= 10; i++) {\n        let val = this.refs[`vote${i}`].value;\n        if (val) {\n          params.votingItems.push(val);\n        }\n      }\n    }\n\n    dispatch(postNewTopicIfNeeded(params));\n  }\n\n  onSubjectChange = (e) => {\n\n    const { dispatch } = this.props;\n    dispatch({\n      type: 'NEW_TOPIC_SUBJECT',\n      text: e.target.value\n    });\n\n  }\n\n\n  onSubmitSuccess = () => {\n\n    const { dispatch } = this.props;\n    dispatch({\n      type: 'NEW_TOPIC_CLEAR',\n      text: ''\n    });\n\n    if (this.props.onSubmitSuccess) {\n      this.props.onSubmitSuccess();\n    }\n  }\n\n  render() {\n\n    const { sections, newTopic } = this.props;\n\n    let groupsElem = [];\n    for (let forum in sections.tree) {\n      groupsElem.push(<option key={forum} value={forum.toLowerCase()}>{forum}</option>);\n    }\n\n    let votingOptions = [];\n\n    if (newTopic.isVoting) {\n      votingOptions.push(<div key=\"p\">Варианты:</div>);\n      for (let i = 1; i <= 10; i++) {\n        votingOptions.push(\n          <InputGroup key={i} size=\"sm\" style={{ marginBottom: \"3px\", width: \"100%\" }}>\n            <InputGroup.Prepend>\n              <InputGroup.Text\n                style={{ width: \"40px\" }} className='input'>\n                {`${i}.`}\n              </InputGroup.Text>\n            </InputGroup.Prepend>\n            <Form.Control\n              type=\"text\"\n              maxLength=\"50\"\n              ref={`vote${i}`}\n              className='input'\n            />\n          </InputGroup>\n        );\n      }\n    }\n\n    return (\n      <form className=\"new-topic-container\" onSubmit={this.onSubmit}>\n        <div id=\"newtopic_form\" className=\"new-topic-text\">\n          <div><b>Новая тема:</b></div>\n          {newTopic.error && <ErrorElem text={newTopic.error} />}\n          <div className=\"flex-row\" style={{ marginBottom: \"3px\" }}>\n            <Form.Control as=\"select\"\n              size=\"sm\"\n              readOnly={true}\n              value={newTopic.forum}\n              style={{ flex: \"0 1 90px\" }}\n              className='input'\n            >\n              {groupsElem}\n            </Form.Control>\n            <SectionSelect\n              defaultValue=\"Секция\"\n              id=\"target_section\"\n              size=\"sm\"\n              style={{ flex: \"1 1 auto\" }}\n              onChange={this.onSectionChange}\n            />\n          </div>\n          <Form.Control\n            type=\"text\"\n            size=\"sm\"\n            value={newTopic.subject}\n            onChange={this.onSubjectChange}\n            style={{ marginBottom: \"3px\" }}\n            className='input'\n            placeholder=\"Тема\"\n            maxLength=\"90\"\n          />\n          <TextEditor\n            placeholder=\"Сообщение\"\n            showVoting={true}\n            isVoting={newTopic.isVoting}\n            text={newTopic.text}\n            isFetching={newTopic.isFetching}\n            formName=\"NEW_TOPIC\"\n          />\n        </div>\n        <FormGroup className=\"new-topic-voting\">\n          {votingOptions}\n        </FormGroup>\n      </form>\n    )\n  }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n  return {\n    sections: state.sections,\n    newTopic: state.newTopic\n  }\n}\n\nexport default (connect(mapStateToProps)(NewTopic): any );","\nfunction highlight(text) {\n\n  const keywords = new Set(\n    \"|if|если|then|тогда|elsif|иначеесли|else|иначе|endif|конецесли|do|цикл|for|для|to|по|each|каждого|in|из|while|пока|enddo|конеццикла|procedure|процедура|endprocedure|конецпроцедуры|function|функция|endfunction|конецфункции|var|перем|export|экспорт|goto|перейти|and|и|or|или|not|не|val|знач|break|прервать|continue|продолжить|return|возврат|try|попытка|except|исключение|endtry|конецпопытки|raise|вызватьисключение|false|ложь|true|истина|undefined|неопределено|null|new|новый|execute|выполнить|\"\n      .split('|')\n  );\n\n  const Спецсиволы = new Set(\"():;.,=+-*<>?[]%/\".split(''));\n  const НачалоТега = \"<span class=\";\n  const КонецТега = \"</span>\";\n\n  const мЦветФона = \"bg>\";\n  const мЦветЧисла = \"num>\";\n  const мЦветСтроки = \"str>\";\n  //const мЦветПараметра = \"par>\";\n  const мЦветКомментария = \"com>\";\n  const мЦветСпецСимвола = \"sp>\";\n  const мЦветПрепроцессора = \"pr>\";\n  const мЦветКлючевогоСлова1 = \"key>\";\n\n\n  let СтрокаРезультат;\n  let УстановленЦвет;\n  let ПоследнийЦвет;\n\n  let ВСтроке = false;\n  let Токен = \"\";\n\n  function ПустаяСтрока(Строка) {\n    return Строка.trim() === '';\n  }\n\n  function Сред(Строка, Нач, Длина) {\n    return Строка.substr(Нач - 1, Длина);\n  }\n\n  function Прав(Строка, Длина) {\n    return Строка.substr(-Длина);\n  }\n\n  function isKeyword(token) {\n    return keywords.has(token.toLowerCase().trim());\n  }\n\n  function ДобавитьЧастьСтроки1С(Часть, Цвет) {\n\n    if (Часть === \" \" || ПоследнийЦвет === Цвет) {\n      СтрокаРезультат = СтрокаРезультат + Часть;\n    } else {\n      if (УстановленЦвет) {\n        СтрокаРезультат = СтрокаРезультат + КонецТега;\n        УстановленЦвет = false;\n      };\n\n      СтрокаРезультат = СтрокаРезультат + НачалоТега + Цвет + Часть;\n      УстановленЦвет = true;\n      ПоследнийЦвет = Цвет;\n    };\n  }\n\n  function РазукраситьСтроку(СтрокаКода) {\n\n    //  https://infostart.ru/profile/34707/public/\n    let ВСтрокеСкобка = false;\n    let ВСтрокеТильда = false;\n    let НачалоСтроки = 1;\n    let ТокенДоТочки = true;\n    // Заменяем 8 символьную табуляцию на 4 символьную пробелами\n\n    // Последовательно перебираются все символы строки кода\n    let Поз = 1;\n    for (Поз = 1; Поз <= СтрокаКода.length; Поз++) {\n\n      let ТекущийСимвол = СтрокаКода.charAt(Поз - 1);\n      if (ВСтроке) {\n\n        // Операции встрече символа \"кавычка\"\n        if (ТекущийСимвол === '\"') {\n          // Нашли парную кавычку - окрашиваем как строку\n          ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n          ВСтроке = false;\n          Токен = \"\";\n          ТокенДоТочки = true;\n        } else {\n          Токен = Токен + ТекущийСимвол;\n        };\n\n      } else if (ВСтрокеСкобка) {\n\n        // Операции встрече символа \"кавычка\" литерал\n        if (ТекущийСимвол === \"'\") {\n          // Нашли парную скобку - окрашиваем как комментарий\n          ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n          ВСтрокеСкобка = false;\n          Токен = \"\";\n          ТокенДоТочки = true;\n        } else {\n          Токен = Токен + ТекущийСимвол;\n        };\n\n      } else if (ТекущийСимвол === \" \") {\n        // Операции при встрече символа табуляции или пробела\n        if (!ПустаяСтрока(Токен)) {\n          // Пробел после токена, значит\n          // токен - ключевое слово...\n          if (ВСтрокеТильда) {\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветСтроки);\n            ВСтрокеТильда = false;\n\n          } else if (isKeyword(Токен.trim())) {\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветКлючевогоСлова1);\n\n          } else if (!isNaN(parseInt(Токен, 10))) {\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветЧисла);\n\n          } else {\n            ДобавитьЧастьСтроки1С(Токен + \" \", мЦветФона);\n          };\n          Токен = \"\";\n        } else {\n          СтрокаРезультат = СтрокаРезультат + \" \";\n        };\n        ТокенДоТочки = true;\n\n      } else if (Спецсиволы.has(ТекущийСимвол)) {\n\n        // Встретился один из специальных символов\n        if (!ПустаяСтрока(Токен)) {\n          // Чтобы избежать окраски метода объекта с совпадающим именем\n          // с одним из ключевых слов, проверяем текущий символ на \".\"\n          if (ВСтрокеТильда) {\n\n            ДобавитьЧастьСтроки1С(Токен, мЦветСтроки);\n            ВСтрокеТильда = false;\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\n\n          } else if (ТокенДоТочки && isKeyword(Токен)) {\n            ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\n\n          } else {\n            // Не ключевое слово - значит число\n            if (!isNaN(parseInt(Токен, 10))) {\n              ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\n\n            } else {\n              ДобавитьЧастьСтроки1С(Токен, мЦветФона);\n            };\n            ТокенДоТочки = (ТекущийСимвол !== \".\");\n          };\n          Токен = \"\";\n        };\n        // Один из специальных символов\n        if (ТекущийСимвол === \".\" && ПоследнийЦвет === мЦветЧисла) {\n          // Продолжение числа\n          ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветЧисла);\n          continue;\n\n        } else if (ТекущийСимвол === \"=\" && Сред(СтрокаКода, Поз - 1, 1) === \"<\") {\n          // Знак \"меньше или равно\" - вторая ошибка движка Инфостарт\n          ПоследнийЦвет = undefined;\n\n        } else if (ТекущийСимвол === \"/\" && Сред(СтрокаКода, Поз + 1, 1) === \"/\") {\n          // Проверяется на комментарий\n          ДобавитьЧастьСтроки1С(Прав(СтрокаКода, СтрокаКода.length - Поз + 1), мЦветКомментария);\n          return;\n        };\n        ДобавитьЧастьСтроки1С(ТекущийСимвол, мЦветСпецСимвола);\n\n      } else if (ТекущийСимвол === '\"' || ТекущийСимвол === \"|\") {\n\n        // Операции встрече символа \"кавычка\"\n        // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\n        if (ПустаяСтрока(Токен)) {\n          НачалоСтроки = Поз;\n          ВСтроке = true;\n        } else {\n          // Ошибка синтаксиса\n          ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\n          Токен = \"\";\n        };\n        ТокенДоТочки = true;\n\n      } else if (ТекущийСимвол === \"'\") {\n\n        // Операции встрече символа \"кавычка\" литерал\n        // Первая кавычка, запоминаем позицию и взводим флаг нахождения в строке\n        if (ПустаяСтрока(Токен)) {\n          НачалоСтроки = Поз;\n          ВСтрокеСкобка = true;\n        } else {\n          // Ошибка синтаксиса\n          ДобавитьЧастьСтроки1С(Токен + ТекущийСимвол, мЦветСтроки);\n          Токен = \"\";\n        };\n        ТокенДоТочки = true;\n\n      } else if (ТекущийСимвол === \"#\" || (ТекущийСимвол === \"&\" && ПустаяСтрока(СтрокаРезультат))) {\n\n        // Встретился символ препроцессора\n        ДобавитьЧастьСтроки1С(Прав(СтрокаКода, СтрокаКода.length - Поз + 1), мЦветПрепроцессора);\n        Поз = СтрокаКода.lenth;\n        break;\n\n      } else if (ТекущийСимвол === \"~\") {\n        Токен = Токен + ТекущийСимвол;\n        ВСтрокеТильда = true;\n      } else {\n        // Остальные символы\n        Токен = Токен + ТекущийСимвол;\n      }\n    }\n\n    if (ВСтроке) {\n\n      // Многострочная строка\n      ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n\n    } else if (ВСтрокеСкобка) {\n\n      // Незавершенный литерал\n      ДобавитьЧастьСтроки1С(Сред(СтрокаКода, НачалоСтроки, Поз - НачалоСтроки + 1), мЦветСтроки);\n\n    } else if (!ПустаяСтрока(Токен)) {\n\n      // Анализируем последний токен строки кода\n      if (isKeyword(Токен)) {\n        ДобавитьЧастьСтроки1С(Токен, мЦветКлючевогоСлова1);\n\n      } else if (!isNaN(parseInt(Токен, 10))) {\n        ДобавитьЧастьСтроки1С(Токен, мЦветЧисла);\n\n      } else {\n        ДобавитьЧастьСтроки1С(Токен, мЦветФона);\n      };\n\n    };\n\n  }\n\n  ВСтроке = false;\n  Токен = \"\";\n  УстановленЦвет = false;\n  ПоследнийЦвет = undefined;\n  СтрокаРезультат = '';\n\n  let result = [];\n\n  for (let СтрокаКода of text.split('\\n')) {\n\n    if (ПустаяСтрока(СтрокаКода)) {\n      result.push('');\n      continue;\n    }\n\n    СтрокаРезультат = '';\n    РазукраситьСтроку(СтрокаКода);\n    if (УстановленЦвет && !ВСтроке) {\n      СтрокаРезультат += '</span>';\n      УстановленЦвет = false;\n      ПоследнийЦвет = '';\n      Токен = '';\n    } else if (!ВСтроке) {\n      ПоследнийЦвет = '';\n      Токен = '';\n    }\n\n    result.push(СтрокаРезультат);\n  }\n\n  return result.join('\\n');\n}\n\nexport default highlight;","import React, { Component } from 'react'\nimport { childrenToText } from 'src/utils'\nimport highlight from './code_highlight'\nimport './code1c.css'\n\nclass Code extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.onShowClick = this.onShowClick.bind(this);\n    this.state = { hidden: true };\n\n    const { children } = props;\n    if (children) {\n\n      const textArr = childrenToText(children);\n      this.text = textArr.join('');\n\n      // replace double new-lines\n      this.text = this.text\n        .replace(/\\n<br>/g, '\\n')\n        .replace(/<br>\\n/g, '\\n')\n        .replace(/\\r<br>/g, '\\n')\n        .replace(/<br>\\r/g, '\\n')\n        .replace(/<br>/g, '\\n');\n\n      // remove all leading|ending new-lines\n      while (this.text[0] === '\\n') {\n        this.text = this.text.substr(1);\n      }\n\n      while (this.text.substr(-1) === '\\n') {\n        this.text = this.text.substr(0, this.text.length - 1);\n      }\n\n      this.text = highlight(this.text);\n    }\n  }\n\n  onShowClick() {\n    this.setState({\n      hidden: !this.state.hidden\n    })\n  }\n\n  render() {\n\n    let buttonText;\n    let linesCount = 0;\n    if (this.text)\n      linesCount = this.text.split(\"\\n\").length;\n\n    if (this.state.hidden)\n      buttonText = `Показать: ${linesCount} строк`;\n    else\n      buttonText = 'Скрыть';\n\n    let buttonShow;\n    if (linesCount > 7)\n      buttonShow = (\n        <div className=\"expand-button-div\">\n          <span className=\"expand-button-span\" onClick={this.onShowClick}>{buttonText}</span>\n        </div>\n      );\n\n    let preStyle = {\n    }\n\n    if (this.state.hidden && linesCount > 7) {\n      preStyle.overflow = \"hidden\";\n      preStyle.height = \"135px\";\n    } else {\n      preStyle.overflow = \"auto\";\n      preStyle.height = \"auto\";\n    }\n\n    return (\n      <div style={{ marginTop: \"5px\" }}>\n        <pre className=\"code-pre\" style={preStyle} dangerouslySetInnerHTML={{ __html: this.text }}>\n        </pre>\n        {buttonShow}\n      </div>\n    )\n  }\n\n}\n\nexport default Code;","//@flow\nimport React, { Component } from 'react'\n\ntype LinkToUserProps = {\n  href: string,\n  children: any\n}\n\nclass LinkToUser extends Component<LinkToUserProps> {\n\n  render() {\n    const { href, children } = this.props;\n    return <a href={href} className=\"registered-user\">{children}</a>\n  }\n}\n\nexport default (LinkToUser: any);","//@flow\nimport React, { Component } from 'react'\nimport queryString from 'query-string'\n\ntype YoutubeLinkProps = {\n  href: string,\n}\n\nclass YoutubeLink extends Component<YoutubeLinkProps> {\n\n  state: any;\n\n  constructor(props: YoutubeLinkProps) {\n    super(props);\n    this.state = { hrefName: props.href, title: '' };\n  }\n\n  getVideoId(href: string): ?string {\n\n    if (href.search(/youtube/) !== -1) {\n      let arr = href.split('?');\n      return queryString.parse(arr[1]).v;\n    }\n\n    if (href.search(/youtu\\.be/) !== -1) {\n      let arr = href.match(/e\\/(.+?)(&|\\?|$)/);\n\n      if (arr && arr.length > 1)\n        return arr[1];\n    }\n    return null;\n  }\n\n  async getVideoParams(videoId: string): any {\n\n    const apiKey = localStorage.getItem('youtubeApiKey') || 'AIzaSyCztN2QW4Fxw_1YuAHBTOZdYLbzigPz25g';\n    let apiUrl = `https://www.googleapis.com/youtube/v3/videos?key=${apiKey}&fields=items(snippet(title))&part=snippet&id=${videoId}`;\n    const response = await fetch(apiUrl);\n    const json = await response.json();\n\n    let title = json.items[0].snippet.title;\n    let hrefName = title;\n    let maxLength = 50;\n    if (title.length > maxLength + 5)\n      hrefName = hrefName.substring(0, maxLength) + '...'\n\n    return {\n      hrefName,\n      title\n    }\n  }\n\n  async componentDidMount() {\n\n    const { href } = this.props;\n    const videoId = this.getVideoId(href);\n    if (!videoId)\n      return;\n\n    try {\n      const params = await this.getVideoParams(videoId);\n      this.setState({\n        ...params\n      });\n\n    } catch (e) {\n      console.error('youtube', e.message);\n    }\n  }\n\n  render() {\n    let prefix = 'youtube';\n    return <a href={this.props.href} title={this.state.title}>{`${prefix}: ${this.state.hrefName}`}</a>\n  }\n}\n\nexport default (YoutubeLink: any);","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport URL from 'url-parse'\n\nimport LinkToPost from './link_to_post'\nimport LinkToUser from './link_to_user'\nimport YoutubeLink from './youtube_link'\n\nimport type { DefaultProps } from 'src/components'\n\nimport { childrenToText } from 'src/utils'\n\ntype CustomLinkProps = {\n  href: string,\n  parentText: string,\n  target: string,\n  class: string,\n  rel: string,\n  showTooltipOnPostLink: string,\n  showYoutubeVideoTitle: string,\n  replaceCatalogMista: string,\n  fixBrokenLinks: string,\n}\n\ntype Props = CustomLinkProps & DefaultProps;\n\nclass CustomLink extends Component<Props> {\n\n  fixBrokenLink(href: string, parentText: string): string {\n    let escapedHref = href\n      .replace(/\\[/g, '\\\\[')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\./g, '\\\\.')\n      .replace(/\\./g, '.')\n      .replace(/\\*/g, '\\\\*')\n      .replace(/\\+/g, '\\\\+')\n      .replace(/\\(/g, '\\\\(')\n      .replace(/\\)/g, '\\\\)')\n      .replace(/\\?/g, '\\\\?')\n      .replace(/\\//g, '\\\\/');\n\n    try {\n      let regExp = new RegExp(escapedHref + '<\\\\/a>(\\\\)|[а-яёА-ЯЁ0-9#\\\\-\\\\+\\\\_\\\\%\\\\?=]*)');\n      let arr = parentText.match(regExp);\n      if (arr && arr.length > 1) {\n        if (arr[1] === ')' && href.search('\\\\(') === -1) {\n          return href;\n        }\n        href = href + arr[1];\n        return href;\n      }\n    } catch (e) {\n      console.error(e);\n    }\n    return href;\n  }\n\n  render() {\n\n    const { href, children, parentText,\n      showTooltipOnPostLink, showYoutubeVideoTitle, replaceCatalogMista, fixBrokenLinks } = this.props;\n\n    try {\n      var url = new URL(href, true);\n    } catch (error) {\n      console.error(error.message, href);\n      return <a href={href}>{href}</a>;\n    }\n\n\n    let newHref = href;\n    if (newHref.startsWith('/')) {\n      url.set('protocol', 'https')\n      url.set('hostname', 'forum.mista.ru')\n      newHref = url.href;\n    }\n\n    if (showTooltipOnPostLink === 'true') {\n      if (url.hostname.search(/forum\\.mista.ru/) !== -1) {\n\n        if (url.pathname === '/topic.php') {\n          return (\n            <LinkToPost topicId={url.query.id} number={url.hash.replace('#', '') || \"0\"}>\n              {childrenToText(children)}\n            </LinkToPost>\n          )\n        } else if (url.pathname === '/users.php') {\n          return (\n            <LinkToUser href={url.href} >\n              {children}\n            </LinkToUser>\n          )\n        }\n      }\n\n      if (url.hostname === 'a-sitnikov.github.io' &&\n        url.pathname === '/react.mista/') {\n\n        if (Object.keys(url.query).length === 0) {\n\n          url = new URL(href.replace(/#\\//, ''), true);\n          if (url.pathname === '/react.mista/topic.php')\n            return (\n              <LinkToPost topicId={url.query.id} number={url.hash.replace('#', '') || \"0\"}>\n                {childrenToText(children)}\n              </LinkToPost>\n            )\n        }\n      }\n    }\n\n    if (showYoutubeVideoTitle === 'true')\n      if (url.hostname.search(/youtube/) !== -1\n        || url.hostname.search(/youtu\\.be/) !== -1) {\n        return <YoutubeLink href={href} />\n      }\n\n    if (replaceCatalogMista === 'true')\n      if (url.hostname.search(/catalog\\.mista/) !== -1) {\n        url.set('hostname', 'infostart.ru')\n\n        return (\n          <a target={this.props.target}\n            className={this.props.class}\n            rel={this.props.rel}\n            href={url.href} >{url.href} </a>\n        )\n      }\n\n    if (fixBrokenLinks === 'true' && parentText) {\n      newHref = this.fixBrokenLink(newHref, parentText);\n    }\n\n    return (\n      <a target={this.props.target}\n        className={this.props.class}\n        rel={this.props.rel}\n        href={newHref} >{children}</a>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n\n  const {\n    showTooltipOnPostLink,\n    showYoutubeVideoTitle,\n    replaceCatalogMista,\n    fixBrokenLinks\n  } = state.options.items;\n\n  return {\n    showTooltipOnPostLink,\n    showYoutubeVideoTitle,\n    replaceCatalogMista,\n    fixBrokenLinks\n  }\n}\n\nexport default (connect(mapStateToProps)(CustomLink): any );","//@flow\nimport React from 'react'\nimport { domain } from 'src/api'\n\nimport type { ResponseVoteItem } from 'src/api'\n\ntype Props = {\n  topicId: string,\n  data: ResponseVoteItem,\n  colors: Array<string>,\n  total: number,\n  n: number\n}\n\nconst VoteItem = (props: Props) => {\n\n  const { topicId, data, total, n, colors } = props;\n\n  const img = `${domain}/css/voting${n}.png`;\n\n  let percent = 0;\n\n  if (total) {\n    percent = Math.round(100 * data.result / total);\n  }\n\n  const imgStyle = { maxWwidth: \"500px\", width: \"100%\", height: \"15px\" };\n\n  return (\n    <div className=\"voting-item\">\n      <div className=\"voting-title\">\n        <a rel=\"nofollow\" style={{ textDecoration: \"none\" }} href={`${window.hash}/topic.php?id=${topicId}&sel=${n}`}>\n          <b><span style={{ color: colors[n - 1] }}>{`${n}. ${data.select}`}</span></b>\n        </a>\n      </div>\n      <div className=\"voting-percentage\">\n        {/*<div className=\"div-va-middle\">*/}\n        <b><span style={{ color: colors[n - 1] }}>{`${percent}% (${data.result})`}</span></b>\n        {/*</div>*/}\n      </div>\n      <div className=\"voting-bar\">\n        <div style={{ width: `${percent}%` }}>\n          <a href={img}>\n            <img src={img} style={imgStyle} alt={`п${n}`} />\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default (VoteItem: any);","//@flow\nimport React from 'react'\nimport VoteItem from './vote_item'\nimport type { ResponseVoteItem } from 'src/api'\n\ntype Props = {\n  items: Array<ResponseVoteItem>,\n  topicId: string,\n  colors: Array<string>\n}\n\nconst VoteChart = (props: Props) => {\n\n  const { items, topicId, colors } = props;\n\n  let total = items.reduce((sum, e) => sum + e.result, 0);\n\n  return (\n    <div style={{ marginBottom: \"10px\" }}>\n      {items.filter(val => val.select).map((data, i) => <VoteItem key={i} data={data} total={total} n={i + 1} topicId={topicId} colors={colors} />)}\n    </div>\n  )\n}\n\nexport default (VoteChart: any);","import React, { Component } from 'react'\n\nclass Vote extends Component {\n\n  render() {\n    const { colors, info, vote } = this.props;\n\n    const voteOption = info[vote - 1];\n    return (\n      <div style={{ marginTop: \"5px\" }}>\n        <b><span style={{ color: colors[vote - 1] }}>{`${vote}. ${voteOption.select}`}</span></b>\n      </div>\n    )\n  }\n}\n\nexport default Vote;","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport activeHtml from 'react-active-html';\n\nimport Code from 'src/components/extensions/code1c'\nimport LinkToPost from 'src/components/extensions/link_to_post'\nimport CustomLink from 'src/components/extensions/custom_link'\n\nimport VoteChart from './vote_chart'\nimport Vote from './vote'\n\nimport type { ResponseInfo, ResponseMessage } from 'src/api'\nimport type { DefaultProps } from 'src/components'\nimport type { State } from 'src/reducers'\n\ntype MsgTextProps = {\n  topicId: string,\n  n: string,\n  html: string,\n  vote: number,\n  data: ResponseMessage,\n  style: {}\n}\n\ntype StateProps = {\n  info: ResponseInfo,\n  showTooltips: string,\n  voteColors?: Array<string>\n}\n\ntype Props = MsgTextProps & StateProps & DefaultProps;\n\nclass MsgText extends Component<Props> {\n\n  processLinksToPosts(text: string): string {\n\n    const { topicId } = this.props;\n\n    const regexp = /(\\()(\\d+)(\\))/gi; // (12)\n    return text.replace(regexp, (res, ...segments) => {\n      const number = segments[1];\n      return `(<link data-topicid='${topicId}' data-number='${number}' ></link>)`\n    });\n  }\n\n  processCode1C(text: string): string {\n\n    const regexp = /(\\[1[CС]\\])((.|\\n|\\r)*?)(\\[\\/1[CС]\\])/gi; // [1C] text [/1C]\n    return text.replace(regexp, (res, ...segments) => {\n      let txt = segments[1];\n\n      //remove first <br>\n      if (txt.substr(0, 4) === \"<br>\")\n        txt = txt.substr(4);\n      return `<code>${txt}</code>`\n    });\n  }\n\n  processText(text: ?string): ?string {\n\n    if (!text)\n      return text;\n\n    const { showTooltips } = this.props;\n\n    text = this.processCode1C(text);\n\n    if (showTooltips === 'true')\n      text = this.processLinksToPosts(text);\n\n    return text;\n  }\n\n  render() {\n    const { topicId, n, html, vote, info, style, voteColors } = this.props;\n\n    let voteElement;\n    if (vote && info.voting && topicId === info.id) {\n      let voteOption = info.voting[vote - 1];\n      if (voteOption)\n        voteElement = <Vote info={info.voting} vote={vote} colors={voteColors} />\n    }\n\n    let voteChart;\n    if (n === \"0\" && info.is_voting === 1 && info.voting) {\n      voteChart = <VoteChart items={info.voting} topicId={topicId} colors={voteColors} />\n    }\n\n    let processedHtml = this.processText(html);\n    const componentsMap = {\n      link: props => <LinkToPost topicId={props['data-topicid']} number={props['data-number']} key={props.key} />,\n      code: props => <Code {...props} />,\n      a: props => <CustomLink {...props} parentText={processedHtml} />\n    };\n    let textComponent = activeHtml(processedHtml, componentsMap);\n\n    return (\n      <div className=\"message\" style={{ ...style }}>\n        {voteChart}\n        <div>\n          {textComponent}\n        </div>\n        {voteElement}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n  const { info } = state.topic;\n\n  return {\n    info,\n    voteColors: state.options.voteColors,\n    showTooltips: state.options.items['showTooltips']\n  }\n}\n\nexport default (connect(mapStateToProps)(MsgText): any );","//@flow\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport dateFormat from 'dateformat'\n\nimport './topic_preview.css'\n\ntype TopicPreviewProps = {\n    user: ?string,\n    utime: ?number,\n    topicId: string,\n    n: number,\n    onFirst: any,   \n    onLast: any,   \n    onPrev: any,   \n    onNext: any\n}\n\nclass PreviewHeader extends Component<TopicPreviewProps> {\n\n    render() {\n        const { user, utime, topicId, n } = this.props;\n\n        if (utime)\n            var date = new Date(utime*1000);\n\n        return (\n            <div>\n                <span className=\"plus-nav\" onClick={this.props.onFirst}>[← </span>\n                <span className=\"plus-nav\" onClick={this.props.onPrev}> « </span>\n                <Link className=\"plus-nav\" title={`Перейти к сообщению ${n}`} to={`/topic.php?id=${topicId}#${n}`}>{n}</Link>\n                <span className=\"plus-nav\" onClick={this.props.onNext}> » </span>\n                <span className=\"plus-nav\" onClick={this.props.onLast}> →]</span>\n                <b style={{margin: \"auto 5px\"}}>{user}</b>\n                <span className=\"agh\">{dateFormat(date, 'dd.mm.yy - HH:MM')}</span>\n            </div>\n        )    \n    }\n\n}\n\nexport default ( PreviewHeader: any );","//@flow\nimport React, { Component } from 'react'\n\nimport * as API from 'src/api'\n\nimport MsgText from 'src/components/topic/row/msg_text'\n\nimport PreviewHeader from './preview_header'\nimport './topic_preview.css'\n\ntype TopicPreviewProps = {\n    topicId: string,\n    n: number   \n}\n\ntype Props = TopicPreviewProps;\ntype State = {\n    n: number,\n    data: ?any,\n    error: ?string    \n}\n\nclass TopicPreview extends Component<Props, State> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            n: props.n,\n            data: null,\n            error: null\n        }\n    }\n\n    async componentDidMount() {\n        await this.fetchData(this.state.n);\n    }\n\n    fetchData = async (n: number) => {\n        let data, error;\n        try {\n            data = await API.getMessage(this.props.topicId, n);\n            if (!data)\n                error = `Сообщение не найдено ${n}`;\n\n        } catch(e) {\n            error = e.message\n        };\n        this.setState({\n            n,\n            data,\n            error\n        })\n    }\n\n    onClickFirst = () => {\n        this.fetchData(0);\n    }\n    \n    onClickNext = () => {\n        this.fetchData(this.state.n + 1);\n    }\n\n    onClickPrev = () => {\n        if (this.state.n > 0)\n            this.fetchData(this.state.n - 1);\n    }\n\n    onClickLast = async () => {\n        const n = await API.getTopicMessagesCount(this.props.topicId);\n        this.fetchData(n);\n    }\n\n    render() {\n        const { topicId } = this.props;\n        const { data, error, n } = this.state;\n        if (!data && !error)\n            return null;\n\n        if (data)\n            var { user, utime } = data;\n\n        return (\n            <div className=\"topic-preview\">\n                <PreviewHeader \n                    user={user}\n                    utime={+utime}\n                    topicId={topicId}\n                    n={n}\n                    onFirst={this.onClickFirst}\n                    onLast={this.onClickLast}\n                    onNext={this.onClickNext}\n                    onPrev={this.onClickPrev}\n                />\n                {data && <MsgText \n                    data={data} \n                    html={data.text} \n                    topicId={topicId} \n                    style={{maxHeight: \"500px\", overflowY: \"auto\", overflowWrap: \"break-word\"}}\n                />}\n                {error && <p>{error}</p>}\n            </div>\n        )    \n    }\n\n}\n\nexport default ( TopicPreview: any );","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport queryString from 'query-string'\n\nimport type { State } from 'src/reducers'\nimport type { DefaultProps, Location } from 'src/components'\n\nimport type { TopicsListState } from 'src/reducers/topics_list'\nimport type { SectionsState } from 'src/reducers/sections'\nimport type { LoginState } from 'src/reducers/login'\n\nimport { fetchTopicsListIfNeeded } from 'src/actions/topics_list'\n\nimport Header from './header'\nimport Row from './row'\nimport Pages from 'src/components/common/pages'\nimport NewTopic from './new_topic'\nimport Error from 'src/components/common/error'\n\nimport TopicPreview from 'src/components/preview/topic_preview'\n\nimport './topics_list.css'\n\ntype StateProps = {\n  topicsList: TopicsListState,\n  sections: SectionsState,\n  login: LoginState,\n  topicsPerPage: string,\n  autoRefreshTopicsList: string,\n  autoRefreshTopicsListInterval: string\n}\n\ntype Props = {\n  fetchTopicsListIfNeeded: any\n} & DefaultProps & StateProps;\n\nclass TopicsList extends Component<Props> {\n\n  location: Location;\n  locationParams: { page?: string };\n  page: string;\n  timer: any;\n\n  constructor(props: Props) {\n    super(props);\n    this.locationParams = { page: '1' };\n  }\n\n  componentDidMount() {\n\n    let { location } = this.props;\n\n    this.location = location;\n    this.updateTopicsList();\n\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  componentDidUpdate() {\n\n    const { location, topicsPerPage } = this.props;\n\n    if (this.location.search !== location.search\n      || this.props.topicsPerPage !== topicsPerPage) {\n\n      this.location = location;\n      this.updateTopicsList();\n      window.scrollTo(0, 0);\n    }\n\n    document.title = 'React.Mista';\n  }\n\n  updateTopicsList = () => {\n\n    const { fetchTopicsListIfNeeded } = this.props;\n    let { autoRefreshTopicsList, autoRefreshTopicsListInterval } = this.props;\n\n    this.locationParams = queryString.parse(this.location.search);\n    fetchTopicsListIfNeeded(this.locationParams);\n\n    if (autoRefreshTopicsList === 'true') {\n\n      autoRefreshTopicsListInterval = +autoRefreshTopicsListInterval;\n      if (autoRefreshTopicsListInterval < 60) autoRefreshTopicsListInterval = 60;\n\n      clearTimeout(this.timer);\n      this.timer = setTimeout(this.updateTopicsList, autoRefreshTopicsListInterval * 1000);\n    }\n  }\n\n  onPostNewTopicSuccess = () => {\n    this.updateTopicsList();\n  }\n\n  render() {\n\n    const { topicsList, sections } = this.props;\n\n    let rows = [];\n    for (let item of topicsList.items) {\n\n      rows.push(<Row key={item.id} data={item} />);\n      if (item.showPreview)\n        rows.push(\n          <div key={`preview${String(item.id)}`} className=\"preview-container\">\n            <TopicPreview topicId={String(item.id)} n={0} />\n          </div>\n        )\n    }\n\n    return (\n      <div>\n        <Header history={this.props.history} />\n        {topicsList.error && (<Error text={topicsList.error} />)}\n        <div className=\"table\">\n          <div className=\"th\" style={{ position: \"sticky\", top: \"39px\" }}>\n            <div style={{letterSpacing: \"-1px\"}}>Раздел</div>\n            <div>Re</div>\n            <div></div>\n            <div>Тема</div>\n            <div>Автор</div>\n            <div><span style={{ cursor: \"pointer\" }} title=\"Обновить список\" onClick={this.updateTopicsList}>{topicsList.isFetching ? \"Обновляется\" : \"Обновлено\"}</span></div>\n          </div>\n          {rows}\n          <div className=\"tf\">\n            <Pages baseUrl='index.php' locationParams={this.locationParams} maxPage={10} />\n          </div>\n        </div>\n        <div id=\"F\" className=\"newtopic\" style={{ marginBottom: \"10px\", marginTop: \"5px\", position: 'relative' }}>\n          <NewTopic sections={sections.items} onSubmitSuccess={this.onPostNewTopicSuccess} locationParams={this.locationParams} />\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state: State): StateProps => {\n\n  return {\n    topicsList: state.topicsList,\n    sections: state.sections,\n    login: state.login,\n    topicsPerPage: state.options.items.topicsPerPage,\n    autoRefreshTopicsList: state.options.items.autoRefreshTopicsList,\n    autoRefreshTopicsListInterval: state.options.items.autoRefreshTopicsListInterval,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchTopicsListIfNeeded: (...params) => dispatch(fetchTopicsListIfNeeded(...params)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicsList);","//@flow\nimport * as API from 'src/api'\n\nimport type { ResponseInfo, ResponseMessage, ResponseMessages } from 'src/api'\n\nexport type REQUEST_TOPIC = {\n  type: 'REQUEST_TOPIC'\n}\n\nexport type RECEIVE_TOPIC = {\n  type: 'RECEIVE_TOPIC',\n  info: ResponseInfo,\n  item0: ResponseMessage,\n  items: ResponseMessages,\n  receivedAt: Date\n}\n\nexport type RECEIVE_TOPIC_FAILED = {\n  type: 'RECEIVE_TOPIC_FAILED',\n  error: any,\n  receivedAt: Date\n}\n\nexport type REQUEST_NEW_MESSAGES = {\n  type: 'REQUEST_NEW_MESSAGES'\n}\n\nexport type RECEIVE_NEW_MESSAGES = {\n  type: 'RECEIVE_NEW_MESSAGES',\n  items: ResponseMessages,\n  receivedAt: Date\n}\n\nexport type CLOSE_TOPIC = {\n  type: 'CLOSE_TOPIC'\n}\n\n\nexport type TopicAction = REQUEST_TOPIC | RECEIVE_TOPIC | RECEIVE_TOPIC_FAILED | CLOSE_TOPIC | REQUEST_NEW_MESSAGES | RECEIVE_NEW_MESSAGES;\n\nexport const requestTopic = (): any => ({\n  type: 'REQUEST_TOPIC'\n})\n\nexport const receiveTopic = (info: ResponseInfo, item0: ?ResponseMessage, items: ResponseMessages): any => {\n\n  return {\n    type: 'RECEIVE_TOPIC',\n    info,\n    item0,\n    items,\n    receivedAt: Date.now()\n  }\n}\n\nexport const closeTopic = (): any => {\n\n  return {\n    type: 'CLOSE_TOPIC',\n  }\n}\n\nexport const fetchTopic = (params: any, item0: ?ResponseMessage): any => async (dispatch: any) => {\n\n  dispatch(requestTopic())\n\n  let info;\n  try {\n    info = await API.getTopicInfo({ id: params.id });\n  } catch (e) {\n    console.error(e);\n    info = {\n      id: params.id,\n      text: '',\n      answers_count: \"0\"\n    };\n  }\n\n  try {\n    let page = params.page || 1;\n\n    let _item0 = item0;\n    let _items;\n    if (page === 'last20') {\n\n      if (+info.answers_count > 21) {\n\n        if (!_item0) {\n          let items = await API.getTopicMessages({\n            id: params.id,\n            from: 0,\n            to: 1\n          });\n          _item0 = items[0];\n        }\n\n        let first = +info.answers_count - 20;\n        _items = await API.getTopicMessages({\n          id: params.id,\n          from: first,\n          to: 1010\n        });\n\n      } else {\n        let items = await API.getTopicMessages({\n          id: params.id,\n          from: 0,\n          to: 1010\n        });\n        _item0 = items[0];\n        _items = items.slice(1);\n      }\n\n    } else {\n\n      page = +page;\n      let first = 0;\n      let last = page * 100 - 1;\n\n      if (page > 1) {\n\n        first = (page - 1) * 100;\n        if (!_item0) {\n          let items = await API.getTopicMessages({\n            id: params.id,\n            from: 0,\n            to: 1\n          });\n          _item0 = items[0];\n        }\n\n        _items = await API.getTopicMessages({\n          id: params.id,\n          from: first,\n          to: last\n        });\n\n      } else {\n        if (_item0)\n          first = 1;\n        else\n          first = 0;\n\n        let items = await API.getTopicMessages({\n          id: params.id,\n          from: first,\n          to: last\n        });\n\n        if (_item0) {\n          _items = items;\n        } else {\n          _item0 = items[0];\n          _items = items.slice(1);\n        }\n      }\n\n    }\n\n    if (info.answers_count === \"0\" && _items.length > 0)\n      info.answers_count = _items[_items.length - 1].n;\n\n    if (page === 'last20' && _items.length > 20) {\n      _items = _items.slice(-20);\n    }\n\n    dispatch(receiveTopic(info, _item0, _items));\n\n  } catch (error) {\n\n    console.error('Failed to fetch topic:', error);\n\n    dispatch({\n      type: 'RECEIVE_TOPIC_FAILED',\n      error,\n      receivedAt: Date.now()\n    });\n\n  }\n}\n\nconst shouldFetch = (state) => {\n  const topic = state.topic;\n  if (!topic) {\n    return true\n  }\n  if (topic.isFetching) {\n    return false\n  }\n  return true\n}\n\nexport const fetchTopicIfNeeded = (params: any, item0: ?ResponseMessage): any => (dispatch: any, getState: any) => {\n  if (shouldFetch(getState())) {\n    return dispatch(fetchTopic(params, item0));\n  }\n}\n\nexport type FetchNewMessageseParams = {\n  id: number | string,\n  last: number\n}\n\nexport const fetchNewMessages = (params: FetchNewMessageseParams): any => async (dispatch: any) => {\n\n  dispatch({\n    type: 'REQUEST_NEW_MESSAGES'\n  });\n\n  try {\n    const json = await API.getTopicMessages({\n      id: params.id,\n      from: params.last + 1,\n      to: 1002\n    });\n\n    dispatch({\n      type: 'RECEIVE_NEW_MESSAGES',\n      items: json,\n      receivedAt: Date.now()\n    });\n\n  } catch (error) {\n    console.error('Failed to fetch new messages:', error);\n\n    dispatch({\n      type: 'RECEIVE_NEW_MESSAGES_FAILED',\n      error,\n      receivedAt: Date.now()\n    });\n  }\n\n}\n\nexport const fetchNewMessagesIfNeeded = (params: FetchNewMessageseParams): any => (dispatch: any, getState: any) => {\n  if (shouldFetch(getState())) {\n    return dispatch(fetchNewMessages(params));\n  }\n}","// @flow\nimport * as React from 'react'\nimport { connect } from 'react-redux'\n\nimport Login from '../login'\n\ntype Props = {\n  info: { forum: string }\n}\n\nclass Header extends React.Component<Props> {\n\n  render() {\n\n    const { info } = this.props;\n\n    const forums = {\n      '1c': '1С:Предприятие',\n      'life': 'О жизни',\n      'it': 'Информационные технологии',\n      'job': 'Работа'\n    };\n\n    return (\n\n      <div className=\"flex-row\">\n        <div className=\"user-td\">\n          <Login />\n        </div>\n        <div className=\"section-td\">\n          <span id=\"forum_string\" className=\"bold120\">\n            <a rel=\"nofollow\" href={`${window.hash}/index.php?forum=${info.forum}`} style={{ textDecoration: \"none\" }}>{forums[info.forum]}</a>\n          </span>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n\n  const {\n    info\n  } = state.topic || {\n    info: {\n      forum: ''\n    }\n  }\n\n  return {\n    info\n  }\n}\n\nexport default (connect(mapStateToProps)(Header): any );","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { defaultTopicState } from 'src/reducers/topic'\n\nimport type { State } from 'src/reducers'\nimport type { ResponseInfo } from 'src/api'\nimport { domain, urlTopicInfo, urlTopicMessages } from 'src/api'\n\ntype StateProps = {\n  info: ResponseInfo\n}\n\nclass TopicInfo extends Component<StateProps> {\n\n  render() {\n\n    const { info } = this.props;\n\n    let yandexUrl = \"https://www.yandex.ru/yandsearch?rpt=rad&text=\" + encodeURIComponent(info.text);\n\n    return (\n      <div className=\"topic-row\">\n        <div className=\"cell-userinfo\">\n          <div className=\"topic-tools\">\n            <a title=\"API.info\" href={`${domain}/${urlTopicInfo}?id=${info.id}`} className=\"agh\" style={{ display: \"block\", lineHeight: \"1em\" }}>i</a>\n            <a title=\"API.messages\" href={`${domain}/${urlTopicMessages}?id=${info.id}&from=0&to=20`} className=\"agh\" style={{ display: \"block\", lineHeight: \"1em\" }}>m</a>\n            {/*<a href=\"add_voting.php?topic_id=815217\" title=\"Добавить голосование\">vote</a> &nbsp;&nbsp;*/}\n          </div>\n        </div>\n        <div className=\"cell-message\">\n          <div className=\"flex-row\">\n            <div style={{ flex: 1, textAlign: \"center\" }}>\n              <a href={`${domain}/topic.php?id=${info.id}`}>\n                <h1 className=\"topic-title\" dangerouslySetInnerHTML={{ __html: info.text }}></h1>\n              </a>\n              <div className=\"moder-action\"></div>\n            </div>\n            <div style={{ flex: \"0 0 20px\", position: \"relative\" }}>\n              <div className=\"div-va-middle\">\n                <a rel=\"noopener noreferrer\" href={yandexUrl} title=\"Искать в Яндексе\" target=\"_blank\" className=\"yandex\">Я</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n  const {\n    info\n  } = state.topic || defaultTopicState;\n\n  return {\n    info\n  }\n}\n\nexport default (connect(mapStateToProps)(TopicInfo): any );","//@flow\nimport React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport dateFormat from 'dateformat'\nimport classNames from 'classnames'\nimport { domain } from 'src/api'\n\nimport { addMessageText } from 'src/actions/new_message'\n\nimport type { ResponseMessage } from 'src/api'\nimport type { DefaultProps } from 'src/components'\n\ntype UserInfoProps = {\n  data: ResponseMessage,\n  isAuthor: boolean,\n  isYou?: boolean\n}\n\ntype Props = UserInfoProps & DefaultProps;\n\nclass UserInfo extends Component<Props> {\n\n  onClick;\n\n  constructor() {\n    super();\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    const { dispatch, data } = this.props;\n    dispatch(addMessageText(`(${data.n})`));\n\n    let elem = document.getElementById('message_text');\n    if (elem)\n      window.scrollTo(0, elem.offsetTop);\n  }\n\n  render() {\n    const { data, isAuthor, isYou } = this.props;\n    const href = `${domain}/users.php?id=${data.userId}`;\n    let dataStr;\n    if (!data) {\n      dataStr = '';\n    } else if (data.n === \"0\") {\n      dataStr = dateFormat(new Date(+data.utime * 1000), 'dd.mm.yy - HH:MM');\n    } else {\n      dataStr = (\n        <Fragment>\n          <span className=\"message-number\">{data.n}</span>{' - ' + dateFormat(new Date(+data.utime * 1000), 'dd.mm.yy - HH:MM')}\n        </Fragment>\n      )\n    }\n\n    const userClassNames = classNames(\"registered-user\", {\n      \"is-author\": isAuthor,\n      \"is-you\": isYou\n    });\n\n    return (\n      <div className=\"user-info\">\n        <a className={userClassNames} href={href}>{data.user}</a>\n        <div className=\"message-time\">\n          <span className=\"ah\" >{dataStr}</span>\n          <button className=\"button ah\" onClick={this.onClick}>{dataStr}</button>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default (connect()(UserInfo): any );","//@flow\nimport * as API from '../api'\nimport type { RequestNewMessage } from 'src/api'\n\nexport type POST_NEW_MESSAGE_START = {\n  type: 'POST_NEW_MESSAGE_START'\n}\n\nexport type POST_NEW_MESSAGE_COMPLETE = {\n  type: 'POST_NEW_MESSAGE_COMPLETE'\n}\n\nexport type NEW_MESSAGE_TEXT = {\n  type: 'NEW_MESSAGE_TEXT',\n  text: string\n}\n\nexport type ADD_MESSAGE_TEXT = {\n  type: 'ADD_MESSAGE_TEXT',\n  text: string\n}\n\n\nexport type NewMessageAction = POST_NEW_MESSAGE_START | POST_NEW_MESSAGE_COMPLETE | NEW_MESSAGE_TEXT | ADD_MESSAGE_TEXT;\n\nexport type PostNewmessageParams = {\n  text: string,\n  topicId: string,\n  voting_select?: number,\n  onSuccess?: () => void\n}\n\nexport const postNewMessage = (params: PostNewmessageParams): any => async (dispatch: any) => {\n\n  dispatch({\n    type: 'POST_NEW_MESSAGE_START'\n  });\n\n  let fetchParams: RequestNewMessage = {\n    message_text: encodeURIComponent(params.text),\n    action: \"new\",\n    topic_id: params.topicId,\n    rnd: Math.round(Math.random() * 10000000000)\n  };\n\n  if (params.voting_select)\n    fetchParams.voting_select = params.voting_select;\n\n  try {\n    await API.postNewMessage(fetchParams);\n    await dispatch({\n      type: 'POST_NEW_MESSAGE_COMPLETE'\n    });\n    if (params.onSuccess)\n      params.onSuccess();\n\n  } catch (err) {\n    console.error(\"Failed to post new message: \" + err);\n  }\n}\n\nexport const addMessageText = (text: string): any => (dispatch: any) => {\n  dispatch({\n    type: 'ADD_MESSAGE_TEXT',\n    text\n  })\n}","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport UserInfo from './user_info'\nimport MsgText from './msg_text'\n\nimport type { ResponseMessage } from 'src/api'\nimport type { State } from 'src/reducers'\nimport type { LoginState } from 'src/reducers/login'\nimport type { DefaultProps } from 'src/components'\n\ntype RowProps = {\n    data: ResponseMessage\n}\n\ntype StateProps = {\n    topicId: string,\n    author: string,\n    login: LoginState\n}\n\ntype Props = RowProps & StateProps & DefaultProps;\n\nclass Row extends Component<Props> {\n\n    render() {\n        const { data, author, topicId, login } = this.props;\n\n        if (!data)\n            return null;\n\n        return (\n            <div className=\"topic-row\" id={data.n}>\n                <div className=\"cell-userinfo\">\n                    <UserInfo data={data} isAuthor={data.user === author} isYou={data.user === login.username}/>\n                </div>\n                <div className=\"cell-message\">\n                    <MsgText data={data} html={data.text} topicId={topicId} n={data.n} vote={+data.vote}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    const {\n        info,\n        item0,\n    } = state.topic || {\n        info: {},\n        item0: {},\n    }\n\n    return {\n        topicId: info.id,\n        author: item0 ? item0.user : '',\n        login: state.login\n    }\n}\n\nexport default ( connect(mapStateToProps)(Row): any );","//@flow\nimport * as API from 'src/api'\nimport type { RequestBookmark } from 'src/api'\n\nexport type ADD_BOOKMARK_START = {\n  type: 'ADD_BOOKMARK_START'\n}\n\nexport type ADD_BOOKMARK_COMPLETE = {\n  type: 'ADD_BOOKMARK_COMPLETE'\n}\n\nexport type ADD_BOOKMARK_FAIL = {\n  type: 'ADD_BOOKMARK_FAIL'\n}\n\nexport type AddBookmarkAction = ADD_BOOKMARK_START | ADD_BOOKMARK_COMPLETE | ADD_BOOKMARK_FAIL;\n\n\nexport const addBookmark = (params: RequestBookmark): any => async (dispatch: any) => {\n\n  dispatch({\n    type: \"ADD_BOOKMARK_START\"\n  });\n\n  try {\n    await API.postBookmark(params);\n\n    dispatch({\n      type: \"ADD_BOOKMARK_COMPLETE\"\n    });\n\n  } catch (err) {\n    console.error('Error adding bookmark:', err);\n    dispatch({\n      type: \"ADD_BOOKMARK_FAIL\"\n    });\n  }\n\n}\n","//@flow\nimport * as React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'react-bootstrap'\n\nimport { fetchNewMessagesIfNeeded } from 'src/actions/topic'\nimport { addBookmark } from 'src/actions/bookmark'\nimport { getMaxPage } from 'src/utils'\n\ntype FooterProps = {\n  info: any,\n  dispatch: any,\n  bookmark: any,\n  isFetching: boolean,\n  params: any\n}\n\nclass Footer extends React.Component<FooterProps> {\n\n  onBookmarkClick = () => {\n    const { info, dispatch } = this.props;\n    dispatch(addBookmark(info));\n  }\n\n  onRefreshClick = () => {\n\n    const { info, dispatch } = this.props;\n\n    dispatch(fetchNewMessagesIfNeeded({\n      id: info.id,\n      last: parseInt(info.answers_count, 10)\n    }));\n\n  }\n\n  render() {\n\n    const { info, bookmark, isFetching, params } = this.props;\n    const maxPage = getMaxPage(info.answers_count);\n\n    let updateButton;\n    let page = params.page || 1;\n    if (page === 'last20' || page === maxPage)\n      updateButton =\n        <Button\n          onClick={this.onRefreshClick}\n          disabled={bookmark.isFetching}\n          size=\"sm\"\n          className='button'\n          variant=\"light\">\n          {isFetching ? 'Обновляется' : 'Обновить ветку'}\n        </Button>\n\n    return (\n      <div className=\"flex-row\" id=\"F\">\n        <div className=\"ta-left va-top\" style={{ width: \"50%\" }}>\n          <Button\n            onClick={this.onBookmarkClick}\n            disabled={bookmark.isFetching}\n            size=\"sm\"\n            className='button'\n            variant=\"light\">\n            {bookmark.isFetching ? 'Подождите...' : 'Закладка'}\n          </Button>\n        </div>\n        <div className=\"ta-right va-middle\" style={{ marginLeft: \"auto\" }}>\n          {updateButton}\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = state => {\n\n  const {\n    isFetching,\n    lastUpdated,\n    info,\n  } = state.topic || {\n    isFetching: true,\n    info: {},\n  }\n\n  return {\n    info,\n    isFetching,\n    lastUpdated,\n    bookmark: state.bookmark || {}\n  }\n}\n\nexport default (connect(mapStateToProps)(Footer): any );","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { FormGroup, Form } from 'react-bootstrap'\n\nimport TextEditor from 'src/components/common/text_editor'\nimport { postNewMessage } from 'src/actions/new_message'\n\nimport type { State } from 'src/reducers'\nimport type { NewMessageState } from 'src/reducers/new_message'\n\nimport type { ResponseInfo } from 'src/api'\nimport type { DefaultProps } from 'src/components'\n\ntype NewMessageProps = {\n  onSubmitSuccess?: () => void\n}\n\ntype StateProps = {\n  info: ResponseInfo,\n  newMessage: NewMessageState\n}\n\ntype Props = NewMessageProps & StateProps & DefaultProps;\ntype ComponentState = {\n  voting?: number\n}\n\nclass NewMessage extends Component<Props, ComponentState> {\n\n  constructor(props) {\n    super(props);\n    this.state = { voting: undefined };\n  }\n\n  onSubmit = (e) => {\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const { dispatch, info, newMessage } = this.props;\n\n    let params = {\n      text: newMessage.text,\n      topicId: info.id,\n      onSuccess: this.onSubmitSuccess,\n      voting_select: undefined\n    };\n\n    if (this.state.voting) {\n      params.voting_select = this.state.voting;\n    }\n\n    dispatch(postNewMessage(params));\n  }\n\n  onSubmitSuccess = () => {\n\n    const { dispatch } = this.props;\n\n    dispatch({\n      type: 'NEW_MESSAGE_TEXT',\n      text: ''\n    });\n\n    this.setState({\n      ...this.state,\n      voting: undefined\n    });\n\n    if (this.props.onSubmitSuccess) {\n      this.props.onSubmitSuccess();\n    }\n  }\n\n  clearVoting = (e) => {\n\n    e.preventDefault();\n\n    this.setState({\n      ...this.state,\n      voting: undefined\n    })\n\n  }\n\n  setVotingOption = (i) => {\n    this.setState({\n      ...this.state,\n      voting: i\n    })\n  }\n\n  render() {\n\n    const { info, newMessage } = this.props;\n\n    let votingElem;\n    if (info.is_voting && info.voting) {\n\n      let votingOptions = [];\n      for (let i = 1; i <= info.voting.length; i++) {\n\n        const item = info.voting[i - 1];\n        if (!item.select)\n          continue;\n\n        votingOptions.push(\n          <Form.Check\n            type=\"radio\"\n            key={i}\n            name=\"voting\"\n            checked={this.state.voting === i}\n            onChange={() => this.setVotingOption(i)}\n            label={`${i}. ${item.select}`}\n          />\n        );\n      }\n\n\n      votingElem = (\n        <FormGroup>\n          <legend>\n            <small>Ваш выбор:\n              <span href=\"\" id=\"voting_clear\" style={{ marginLeft: \"5px\", cursor: \"pointer\" }} onClick={this.clearVoting}>очистить</span>\n            </small>\n          </legend>\n          {votingOptions}\n          Обоснуйте свой выбор!\n        </FormGroup>\n      );\n\n    }\n\n    return (\n      <form style={{ marginTop: \"5px\" }} onSubmit={this.onSubmit}>\n        <div className=\"bold\">Добавить сообщение в тему:</div>\n        <div className=\"new-message-container\">\n          <div className=\"new-message-text\">\n            <TextEditor\n              isFetching={newMessage.isFetching}\n              text={newMessage.text}\n              placeholder=\"Сообщение\"\n              formName=\"NEW_MESSAGE\"\n            />\n          </div>\n          <div className=\"new-message-voting\">\n            {votingElem}\n          </div>\n        </div>\n      </form>\n    )\n  }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n  return {\n    info: state.topic.info,\n    newMessage: state.newMessage\n  };\n\n}\n\nexport default (connect(mapStateToProps)(NewMessage): any );","//@flow\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport queryString from 'query-string'\nimport { fetchTopicIfNeeded, fetchNewMessagesIfNeeded, closeTopic } from 'src/actions/topic'\n\nimport type { DefaultProps, Location } from 'src/components'\nimport type { ResponseInfo, ResponseMessage, ResponseMessages } from 'src/api'\nimport type { State } from 'src/reducers'\nimport type { LoginState } from 'src/reducers/login'\nimport type { OptionsItems } from 'src/reducers/options'\n\nimport Error from 'src/components/common/error'\nimport Pages from 'src/components/common/pages'\nimport Header from './header'\nimport TopicInfo from './topic_info'\nimport Row from './row'\nimport Footer from './footer'\nimport NewMessage from './new_message';\nimport { getMaxPage } from 'src/utils';\n\nimport './topic.css'\n\ntype TopicLocationParams = {\n  id: string,\n  page?: string,\n  hash?: string\n}\n\ntype StateProps = {\n  login: LoginState,\n  info: ResponseInfo,\n  item0?: ?ResponseMessage,\n  items: ResponseMessages,\n  error?: any,\n  options: OptionsItems\n}\n\ntype Props = {\n  fetchTopicIfNeeded: any,\n  fetchNewMessagesIfNeeded: any,\n  closeTopic: any,\n  clearText: any\n} & DefaultProps & StateProps\n\nclass Topic extends Component<Props> {\n\n  locationParams: TopicLocationParams;\n  location: Location;\n  timer: any;\n  scrolledToHash: boolean;\n  nodeF: any;\n\n  constructor(props) {\n    super(props);\n    this.locationParams = { id: '' };\n    this.scrolledToHash = false;\n  }\n\n  componentDidMount() {\n\n    this.location = this.props.location;\n    this.updateTopic();\n\n    if (this.props.options.autoRefreshTopic === 'true') {\n\n      let autoRefreshTopicInterval = +this.props.options.autoRefreshTopicInterval;\n      if (autoRefreshTopicInterval < 60) autoRefreshTopicInterval = 60;\n\n      this.timer = setInterval(this.autoUpdate, autoRefreshTopicInterval * 1000);\n    }\n\n  }\n\n  componentDidUpdate() {\n    \n    const { location, items, info } = this.props;\n    if (!this.scrolledToHash &&\n      location.hash &&\n      items.length > 0) {\n\n      this.scrolledToHash = true;\n      let nodeHash = document.getElementById(location.hash.slice(1));\n      if (nodeHash)\n        setTimeout(() => window.scrollTo(0, nodeHash.offsetTop), 1);\n    }\n\n    let title = info.text;\n    if (title && document.title !== title) {\n      \n      const parser = new DOMParser();\n      const floatingElement = parser.parseFromString(title, 'text/html');\n      title = floatingElement.firstChild.innerText;\n\n      document.title = title;\n    }\n    \n    if (this.location.search !== location.search) {\n      this.location = location;\n      this.updateTopic();\n    }\n  }\n\n  componentWillUnmount() {\n\n    const { closeTopic, clearText } = this.props;\n\n    clearInterval(this.timer);\n    closeTopic();\n    clearText();\n  }\n\n  autoUpdate = () => {\n    const { info, fetchNewMessagesIfNeeded } = this.props;\n    const isLastPage = (this.locationParams.page === 'last20' || this.locationParams.page === getMaxPage(+info.answers_count));\n\n    if (isLastPage)\n      fetchNewMessagesIfNeeded({\n        id: info.id,\n        last: parseInt(info.answers_count, 10)\n      })\n  }\n\n  updateTopic = () => {\n\n    let { fetchTopicIfNeeded, item0 } = this.props;\n    let locationParams = queryString.parse(this.location.search);\n\n    if (!locationParams.page)\n      locationParams.page = 1;\n\n    else if (locationParams.page !== 'last20') {\n      locationParams.page = +locationParams.page;\n      if (isNaN(locationParams.page))\n        locationParams.page = 1;\n    }\n\n    if (locationParams.id !== this.locationParams.id)\n      item0 = null;\n\n    this.locationParams = locationParams;\n    fetchTopicIfNeeded(this.locationParams, item0);\n  }\n\n  onPostNewMessageSuccess = () => {\n\n    const { fetchNewMessagesIfNeeded, info } = this.props;\n\n    const isLastPage = (this.locationParams.page === 'last20' || this.locationParams.page === getMaxPage(+info.answers_count));\n\n    if (isLastPage)\n      fetchNewMessagesIfNeeded({\n        id: info.id,\n        last: parseInt(info.answers_count, 10)\n      });\n\n  }\n\n  render() {\n\n    const { login, items, item0, info, error } = this.props;\n    const maxPage = getMaxPage(+info.answers_count);\n\n    return (\n      <div style={{ marginBottom: \"5px\" }}>\n        {error && <Error text={error.message} />}\n        <Header currentPage={this.locationParams.page} />\n        <div className=\"topic-table\">\n          <TopicInfo />\n          <Row key='0' data={item0} />\n          {items.map((item, i) => (\n            <Row key={item.n} data={item} />\n          ))}\n          {(maxPage > 1 || this.locationParams.page === \"last20\") &&\n            <div className=\"tf\">\n              <Pages baseUrl='topic.php' locationParams={this.locationParams} maxPage={maxPage} last20 />\n            </div>\n          }\n        </div>\n        <Footer params={this.locationParams} />\n        {login.logged &&\n          <NewMessage onSubmitSuccess={this.onPostNewMessageSuccess} />\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n  const {\n    isFetching,\n    lastUpdated,\n    info,\n    item0,\n    items,\n    error\n  } = state.topic;\n\n  return {\n    login: state.login,\n    info,\n    item0,\n    items,\n    isFetching,\n    lastUpdated,\n    error,\n    options: state.options.items\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchTopicIfNeeded: (...params) => dispatch(fetchTopicIfNeeded(...params)),\n  fetchNewMessagesIfNeeded: (...params) => dispatch(fetchNewMessagesIfNeeded(...params)),\n  closeTopic: (...params) => dispatch(closeTopic(...params)),\n  clearText: () => dispatch({ type: 'NEW_MESSAGE_TEXT', text: '' })\n})\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(Topic): any );","//@flow\nimport React, { Component } from 'react'\n\ntype RadioOptionProps = {\n  name: string,\n  label: string,\n  value: string,\n  values: Array<{ name: string, descr: string }>,\n  onChange: any,\n  oneLine: boolean\n}\n\nclass RadioOption extends Component<RadioOptionProps> {\n\n  onChange = (e: any) => {\n    const { name } = this.props;\n    this.props.onChange(e, name, e.target.value);\n  }\n\n  render() {\n\n    const { name, label, values, oneLine } = this.props;\n\n    let valuesElem = [];\n    for (let i = 0; i < values.length; i++) {\n      let item = values[i];\n      valuesElem.push(\n        <label key={i} htmlFor={item.name} style={{ marginRight: \"5px\" }}>\n          <input type=\"radio\" name={name} value={item.name} checked={item.name === this.props.value} onChange={this.onChange} />\n          {item.descr}\n        </label>\n      );\n    }\n\n    return (\n      <span>\n        <span style={{ marginRight: \"5px\" }}>{label}</span>\n        {oneLine ? null : <br />}\n        {valuesElem}\n      </span>\n    );\n  }\n}\n\nexport default (RadioOption: any);","//@flow\nimport React, { Component } from 'react'\n\ntype StringOptionProps = {\n  name: string,\n  label: string,\n  value: string,\n  onChange: any,\n  postfix: ?string\n}\n\nclass StringOption extends Component<StringOptionProps> {\n\n  onChange = (e: any) => {\n    const { name } = this.props;\n    this.props.onChange(e, name, e.target.value);\n  }\n\n  render() {\n\n    const { name, value, label, postfix } = this.props;\n\n    return (\n      <label htmlFor={name} style={{ marginRight: \"5px\" }}>\n        <span style={{ marginRight: \"5px\" }}>{label}</span>\n        <input type=\"string\" name={name} value={value} onChange={this.onChange} className='input' />\n        {postfix !== undefined ?\n          <span style={{ marginLeft: \"5px\" }}>{postfix}</span>\n          : null}\n      </label>\n    );\n  }\n}\n\nexport default (StringOption: any);","//@flow\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Form, FormControl, Button } from 'react-bootstrap'\n\nimport RadioOption from './radio_option'\nimport StringOption from './string_option'\n\nimport { saveOptions } from 'src/actions/options'\n\nimport type { State } from 'src/reducers'\nimport type { OptionsState } from 'src/reducers/options'\nimport { defaultOptionsState } from 'src/reducers/options'\nimport type { DefaultProps } from 'src/components'\n\nimport './options.css'\n\ntype Props = OptionsState & DefaultProps;\n\nclass Options extends Component<Props> {\n\n  optionsParams: any;\n  state: any;\n  form: any;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: props.options.items\n    };\n\n    this.optionsParams = {\n      'theme': {\n        type: 'radio',\n        label: 'Цветовая палитра:',\n        oneLine: true,\n        values: [\n          { name: 'yellow', descr: 'Золотая' },\n          { name: 'lightgray', descr: 'Серая' },\n          { name: 'dark', descr: 'Темная' }\n        ]\n      },\n      'topicsPerPage': {\n        type: 'number',\n        label: 'Тем на странице (max 99):',\n        min: 1,\n        max: 99\n      },\n      'autoRefreshTopicsList': {\n        type: 'checkbox',\n        label: 'Автообновление списка тем'\n      },\n      'autoRefreshTopicsListInterval': {\n        type: 'number',\n        label: '',\n        min: 60,\n        max: 1000000,\n        postfix: 'сек'\n      },\n      'autoRefreshTopic': {\n        type: 'checkbox',\n        label: 'Автообновление темы'\n      },\n      'autoRefreshTopicInterval': {\n        type: 'number',\n        label: '',\n        min: 60,\n        max: 1000000,\n        postfix: 'сек'\n      },\n      //Tooltips   \n      'showTooltips': {\n        type: 'checkbox',\n        label: 'Показывать тултипы, задержка'\n      },\n      'tooltipDelay': {\n        type: 'number',\n        max: 1000000,\n        label: '',\n        postfix: 'мс'\n      },\n      'showTooltipOnTopicsList': {\n        type: 'checkbox',\n        label: 'Показывать тултипы на главной странице, при наведении на кол-во ответов'\n      },\n      'showTooltipOnPostLink': {\n        type: 'checkbox',\n        label: 'Показывать тултип ссыки на другую ветку'\n      },\n      //links   \n      'showYoutubeVideoTitle': {\n        type: 'checkbox',\n        label: 'Показывать наименования роликов youtube'\n      },\n      'replaceCatalogMista': {\n        type: 'checkbox',\n        label: 'Обратно заменять catalog.mista.ru на infostart.ru'\n      },\n      'fixBrokenLinks': {\n        type: 'checkbox',\n        label: 'Чинить поломанные ссылки (с русскими символами)'\n      },\n    }\n\n    this.form = [\n      {\n        tabName: 'Общие',\n        rows: [\n          ['theme'],\n          ['topicsPerPage'],\n          ['autoRefreshTopicsList', 'autoRefreshTopicsListInterval'],\n          ['autoRefreshTopic', 'autoRefreshTopicInterval'],\n        ]\n      },\n      {\n        tabName: 'Тултипы',\n        rows: [\n          ['showTooltips', 'tooltipDelay'],\n          ['showTooltipOnTopicsList'],\n          ['showTooltipOnPostLink']\n        ]\n      },\n      {\n        tabName: 'Ссылки',\n        rows: [\n          ['showYoutubeVideoTitle'],\n          ['replaceCatalogMista'],\n          ['fixBrokenLinks'],\n        ]\n      }\n    ]\n\n  }\n\n  closeForm = () => {\n    const { history } = this.props;\n    history.push('/' + window.hash);\n  }\n\n  resetOptions = () => {\n    this.setState({\n      ...this.state,\n      items: Object.assign({}, defaultOptionsState.items)\n    })\n  }\n\n  applyOptions = () => {\n\n    const { dispatch } = this.props;\n    dispatch(saveOptions(this.state.items));\n    this.closeForm();\n  }\n\n  onTabClick = (e) => {\n    this.setState({\n      ...this.state,\n      activeTab: e.target.textContent\n    });\n  }\n\n  onChange = (e, name, value) => {\n\n    let items = Object.assign({}, this.state.items);\n    items[name] = value;\n    this.setState({\n      ...this.state,\n      items\n    })\n  }\n\n  render() {\n\n    let tabs = [];\n    for (let tab of this.form) {\n\n      let rows = [];\n      for (let i in tab.rows) {\n\n        const row = tab.rows[i];\n        let rowElem = [];\n        for (let name of row) {\n\n          const item = this.optionsParams[name];\n          if (!item) continue;\n\n          const value = this.state.items[name];\n\n          if (item.type === 'radio') {\n            rowElem.push(\n              <RadioOption\n                key={name}\n                name={name}\n                label={item.label}\n                values={item.values}\n                value={value}\n                oneLine={item.oneLine}\n                onChange={this.onChange}\n              />\n            );\n          } else if (item.type === 'number') {\n\n            if (item.label)\n              rowElem.push(\n                <label\n                  htmlFor={name}\n                  key={name + '_label'}\n                  style={{ fontWeight: \"inherit\" }}>\n                  {item.label}\n                </label>\n              );\n\n            rowElem.push(\n              <FormControl\n                key={name}\n                type=\"number\"\n                min={item.min}\n                max={item.max}\n                value={value}\n                onChange={(e) => this.onChange(e, name, e.target.value)}\n                style={{ flex: \"0 0 100px\", marginLeft: \"5px\" }}\n                className='input'\n                size=\"sm\"\n              >\n              </FormControl>\n            );\n\n            if (item.postfix) {\n              rowElem.push(\n                <span key={name + '_postfix'} style={{ marginLeft: \"5px\", flex: \"0 0 auto\", }}>{item.postfix}</span>\n              )\n            };\n\n          } else if (item.type === 'string') {\n            rowElem.push(\n              <StringOption\n                key={name}\n                name={name}\n                label={item.label}\n                postfix={item.postfix}\n                value={value}\n                onChange={this.onChange}\n              />\n            );\n          } else if (item.type === 'checkbox') {\n            rowElem.push(\n              <Form.Check\n                type=\"checkbox\"\n                label={item.label}\n                key={name}\n                name={name}\n                checked={String(value) === 'true'}\n                onChange={(e) => this.onChange(e, name, e.target.checked)}\n                style={{ flex: \"0 0 auto\", margin: \"0px\", width: \"100%\" }}\n              />\n            );\n          }\n        }\n\n        rows.push(\n          <div key={i} className=\"options-row\">\n            {rowElem}\n          </div>\n        );\n\n      }\n\n      tabs.push(\n        <div key={tab.tabName}>\n          <div className=\"tab-header\">\n            {tab.tabName}\n          </div>\n          <div className=\"tab-content\">\n            {rows}\n          </div>\n        </div>\n      );\n    }\n\n\n    return (\n      <div className=\"options-form\">\n        <div className=\"options-header\" style={{ cursor: \"default\" }}>\n          <b>Настройки</b>\n        </div>\n        {tabs}\n        <div className=\"button-row\">\n          <Button\n            id=\"applyOptions\"\n            size=\"sm\"\n            variant=\"light\"\n            style={{ margin: \"5px\" }}\n            className='button'\n            onClick={this.applyOptions}>\n            OK\n                        </Button>\n          <Button\n            id=\"cancelOptions\"\n            size=\"sm\"\n            variant=\"light\"\n            style={{ margin: \"5px\", float: \"left\" }}\n            className='button'\n            onClick={this.closeForm}>\n            Отмена\n                        </Button>\n          <Button\n            id=\"defaultOptions\"\n            size=\"sm\"\n            variant=\"light\"\n            style={{ margin: \"5px\", float: \"right\" }}\n            className='button'\n            onClick={this.resetOptions}>\n            Сбросить настройки\n                        </Button>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nconst mapStateToProps = (state: State) => {\n\n  return {\n    options: state.options\n  };\n\n}\n\nexport default (connect(mapStateToProps)(withRouter(Options)): any );","import type { OptionsItems } from 'src/reducers/options'\n\nexport type READ_OPTIONS = {\n  type: 'READ_OPTIONS',\n}\nexport type SAVE_OPTIONS = {\n  type: 'SAVE_OPTIONS',\n  options: OptionsItems\n}\n\nexport type OptionsAction = READ_OPTIONS | SAVE_OPTIONS;\n\nexport const readOptions = () => (dispatch: any) => {\n\n  let action: OptionsAction = {\n    type: 'READ_OPTIONS'\n  };\n  dispatch(action);\n\n}\n\nexport const saveOptions = (options: OptionsItems) => (dispatch: any) => {\n\n  let action: OptionsAction = {\n    type: 'SAVE_OPTIONS',\n    options\n  };\n  dispatch(action);\n\n}\n","//@flow\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport TopicsList from './topics_list'\nimport Topic from './topic'\nimport Options from './options'\nimport { clearTooltipsIfNeeded } from 'src/actions/tooltips'\n\nimport type { DefaultProps } from 'src/components'\n\nclass Container extends Component<DefaultProps> {\n\n  onClick = (e: SyntheticEvent<HTMLElement>) => {\n    const { dispatch } = this.props;\n    dispatch(clearTooltipsIfNeeded());\n  }\n\n  render() {\n\n    const routes =\n      <Switch>\n        <Route exact path='/' component={TopicsList} />\n        <Route path='/index.php' component={TopicsList} />\n        <Route path='/topic.php' component={Topic} />\n        <Route path='/options.php' component={Options} />\n      </Switch>\n\n    if (window.hash)\n\n      return (\n        <div onClick={this.onClick} style={{ flex: \"auto\" }}>\n          <div className=\"container\" >\n            <HashRouter>\n              {routes}\n            </HashRouter >\n          </div>\n        </div>\n      )\n\n    else\n      return (\n        <div onClick={this.onClick} style={{ flex: \"auto\" }}>\n          <div className=\"container\">\n            {routes}\n          </div>\n        </div>\n      )\n  }\n\n}\n\nexport default ( connect()(Container): any );","import React from 'react'\nimport { domain } from 'src/api'\n\nconst NavBarFooter = (props) => {\n\n    return (\n        <footer className=\"flex-row navbar-footer\">\n            <a href={`${domain}/rules.php`}>Правила</a>\n            <span className=\"separator\">|</span>\n            <a href={`${domain}/about.php`}>Описание</a>\n            <span className=\"separator\">|</span>\n            <b><a href={`${domain}/ad.php`}>Реклама на сайте</a>  </b>\n            <span className=\"separator\">|</span>\n            <a href={`${domain}/find.php`}>Поиск</a>\n            <span className=\"separator\">|</span>\n            <a rel=\"nofollow\" href={`${domain}/sections_list.php`}>Секции</a>\n            <span className=\"separator\">|</span>\n            <a rel=\"nofollow\" href={`${domain}/rating.php`}>Рейтинг</a>\n            <span className=\"separator\">|</span>\n            <a href=\"http://kb.mista.ru\">Книга знаний</a>\n            <span className=\"separator\">|</span>\n            <a href=\"http://wiki.mista.ru\">Вики-миста (КЗ2)</a>\n            <span className=\"separator\">|</span>\n            <a rel=\"nofollow\" href=\"http://m.mista.ru/\">Мобильная</a>\n            <span className=\"separator\">|</span>\n            <a href={`${domain}/archive.php`}>Архив</a>\n            <span className=\"separator\">|</span>\n            <a href={`${domain}/moders.php`}>Модераторы</a>\n            <span className=\"separator\">|</span>\n            <a href={`${domain}/users_gallery.php`}>Галерея</a>\n            <span className=\"separator\">|</span>\n            <span>18+</span>\n        </footer>\n    )\n}\n\nexport default NavBarFooter;","import React from 'react'\n\nconst TooltipHeader = ({children, closeWindow}) => {\n    return (\n        <div className=\"tooltip-header\">\n            {children}\n            <div className=\"tooltip-close\" onClick={closeWindow} onTouchEnd={closeWindow}>\n                <span className=\"tooltip-close-x\">x</span>\n            </div>\n        </div>\n    )\n}\n\nexport default TooltipHeader;","import React from 'react'\n\nconst TooltipBody = ({children, onScroll}) => {\n    \n    var startX = 0;\n\n    function onTouchStart(e) {\n        startX = e.nativeEvent.changedTouches[0].clientX;\n    }\n    \n    function onTouchEnd(e) {\n        let endX = e.nativeEvent.changedTouches[0].clientX;\n        if (Math.abs(endX - startX) > 100)\n            onScroll(-endX + startX);\n    }\n\n    return (\n        <div className=\"tooltip-text\" onTouchStart={onTouchStart} onTouchEnd={onTouchEnd}>\n            {children}\n        </div>\n    )\n}\n\nexport default TooltipBody;","//@flow\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport Draggable from 'react-draggable';\n\nimport TooltipHeader from './tooltip_header'\nimport TooltipBody from './tooltip_body'\n\nimport './tooltip.css'\n\nimport { closeTooltip } from 'src/actions/tooltips'\n\nimport type { DefaultProps } from 'src/components'\nimport type { TooltipItemState } from 'src/reducers/tooltips'\n\ntype TooltipProps = {\n  tooltip: TooltipItemState,\n  onScroll: (delta: any) => void\n}\n\ntype Props = TooltipProps & DefaultProps;\n\nclass TooltipWindow extends Component<Props> {\n\n  onCloseClick = () => {\n    const { dispatch, tooltip } = this.props;\n    dispatch(closeTooltip(tooltip.keys));\n  }\n\n  onWheel = (e) => {\n    e.preventDefault();\n    this.props.onScroll(-e.nativeEvent.deltaY);\n  }\n\n  render() {\n    const { coords, i } = this.props.tooltip;\n\n    let axis;\n    let position;\n    if (window.innerWidth <= 768) {\n      axis = \"y\";\n      position = { top: coords.y, left: 5 };\n    } else {\n      axis = \"both\";\n      position = { top: coords.y, left: Math.min(coords.x, window.innerWidth - 670) }\n    }\n\n    let [header, body] = React.Children.toArray(this.props.children);\n\n    return (\n      <Draggable\n        axis={axis}\n        handle=\".tooltip-header\"\n        defaultClassNameDragging=\"dragging\"\n        key={i}>\n\n        <div className=\"tooltip-window\" style={{ ...position }} onWheelCapture={this.onWheel}>\n          <TooltipHeader closeWindow={this.onCloseClick}>\n            {header.props.children}\n          </TooltipHeader>\n          <TooltipBody onScroll={this.props.onScroll}>\n            {body.props.children}\n          </TooltipBody>\n        </div>\n      </Draggable>\n    )\n  }\n}\n\nexport default (connect()(TooltipWindow): any );","//@flow\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport * as API from 'src/api'\n\nimport MsgText from '../topic/row/msg_text'\nimport UserInfo from '../topic/row/user_info';\n\nimport TooltipWindow from './tooltip_window'\nimport TooltipHeader from './tooltip_header'\nimport TooltipBody from './tooltip_body'\nimport './tooltip.css'\n\nimport type { DefaultProps } from 'src/components'\nimport type { TooltipItemState } from 'src/reducers/tooltips'\nimport type { TooltipKeys } from 'src/actions/tooltips'\n\ntype TooltipProps = {\n  tooltip: TooltipItemState,\n  info: any,\n  items: any,\n  item0: any\n}\n\ntype Props = TooltipProps & DefaultProps;\ntype State = {\n  data: any,\n  text: string,\n  number: number\n}\n\nclass Tooltip extends Component<Props, State> {\n\n  data: any;\n  text: string;\n  fetchData: any;\n\n  constructor(props) {\n    super(props);\n\n    const { tooltip, info, items, item0 } = props;\n    const { keys } = tooltip;\n\n    let text = '';\n    let data;\n    if (keys.topicId === info.id) {\n      if (keys.number === 0)\n        data = item0;\n      else\n        data = items.find(item => item.n === String(keys.number));\n\n      if (data)\n        text = data.text;\n    }\n\n    this.state = {\n      data,\n      text,\n      number: keys.number\n    }\n  }\n\n  fetchData = async (number: number) => {\n\n    if (number < 0) return;\n\n    let data;\n    let text = '';\n    const topicId = this.props.tooltip.keys.topicId;\n\n    try {\n      data = await API.getMessage(topicId, number);\n      if (data)\n        text = data.text;\n      else\n        text = `Сообщение не найдено ${number}`;\n\n    } catch (e) {\n      text = e.message;\n    }\n\n    this.setState({ data, text, number });\n  }\n\n  onScroll = (delta) => {\n\n    const { keys } = this.props.tooltip;\n    if (keys.type !== 'TOPIC_PREVIEW') return;\n    if (delta > 0) {\n      this.fetchData(this.state.number + 1)\n    } else {\n      this.fetchData(this.state.number - 1)\n    }\n  }\n\n  componentDidMount() {\n\n    if (!this.state.data)\n      this.fetchData(this.state.number);\n\n  }\n\n  render() {\n    const { keys } = this.props.tooltip;\n\n    if (!this.state.text)\n      return null;\n\n    let header;\n    if (!this.state.data) {\n      header = <b>Заголовок</b>\n    } else {\n      header = <UserInfo data={this.state.data} isAuthor={false} />\n    }\n\n    if (keys.type === 'TOPIC' || keys.type === 'TOPIC_PREVIEW')\n      return (\n        <TooltipWindow tooltip={this.props.tooltip} onScroll={this.onScroll}>\n          <TooltipHeader>\n            {header}\n          </TooltipHeader>\n          <TooltipBody>\n            <MsgText\n              data={this.state.data}\n              html={this.state.text}\n              topicId={keys.topicId}\n              style={{ maxHeight: \"min(550px, 80vh)\", overflowY: \"auto\" }}\n            />\n          </TooltipBody>\n        </TooltipWindow>\n      )\n    else\n      return null;\n  }\n}\nconst mapStateToProps = (state) => {\n\n  const {\n    info,\n    items,\n    item0\n  } = state.topic;\n\n  return {\n    info,\n    items,\n    item0\n  }\n}\n\nexport default (connect(mapStateToProps)(Tooltip): any );","//@flow\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\nimport Tooltip from './tooltip'\n\nimport type { State } from 'src/reducers'\nimport type { TooltipItemState } from 'src/reducers/tooltips'\nimport type { DefaultProps } from 'src/components'\n\ntype StateProps = {\n    items: Array<TooltipItemState>\n}\n\ntype Props = StateProps & DefaultProps;\n\nclass TooltipsList extends Component<Props> {\n\n    render() {\n\n        const { items } = this.props;\n\n        return (\n            <div>\n                {items.map((item, i) => {\n                    return (\n                        <Tooltip key={item.hash} tooltip={item} keys={item.keys}>\n                        </Tooltip>\n                    )}\n                )}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n    const {\n        items\n    } = state.tooltips\n\n    return {\n        items,\n    }\n}\n\nexport default ( connect(mapStateToProps)(TooltipsList): any );","//@flow\nimport React, { Component, Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport NavBar from './components/nav_bar';\nimport Container from './components/container';\nimport NavBarFooter from './components/nav_bar_footer';\nimport TooltipsList from './components/tooltips/tooltips_list';\n\nimport { readOptions } from 'src/actions/options'\n\nimport type { State } from 'src/reducers'\nimport type { DefaultProps } from 'src/components'\n\ntype StateProps = {\n  theme: string\n}\n\ntype Props = StateProps & DefaultProps\n\nfunction App(props): Props {\n\n  useEffect(() => {\n    document.body.setAttribute('theme', props.theme);\n  })\n\n  return (\n    <Fragment>\n      <NavBar />\n      <Container />\n      <NavBarFooter />\n      <TooltipsList />\n    </Fragment>\n  );\n}\n\nconst mapStateToProps = (state: State): StateProps => {\n\n  return {\n    theme: state.options.items.theme\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","//@flow\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\n\nimport thunk from 'redux-thunk'\n\n// eslint-disable-next-line \nimport { createLogger } from 'redux-logger'\n\nimport reducer from './reducers'\nimport './index.css';\nimport App from './App';\n\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV !== 'production') {\n    //middleware.push(createLogger())\n}\n\nconst store = createStore(\n    reducer,\n    applyMiddleware(...middleware)\n)\n\nconst Root = ({ store }) => (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n)\n\n// for github pages\nwindow.hash = \"#\";\n\nReactDOM.render(<Root store={store} />,\n    document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}